// The Module object: Our interface to the outside world. We import
// and export values on it. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to check if Module already exists (e.g. case 3 above).
// Substitution will be replaced with actual code on later stage of the build,
// this way Closure Compiler will not mangle it (e.g. case 4. above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module = typeof Module !== 'undefined' ? Module : {};

// --pre-jses are emitted after the Module integration code, so that they can
// refer to Module (if they choose; they can also define Module)
var ut = ut || {};

ut._tempHeapCache = {
    buffer: 0,  // the main buffer of temporary storage
    bufferIndex: 0, // the current buffer index (buffers[bufferIndex] == buffer)
    buffers: [], // buffers in use (or available for use)
    pos: 0,    // the next free offset in current buffer
    BUF_SIZE: 4096,   // the size of a buffer

    big_allocs: [], // extra big allocations
    BIG_ALLOC_SIZE: 256, // size of a max allocation we attempt to fulfill through bump allocation

    init: function () {
        assert(this.buffers.length == 0);
        this.buffer = Module._malloc(this.BUF_SIZE);
        assert(this.buffer);
        this.buffers = [this.buffer];
        this.clear();
    },
    clear: function () {
        for (var i = 0; i < this.big_allocs.length; i++) {
            Module._free(this.big_allocs[i]);
        }
        this.big_allocs.length = 0;
        this.buffer = this.buffers[0];
        this.bufferIndex = 0;
        this.pos = 0;
    },
    allocBytes: function (len) {
        if (len == 0)
            return 0;
        len = (len + 7) & -8; // keep things aligned to 8 byte boundaries
        // is it a big allocation?
        if (len > this.BIG_ALLOC_SIZE) {
            var temp = Module._malloc(len);
            this.big_allocs.push(temp);
            return temp;
        }
        if (this.pos + len >= this.BUF_SIZE) {
            // doesn't fit in this buffer, create a new one
            this.bufferIndex++;
            if (this.bufferIndex >= this.buffers.length) {
                this.buffer = Module._malloc(this.BUF_SIZE);
                this.buffers.push(this.buffer);
            } else {
                this.buffer = this.buffers[this.bufferIndex];
            }
            this.pos = 0;
        }
        // we can allocate in the buffer
        assert(this.buffer);
        var ret = this.buffer + this.pos;
        this.pos += len;
        return ret;
    },
    allocBytesZero: function (len) {
        if (len == 0)
            return 0;
        len = (len + 7) & -8; // keep things aligned to 8 byte boundaries
        var ptr = this.allocBytes(len);
        // Do a "HEAP32.fill(0, ptr>>2, (ptr+len)>>2)" in an old Android browser compatible manner.
        for (var i = ptr >> 2; i < (ptr + len) >> 2; ++i)
            HEAP32[i] = 0;
        return ptr;
    },
    allocForArray: function (array, view) {
        var bytes = view.BYTES_PER_ELEMENT;
        var len = array.length * bytes;
        if (len == 0)
            return 0;
        var ret = this.allocBytes(len);
        var retShifted = ret;
        switch (bytes) {
            case 2: retShifted >>= 1; break;
            case 4: retShifted >>= 2; break;
            case 8: retShifted >>= 3; break;
        }
        for (var i = 0; i < array.length; i++) {
            view[retShifted + i] = array[i];
        }
        return ret;
    },
};

ut.prepareTempHeap = function () {
    //ut._tempHeapCache.prepare();
};
ut.initTempHeap = function () {
    ut._tempHeapCache.init();
};
ut.clearTempHeap = function () {
    ut._tempHeapCache.clear();
};
ut.tempHeapPtrCString = function (jsString) {
    var len = lengthBytesUTF8(jsString);
    if (!len) return 0;
    var cString = ut._tempHeapCache.allocBytes(len + 1); // len for string characters, and +1 for null byte
    stringToUTF8(jsString, cString, len + 1);
    return cString;
};

// Constructs a new NativeString on the HEAP (previous memory contents in the destination NativeString memory area are taken to represent uninitialized memory, semantically as if C++ copy constructor operator was called)
ut.newHeapNativeString = function (nativeString/*pointer to where NativeString object should be constructed in HEAP*/, jsString/*JavaScript string object to serialize to NativeString*/) {
    var len = lengthBytesUTF8(jsString);
    var ptr = Module._ut_nativestring_placement_create(nativeString, len);
    if (ptr) stringToUTF8(jsString, ptr, len + 1);
};

// Assigns a JavaScript string on to a NativeString object on the HEAP (semantically as if C++ assignment operator on NativeString was called)
ut.writeHeapNativeString = function (nativeString/*pointer to NativeString object in HEAP*/, jsString/*JavaScript string object to serialize to NativeString*/) {
    var len = lengthBytesUTF8(jsString);
    var ptr = Module._ut_nativestring_resize_zero(nativeString, len);
    if (ptr) stringToUTF8(jsString, ptr, len + 1);
};

// Writes a "Scratch NativeString": serializes given JS string to a NativeString in JavaScript scratch memory area
// A Scratch NativeString is a NativeString that backs both the NativeString object (string ptr, length), but also its allocated string character memory inside the JavaScript "temp heap" memory.
// The temp heap is freed in a slab operation, avoiding the need to free individual NativeStrings, NativeBuffers and other allocated objects inside it.
ut.toNewScratchNativeString = function (jsString) {
    var len = lengthBytesUTF8(jsString);
    var rawBytes = ut._tempHeapCache.allocBytes(8/*sizeof(ut::NativeString)*/ + len + 1);
    var ptr = Module._ut_nativestring_scratch_create(rawBytes, rawBytes + 8/*sizeof(ut::NativeString)*/, len);
    if (ptr) {
        stringToUTF8(jsString, ptr, len + 1)
    };
    return rawBytes;
};

// Like ut.toNewScratchNativeString(), but called to placement create a NativeString to an existing memory location in the temp heap memory area.
ut.toExistingScratchNativeString = function (nativeString, jsString) {
    var len = lengthBytesUTF8(jsString);
    var rawBytes = ut._tempHeapCache.allocBytes(len + 1);
    var ptr = Module._ut_nativestring_scratch_create(nativeString, rawBytes, len);
    if (ptr) stringToUTF8(jsString, ptr, len + 1);
    return rawBytes;
};

ut.tempHeapPtrI8 = function (value) {
    return ut._tempHeapCache.allocForArray(value, HEAP8);
};
ut.tempHeapPtrI16 = function (value) {
    return ut._tempHeapCache.allocForArray(value, HEAP16);
};
ut.tempHeapPtrI32 = function (value) {
    return ut._tempHeapCache.allocForArray(value, HEAP32);
};
ut.tempHeapPtrF32 = function (value) {
    return ut._tempHeapCache.allocForArray(value, HEAPF32);
};
ut.tempHeapPtrF64 = function (value) {
    return ut._tempHeapCache.allocForArray(value, HEAPF64);
};
ut.tempHeapPtrBuffer = function (size) {
    return ut._tempHeapCache.allocBytes(size);
};
ut.tempHeapPtrBufferZero = function (size) {
    return ut._tempHeapCache.allocBytesZero(size);
};

// Given a pointer on the HEAP to a NativeBuffer array, copies the elements back to a high level JavaScript array.
ut.nativeBufferToJsArray = function (nativeBufferPtr, elementSize, convfn) {
    var arrayPtr = Module._ut_nativebuffer_data(nativeBufferPtr);
    var numElements = Module._ut_nativebuffer_size(nativeBufferPtr);

    var jsArray = new Array(numElements);
    for (var i = 0; i < numElements; ++i) {
        jsArray[i] = convfn(arrayPtr);
        arrayPtr += elementSize;
    }
    return jsArray;
}

// Serializes a JS array to a "Scratch NativeBuffer": a NativeBuffer that resides inside the slab-allocated JS temp heap. The allocated memory for
// the array contents also lives in the temp heap.
ut.jsArrayToNewScratchNativeBuffer_pod = function (jsArray, elementSize, convfn) {
    var rawScratchMemory = ut.tempHeapPtrBuffer(12/*sizeof(NativeBuffer)*/ + jsArray.length * elementSize);
    // This creates a "scratch NativeBuffer", a temporary buffer object viewing a preallocated memory. The intent here is to use a temporary memory block
    // obtained above for the duration of a short lived function call, to avoid having to call any destructors after the function call is finished.
    var nativeBuffer = Module._ut_nativebuffer_pod_scratch_create_uninitialized(rawScratchMemory, rawScratchMemory + 12, jsArray.length, elementSize);
    var arrayPtr = Module._ut_nativebuffer_data(nativeBuffer);
    for (var i = 0; i < jsArray.length; ++i) {
        convfn(arrayPtr, jsArray[i]);
        arrayPtr += elementSize;
    }
    return nativeBuffer;
};

// Same as jsArrayToNewScratchNativeBuffer_pod, except specialized for string objects.
ut.jsArrayToNewScratchNativeBuffer_string = function (jsArray, convfn) {
    var rawScratchMemory = ut.tempHeapPtrBuffer(12/*sizeof(NativeBuffer)*/ + jsArray.length * 8/*sizeof(ut::NativeString)*/);
    var nativeBuffer = Module._ut_nativebuffer_nativestring_scratch_create(rawScratchMemory, rawScratchMemory + 12, jsArray.length);
    var arrayPtr = Module._ut_nativebuffer_data(nativeBuffer);
    for (var i = 0; i < jsArray.length; ++i) {
        convfn(arrayPtr, jsArray[i]);
        arrayPtr += 8/*sizeof(ut::NativeString)*/;
    }
    return nativeBuffer;
};

// Same as jsArrayToNewScratchNativeBuffer_pod, except this function behaves like a placement new - the memory area for the Scratch NativeBuffer has
// been reserved before, and the Scratch NativeBuffer is constructed to the address to temp heap pointed by ptr nativeBufferPtr.
ut.jsArrayToExistingScratchNativeBuffer_pod = function (jsArray, nativeBufferPtr, elementSize, convfn) {
    var rawScratchMemory = ut.tempHeapPtrBuffer(jsArray.length * elementSize);
    // This creates a "scratch NativeBuffer", a temporary buffer object viewing a preallocated memory. The intent here is to use a temporary memory block
    // obtained above for the duration of a short lived function call, to avoid having to call any destructors after the function call is finished.
    var nativeBuffer = Module._ut_nativebuffer_pod_scratch_create_uninitialized(nativeBufferPtr, rawScratchMemory, jsArray.length, elementSize);
    var arrayPtr = Module._ut_nativebuffer_data(nativeBuffer);
    for (var i = 0; i < jsArray.length; ++i) {
        convfn(arrayPtr, jsArray[i]);
        arrayPtr += elementSize;
    }
    return nativeBuffer;
};

// Same as jsArrayToExistingScratchNativeBuffer_pod, except specialized for string objects.
ut.jsArrayToExistingScratchNativeBuffer_string = function (jsArray, nativeBufferPtr, convfn) {
    var rawScratchMemory = ut.tempHeapPtrBuffer(jsArray.length * 8/*sizeof(ut::NativeString)*/);
    var nativeBuffer = Module._ut_nativebuffer_nativestring_scratch_create(nativeBufferPtr, rawScratchMemory, jsArray.length);
    var arrayPtr = Module._ut_nativebuffer_data(nativeBuffer);
    for (var i = 0; i < jsArray.length; ++i) {
        convfn(arrayPtr, jsArray[i]);
        arrayPtr += 8/*sizeof(ut::NativeString)*/;
    }
    return nativeBuffer;
};

// Serializes the given array to a NativeBuffer on the persistent Emscripten HEAP (outside temp heap memory).
// nativeBufferPtr should point to an existing instance of a NativeBuffer<podType>.
ut.jsArrayToExistingNativeBuffer_pod = function (jsArray, nativeBufferPtr, elementSize, convfn) {
    // Make sure the NativeBuffer holds appropriate size to receive all array elements.
    var arrayPtr = Module._ut_nativebuffer_pod_resize_uninitialized(nativeBufferPtr, jsArray.length, elementSize);

    // Serialize each array element
    for (var i = 0; i < jsArray.length; ++i) {
        convfn(arrayPtr, jsArray[i]);
        arrayPtr += elementSize;
    }
};

// Same as jsArrayToExistingNativeBuffer_pod, but specialized for arrays of NativeStrings.
ut.jsArrayToExistingNativeBuffer_string = function (jsArray, nativeBufferPtr, convfn) {
    // Make sure the NativeBuffer holds appropriate size to receive all array elements.
    var arrayPtr = Module._ut_nativebuffer_nativestring_resize(nativeBufferPtr, jsArray.length);

    // Serialize each array element
    for (var i = 0; i < jsArray.length; ++i) {
        convfn(arrayPtr, jsArray[i]);
        arrayPtr += 8/*sizeof(ut::NativeString)*/;
    }
};



// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
var key;
for (key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

Module['arguments'] = [];
Module['thisProgram'] = './this.program';
Module['quit'] = function(status, toThrow) {
  throw toThrow;
};
Module['preRun'] = [];
Module['postRun'] = [];

// The environment setup code below is customized to use Module.
// *** Environment setup code ***

var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;
ENVIRONMENT_IS_WEB = typeof window === 'object';
ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;


// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)

if (ENVIRONMENT_IS_NODE) {


  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  var nodeFS;
  var nodePath;

  Module['read'] = function shell_read(filename, binary) {
    var ret;
    ret = tryParseAsDataURI(filename);
    if (!ret) {
      if (!nodeFS) nodeFS = require('fs');
      if (!nodePath) nodePath = require('path');
      filename = nodePath['normalize'](filename);
      ret = nodeFS['readFileSync'](filename);
    }
    return binary ? ret : ret.toString();
  };

  Module['readBinary'] = function readBinary(filename) {
    var ret = Module['read'](filename, true);
    if (!ret.buffer) {
      ret = new Uint8Array(ret);
    }
    assert(ret.buffer);
    return ret;
  };

  if (process['argv'].length > 1) {
    Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });
  // Currently node will swallow unhandled rejections, but this behavior is
  // deprecated, and in the future it will exit with error status.
  process['on']('unhandledRejection', function(reason, p) {
    process['exit'](1);
  });

  Module['quit'] = function(status) {
    process['exit'](status);
  };

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
} else
if (ENVIRONMENT_IS_SHELL) {


  if (typeof read != 'undefined') {
    Module['read'] = function shell_read(f) {
      var data = tryParseAsDataURI(f);
      if (data) {
        return intArrayToString(data);
      }
      return read(f);
    };
  }

  Module['readBinary'] = function readBinary(f) {
    var data;
    data = tryParseAsDataURI(f);
    if (data) {
      return data;
    }
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof quit === 'function') {
    Module['quit'] = function(status) {
      quit(status);
    }
  }
} else
if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {


  Module['read'] = function shell_read(url) {
    try {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', url, false);
      xhr.send(null);
      return xhr.responseText;
    } catch (err) {
      var data = tryParseAsDataURI(url);
      if (data) {
        return intArrayToString(data);
      }
      throw err;
    }
  };

  if (ENVIRONMENT_IS_WORKER) {
    Module['readBinary'] = function readBinary(url) {
      try {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, false);
        xhr.responseType = 'arraybuffer';
        xhr.send(null);
        return new Uint8Array(xhr.response);
      } catch (err) {
        var data = tryParseAsDataURI(url);
        if (data) {
          return data;
        }
        throw err;
      }
    };
  }

  Module['readAsync'] = function readAsync(url, onload, onerror) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'arraybuffer';
    xhr.onload = function xhr_onload() {
      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
        onload(xhr.response);
        return;
      }
      var data = tryParseAsDataURI(url);
      if (data) {
        onload(data.buffer);
        return;
      }
      onerror();
    };
    xhr.onerror = onerror;
    xhr.send(null);
  };

  Module['setWindowTitle'] = function(title) { document.title = title };
} else
{
}

// Set up the out() and err() hooks, which are how we can print to stdout or
// stderr, respectively.
// If the user provided Module.print or printErr, use that. Otherwise,
// console.log is checked first, as 'print' on the web will open a print dialogue
// printErr is preferable to console.warn (works better in shells)
// bind(console) is necessary to fix IE/Edge closed dev tools panel behavior.
var out = Module['print'] || (typeof console !== 'undefined' ? console.log.bind(console) : (typeof print !== 'undefined' ? print : null));
var err = Module['printErr'] || (typeof printErr !== 'undefined' ? printErr : ((typeof console !== 'undefined' && console.warn.bind(console)) || out));

// *** Environment setup code ***

// Merge back in the overrides
for (key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// Free the object hierarchy contained in the overrides, this lets the GC
// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.
moduleOverrides = undefined;



// {{PREAMBLE_ADDITIONS}}

var STACK_ALIGN = 16;


function staticAlloc(size) {
  var ret = STATICTOP;
  STATICTOP = (STATICTOP + size + 15) & -16;
  return ret;
}

function dynamicAlloc(size) {
  var ret = HEAP32[DYNAMICTOP_PTR>>2];
  var end = (ret + size + 15) & -16;
  HEAP32[DYNAMICTOP_PTR>>2] = end;
  if (end >= TOTAL_MEMORY) {
    var success = enlargeMemory();
    if (!success) {
      HEAP32[DYNAMICTOP_PTR>>2] = ret;
      return 0;
    }
  }
  return ret;
}

function alignMemory(size, factor) {
  if (!factor) factor = STACK_ALIGN; // stack alignment (16-byte) by default
  var ret = size = Math.ceil(size / factor) * factor;
  return ret;
}

function getNativeTypeSize(type) {
  switch (type) {
    case 'i1': case 'i8': return 1;
    case 'i16': return 2;
    case 'i32': return 4;
    case 'i64': return 8;
    case 'float': return 4;
    case 'double': return 8;
    default: {
      if (type[type.length-1] === '*') {
        return 4; // A pointer
      } else if (type[0] === 'i') {
        var bits = parseInt(type.substr(1));
        assert(bits % 8 === 0);
        return bits / 8;
      } else {
        return 0;
      }
    }
  }
}

function warnOnce(text) {
  if (!warnOnce.shown) warnOnce.shown = {};
  if (!warnOnce.shown[text]) {
    warnOnce.shown[text] = 1;
    err(text);
  }
}

var asm2wasmImports = { // special asm2wasm imports
    "f64-rem": function(x, y) {
        return x % y;
    },
    "debugger": function() {
        debugger;
    }
};



var jsCallStartIndex = 1;
var functionPointers = new Array(0);

// 'sig' parameter is only used on LLVM wasm backend
function addFunction(func, sig) {
  var base = 0;
  for (var i = base; i < base + 0; i++) {
    if (!functionPointers[i]) {
      functionPointers[i] = func;
      return jsCallStartIndex + i;
    }
  }
  throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
}

function removeFunction(index) {
  functionPointers[index-jsCallStartIndex] = null;
}

var funcWrappers = {};

function getFuncWrapper(func, sig) {
  if (!func) return; // on null pointer, return undefined
  assert(sig);
  if (!funcWrappers[sig]) {
    funcWrappers[sig] = {};
  }
  var sigCache = funcWrappers[sig];
  if (!sigCache[func]) {
    // optimize away arguments usage in common cases
    if (sig.length === 1) {
      sigCache[func] = function dynCall_wrapper() {
        return dynCall(sig, func);
      };
    } else if (sig.length === 2) {
      sigCache[func] = function dynCall_wrapper(arg) {
        return dynCall(sig, func, [arg]);
      };
    } else {
      // general case
      sigCache[func] = function dynCall_wrapper() {
        return dynCall(sig, func, Array.prototype.slice.call(arguments));
      };
    }
  }
  return sigCache[func];
}


function makeBigInt(low, high, unsigned) {
  return unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0));
}

function dynCall(sig, ptr, args) {
  if (args && args.length) {
    return Module['dynCall_' + sig].apply(null, [ptr].concat(args));
  } else {
    return Module['dynCall_' + sig].call(null, ptr);
  }
}



var Runtime = {
  // FIXME backwards compatibility layer for ports. Support some Runtime.*
  //       for now, fix it there, then remove it from here. That way we
  //       can minimize any period of breakage.
  dynCall: dynCall, // for SDL2 port
};

// The address globals begin at. Very low in memory, for code size and optimization opportunities.
// Above 0 is static memory, starting with globals.
// Then the stack.
// Then 'dynamic' memory for sbrk.
var GLOBAL_BASE = 8;


// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in:
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at:
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html



//========================================
// Runtime essentials
//========================================

var ABORT = 0; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

/** @type {function(*, string=)} */
function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');
  return func;
}

var JSfuncs = {
  // Helpers for cwrap -- it can't refer to Runtime directly because it might
  // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
  // out what the minified function name is.
  'stackSave': function() {
    stackSave()
  },
  'stackRestore': function() {
    stackRestore()
  },
  // type conversion from js to c
  'arrayToC' : function(arr) {
    var ret = stackAlloc(arr.length);
    writeArrayToMemory(arr, ret);
    return ret;
  },
  'stringToC' : function(str) {
    var ret = 0;
    if (str !== null && str !== undefined && str !== 0) { // null string
      // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
      var len = (str.length << 2) + 1;
      ret = stackAlloc(len);
      stringToUTF8(str, ret, len);
    }
    return ret;
  }
};

// For fast lookup of conversion functions
var toC = {
  'string': JSfuncs['stringToC'], 'array': JSfuncs['arrayToC']
};


// C calling interface.
function ccall(ident, returnType, argTypes, args, opts) {
  function convertReturnValue(ret) {
    if (returnType === 'string') return Pointer_stringify(ret);
    if (returnType === 'boolean') return Boolean(ret);
    return ret;
  }

  var func = getCFunc(ident);
  var cArgs = [];
  var stack = 0;
  if (args) {
    for (var i = 0; i < args.length; i++) {
      var converter = toC[argTypes[i]];
      if (converter) {
        if (stack === 0) stack = stackSave();
        cArgs[i] = converter(args[i]);
      } else {
        cArgs[i] = args[i];
      }
    }
  }
  var ret = func.apply(null, cArgs);
  ret = convertReturnValue(ret);
  if (stack !== 0) stackRestore(stack);
  return ret;
}

function cwrap(ident, returnType, argTypes, opts) {
  argTypes = argTypes || [];
  // When the function takes numbers and returns a number, we can just return
  // the original function
  var numericArgs = argTypes.every(function(type){ return type === 'number'});
  var numericRet = returnType !== 'string';
  if (numericRet && numericArgs && !opts) {
    return getCFunc(ident);
  }
  return function() {
    return ccall(ident, returnType, argTypes, arguments, opts);
  }
}

/** @type {function(number, number, string, boolean=)} */
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}

/** @type {function(number, string, boolean=)} */
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for getValue: ' + type);
    }
  return null;
}

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
/** @type {function((TypedArray|Array<number>|number), string, number, number=)} */
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [typeof _malloc === 'function' ? _malloc : staticAlloc, stackAlloc, staticAlloc, dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var stop;
    ptr = ret;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(/** @type {!Uint8Array} */ (slab), ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return staticAlloc(size);
  if (!runtimeInitialized) return dynamicAlloc(size);
  return _malloc(size);
}

/** @type {function(number, number=)} */
function Pointer_stringify(ptr, length) {
  if (length === 0 || !ptr) return '';
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return UTF8ToString(ptr);
}

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

var UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;
function UTF8ArrayToString(u8Array, idx) {
  var endPtr = idx;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  while (u8Array[endPtr]) ++endPtr;

  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
  } else {
    var u0, u1, u2, u3, u4, u5;

    var str = '';
    while (1) {
      // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
      u0 = u8Array[idx++];
      if (!u0) return str;
      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
      u1 = u8Array[idx++] & 63;
      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
      u2 = u8Array[idx++] & 63;
      if ((u0 & 0xF0) == 0xE0) {
        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
      } else {
        u3 = u8Array[idx++] & 63;
        if ((u0 & 0xF8) == 0xF0) {
          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
        } else {
          u4 = u8Array[idx++] & 63;
          if ((u0 & 0xFC) == 0xF8) {
            u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
          } else {
            u5 = u8Array[idx++] & 63;
            u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
          }
        }
      }
      if (u0 < 0x10000) {
        str += String.fromCharCode(u0);
      } else {
        var ch = u0 - 0x10000;
        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
      }
    }
  }
}

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8,ptr);
}

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

var UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;
function UTF16ToString(ptr) {
  var endPtr = ptr;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  var idx = endPtr >> 1;
  while (HEAP16[idx]) ++idx;
  endPtr = idx << 1;

  if (endPtr - ptr > 32 && UTF16Decoder) {
    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));
  } else {
    var i = 0;

    var str = '';
    while (1) {
      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
      if (codeUnit == 0) return str;
      ++i;
      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
      str += String.fromCharCode(codeUnit);
    }
  }
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}

function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}

// Allocate heap space for a JS string, and write it there.
// It is the responsibility of the caller to free() that memory.
function allocateUTF8(str) {
  var size = lengthBytesUTF8(str) + 1;
  var ret = _malloc(size);
  if (ret) stringToUTF8Array(str, HEAP8, ret, size);
  return ret;
}

// Allocate stack space for a JS string, and write it there.
function allocateUTF8OnStack(str) {
  var size = lengthBytesUTF8(str) + 1;
  var ret = stackAlloc(size);
  stringToUTF8Array(str, HEAP8, ret, size);
  return ret;
}

function demangle(func) {
  var __cxa_demangle_func = Module['___cxa_demangle'] || Module['__cxa_demangle'];
  assert(__cxa_demangle_func);
  try {
    var s =
      func.substr(1);
    var len = lengthBytesUTF8(s)+1;
    var buf = _malloc(len);
    stringToUTF8(s, buf, len);
    var status = _malloc(4);
    var ret = __cxa_demangle_func(buf, 0, 0, status);
    if (HEAP32[((status)>>2)] === 0 && ret) {
      return Pointer_stringify(ret);
    }
    // otherwise, libcxxabi failed
  } catch(e) {
    // ignore problems here
  } finally {
    if (buf) _free(buf);
    if (status) _free(status);
    if (ret) _free(ret);
  }
  // failure when using libcxxabi, don't demangle
  return func;
}

function demangleAll(text) {
  var regex =
    /__Z[\w\d_]+/g;
  return text.replace(regex,
    function(x) {
      var y = demangle(x);
      return x === y ? x : (x + ' [' + y + ']');
    });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  var js = jsStackTrace();
  if (Module['extraStackTrace']) js += '\n' + Module['extraStackTrace']();
  return demangleAll(js);
}

// Memory management

var PAGE_SIZE = 16384;
var WASM_PAGE_SIZE = 65536;
var ASMJS_PAGE_SIZE = 16777216;
var MIN_TOTAL_MEMORY = 16777216;

function alignUp(x, multiple) {
  if (x % multiple > 0) {
    x += multiple - (x % multiple);
  }
  return x;
}

var HEAP,
/** @type {ArrayBuffer} */
  buffer,
/** @type {Int8Array} */
  HEAP8,
/** @type {Uint8Array} */
  HEAPU8,
/** @type {Int16Array} */
  HEAP16,
/** @type {Uint16Array} */
  HEAPU16,
/** @type {Int32Array} */
  HEAP32,
/** @type {Uint32Array} */
  HEAPU32,
/** @type {Float32Array} */
  HEAPF32,
/** @type {Float64Array} */
  HEAPF64;

function updateGlobalBuffer(buf) {
  Module['buffer'] = buffer = buf;
}

function updateGlobalBufferViews() {
  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);
  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);
  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);
  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);
  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);
  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);
  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);
  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);
}

var STATIC_BASE, STATICTOP, staticSealed; // static area
var STACK_BASE, STACKTOP, STACK_MAX; // stack area
var DYNAMIC_BASE, DYNAMICTOP_PTR; // dynamic area handled by sbrk

  STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;
  staticSealed = false;




function abortOnCannotGrowMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or (4) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');
}


function enlargeMemory() {
  abortOnCannotGrowMemory();
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;
if (TOTAL_MEMORY < TOTAL_STACK) err('TOTAL_MEMORY should be larger than TOTAL_STACK, was ' + TOTAL_MEMORY + '! (TOTAL_STACK=' + TOTAL_STACK + ')');

// Initialize the runtime's memory



// Use a provided buffer, if there is one, or else allocate a new one
if (Module['buffer']) {
  buffer = Module['buffer'];
} else {
  // Use a WebAssembly memory where available
  {
    buffer = new ArrayBuffer(TOTAL_MEMORY);
  }
  Module['buffer'] = buffer;
}
updateGlobalBufferViews();


function getTotalMemory() {
  return TOTAL_MEMORY;
}

// Endianness check (note: assumes compiler arch was little-endian)

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Module['dynCall_v'](func);
      } else {
        Module['dynCall_vi'](func, callback.arg);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the main() is called

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}

// Deprecated: This function should not be called because it is unsafe and does not provide
// a maximum length limit of how many bytes it is allowed to write. Prefer calling the
// function stringToUTF8Array() instead, which takes in a maximum length that can be used
// to be secure from out of bounds writes.
/** @deprecated */
function writeStringToMemory(string, buffer, dontAddNull) {
  warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');

  var /** @type {number} */ lastChar, /** @type {number} */ end;
  if (dontAddNull) {
    // stringToUTF8Array always appends null. If we don't want to do that, remember the
    // character that existed at the location where the null will be placed, and restore
    // that after the write (below).
    end = buffer + lengthBytesUTF8(string);
    lastChar = HEAP8[end];
  }
  stringToUTF8(string, buffer, Infinity);
  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.
}

function writeArrayToMemory(array, buffer) {
  HEAP8.set(array, buffer);
}

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

if (!Math['trunc']) Math['trunc'] = function(x) {
  return x < 0 ? Math.ceil(x) : Math.floor(x);
};
Math.trunc = Math['trunc'];

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_round = Math.round;
var Math_min = Math.min;
var Math_max = Math.max;
var Math_clz32 = Math.clz32;
var Math_trunc = Math.trunc;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function getUniqueRunDependency(id) {
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}

function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;






// Prefix of data URIs emitted by SINGLE_FILE and related options.
var dataURIPrefix = 'data:application/octet-stream;base64,';

// Indicates whether filename is a base64 data URI.
function isDataURI(filename) {
  return String.prototype.startsWith ?
      filename.startsWith(dataURIPrefix) :
      filename.indexOf(dataURIPrefix) === 0;
}





// === Body ===

var ASM_CONSTS = [function($0, $1, $2) { ut.CopyFn._cb.map[$0]($1, $2); },
 function($0, $1) { ut.DestructorFn._cb.map[$0]($1); },
 function($0, $1) { $1 = ut.Entity._fromPtr($1); ut.EntityFn._cb.map[$0]($1); },
 function($0, $1, $2) { $1 = ut.SchedulerBase._wrap($1); $2 = ut.WorldBase._wrap($2); ut.SystemFn._cb.map[$0]($1, $2); },
 function($0) { console.error(Pointer_stringify($0)); },
 function() { ut.clearTempHeap(); }];

function _emscripten_asm_const_iii(code, a0, a1) {
  return ASM_CONSTS[code](a0, a1);
}

function _emscripten_asm_const_iiii(code, a0, a1, a2) {
  return ASM_CONSTS[code](a0, a1, a2);
}

function _emscripten_asm_const_ii(code, a0) {
  return ASM_CONSTS[code](a0);
}

function _emscripten_asm_const_i(code) {
  return ASM_CONSTS[code]();
}




STATIC_BASE = GLOBAL_BASE;

STATICTOP = STATIC_BASE + 27136;
/* global initializers */  __ATINIT__.push();


memoryInitializer = "data:application/octet-stream;base64,";





/* no memory initializer */
var tempDoublePtr = STATICTOP; STATICTOP += 16;

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


  function ___assert_fail(condition, filename, line, func) {
      abort('Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function']);
    }

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var key in EXCEPTIONS.infos) {
          var ptr = +key; // the iteration key is a string, and if we throw this, it must be an integer as that is what we look for
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        // A rethrown exception can reach refcount 0; it must not be discarded
        // Its next handler will clear the rethrown flag and addRef it, prior to
        // final decRef and destruction here
        if (info.refcount === 0 && !info.rethrown) {
          if (info.destructor) {
            Module['dynCall_vi'](info.destructor, ptr);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};function ___cxa_begin_catch(ptr) {
      var info = EXCEPTIONS.infos[ptr];
      if (info && !info.caught) {
        info.caught = true;
        __ZSt18uncaught_exceptionv.uncaught_exception--;
      }
      if (info) info.rethrown = false;
      EXCEPTIONS.caught.push(ptr);
      EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
      return ptr;
    }

  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }

  
  
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((setTempRet0(0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((setTempRet0(0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted = thrown;
          return ((setTempRet0(typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((setTempRet0(throwntype),thrown)|0);
    }function ___gxx_personality_v0() {
    }

  
    

  
  var SYSCALLS={varargs:0,get:function (varargs) {
        SYSCALLS.varargs += 4;
        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];
        return ret;
      },getStr:function () {
        var ret = Pointer_stringify(SYSCALLS.get());
        return ret;
      },get64:function () {
        var low = SYSCALLS.get(), high = SYSCALLS.get();
        if (low >= 0) assert(high === 0);
        else assert(high === -1);
        return low;
      },getZero:function () {
        assert(SYSCALLS.get() === 0);
      }};function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // llseek
      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
      // NOTE: offset_high is unused - Emscripten's off_t is 32-bit
      var offset = offset_low;
      FS.llseek(stream, offset, whence);
      HEAP32[((result)>>2)]=stream.position;
      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  
  function flush_NO_FILESYSTEM() {
      // flush anything remaining in the buffers during shutdown
      var fflush = Module["_fflush"];
      if (fflush) fflush(0);
      var printChar = ___syscall146.printChar;
      if (!printChar) return;
      var buffers = ___syscall146.buffers;
      if (buffers[1].length) printChar(1, 10);
      if (buffers[2].length) printChar(2, 10);
    }function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // writev
      // hack to support printf in NO_FILESYSTEM
      var stream = SYSCALLS.get(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      var ret = 0;
      if (!___syscall146.buffers) {
        ___syscall146.buffers = [null, [], []]; // 1 => stdout, 2 => stderr
        ___syscall146.printChar = function(stream, curr) {
          var buffer = ___syscall146.buffers[stream];
          assert(buffer);
          if (curr === 0 || curr === 10) {
            (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));
            buffer.length = 0;
          } else {
            buffer.push(curr);
          }
        };
      }
      for (var i = 0; i < iovcnt; i++) {
        var ptr = HEAP32[(((iov)+(i*8))>>2)];
        var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
        for (var j = 0; j < len; j++) {
          ___syscall146.printChar(stream, HEAPU8[ptr+j]);
        }
        ret += len;
      }
      return ret;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // ioctl
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // close
      var stream = SYSCALLS.getStreamFromFD();
      FS.close(stream);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  
  
   
  
   
  
     

  function _abort() {
      Module['abort']();
    }

   

   

  
  function _emscripten_get_now() { abort() }
  
  function _emscripten_get_now_is_monotonic() {
      // return whether emscripten_get_now is guaranteed monotonic; the Date.now
      // implementation is not :(
      return ENVIRONMENT_IS_NODE || (typeof dateNow !== 'undefined') ||
          ((ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && self['performance'] && self['performance']['now']);
    }
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      return value;
    }function _clock_gettime(clk_id, tp) {
      // int clock_gettime(clockid_t clk_id, struct timespec *tp);
      var now;
      if (clk_id === 0) {
        now = Date.now();
      } else if (clk_id === 1 && _emscripten_get_now_is_monotonic()) {
        now = _emscripten_get_now();
      } else {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      }
      HEAP32[((tp)>>2)]=(now/1000)|0; // seconds
      HEAP32[(((tp)+(4))>>2)]=((now % 1000)*1000*1000)|0; // nanoseconds
      return 0;
    }

  var _emscripten_asm_const_int=true;

  
  
  function __emscripten_traverse_stack(args) {
      if (!args || !args.callee || !args.callee.name) {
        return [null, '', ''];
      }
  
      var funstr = args.callee.toString();
      var funcname = args.callee.name;
      var str = '(';
      var first = true;
      for (var i in args) {
        var a = args[i];
        if (!first) {
          str += ", ";
        }
        first = false;
        if (typeof a === 'number' || typeof a === 'string') {
          str += a;
        } else {
          str += '(' + typeof a + ')';
        }
      }
      str += ')';
      var caller = args.callee.caller;
      args = caller ? caller.arguments : [];
      if (first)
        str = '';
      return [args, funcname, str];
    }function _emscripten_get_callstack_js(flags) {
      var callstack = jsStackTrace();
  
      // Find the symbols in the callstack that corresponds to the functions that report callstack information, and remove everyhing up to these from the output.
      var iThisFunc = callstack.lastIndexOf('_emscripten_log');
      var iThisFunc2 = callstack.lastIndexOf('_emscripten_get_callstack');
      var iNextLine = callstack.indexOf('\n', Math.max(iThisFunc, iThisFunc2))+1;
      callstack = callstack.slice(iNextLine);
  
      // If user requested to see the original source stack, but no source map information is available, just fall back to showing the JS stack.
      if (flags & 8/*EM_LOG_C_STACK*/ && typeof emscripten_source_map === 'undefined') {
        warnOnce('Source map information is not available, emscripten_log with EM_LOG_C_STACK will be ignored. Build with "--pre-js $EMSCRIPTEN/src/emscripten-source-map.min.js" linker flag to add source map loading to code.');
        flags ^= 8/*EM_LOG_C_STACK*/;
        flags |= 16/*EM_LOG_JS_STACK*/;
      }
  
      var stack_args = null;
      if (flags & 128 /*EM_LOG_FUNC_PARAMS*/) {
        // To get the actual parameters to the functions, traverse the stack via the unfortunately deprecated 'arguments.callee' method, if it works:
        stack_args = __emscripten_traverse_stack(arguments);
        while (stack_args[1].indexOf('_emscripten_') >= 0)
          stack_args = __emscripten_traverse_stack(stack_args[0]);
      }
      
      // Process all lines:
      var lines = callstack.split('\n');
      callstack = '';
      var newFirefoxRe = new RegExp('\\s*(.*?)@(.*?):([0-9]+):([0-9]+)'); // New FF30 with column info: extract components of form '       Object._main@http://server.com:4324:12'
      var firefoxRe = new RegExp('\\s*(.*?)@(.*):(.*)(:(.*))?'); // Old FF without column info: extract components of form '       Object._main@http://server.com:4324'
      var chromeRe = new RegExp('\\s*at (.*?) \\\((.*):(.*):(.*)\\\)'); // Extract components of form '    at Object._main (http://server.com/file.html:4324:12)'
      
      for (var l in lines) {
        var line = lines[l];
  
        var jsSymbolName = '';
        var file = '';
        var lineno = 0;
        var column = 0;
  
        var parts = chromeRe.exec(line);
        if (parts && parts.length == 5) {
          jsSymbolName = parts[1];
          file = parts[2];
          lineno = parts[3];
          column = parts[4];
        } else {
          parts = newFirefoxRe.exec(line);
          if (!parts) parts = firefoxRe.exec(line);
          if (parts && parts.length >= 4) {
            jsSymbolName = parts[1];
            file = parts[2];
            lineno = parts[3];
            column = parts[4]|0; // Old Firefox doesn't carry column information, but in new FF30, it is present. See https://bugzilla.mozilla.org/show_bug.cgi?id=762556
          } else {
            // Was not able to extract this line for demangling/sourcemapping purposes. Output it as-is.
            callstack += line + '\n';
            continue;
          }
        }
  
        // Try to demangle the symbol, but fall back to showing the original JS symbol name if not available.
        var cSymbolName = (flags & 32/*EM_LOG_DEMANGLE*/) ? demangle(jsSymbolName) : jsSymbolName;
        if (!cSymbolName) {
          cSymbolName = jsSymbolName;
        }
  
        var haveSourceMap = false;
  
        if (flags & 8/*EM_LOG_C_STACK*/) {
          var orig = emscripten_source_map.originalPositionFor({line: lineno, column: column});
          haveSourceMap = (orig && orig.source);
          if (haveSourceMap) {
            if (flags & 64/*EM_LOG_NO_PATHS*/) {
              orig.source = orig.source.substring(orig.source.replace(/\\/g, "/").lastIndexOf('/')+1);
            }
            callstack += '    at ' + cSymbolName + ' (' + orig.source + ':' + orig.line + ':' + orig.column + ')\n';
          }
        }
        if ((flags & 16/*EM_LOG_JS_STACK*/) || !haveSourceMap) {
          if (flags & 64/*EM_LOG_NO_PATHS*/) {
            file = file.substring(file.replace(/\\/g, "/").lastIndexOf('/')+1);
          }
          callstack += (haveSourceMap ? ('     = '+jsSymbolName) : ('    at '+cSymbolName)) + ' (' + file + ':' + lineno + ':' + column + ')\n';
        }
        
        // If we are still keeping track with the callstack by traversing via 'arguments.callee', print the function parameters as well.
        if (flags & 128 /*EM_LOG_FUNC_PARAMS*/ && stack_args[0]) {
          if (stack_args[1] == jsSymbolName && stack_args[2].length > 0) {
            callstack = callstack.replace(/\s+$/, '');
            callstack += ' with values: ' + stack_args[1] + stack_args[2] + '\n';
          }
          stack_args = __emscripten_traverse_stack(stack_args[0]);
        }
      }
      // Trim extra whitespace at the end of the output.
      callstack = callstack.replace(/\s+$/, '');
      return callstack;
    }function _emscripten_get_callstack(flags, str, maxbytes) {
      var callstack = _emscripten_get_callstack_js(flags);
      // User can query the required amount of bytes to hold the callstack.
      if (!str || maxbytes <= 0) {
        return lengthBytesUTF8(callstack)+1;
      }
      // Output callstack string as C string to HEAP.
      var bytesWrittenExcludingNull = stringToUTF8(callstack, str, maxbytes);
  
      // Return number of bytes written, including null.
      return bytesWrittenExcludingNull+1;
    }



  function _js_navigator_language() {
      var locale = "en-US";
  
      if (typeof (window) !== 'undefined' && window)
        locale = window.navigator.language;
  
      return ut.toNewScratchNativeString(locale);
    }

  function _js_navigator_languages() {
      var locales = ["en-US"];
  
      if (typeof (window) !== 'undefined' && window)
        locales = window.navigator.languages;
  
      return ut.jsArrayToNewScratchNativeBuffer_string(locales, ut.toExistingScratchNativeString);
    }

   

  var _llvm_ceil_f32=Math_ceil;

  var _llvm_ctlz_i32=true;

   

  var _llvm_nacl_atomic_cmpxchg_i32=undefined;

  function _llvm_trap() {
      abort('trap!');
    }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 

   

   

  
  var PTHREAD_SPECIFIC={};function _pthread_getspecific(key) {
      return PTHREAD_SPECIFIC[key] || 0;
    }

  
  var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key, destructor) {
      if (key == 0) {
        return ERRNO_CODES.EINVAL;
      }
      HEAP32[((key)>>2)]=PTHREAD_SPECIFIC_NEXT_KEY;
      // values start at 0
      PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
      PTHREAD_SPECIFIC_NEXT_KEY++;
      return 0;
    }

  function _pthread_once(ptr, func) {
      if (!_pthread_once.seen) _pthread_once.seen = {};
      if (ptr in _pthread_once.seen) return;
      Module['dynCall_v'](func);
      _pthread_once.seen[ptr] = 1;
    }

  function _pthread_setspecific(key, value) {
      if (!(key in PTHREAD_SPECIFIC)) {
        return ERRNO_CODES.EINVAL;
      }
      PTHREAD_SPECIFIC[key] = value;
      return 0;
    }

   
if (ENVIRONMENT_IS_NODE) {
    _emscripten_get_now = function _emscripten_get_now_actual() {
      var t = process['hrtime']();
      return t[0] * 1e3 + t[1] / 1e6;
    };
  } else if (typeof dateNow !== 'undefined') {
    _emscripten_get_now = dateNow;
  } else if (typeof self === 'object' && self['performance'] && typeof self['performance']['now'] === 'function') {
    _emscripten_get_now = function() { return self['performance']['now'](); };
  } else if (typeof performance === 'object' && typeof performance['now'] === 'function') {
    _emscripten_get_now = function() { return performance['now'](); };
  } else {
    _emscripten_get_now = Date.now;
  };
DYNAMICTOP_PTR = staticAlloc(4);

STACK_BASE = STACKTOP = alignMemory(STATICTOP);

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = alignMemory(STACK_MAX);

HEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;

staticSealed = true; // seal the static portion of memory

var ASSERTIONS = false;

/** @type {function(string, boolean=, number=)} */
function intArrayFromString(stringy, dontAddNull, length) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      if (ASSERTIONS) {
        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      }
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}


// Copied from https://github.com/strophe/strophejs/blob/e06d027/src/polyfills.js#L149

// This code was written by Tyler Akins and has been placed in the
// public domain.  It would be nice if you left this header intact.
// Base64 code from Tyler Akins -- http://rumkin.com

/**
 * Decodes a base64 string.
 * @param {String} input The string to decode.
 */
var decodeBase64 = typeof atob === 'function' ? atob : function (input) {
  var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

  var output = '';
  var chr1, chr2, chr3;
  var enc1, enc2, enc3, enc4;
  var i = 0;
  // remove all characters that are not A-Z, a-z, 0-9, +, /, or =
  input = input.replace(/[^A-Za-z0-9\+\/\=]/g, '');
  do {
    enc1 = keyStr.indexOf(input.charAt(i++));
    enc2 = keyStr.indexOf(input.charAt(i++));
    enc3 = keyStr.indexOf(input.charAt(i++));
    enc4 = keyStr.indexOf(input.charAt(i++));

    chr1 = (enc1 << 2) | (enc2 >> 4);
    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
    chr3 = ((enc3 & 3) << 6) | enc4;

    output = output + String.fromCharCode(chr1);

    if (enc3 !== 64) {
      output = output + String.fromCharCode(chr2);
    }
    if (enc4 !== 64) {
      output = output + String.fromCharCode(chr3);
    }
  } while (i < input.length);
  return output;
};

// Converts a string of base64 into a byte array.
// Throws error on invalid input.
function intArrayFromBase64(s) {
  if (typeof ENVIRONMENT_IS_NODE === 'boolean' && ENVIRONMENT_IS_NODE) {
    var buf;
    try {
      buf = Buffer.from(s, 'base64');
    } catch (_) {
      buf = new Buffer(s, 'base64');
    }
    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
  }

  try {
    var decoded = decodeBase64(s);
    var bytes = new Uint8Array(decoded.length);
    for (var i = 0 ; i < decoded.length ; ++i) {
      bytes[i] = decoded.charCodeAt(i);
    }
    return bytes;
  } catch (_) {
    throw new Error('Converting base64 string to bytes failed.');
  }
}

// If filename is a base64 data URI, parses and returns data (Buffer on node,
// Uint8Array otherwise). If filename is not a base64 data URI, returns undefined.
function tryParseAsDataURI(filename) {
  if (!isDataURI(filename)) {
    return;
  }

  return intArrayFromBase64(filename.slice(dataURIPrefix.length));
}



function invoke_ii(index,a1) {
  var sp = stackSave();
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    stackRestore(sp);
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  var sp = stackSave();
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    stackRestore(sp);
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  var sp = stackSave();
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    stackRestore(sp);
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  var sp = stackSave();
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    stackRestore(sp);
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  var sp = stackSave();
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    stackRestore(sp);
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  var sp = stackSave();
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    stackRestore(sp);
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  var sp = stackSave();
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    stackRestore(sp);
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  var sp = stackSave();
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    stackRestore(sp);
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  var sp = stackSave();
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    stackRestore(sp);
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  var sp = stackSave();
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    stackRestore(sp);
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };

Module.asmLibraryArg = { "abort": abort, "assert": assert, "enlargeMemory": enlargeMemory, "getTotalMemory": getTotalMemory, "abortOnCannotGrowMemory": abortOnCannotGrowMemory, "invoke_ii": invoke_ii, "invoke_iii": invoke_iii, "invoke_iiii": invoke_iiii, "invoke_v": invoke_v, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_viii": invoke_viii, "invoke_viiii": invoke_viiii, "invoke_viiiii": invoke_viiiii, "invoke_viiiiii": invoke_viiiiii, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "___assert_fail": ___assert_fail, "___cxa_begin_catch": ___cxa_begin_catch, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "___cxa_pure_virtual": ___cxa_pure_virtual, "___gxx_personality_v0": ___gxx_personality_v0, "___resumeException": ___resumeException, "___setErrNo": ___setErrNo, "___syscall140": ___syscall140, "___syscall146": ___syscall146, "___syscall54": ___syscall54, "___syscall6": ___syscall6, "__emscripten_traverse_stack": __emscripten_traverse_stack, "_abort": _abort, "_clock_gettime": _clock_gettime, "_emscripten_asm_const_i": _emscripten_asm_const_i, "_emscripten_asm_const_ii": _emscripten_asm_const_ii, "_emscripten_asm_const_iii": _emscripten_asm_const_iii, "_emscripten_asm_const_iiii": _emscripten_asm_const_iiii, "_emscripten_get_callstack": _emscripten_get_callstack, "_emscripten_get_callstack_js": _emscripten_get_callstack_js, "_emscripten_get_now": _emscripten_get_now, "_emscripten_get_now_is_monotonic": _emscripten_get_now_is_monotonic, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_js_navigator_language": _js_navigator_language, "_js_navigator_languages": _js_navigator_languages, "_llvm_ceil_f32": _llvm_ceil_f32, "_llvm_trap": _llvm_trap, "_pthread_getspecific": _pthread_getspecific, "_pthread_key_create": _pthread_key_create, "_pthread_once": _pthread_once, "_pthread_setspecific": _pthread_setspecific, "flush_NO_FILESYSTEM": flush_NO_FILESYSTEM, "DYNAMICTOP_PTR": DYNAMICTOP_PTR, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX };
// EMSCRIPTEN_START_ASM
var asm = (/** @suppress {uselessCode} */ function(global, env, buffer) {
'use asm';


  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);

  var DYNAMICTOP_PTR=env.DYNAMICTOP_PTR|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntS = 0, tempValue = 0, tempDouble = 0.0;
  var tempRet0 = 0;

  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_max=global.Math.max;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var enlargeMemory=env.enlargeMemory;
  var getTotalMemory=env.getTotalMemory;
  var abortOnCannotGrowMemory=env.abortOnCannotGrowMemory;
  var invoke_ii=env.invoke_ii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_v=env.invoke_v;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_viii=env.invoke_viii;
  var invoke_viiii=env.invoke_viiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var ___assert_fail=env.___assert_fail;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var ___cxa_pure_virtual=env.___cxa_pure_virtual;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var ___resumeException=env.___resumeException;
  var ___setErrNo=env.___setErrNo;
  var ___syscall140=env.___syscall140;
  var ___syscall146=env.___syscall146;
  var ___syscall54=env.___syscall54;
  var ___syscall6=env.___syscall6;
  var __emscripten_traverse_stack=env.__emscripten_traverse_stack;
  var _abort=env._abort;
  var _clock_gettime=env._clock_gettime;
  var _emscripten_asm_const_i=env._emscripten_asm_const_i;
  var _emscripten_asm_const_ii=env._emscripten_asm_const_ii;
  var _emscripten_asm_const_iii=env._emscripten_asm_const_iii;
  var _emscripten_asm_const_iiii=env._emscripten_asm_const_iiii;
  var _emscripten_get_callstack=env._emscripten_get_callstack;
  var _emscripten_get_callstack_js=env._emscripten_get_callstack_js;
  var _emscripten_get_now=env._emscripten_get_now;
  var _emscripten_get_now_is_monotonic=env._emscripten_get_now_is_monotonic;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _js_navigator_language=env._js_navigator_language;
  var _js_navigator_languages=env._js_navigator_languages;
  var _llvm_ceil_f32=env._llvm_ceil_f32;
  var _llvm_trap=env._llvm_trap;
  var _pthread_getspecific=env._pthread_getspecific;
  var _pthread_key_create=env._pthread_key_create;
  var _pthread_once=env._pthread_once;
  var _pthread_setspecific=env._pthread_setspecific;
  var flush_NO_FILESYSTEM=env.flush_NO_FILESYSTEM;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS

function __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $$0$i$i$add$i = 0, $$0$i$i$add$i630 = 0, $$0$i$i$add$i649 = 0, $$0$i$i$add$i653 = 0, $$0$i$i$add$i677 = 0, $$0$i$i$add$i681 = 0, $$0$i$i$add$i685 = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i615 = 0, $$0$i$i$i599 = 0, $$0$i$i$i605 = 0, $$0$i$i$i609 = 0, $$0$i$i$i618 = 0, $$0$i$i$i622 = 0, $$0$i$i$i625 = 0, $$0$i$i$i633 = 0, $$0$i$i$i636 = 0, $$0$i$i$i640 = 0, $$0$i$i$i644 = 0, $$0$i$i$i656 = 0, $$0$i$i$i660 = 0, $$0$i$i$i664 = 0, $$0$i$i$i668 = 0, $$0$i$i$i672 = 0, $$0$i$i$idx$i = 0, $$0$i$i$idx$i629 = 0, $$0$i$i$idx$i648 = 0, $$0$i$i$idx$i652 = 0, $$0$i$i$idx$i676 = 0, $$0$i$i$idx$i680 = 0, $$0$i$i$idx$i684 = 0, $$0$i$i602 = 0, $$0503 = 0, $$0504$off0 = 0, $$14 = 0, $10 = 0, $101 = 0, $102 = 0, $103 = 0, $106 = 0, $11 = 0, $111 = 0, $113 = 0, $115 = 0, $116 = 0, $119 = 0, $12 = 0, $13 = 0, $131 = 0, $132 = 0, $14 = 0, $142 = 0, $143 = 0, $144 = 0, $147 = 0, $15 = 0, $154 = 0, $156 = 0, $158 = 0, $16 = 0, $160 = 0, $165 = 0, $167 = 0, $169 = 0, $171 = 0, $173 = 0, $175 = 0, $18 = 0, $180 = 0, $182 = 0, $184 = 0, $186 = 0, $191 = 0, $192 = 0, $194 = 0, $196 = 0, $197 = 0, $204 = 0, $212 = 0, $213 = 0, $228 = 0, $234 = 0, $236 = 0, $238 = 0, $240 = 0, $242 = 0, $244 = 0, $246 = 0, $248 = 0, $25 = 0, $253 = 0, $255 = 0, $257 = 0, $259 = 0, $261 = 0, $263 = 0, $265 = 0, $267 = 0, $269 = 0, $273 = 0, $275 = 0, $277 = 0, $280 = 0, $281 = 0, $296 = 0, $298 = 0, $3 = 0, $300 = 0, $302 = 0, $304 = 0, $306 = 0, $308 = 0, $309 = 0, $315 = 0, $317 = 0, $319 = 0, $321 = 0, $323 = 0, $325 = 0, $330 = 0, $332 = 0, $334 = 0, $336 = 0, $338 = 0, $340 = 0, $342 = 0, $346 = 0, $348 = 0, $35 = 0, $350 = 0, $353 = 0, $354 = 0, $365 = 0, $367 = 0, $37 = 0, $373 = 0, $374 = 0, $376 = 0, $378 = 0, $380 = 0, $381 = 0, $388 = 0, $39 = 0, $392 = 0, $4 = 0, $400 = 0, $401 = 0, $41 = 0, $415 = 0, $416 = 0, $43 = 0, $431 = 0, $433 = 0, $436 = 0, $437 = 0, $444 = 0, $446 = 0, $448 = 0, $45 = 0, $450 = 0, $452 = 0, $454 = 0, $456 = 0, $458 = 0, $47 = 0, $480 = 0, $481 = 0, $49 = 0, $5 = 0, $51 = 0, $53 = 0, $6 = 0, $62 = 0, $64 = 0, $66 = 0, $68 = 0, $7 = 0, $74 = 0, $75 = 0, $78 = 0, $8 = 0, $9 = 0, $90 = 0, $91 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 $3 = sp + 176 | 0;
 $4 = sp + 112 | 0;
 $5 = sp + 88 | 0;
 $6 = sp + 64 | 0;
 $7 = sp + 48 | 0;
 $8 = sp + 160 | 0;
 $9 = sp + 36 | 0;
 $10 = sp + 148 | 0;
 $11 = sp + 136 | 0;
 $12 = sp + 124 | 0;
 $13 = sp + 24 | 0;
 $14 = sp + 12 | 0;
 $15 = sp;
 $16 = $1;
 $18 = $16 - $0 | 0;
 L1 : do if (($18 | 0) > 1) {
  if (($18 | 0) > 3) if ((HEAP8[$0 >> 0] | 0) == 103) {
   $25 = (HEAP8[$0 + 1 >> 0] | 0) == 115;
   $$0503 = $25 ? $0 + 2 | 0 : $0;
   $$0504$off0 = $25;
  } else {
   $$0503 = $0;
   $$0504$off0 = 0;
  } else {
   $$0503 = $0;
   $$0504$off0 = 0;
  }
  do switch (HEAP8[$$0503 >> 0] | 0) {
  case 76:
   {
    $$14 = __ZN10__cxxabiv112_GLOBAL__N_118parse_expr_primaryINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
    break L1;
    break;
   }
  case 84:
   {
    $$14 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
    break L1;
    break;
   }
  case 102:
   {
    $$14 = __ZN10__cxxabiv112_GLOBAL__N_120parse_function_paramINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
    break L1;
    break;
   }
  case 97:
   {
    switch (HEAP8[$$0503 + 1 >> 0] | 0) {
    case 97:
     {
      $35 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22279, __ZNSt3__211char_traitsIcE6lengthEPKc(22279) | 0);
      $37 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($35, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($37 | 0) == ($35 | 0) ? $0 : $37;
      break L1;
      break;
     }
    case 100:
     {
      $39 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22297, __ZNSt3__211char_traitsIcE6lengthEPKc(22297) | 0);
      $41 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($39, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($41 | 0) == ($39 | 0) ? $0 : $41;
      break L1;
      break;
     }
    case 110:
     {
      $43 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22297, __ZNSt3__211char_traitsIcE6lengthEPKc(22297) | 0);
      $45 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($43, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($45 | 0) == ($43 | 0) ? $0 : $45;
      break L1;
      break;
     }
    case 78:
     {
      $47 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22340, __ZNSt3__211char_traitsIcE6lengthEPKc(22340) | 0);
      $49 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($47, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($49 | 0) == ($47 | 0) ? $0 : $49;
      break L1;
      break;
     }
    case 83:
     {
      $51 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22343, __ZNSt3__211char_traitsIcE6lengthEPKc(22343) | 0);
      $53 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($51, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($53 | 0) == ($51 | 0) ? $0 : $53;
      break L1;
      break;
     }
    case 116:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_118parse_alignof_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 122:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_118parse_alignof_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    default:
     {
      $$14 = $0;
      break L1;
     }
    }
    break;
   }
  case 99:
   {
    switch (HEAP8[$$0503 + 1 >> 0] | 0) {
    case 99:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_121parse_const_cast_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 108:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_115parse_call_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 109:
     {
      $62 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22345, __ZNSt3__211char_traitsIcE6lengthEPKc(22345) | 0);
      $64 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($62, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($64 | 0) == ($62 | 0) ? $0 : $64;
      break L1;
      break;
     }
    case 111:
     {
      $66 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22347, __ZNSt3__211char_traitsIcE6lengthEPKc(22347) | 0);
      $68 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($66, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($68 | 0) == ($66 | 0) ? $0 : $68;
      break L1;
      break;
     }
    case 118:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_121parse_conversion_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    default:
     {
      $$14 = $0;
      break L1;
     }
    }
    break;
   }
  case 100:
   {
    switch (HEAP8[$$0503 + 1 >> 0] | 0) {
    case 97:
     {
      $74 = $$0503 + 2 | 0;
      $75 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($74, $1, $2) | 0;
      if (($75 | 0) == ($74 | 0)) {
       $$14 = $0;
       break L1;
      }
      $78 = $2 + 4 | 0;
      if ((HEAP32[$2 >> 2] | 0) == (HEAP32[$78 >> 2] | 0)) {
       $$14 = $0;
       break L1;
      };
      HEAP32[$6 >> 2] = 0;
      HEAP32[$6 + 4 >> 2] = 0;
      HEAP32[$6 + 8 >> 2] = 0;
      L32 : do if ($$0504$off0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($6, 22349, __ZNSt3__211char_traitsIcE6lengthEPKc(22349) | 0); else {
       $$0$i$i = 0;
       while (1) {
        if (($$0$i$i | 0) == 3) break L32;
        HEAP32[$6 + ($$0$i$i << 2) >> 2] = 0;
        $$0$i$i = $$0$i$i + 1 | 0;
       }
      } while (0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($6, 22352) | 0;
      HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
      HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
      HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
      $$0$i$i$i = 0;
      while (1) {
       if (($$0$i$i$i | 0) == 3) break;
       HEAP32[$6 + ($$0$i$i$i << 2) >> 2] = 0;
       $$0$i$i$i = $$0$i$i$i + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($7, (HEAP32[$78 >> 2] | 0) + -24 | 0);
      $90 = HEAP8[$7 + 11 >> 0] | 0;
      $91 = $90 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($5, $91 ? HEAP32[$7 >> 2] | 0 : $7, $91 ? HEAP32[$7 + 4 >> 2] | 0 : $90 & 255) | 0;
      HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
      HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
      HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
      $$0$i$i$i599 = 0;
      while (1) {
       if (($$0$i$i$i599 | 0) == 3) break;
       HEAP32[$5 + ($$0$i$i$i599 << 2) >> 2] = 0;
       $$0$i$i$i599 = $$0$i$i$i599 + 1 | 0;
      }
      $101 = HEAP32[$78 >> 2] | 0;
      $102 = $101 + -24 | 0;
      $103 = $102 + 11 | 0;
      if ((HEAP8[$103 >> 0] | 0) < 0) {
       $106 = HEAP32[$102 >> 2] | 0;
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($106, $3);
       HEAP32[$101 + -20 >> 2] = 0;
      } else {
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($102, $3);
       HEAP8[$103 >> 0] = 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEj($102);
      HEAP32[$102 >> 2] = HEAP32[$4 >> 2];
      HEAP32[$102 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
      HEAP32[$102 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
      $$0$i$i$i$i = 0;
      while (1) {
       if (($$0$i$i$i$i | 0) == 3) break;
       HEAP32[$4 + ($$0$i$i$i$i << 2) >> 2] = 0;
       $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
      $$14 = $75;
      break L1;
      break;
     }
    case 99:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_123parse_dynamic_cast_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 101:
     {
      $111 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22295, __ZNSt3__211char_traitsIcE6lengthEPKc(22295) | 0);
      $113 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($111, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($113 | 0) == ($111 | 0) ? $0 : $113;
      break L1;
      break;
     }
    case 108:
     {
      $115 = $$0503 + 2 | 0;
      $116 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($115, $1, $2) | 0;
      if (($116 | 0) == ($115 | 0)) {
       $$14 = $0;
       break L1;
      }
      $119 = $2 + 4 | 0;
      if ((HEAP32[$2 >> 2] | 0) == (HEAP32[$119 >> 2] | 0)) {
       $$14 = $0;
       break L1;
      };
      HEAP32[$6 >> 2] = 0;
      HEAP32[$6 + 4 >> 2] = 0;
      HEAP32[$6 + 8 >> 2] = 0;
      L60 : do if ($$0504$off0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($6, 22349, __ZNSt3__211char_traitsIcE6lengthEPKc(22349) | 0); else {
       $$0$i$i602 = 0;
       while (1) {
        if (($$0$i$i602 | 0) == 3) break L60;
        HEAP32[$6 + ($$0$i$i602 << 2) >> 2] = 0;
        $$0$i$i602 = $$0$i$i602 + 1 | 0;
       }
      } while (0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($6, 22362) | 0;
      HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
      HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
      HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
      $$0$i$i$i605 = 0;
      while (1) {
       if (($$0$i$i$i605 | 0) == 3) break;
       HEAP32[$6 + ($$0$i$i$i605 << 2) >> 2] = 0;
       $$0$i$i$i605 = $$0$i$i$i605 + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($7, (HEAP32[$119 >> 2] | 0) + -24 | 0);
      $131 = HEAP8[$7 + 11 >> 0] | 0;
      $132 = $131 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($5, $132 ? HEAP32[$7 >> 2] | 0 : $7, $132 ? HEAP32[$7 + 4 >> 2] | 0 : $131 & 255) | 0;
      HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
      HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
      HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
      $$0$i$i$i609 = 0;
      while (1) {
       if (($$0$i$i$i609 | 0) == 3) break;
       HEAP32[$5 + ($$0$i$i$i609 << 2) >> 2] = 0;
       $$0$i$i$i609 = $$0$i$i$i609 + 1 | 0;
      }
      $142 = HEAP32[$119 >> 2] | 0;
      $143 = $142 + -24 | 0;
      $144 = $143 + 11 | 0;
      if ((HEAP8[$144 >> 0] | 0) < 0) {
       $147 = HEAP32[$143 >> 2] | 0;
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($147, $3);
       HEAP32[$142 + -20 >> 2] = 0;
      } else {
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($143, $3);
       HEAP8[$144 >> 0] = 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEj($143);
      HEAP32[$143 >> 2] = HEAP32[$4 >> 2];
      HEAP32[$143 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
      HEAP32[$143 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
      $$0$i$i$i$i615 = 0;
      while (1) {
       if (($$0$i$i$i$i615 | 0) == 3) break;
       HEAP32[$4 + ($$0$i$i$i$i615 << 2) >> 2] = 0;
       $$0$i$i$i$i615 = $$0$i$i$i$i615 + 1 | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
      $$14 = $116;
      break L1;
      break;
     }
    case 110:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 115:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_119parse_dot_star_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 116:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_114parse_dot_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 118:
     {
      $154 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22370, __ZNSt3__211char_traitsIcE6lengthEPKc(22370) | 0);
      $156 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($154, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($156 | 0) == ($154 | 0) ? $0 : $156;
      break L1;
      break;
     }
    case 86:
     {
      $158 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22372, __ZNSt3__211char_traitsIcE6lengthEPKc(22372) | 0);
      $160 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($158, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($160 | 0) == ($158 | 0) ? $0 : $160;
      break L1;
      break;
     }
    default:
     {
      $$14 = $0;
      break L1;
     }
    }
    break;
   }
  case 101:
   {
    switch (HEAP8[$$0503 + 1 >> 0] | 0) {
    case 111:
     {
      $165 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22375, __ZNSt3__211char_traitsIcE6lengthEPKc(22375) | 0);
      $167 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($165, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($167 | 0) == ($165 | 0) ? $0 : $167;
      break L1;
      break;
     }
    case 79:
     {
      $169 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22377, __ZNSt3__211char_traitsIcE6lengthEPKc(22377) | 0);
      $171 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($169, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($171 | 0) == ($169 | 0) ? $0 : $171;
      break L1;
      break;
     }
    case 113:
     {
      $173 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22380, __ZNSt3__211char_traitsIcE6lengthEPKc(22380) | 0);
      $175 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($173, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($175 | 0) == ($173 | 0) ? $0 : $175;
      break L1;
      break;
     }
    default:
     {
      $$14 = $0;
      break L1;
     }
    }
    break;
   }
  case 103:
   {
    switch (HEAP8[$$0503 + 1 >> 0] | 0) {
    case 101:
     {
      $180 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22383, __ZNSt3__211char_traitsIcE6lengthEPKc(22383) | 0);
      $182 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($180, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($182 | 0) == ($180 | 0) ? $0 : $182;
      break L1;
      break;
     }
    case 116:
     {
      $184 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22313, __ZNSt3__211char_traitsIcE6lengthEPKc(22313) | 0);
      $186 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($184, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($186 | 0) == ($184 | 0) ? $0 : $186;
      break L1;
      break;
     }
    default:
     {
      $$14 = $0;
      break L1;
     }
    }
    break;
   }
  case 105:
   {
    if ((HEAP8[$$0503 + 1 >> 0] | 0) != 120) {
     $$14 = $0;
     break L1;
    }
    $191 = $0 + 2 | 0;
    $192 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($191, $1, $2) | 0;
    if (($192 | 0) == ($191 | 0)) {
     $$14 = $0;
     break L1;
    }
    $194 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($192, $1, $2) | 0;
    $196 = $2 + 4 | 0;
    if (($194 | 0) == ($192 | 0)) {
     $228 = HEAP32[$196 >> 2] | 0;
     $$0$i$i$idx$i629 = 0;
     while (1) {
      if (($$0$i$i$idx$i629 | 0) == -1) break;
      $$0$i$i$add$i630 = $$0$i$i$idx$i629 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($228 + ($$0$i$i$add$i630 * 24 | 0) | 0);
      $$0$i$i$idx$i629 = $$0$i$i$add$i630;
     }
     HEAP32[$196 >> 2] = $228 + -24;
     $$14 = $0;
     break L1;
    }
    $197 = HEAP32[$196 >> 2] | 0;
    if ((($197 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     $$14 = $0;
     break L1;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $197 + -24 | 0);
    $204 = HEAP32[$196 >> 2] | 0;
    $$0$i$i$idx$i = 0;
    while (1) {
     if (($$0$i$i$idx$i | 0) == -1) break;
     $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($204 + ($$0$i$i$add$i * 24 | 0) | 0);
     $$0$i$i$idx$i = $$0$i$i$add$i;
    }
    HEAP32[$196 >> 2] = $204 + -24;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($4, $204 + -48 | 0);
    __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($9, 22277, $4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($9, 22386) | 0;
    HEAP32[$7 >> 2] = HEAP32[$9 >> 2];
    HEAP32[$7 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
    HEAP32[$7 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
    $$0$i$i$i618 = 0;
    while (1) {
     if (($$0$i$i$i618 | 0) == 3) break;
     HEAP32[$9 + ($$0$i$i$i618 << 2) >> 2] = 0;
     $$0$i$i$i618 = $$0$i$i$i618 + 1 | 0;
    }
    $212 = HEAP8[$3 + 11 >> 0] | 0;
    $213 = $212 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($7, $213 ? HEAP32[$3 >> 2] | 0 : $3, $213 ? HEAP32[$3 + 4 >> 2] | 0 : $212 & 255) | 0;
    HEAP32[$6 >> 2] = HEAP32[$7 >> 2];
    HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
    HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
    $$0$i$i$i622 = 0;
    while (1) {
     if (($$0$i$i$i622 | 0) == 3) break;
     HEAP32[$7 + ($$0$i$i$i622 << 2) >> 2] = 0;
     $$0$i$i$i622 = $$0$i$i$i622 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($6, 22324) | 0;
    HEAP32[$8 >> 2] = HEAP32[$6 >> 2];
    HEAP32[$8 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
    HEAP32[$8 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
    $$0$i$i$i625 = 0;
    while (1) {
     if (($$0$i$i$i625 | 0) == 3) break;
     HEAP32[$6 + ($$0$i$i$i625 << 2) >> 2] = 0;
     $$0$i$i$i625 = $$0$i$i$i625 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($5, $8);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$196 >> 2] | 0) + -24 | 0, $5);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$14 = $194;
    break L1;
    break;
   }
  case 108:
   {
    switch (HEAP8[$$0503 + 1 >> 0] | 0) {
    case 101:
     {
      $234 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22389, __ZNSt3__211char_traitsIcE6lengthEPKc(22389) | 0);
      $236 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($234, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($236 | 0) == ($234 | 0) ? $0 : $236;
      break L1;
      break;
     }
    case 115:
     {
      $238 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22392, __ZNSt3__211char_traitsIcE6lengthEPKc(22392) | 0);
      $240 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($238, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($240 | 0) == ($238 | 0) ? $0 : $240;
      break L1;
      break;
     }
    case 83:
     {
      $242 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22395, __ZNSt3__211char_traitsIcE6lengthEPKc(22395) | 0);
      $244 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($242, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($244 | 0) == ($242 | 0) ? $0 : $244;
      break L1;
      break;
     }
    case 116:
     {
      $246 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22311, __ZNSt3__211char_traitsIcE6lengthEPKc(22311) | 0);
      $248 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($246, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($248 | 0) == ($246 | 0) ? $0 : $248;
      break L1;
      break;
     }
    default:
     {
      $$14 = $0;
      break L1;
     }
    }
    break;
   }
  case 109:
   {
    switch (HEAP8[$$0503 + 1 >> 0] | 0) {
    case 105:
     {
      $253 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22399, __ZNSt3__211char_traitsIcE6lengthEPKc(22399) | 0);
      $255 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($253, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($255 | 0) == ($253 | 0) ? $0 : $255;
      break L1;
      break;
     }
    case 73:
     {
      $257 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22401, __ZNSt3__211char_traitsIcE6lengthEPKc(22401) | 0);
      $259 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($257, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($259 | 0) == ($257 | 0) ? $0 : $259;
      break L1;
      break;
     }
    case 108:
     {
      $261 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22295, __ZNSt3__211char_traitsIcE6lengthEPKc(22295) | 0);
      $263 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($261, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($263 | 0) == ($261 | 0) ? $0 : $263;
      break L1;
      break;
     }
    case 76:
     {
      $265 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22404, __ZNSt3__211char_traitsIcE6lengthEPKc(22404) | 0);
      $267 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($265, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($267 | 0) == ($265 | 0) ? $0 : $267;
      break L1;
      break;
     }
    case 109:
     {
      $269 = $0 + 2 | 0;
      if (($269 | 0) != ($1 | 0)) if ((HEAP8[$269 >> 0] | 0) == 95) {
       $273 = $0 + 3 | 0;
       HEAP32[$3 >> 2] = 0;
       HEAP32[$3 + 4 >> 2] = 0;
       HEAP32[$3 + 8 >> 2] = 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22407, __ZNSt3__211char_traitsIcE6lengthEPKc(22407) | 0);
       $275 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($273, $1, $3, $2) | 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
       $$14 = ($275 | 0) == ($273 | 0) ? $0 : $275;
       break L1;
      }
      $277 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($269, $1, $2) | 0;
      if (($277 | 0) == ($269 | 0)) {
       $$14 = $0;
       break L1;
      }
      $280 = $2 + 4 | 0;
      $281 = HEAP32[$280 >> 2] | 0;
      if ((HEAP32[$2 >> 2] | 0) == ($281 | 0)) {
       $$14 = $0;
       break L1;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($5, $281 + -24 | 0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($5, 0, 22277) | 0;
      HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
      HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
      HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
      $$0$i$i$i633 = 0;
      while (1) {
       if (($$0$i$i$i633 | 0) == 3) break;
       HEAP32[$5 + ($$0$i$i$i633 << 2) >> 2] = 0;
       $$0$i$i$i633 = $$0$i$i$i633 + 1 | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($4, 22410) | 0;
      HEAP32[$10 >> 2] = HEAP32[$4 >> 2];
      HEAP32[$10 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
      HEAP32[$10 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
      $$0$i$i$i636 = 0;
      while (1) {
       if (($$0$i$i$i636 | 0) == 3) break;
       HEAP32[$4 + ($$0$i$i$i636 << 2) >> 2] = 0;
       $$0$i$i$i636 = $$0$i$i$i636 + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $10);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$280 >> 2] | 0) + -24 | 0, $3);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($10);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
      $$14 = $277;
      break L1;
      break;
     }
    default:
     {
      $$14 = $0;
      break L1;
     }
    }
    break;
   }
  case 110:
   {
    switch (HEAP8[$$0503 + 1 >> 0] | 0) {
    case 119:
    case 97:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_114parse_new_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 101:
     {
      $296 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22414, __ZNSt3__211char_traitsIcE6lengthEPKc(22414) | 0);
      $298 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($296, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($298 | 0) == ($296 | 0) ? $0 : $298;
      break L1;
      break;
     }
    case 103:
     {
      $300 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22399, __ZNSt3__211char_traitsIcE6lengthEPKc(22399) | 0);
      $302 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($300, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($302 | 0) == ($300 | 0) ? $0 : $302;
      break L1;
      break;
     }
    case 116:
     {
      $304 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22417, __ZNSt3__211char_traitsIcE6lengthEPKc(22417) | 0);
      $306 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($304, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($306 | 0) == ($304 | 0) ? $0 : $306;
      break L1;
      break;
     }
    case 120:
     {
      $308 = $0 + 2 | 0;
      $309 = __ZN10__cxxabiv112_GLOBAL__N_125parse_noexcept_expressionINS0_2DbEEEPKcS4_S4_RT_($308, $1, $2) | 0;
      $$14 = ($309 | 0) == ($308 | 0) ? $0 : $309;
      break L1;
      break;
     }
    default:
     {
      $$14 = $0;
      break L1;
     }
    }
    break;
   }
  case 111:
   {
    switch (HEAP8[$$0503 + 1 >> 0] | 0) {
    case 110:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 111:
     {
      $315 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22419, __ZNSt3__211char_traitsIcE6lengthEPKc(22419) | 0);
      $317 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($315, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($317 | 0) == ($315 | 0) ? $0 : $317;
      break L1;
      break;
     }
    case 114:
     {
      $319 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22422, __ZNSt3__211char_traitsIcE6lengthEPKc(22422) | 0);
      $321 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($319, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($321 | 0) == ($319 | 0) ? $0 : $321;
      break L1;
      break;
     }
    case 82:
     {
      $323 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22424, __ZNSt3__211char_traitsIcE6lengthEPKc(22424) | 0);
      $325 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($323, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($325 | 0) == ($323 | 0) ? $0 : $325;
      break L1;
      break;
     }
    default:
     {
      $$14 = $0;
      break L1;
     }
    }
    break;
   }
  case 112:
   {
    switch (HEAP8[$$0503 + 1 >> 0] | 0) {
    case 109:
     {
      $330 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22427, __ZNSt3__211char_traitsIcE6lengthEPKc(22427) | 0);
      $332 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($330, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($332 | 0) == ($330 | 0) ? $0 : $332;
      break L1;
      break;
     }
    case 108:
     {
      $334 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22431, __ZNSt3__211char_traitsIcE6lengthEPKc(22431) | 0);
      $336 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($334, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($336 | 0) == ($334 | 0) ? $0 : $336;
      break L1;
      break;
     }
    case 76:
     {
      $338 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22433, __ZNSt3__211char_traitsIcE6lengthEPKc(22433) | 0);
      $340 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($338, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($340 | 0) == ($338 | 0) ? $0 : $340;
      break L1;
      break;
     }
    case 112:
     {
      $342 = $0 + 2 | 0;
      if (($342 | 0) != ($1 | 0)) if ((HEAP8[$342 >> 0] | 0) == 95) {
       $346 = $0 + 3 | 0;
       HEAP32[$3 >> 2] = 0;
       HEAP32[$3 + 4 >> 2] = 0;
       HEAP32[$3 + 8 >> 2] = 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22436, __ZNSt3__211char_traitsIcE6lengthEPKc(22436) | 0);
       $348 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($346, $1, $3, $2) | 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
       $$14 = ($348 | 0) == ($346 | 0) ? $0 : $348;
       break L1;
      }
      $350 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($342, $1, $2) | 0;
      if (($350 | 0) == ($342 | 0)) {
       $$14 = $0;
       break L1;
      }
      $353 = $2 + 4 | 0;
      $354 = HEAP32[$353 >> 2] | 0;
      if ((HEAP32[$2 >> 2] | 0) == ($354 | 0)) {
       $$14 = $0;
       break L1;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($5, $354 + -24 | 0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($5, 0, 22277) | 0;
      HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
      HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
      HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
      $$0$i$i$i640 = 0;
      while (1) {
       if (($$0$i$i$i640 | 0) == 3) break;
       HEAP32[$5 + ($$0$i$i$i640 << 2) >> 2] = 0;
       $$0$i$i$i640 = $$0$i$i$i640 + 1 | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($4, 22439) | 0;
      HEAP32[$11 >> 2] = HEAP32[$4 >> 2];
      HEAP32[$11 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
      HEAP32[$11 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
      $$0$i$i$i644 = 0;
      while (1) {
       if (($$0$i$i$i644 | 0) == 3) break;
       HEAP32[$4 + ($$0$i$i$i644 << 2) >> 2] = 0;
       $$0$i$i$i644 = $$0$i$i$i644 + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $11);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$353 >> 2] | 0) + -24 | 0, $3);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($11);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
      $$14 = $350;
      break L1;
      break;
     }
    case 115:
     {
      $365 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22431, __ZNSt3__211char_traitsIcE6lengthEPKc(22431) | 0);
      $367 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($365, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($367 | 0) == ($365 | 0) ? $0 : $367;
      break L1;
      break;
     }
    case 116:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_116parse_arrow_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    default:
     {
      $$14 = $0;
      break L1;
     }
    }
    break;
   }
  case 113:
   {
    if ((HEAP8[$$0503 + 1 >> 0] | 0) != 117) {
     $$14 = $0;
     break L1;
    }
    $373 = $0 + 2 | 0;
    $374 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($373, $1, $2) | 0;
    if (($374 | 0) == ($373 | 0)) {
     $$14 = $0;
     break L1;
    }
    $376 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($374, $1, $2) | 0;
    if (($376 | 0) == ($374 | 0)) {
     $436 = $2 + 4 | 0;
     $437 = HEAP32[$436 >> 2] | 0;
     $$0$i$i$idx$i684 = 0;
     while (1) {
      if (($$0$i$i$idx$i684 | 0) == -1) break;
      $$0$i$i$add$i685 = $$0$i$i$idx$i684 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($437 + ($$0$i$i$add$i685 * 24 | 0) | 0);
      $$0$i$i$idx$i684 = $$0$i$i$add$i685;
     }
     HEAP32[$436 >> 2] = $437 + -24;
     $$14 = $0;
     break L1;
    }
    $378 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($376, $1, $2) | 0;
    $380 = $2 + 4 | 0;
    if (($378 | 0) == ($376 | 0)) {
     $431 = HEAP32[$380 >> 2] | 0;
     $$0$i$i$idx$i676 = 0;
     while (1) {
      if (($$0$i$i$idx$i676 | 0) == -1) break;
      $$0$i$i$add$i677 = $$0$i$i$idx$i676 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($431 + ($$0$i$i$add$i677 * 24 | 0) | 0);
      $$0$i$i$idx$i676 = $$0$i$i$add$i677;
     }
     $433 = $431 + -24 | 0;
     HEAP32[$380 >> 2] = $433;
     $$0$i$i$idx$i680 = 0;
     while (1) {
      if (($$0$i$i$idx$i680 | 0) == -1) break;
      $$0$i$i$add$i681 = $$0$i$i$idx$i680 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($433 + ($$0$i$i$add$i681 * 24 | 0) | 0);
      $$0$i$i$idx$i680 = $$0$i$i$add$i681;
     }
     HEAP32[$380 >> 2] = $431 + -48;
     $$14 = $0;
     break L1;
    }
    $381 = HEAP32[$380 >> 2] | 0;
    if ((($381 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 3) {
     $$14 = $0;
     break L1;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $381 + -24 | 0);
    $388 = HEAP32[$380 >> 2] | 0;
    $$0$i$i$idx$i648 = 0;
    while (1) {
     if (($$0$i$i$idx$i648 | 0) == -1) break;
     $$0$i$i$add$i649 = $$0$i$i$idx$i648 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($388 + ($$0$i$i$add$i649 * 24 | 0) | 0);
     $$0$i$i$idx$i648 = $$0$i$i$add$i649;
    }
    HEAP32[$380 >> 2] = $388 + -24;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($4, $388 + -48 | 0);
    $392 = HEAP32[$380 >> 2] | 0;
    $$0$i$i$idx$i652 = 0;
    while (1) {
     if (($$0$i$i$idx$i652 | 0) == -1) break;
     $$0$i$i$add$i653 = $$0$i$i$idx$i652 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($392 + ($$0$i$i$add$i653 * 24 | 0) | 0);
     $$0$i$i$idx$i652 = $$0$i$i$add$i653;
    }
    HEAP32[$380 >> 2] = $392 + -24;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($5, $392 + -48 | 0);
    __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($15, 22277, $5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($15, 22443) | 0;
    HEAP32[$14 >> 2] = HEAP32[$15 >> 2];
    HEAP32[$14 + 4 >> 2] = HEAP32[$15 + 4 >> 2];
    HEAP32[$14 + 8 >> 2] = HEAP32[$15 + 8 >> 2];
    $$0$i$i$i656 = 0;
    while (1) {
     if (($$0$i$i$i656 | 0) == 3) break;
     HEAP32[$15 + ($$0$i$i$i656 << 2) >> 2] = 0;
     $$0$i$i$i656 = $$0$i$i$i656 + 1 | 0;
    }
    $400 = HEAP8[$4 + 11 >> 0] | 0;
    $401 = $400 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($14, $401 ? HEAP32[$4 >> 2] | 0 : $4, $401 ? HEAP32[$4 + 4 >> 2] | 0 : $400 & 255) | 0;
    HEAP32[$13 >> 2] = HEAP32[$14 >> 2];
    HEAP32[$13 + 4 >> 2] = HEAP32[$14 + 4 >> 2];
    HEAP32[$13 + 8 >> 2] = HEAP32[$14 + 8 >> 2];
    $$0$i$i$i660 = 0;
    while (1) {
     if (($$0$i$i$i660 | 0) == 3) break;
     HEAP32[$14 + ($$0$i$i$i660 << 2) >> 2] = 0;
     $$0$i$i$i660 = $$0$i$i$i660 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($13, 22449) | 0;
    HEAP32[$9 >> 2] = HEAP32[$13 >> 2];
    HEAP32[$9 + 4 >> 2] = HEAP32[$13 + 4 >> 2];
    HEAP32[$9 + 8 >> 2] = HEAP32[$13 + 8 >> 2];
    $$0$i$i$i664 = 0;
    while (1) {
     if (($$0$i$i$i664 | 0) == 3) break;
     HEAP32[$13 + ($$0$i$i$i664 << 2) >> 2] = 0;
     $$0$i$i$i664 = $$0$i$i$i664 + 1 | 0;
    }
    $415 = HEAP8[$3 + 11 >> 0] | 0;
    $416 = $415 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($9, $416 ? HEAP32[$3 >> 2] | 0 : $3, $416 ? HEAP32[$3 + 4 >> 2] | 0 : $415 & 255) | 0;
    HEAP32[$7 >> 2] = HEAP32[$9 >> 2];
    HEAP32[$7 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
    HEAP32[$7 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
    $$0$i$i$i668 = 0;
    while (1) {
     if (($$0$i$i$i668 | 0) == 3) break;
     HEAP32[$9 + ($$0$i$i$i668 << 2) >> 2] = 0;
     $$0$i$i$i668 = $$0$i$i$i668 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($7, 22275) | 0;
    HEAP32[$12 >> 2] = HEAP32[$7 >> 2];
    HEAP32[$12 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
    HEAP32[$12 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
    $$0$i$i$i672 = 0;
    while (1) {
     if (($$0$i$i$i672 | 0) == 3) break;
     HEAP32[$7 + ($$0$i$i$i672 << 2) >> 2] = 0;
     $$0$i$i$i672 = $$0$i$i$i672 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($6, $12);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$380 >> 2] | 0) + -24 | 0, $6);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($6);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($12);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($13);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($14);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($15);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$14 = $378;
    break L1;
    break;
   }
  case 114:
   {
    switch (HEAP8[$$0503 + 1 >> 0] | 0) {
    case 99:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_127parse_reinterpret_cast_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 109:
     {
      $444 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22455, __ZNSt3__211char_traitsIcE6lengthEPKc(22455) | 0);
      $446 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($444, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($446 | 0) == ($444 | 0) ? $0 : $446;
      break L1;
      break;
     }
    case 77:
     {
      $448 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22457, __ZNSt3__211char_traitsIcE6lengthEPKc(22457) | 0);
      $450 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($448, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($450 | 0) == ($448 | 0) ? $0 : $450;
      break L1;
      break;
     }
    case 115:
     {
      $452 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22460, __ZNSt3__211char_traitsIcE6lengthEPKc(22460) | 0);
      $454 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($452, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($454 | 0) == ($452 | 0) ? $0 : $454;
      break L1;
      break;
     }
    case 83:
     {
      $456 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22463, __ZNSt3__211char_traitsIcE6lengthEPKc(22463) | 0);
      $458 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($456, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($458 | 0) == ($456 | 0) ? $0 : $458;
      break L1;
      break;
     }
    default:
     {
      $$14 = $0;
      break L1;
     }
    }
    break;
   }
  case 115:
   {
    switch (HEAP8[$$0503 + 1 >> 0] | 0) {
    case 99:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_122parse_static_cast_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 112:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_120parse_pack_expansionINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 114:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 116:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_122parse_sizeof_type_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 122:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_122parse_sizeof_expr_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 90:
     {
      if (($16 - $$0503 | 0) <= 2) {
       $$14 = $0;
       break L1;
      }
      switch (HEAP8[$$0503 + 2 >> 0] | 0) {
      case 84:
       {
        $$14 = __ZN10__cxxabiv112_GLOBAL__N_128parse_sizeof_param_pack_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
        break L1;
        break;
       }
      case 102:
       {
        $$14 = __ZN10__cxxabiv112_GLOBAL__N_137parse_sizeof_function_param_pack_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
        break L1;
        break;
       }
      default:
       {
        $$14 = $0;
        break L1;
       }
      }
      break;
     }
    default:
     {
      $$14 = $0;
      break L1;
     }
    }
    break;
   }
  case 116:
   {
    switch (HEAP8[$$0503 + 1 >> 0] | 0) {
    case 105:
    case 101:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_117parse_typeid_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 114:
     {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj6EEERAT__Kc($3, 22467);
      $480 = $2 + 4 | 0;
      $481 = HEAP32[$480 >> 2] | 0;
      if ($481 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($481, $3);
       HEAP32[$480 >> 2] = (HEAP32[$480 >> 2] | 0) + 24;
      } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
      $$14 = $0 + 2 | 0;
      break L1;
      break;
     }
    case 119:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_116parse_throw_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    default:
     {
      $$14 = $0;
      break L1;
     }
    }
    break;
   }
  case 57:
  case 56:
  case 55:
  case 54:
  case 53:
  case 52:
  case 51:
  case 50:
  case 49:
   {
    $$14 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
    break L1;
    break;
   }
  default:
   {
    $$14 = $0;
    break L1;
   }
  } while (0);
 } else $$14 = $0; while (0);
 STACKTOP = sp;
 return $$14 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$add$i = 0, $$0$i$i$add$i497 = 0, $$0$i$i$add$i549 = 0, $$0$i$i$add$i561 = 0, $$0$i$i$add$i569 = 0, $$0$i$i$i = 0, $$0$i$i$i575 = 0, $$0$i$i$i579 = 0, $$0$i$i$i582 = 0, $$0$i$i$idx$i = 0, $$0$i$i$idx$i496 = 0, $$0$i$i$idx$i548 = 0, $$0$i$i$idx$i560 = 0, $$0$i$i$idx$i568 = 0, $$0$i533 = 0, $$0$i540 = 0, $$0434 = 0, $$0435 = 0, $$0438 = 0, $$0444 = 0, $$0478 = 0, $$0479 = 0, $$1429 = 0, $$1436 = 0, $$2437 = 0, $$5 = 0, $$in = 0, $$ph = 0, $$sroa$0$0$$sroa_idx$i544 = 0, $$sroa$0$0$copyload$i490598 = 0, $$sroa$0$0$copyload$i499594 = 0, $$sroa$0$0$copyload$i527606 = 0, $$sroa$0$0$copyload$i531605 = 0, $$sroa$0$0$copyload$i538604 = 0, $$sroa$0$0$copyload$i545602 = 0, $10 = 0, $102 = 0, $106 = 0, $11 = 0, $110 = 0, $113 = 0, $114 = 0, $119 = 0, $120 = 0, $124 = 0, $126 = 0, $131 = 0, $132 = 0, $135 = 0, $136 = 0, $140 = 0, $141 = 0, $142 = 0, $147 = 0, $148 = 0, $15 = 0, $152 = 0, $154 = 0, $159 = 0, $163 = 0, $166 = 0, $167 = 0, $172 = 0, $173 = 0, $177 = 0, $179 = 0, $18 = 0, $184 = 0, $185 = 0, $188 = 0, $189 = 0, $19 = 0, $193 = 0, $194 = 0, $195 = 0, $200 = 0, $201 = 0, $205 = 0, $207 = 0, $212 = 0, $216 = 0, $219 = 0, $220 = 0, $225 = 0, $226 = 0, $23 = 0, $230 = 0, $232 = 0, $237 = 0, $24 = 0, $241 = 0, $242 = 0, $243 = 0, $247 = 0, $249 = 0, $250 = 0, $260 = 0, $261 = 0, $265 = 0, $266 = 0, $274 = 0, $275 = 0, $278 = 0, $28 = 0, $284 = 0, $290 = 0, $292 = 0, $293 = 0, $294 = 0, $3 = 0, $30 = 0, $302 = 0, $306 = 0, $307 = 0, $308 = 0, $31 = 0, $312 = 0, $314 = 0, $315 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $332 = 0, $333 = 0, $34 = 0, $341 = 0, $342 = 0, $345 = 0, $351 = 0, $361 = 0, $362 = 0, $371 = 0, $372 = 0, $373 = 0, $375 = 0, $376 = 0, $377 = 0, $38 = 0, $385 = 0, $389 = 0, $390 = 0, $391 = 0, $395 = 0, $397 = 0, $398 = 0, $4 = 0, $408 = 0, $409 = 0, $413 = 0, $414 = 0, $422 = 0, $423 = 0, $426 = 0, $432 = 0, $438 = 0, $440 = 0, $441 = 0, $442 = 0, $45 = 0, $450 = 0, $454 = 0, $455 = 0, $459 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $47 = 0, $478 = 0, $480 = 0, $481 = 0, $482 = 0, $49 = 0, $490 = 0, $494 = 0, $499 = 0, $5 = 0, $500 = 0, $508 = 0, $509 = 0, $51 = 0, $513 = 0, $514 = 0, $518 = 0, $520 = 0, $524 = 0, $526 = 0, $528 = 0, $53 = 0, $530 = 0, $531 = 0, $538 = 0, $54 = 0, $542 = 0, $544 = 0, $552 = 0, $556 = 0, $557 = 0, $56 = 0, $57 = 0, $571 = 0, $574 = 0, $575 = 0, $576 = 0, $578 = 0, $581 = 0, $585 = 0, $595 = 0, $596 = 0, $6 = 0, $611 = 0, $612 = 0, $62 = 0, $621 = 0, $628 = 0, $629 = 0, $630 = 0, $635 = 0, $636 = 0, $64 = 0, $640 = 0, $642 = 0, $647 = 0, $651 = 0, $655 = 0, $658 = 0, $659 = 0, $664 = 0, $665 = 0, $669 = 0, $671 = 0, $676 = 0, $678 = 0, $680 = 0, $681 = 0, $688 = 0, $693 = 0, $694 = 0, $7 = 0, $702 = 0, $703 = 0, $704 = 0, $709 = 0, $710 = 0, $714 = 0, $716 = 0, $721 = 0, $725 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $735 = 0, $737 = 0, $738 = 0, $74 = 0, $749 = 0, $751 = 0, $752 = 0, $753 = 0, $761 = 0, $765 = 0, $768 = 0, $769 = 0, $774 = 0, $775 = 0, $779 = 0, $781 = 0, $786 = 0, $790 = 0, $793 = 0, $794 = 0, $799 = 0, $8 = 0, $800 = 0, $804 = 0, $806 = 0, $811 = 0, $813 = 0, $817 = 0, $820 = 0, $821 = 0, $826 = 0, $827 = 0, $831 = 0, $833 = 0, $9 = 0, $90 = 0, $92 = 0, $93 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $3 = sp + 128 | 0;
 $4 = sp + 104 | 0;
 $5 = sp + 40 | 0;
 $6 = sp + 88 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 76 | 0;
 $9 = sp + 12 | 0;
 $10 = sp;
 $11 = sp + 64 | 0;
 L1 : do if (($0 | 0) == ($1 | 0)) $$5 = $0; else {
  switch (HEAP8[$0 >> 0] | 0) {
  case 75:
  case 86:
  case 114:
   {
    HEAP32[$3 >> 2] = 0;
    $15 = __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($0, $1, $3) | 0;
    L5 : do if (($15 | 0) == ($0 | 0)) $$1429 = $0; else {
     $18 = (HEAP8[$15 >> 0] | 0) == 70;
     $19 = $2 + 4 | 0;
     $23 = ((HEAP32[$19 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
     $24 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($15, $1, $2) | 0;
     $28 = ((HEAP32[$19 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
     if (($24 | 0) == ($15 | 0)) $$1429 = $0; else {
      $30 = $2 + 20 | 0;
      $31 = HEAP32[$30 >> 2] | 0;
      if ($18) {
       $$0$i$i$idx$i496 = 0;
       while (1) {
        if (($$0$i$i$idx$i496 | 0) == -1) break;
        $$0$i$i$add$i497 = $$0$i$i$idx$i496 + -1 | 0;
        __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($31 + ($$0$i$i$add$i497 << 4) | 0);
        $$0$i$i$idx$i496 = $$0$i$i$add$i497;
       }
       $34 = $31 + -16 | 0;
       HEAP32[$30 >> 2] = $34;
       $38 = $34;
      } else $38 = $31;
      $$sroa$0$0$copyload$i499594 = HEAP32[$2 + 12 >> 2] | 0;
      HEAP32[$4 >> 2] = $$sroa$0$0$copyload$i499594;
      if ($38 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
       HEAP32[$38 >> 2] = 0;
       HEAP32[$38 + 4 >> 2] = 0;
       HEAP32[$38 + 8 >> 2] = 0;
       HEAP32[$38 + 12 >> 2] = $$sroa$0$0$copyload$i499594;
       HEAP32[$30 >> 2] = (HEAP32[$30 >> 2] | 0) + 16;
      } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($2 + 16 | 0, $4);
      $45 = HEAP32[$3 >> 2] | 0;
      $47 = ($45 & 1 | 0) == 0;
      $49 = ($45 & 2 | 0) == 0;
      $51 = ($45 & 4 | 0) == 0;
      $$0434 = $23;
      while (1) {
       if ($$0434 >>> 0 >= $28 >>> 0) {
        $$1429 = $24;
        break L5;
       }
       if ($18) {
        $53 = HEAP32[$2 >> 2] | 0;
        $54 = $53 + ($$0434 * 24 | 0) + 12 | 0;
        $56 = HEAP8[$54 + 11 >> 0] | 0;
        $57 = $56 << 24 >> 24 < 0;
        if ($57) {
         $$in = HEAP32[$53 + ($$0434 * 24 | 0) + 16 >> 2] | 0;
         $64 = HEAP32[$54 >> 2] | 0;
        } else {
         $$in = $56 & 255;
         $64 = $54;
        }
        $62 = $$in + -2 | 0;
        if ((HEAP8[$64 + $62 >> 0] | 0) == 38) $$0435 = $$in + -3 | 0; else {
         if ($57) {
          $73 = HEAP32[$54 >> 2] | 0;
          $74 = HEAP32[$53 + ($$0434 * 24 | 0) + 16 >> 2] | 0;
         } else {
          $73 = $54;
          $74 = $56 & 255;
         }
         $$0435 = (HEAP8[$73 + $74 + -1 >> 0] | 0) == 38 ? $62 : $$in;
        }
        if ($47) $$1436 = $$0435; else {
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($54, $$0435, 22222) | 0;
         $$1436 = $$0435 + 6 | 0;
        }
        if ($49) $$2437 = $$1436; else {
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc((HEAP32[$2 >> 2] | 0) + ($$0434 * 24 | 0) + 12 | 0, $$1436, 22229) | 0;
         $$2437 = $$1436 + 9 | 0;
        }
        if (!$51) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc((HEAP32[$2 >> 2] | 0) + ($$0434 * 24 | 0) + 12 | 0, $$2437, 22239) | 0;
       } else {
        if (!$47) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$2 >> 2] | 0) + ($$0434 * 24 | 0) | 0, 22222) | 0;
        if (!$49) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$2 >> 2] | 0) + ($$0434 * 24 | 0) | 0, 22229) | 0;
        if (!$51) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$2 >> 2] | 0) + ($$0434 * 24 | 0) | 0, 22239) | 0;
       }
       $90 = HEAP32[$30 >> 2] | 0;
       $92 = (HEAP32[$2 >> 2] | 0) + ($$0434 * 24 | 0) | 0;
       $93 = $90 + -12 | 0;
       $94 = HEAP32[$93 >> 2] | 0;
       if (($94 | 0) == (HEAP32[$90 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($90 + -16 | 0, $92); else {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($94, $92);
        HEAP32[$93 >> 2] = (HEAP32[$93 >> 2] | 0) + 24;
       }
       $$0434 = $$0434 + 1 | 0;
      }
     }
    } while (0);
    $$5 = $$1429;
    break L1;
    break;
   }
  default:
   {}
  }
  $102 = __ZN10__cxxabiv112_GLOBAL__N_118parse_builtin_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
  if (($102 | 0) == ($0 | 0)) {
   L59 : do switch (HEAP8[$0 >> 0] | 0) {
   case 65:
    {
     $106 = __ZN10__cxxabiv112_GLOBAL__N_116parse_array_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
     if (($106 | 0) == ($0 | 0)) {
      $$5 = $0;
      break L1;
     }
     $110 = HEAP32[$2 + 4 >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($110 | 0)) {
      $$5 = $0;
      break L1;
     }
     HEAP32[$4 >> 2] = HEAP32[$2 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($3, $110 + -24 | 0, $4);
     $113 = $2 + 20 | 0;
     $114 = HEAP32[$113 >> 2] | 0;
     if ($114 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
      HEAP32[$114 >> 2] = 0;
      $119 = $114 + 4 | 0;
      HEAP32[$119 >> 2] = 0;
      $120 = $114 + 8 | 0;
      HEAP32[$120 >> 2] = 0;
      HEAP32[$114 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
      HEAP32[$114 >> 2] = HEAP32[$3 >> 2];
      $124 = $3 + 4 | 0;
      HEAP32[$119 >> 2] = HEAP32[$124 >> 2];
      $126 = $3 + 8 | 0;
      HEAP32[$120 >> 2] = HEAP32[$126 >> 2];
      HEAP32[$126 >> 2] = 0;
      HEAP32[$124 >> 2] = 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$113 >> 2] = (HEAP32[$113 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $3);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($3);
     $$5 = $106;
     break L1;
     break;
    }
   case 67:
    {
     $131 = $0 + 1 | 0;
     $132 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($131, $1, $2) | 0;
     if (($132 | 0) == ($131 | 0)) {
      $$5 = $0;
      break L1;
     }
     $135 = $2 + 4 | 0;
     $136 = HEAP32[$135 >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($136 | 0)) {
      $$5 = $0;
      break L1;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($136 + -24 | 0, 22249) | 0;
     $140 = (HEAP32[$135 >> 2] | 0) + -24 | 0;
     HEAP32[$4 >> 2] = HEAP32[$2 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($3, $140, $4);
     $141 = $2 + 20 | 0;
     $142 = HEAP32[$141 >> 2] | 0;
     if ($142 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
      HEAP32[$142 >> 2] = 0;
      $147 = $142 + 4 | 0;
      HEAP32[$147 >> 2] = 0;
      $148 = $142 + 8 | 0;
      HEAP32[$148 >> 2] = 0;
      HEAP32[$142 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
      HEAP32[$142 >> 2] = HEAP32[$3 >> 2];
      $152 = $3 + 4 | 0;
      HEAP32[$147 >> 2] = HEAP32[$152 >> 2];
      $154 = $3 + 8 | 0;
      HEAP32[$148 >> 2] = HEAP32[$154 >> 2];
      HEAP32[$154 >> 2] = 0;
      HEAP32[$152 >> 2] = 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$141 >> 2] = (HEAP32[$141 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $3);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($3);
     $$5 = $132;
     break L1;
     break;
    }
   case 70:
    {
     $159 = __ZN10__cxxabiv112_GLOBAL__N_119parse_function_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
     if (($159 | 0) == ($0 | 0)) {
      $$5 = $0;
      break L1;
     }
     $163 = HEAP32[$2 + 4 >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($163 | 0)) {
      $$5 = $0;
      break L1;
     }
     HEAP32[$4 >> 2] = HEAP32[$2 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($3, $163 + -24 | 0, $4);
     $166 = $2 + 20 | 0;
     $167 = HEAP32[$166 >> 2] | 0;
     if ($167 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
      HEAP32[$167 >> 2] = 0;
      $172 = $167 + 4 | 0;
      HEAP32[$172 >> 2] = 0;
      $173 = $167 + 8 | 0;
      HEAP32[$173 >> 2] = 0;
      HEAP32[$167 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
      HEAP32[$167 >> 2] = HEAP32[$3 >> 2];
      $177 = $3 + 4 | 0;
      HEAP32[$172 >> 2] = HEAP32[$177 >> 2];
      $179 = $3 + 8 | 0;
      HEAP32[$173 >> 2] = HEAP32[$179 >> 2];
      HEAP32[$179 >> 2] = 0;
      HEAP32[$177 >> 2] = 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$166 >> 2] = (HEAP32[$166 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $3);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($3);
     $$5 = $159;
     break L1;
     break;
    }
   case 71:
    {
     $184 = $0 + 1 | 0;
     $185 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($184, $1, $2) | 0;
     if (($185 | 0) == ($184 | 0)) {
      $$5 = $0;
      break L1;
     }
     $188 = $2 + 4 | 0;
     $189 = HEAP32[$188 >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($189 | 0)) {
      $$5 = $0;
      break L1;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($189 + -24 | 0, 22258) | 0;
     $193 = (HEAP32[$188 >> 2] | 0) + -24 | 0;
     HEAP32[$4 >> 2] = HEAP32[$2 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($3, $193, $4);
     $194 = $2 + 20 | 0;
     $195 = HEAP32[$194 >> 2] | 0;
     if ($195 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
      HEAP32[$195 >> 2] = 0;
      $200 = $195 + 4 | 0;
      HEAP32[$200 >> 2] = 0;
      $201 = $195 + 8 | 0;
      HEAP32[$201 >> 2] = 0;
      HEAP32[$195 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
      HEAP32[$195 >> 2] = HEAP32[$3 >> 2];
      $205 = $3 + 4 | 0;
      HEAP32[$200 >> 2] = HEAP32[$205 >> 2];
      $207 = $3 + 8 | 0;
      HEAP32[$201 >> 2] = HEAP32[$207 >> 2];
      HEAP32[$207 >> 2] = 0;
      HEAP32[$205 >> 2] = 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$194 >> 2] = (HEAP32[$194 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $3);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($3);
     $$5 = $185;
     break L1;
     break;
    }
   case 77:
    {
     $212 = __ZN10__cxxabiv112_GLOBAL__N_128parse_pointer_to_member_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
     if (($212 | 0) == ($0 | 0)) {
      $$5 = $0;
      break L1;
     }
     $216 = HEAP32[$2 + 4 >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($216 | 0)) {
      $$5 = $0;
      break L1;
     }
     HEAP32[$4 >> 2] = HEAP32[$2 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($3, $216 + -24 | 0, $4);
     $219 = $2 + 20 | 0;
     $220 = HEAP32[$219 >> 2] | 0;
     if ($220 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
      HEAP32[$220 >> 2] = 0;
      $225 = $220 + 4 | 0;
      HEAP32[$225 >> 2] = 0;
      $226 = $220 + 8 | 0;
      HEAP32[$226 >> 2] = 0;
      HEAP32[$220 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
      HEAP32[$220 >> 2] = HEAP32[$3 >> 2];
      $230 = $3 + 4 | 0;
      HEAP32[$225 >> 2] = HEAP32[$230 >> 2];
      $232 = $3 + 8 | 0;
      HEAP32[$226 >> 2] = HEAP32[$232 >> 2];
      HEAP32[$232 >> 2] = 0;
      HEAP32[$230 >> 2] = 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$219 >> 2] = (HEAP32[$219 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $3);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($3);
     $$5 = $212;
     break L1;
     break;
    }
   case 79:
    {
     $237 = $2 + 4 | 0;
     $241 = ((HEAP32[$237 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
     $242 = $0 + 1 | 0;
     $243 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($242, $1, $2) | 0;
     $247 = ((HEAP32[$237 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
     if (($243 | 0) == ($242 | 0)) {
      $$5 = $0;
      break L1;
     }
     $$sroa$0$0$copyload$i527606 = HEAP32[$2 + 12 >> 2] | 0;
     HEAP32[$3 >> 2] = $$sroa$0$0$copyload$i527606;
     $249 = $2 + 20 | 0;
     $250 = HEAP32[$249 >> 2] | 0;
     if ($250 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
      HEAP32[$250 >> 2] = 0;
      HEAP32[$250 + 4 >> 2] = 0;
      HEAP32[$250 + 8 >> 2] = 0;
      HEAP32[$250 + 12 >> 2] = $$sroa$0$0$copyload$i527606;
      HEAP32[$249 >> 2] = (HEAP32[$249 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($2 + 16 | 0, $3);
     $260 = $3 + 11 | 0;
     $261 = $3 + 4 | 0;
     $$0479 = $241;
     while (1) {
      if ($$0479 >>> 0 >= $247 >>> 0) {
       $$5 = $243;
       break L1;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_jjRKS6_($3, (HEAP32[$2 >> 2] | 0) + ($$0479 * 24 | 0) + 12 | 0, 2);
      $265 = __ZNSt3__211char_traitsIcE6lengthEPKc(22269) | 0;
      $266 = HEAP8[$260 >> 0] | 0;
      if (($265 | 0) == (($266 << 24 >> 24 < 0 ? HEAP32[$261 >> 2] | 0 : $266 & 255) | 0)) $$0$i = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEjjPKcj($3, 22269, $265) | 0) == 0; else $$0$i = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $274 = HEAP32[$2 >> 2] | 0;
      $275 = $274 + ($$0479 * 24 | 0) | 0;
      if ($$0$i) {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($275, 22272) | 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc((HEAP32[$2 >> 2] | 0) + ($$0479 * 24 | 0) + 12 | 0, 0, 22275) | 0;
      } else {
       $278 = $274 + ($$0479 * 24 | 0) + 12 | 0;
       if ((HEAP8[$278 + 11 >> 0] | 0) < 0) $284 = HEAP32[$278 >> 2] | 0; else $284 = $278;
       if ((HEAP8[$284 >> 0] | 0) == 40) {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($275, 22277) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc((HEAP32[$2 >> 2] | 0) + ($$0479 * 24 | 0) + 12 | 0, 0, 22275) | 0;
       }
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$2 >> 2] | 0) + ($$0479 * 24 | 0) | 0, 22279) | 0;
      $290 = HEAP32[$249 >> 2] | 0;
      $292 = (HEAP32[$2 >> 2] | 0) + ($$0479 * 24 | 0) | 0;
      $293 = $290 + -12 | 0;
      $294 = HEAP32[$293 >> 2] | 0;
      if (($294 | 0) == (HEAP32[$290 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($290 + -16 | 0, $292); else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($294, $292);
       HEAP32[$293 >> 2] = (HEAP32[$293 >> 2] | 0) + 24;
      }
      $$0479 = $$0479 + 1 | 0;
     }
     break;
    }
   case 80:
    {
     $302 = $2 + 4 | 0;
     $306 = ((HEAP32[$302 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
     $307 = $0 + 1 | 0;
     $308 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($307, $1, $2) | 0;
     $312 = ((HEAP32[$302 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
     if (($308 | 0) == ($307 | 0)) {
      $$5 = $0;
      break L1;
     }
     $$sroa$0$0$copyload$i531605 = HEAP32[$2 + 12 >> 2] | 0;
     HEAP32[$3 >> 2] = $$sroa$0$0$copyload$i531605;
     $314 = $2 + 20 | 0;
     $315 = HEAP32[$314 >> 2] | 0;
     if ($315 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
      HEAP32[$315 >> 2] = 0;
      HEAP32[$315 + 4 >> 2] = 0;
      HEAP32[$315 + 8 >> 2] = 0;
      HEAP32[$315 + 12 >> 2] = $$sroa$0$0$copyload$i531605;
      HEAP32[$314 >> 2] = (HEAP32[$314 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($2 + 16 | 0, $3);
     $325 = $3 + 11 | 0;
     $326 = $3 + 4 | 0;
     $327 = $3 + 11 | 0;
     $328 = $3 + 4 | 0;
     $$0478 = $306;
     while (1) {
      if ($$0478 >>> 0 >= $312 >>> 0) {
       $$5 = $308;
       break L1;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_jjRKS6_($3, (HEAP32[$2 >> 2] | 0) + ($$0478 * 24 | 0) + 12 | 0, 2);
      $332 = __ZNSt3__211char_traitsIcE6lengthEPKc(22269) | 0;
      $333 = HEAP8[$325 >> 0] | 0;
      if (($332 | 0) == (($333 << 24 >> 24 < 0 ? HEAP32[$326 >> 2] | 0 : $333 & 255) | 0)) $$0$i533 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEjjPKcj($3, 22269, $332) | 0) == 0; else $$0$i533 = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $341 = HEAP32[$2 >> 2] | 0;
      $342 = $341 + ($$0478 * 24 | 0) | 0;
      if ($$0$i533) {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($342, 22272) | 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc((HEAP32[$2 >> 2] | 0) + ($$0478 * 24 | 0) + 12 | 0, 0, 22275) | 0;
      } else {
       $345 = $341 + ($$0478 * 24 | 0) + 12 | 0;
       if ((HEAP8[$345 + 11 >> 0] | 0) < 0) $351 = HEAP32[$345 >> 2] | 0; else $351 = $345;
       if ((HEAP8[$351 >> 0] | 0) == 40) {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($342, 22277) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc((HEAP32[$2 >> 2] | 0) + ($$0478 * 24 | 0) + 12 | 0, 0, 22275) | 0;
       }
      }
      if ((HEAP8[$307 >> 0] | 0) == 85) {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_jjRKS6_($3, (HEAP32[$2 >> 2] | 0) + ($$0478 * 24 | 0) | 0, 12);
       $361 = __ZNSt3__211char_traitsIcE6lengthEPKc(22282) | 0;
       $362 = HEAP8[$327 >> 0] | 0;
       if (($361 | 0) == (($362 << 24 >> 24 < 0 ? HEAP32[$328 >> 2] | 0 : $362 & 255) | 0)) $$ph = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEjjPKcj($3, 22282, $361) | 0) != 0; else $$ph = 1;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
       $371 = (HEAP32[$2 >> 2] | 0) + ($$0478 * 24 | 0) | 0;
       if ($$ph) {
        $372 = $371;
        label = 113;
       } else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7replaceEjjPKc($371);
      } else {
       $372 = (HEAP32[$2 >> 2] | 0) + ($$0478 * 24 | 0) | 0;
       label = 113;
      }
      if ((label | 0) == 113) {
       label = 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($372, 22295) | 0;
      }
      $373 = HEAP32[$314 >> 2] | 0;
      $375 = (HEAP32[$2 >> 2] | 0) + ($$0478 * 24 | 0) | 0;
      $376 = $373 + -12 | 0;
      $377 = HEAP32[$376 >> 2] | 0;
      if (($377 | 0) == (HEAP32[$373 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($373 + -16 | 0, $375); else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($377, $375);
       HEAP32[$376 >> 2] = (HEAP32[$376 >> 2] | 0) + 24;
      }
      $$0478 = $$0478 + 1 | 0;
     }
     break;
    }
   case 82:
    {
     $385 = $2 + 4 | 0;
     $389 = ((HEAP32[$385 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
     $390 = $0 + 1 | 0;
     $391 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($390, $1, $2) | 0;
     $395 = ((HEAP32[$385 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
     if (($391 | 0) == ($390 | 0)) {
      $$5 = $0;
      break L1;
     }
     $$sroa$0$0$copyload$i538604 = HEAP32[$2 + 12 >> 2] | 0;
     HEAP32[$3 >> 2] = $$sroa$0$0$copyload$i538604;
     $397 = $2 + 20 | 0;
     $398 = HEAP32[$397 >> 2] | 0;
     if ($398 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
      HEAP32[$398 >> 2] = 0;
      HEAP32[$398 + 4 >> 2] = 0;
      HEAP32[$398 + 8 >> 2] = 0;
      HEAP32[$398 + 12 >> 2] = $$sroa$0$0$copyload$i538604;
      HEAP32[$397 >> 2] = (HEAP32[$397 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($2 + 16 | 0, $3);
     $408 = $3 + 11 | 0;
     $409 = $3 + 4 | 0;
     $$0444 = $389;
     while (1) {
      if ($$0444 >>> 0 >= $395 >>> 0) {
       $$5 = $391;
       break L1;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_jjRKS6_($3, (HEAP32[$2 >> 2] | 0) + ($$0444 * 24 | 0) + 12 | 0, 2);
      $413 = __ZNSt3__211char_traitsIcE6lengthEPKc(22269) | 0;
      $414 = HEAP8[$408 >> 0] | 0;
      if (($413 | 0) == (($414 << 24 >> 24 < 0 ? HEAP32[$409 >> 2] | 0 : $414 & 255) | 0)) $$0$i540 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEjjPKcj($3, 22269, $413) | 0) == 0; else $$0$i540 = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $422 = HEAP32[$2 >> 2] | 0;
      $423 = $422 + ($$0444 * 24 | 0) | 0;
      if ($$0$i540) {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($423, 22272) | 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc((HEAP32[$2 >> 2] | 0) + ($$0444 * 24 | 0) + 12 | 0, 0, 22275) | 0;
      } else {
       $426 = $422 + ($$0444 * 24 | 0) + 12 | 0;
       if ((HEAP8[$426 + 11 >> 0] | 0) < 0) $432 = HEAP32[$426 >> 2] | 0; else $432 = $426;
       if ((HEAP8[$432 >> 0] | 0) == 40) {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($423, 22277) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc((HEAP32[$2 >> 2] | 0) + ($$0444 * 24 | 0) + 12 | 0, 0, 22275) | 0;
       }
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$2 >> 2] | 0) + ($$0444 * 24 | 0) | 0, 22297) | 0;
      $438 = HEAP32[$397 >> 2] | 0;
      $440 = (HEAP32[$2 >> 2] | 0) + ($$0444 * 24 | 0) | 0;
      $441 = $438 + -12 | 0;
      $442 = HEAP32[$441 >> 2] | 0;
      if (($442 | 0) == (HEAP32[$438 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($438 + -16 | 0, $440); else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($442, $440);
       HEAP32[$441 >> 2] = (HEAP32[$441 >> 2] | 0) + 24;
      }
      $$0444 = $$0444 + 1 | 0;
     }
     break;
    }
   case 84:
    {
     $450 = $2 + 4 | 0;
     $454 = ((HEAP32[$450 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
     $455 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
     $459 = ((HEAP32[$450 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
     if (($455 | 0) == ($0 | 0)) {
      $$5 = $0;
      break L1;
     }
     $461 = $2 + 16 | 0;
     $$sroa$0$0$$sroa_idx$i544 = $2 + 12 | 0;
     $$sroa$0$0$copyload$i545602 = HEAP32[$$sroa$0$0$$sroa_idx$i544 >> 2] | 0;
     HEAP32[$3 >> 2] = $$sroa$0$0$copyload$i545602;
     $462 = $2 + 20 | 0;
     $463 = HEAP32[$462 >> 2] | 0;
     $464 = $2 + 24 | 0;
     if ($463 >>> 0 < (HEAP32[$464 >> 2] | 0) >>> 0) {
      HEAP32[$463 >> 2] = 0;
      HEAP32[$463 + 4 >> 2] = 0;
      HEAP32[$463 + 8 >> 2] = 0;
      HEAP32[$463 + 12 >> 2] = $$sroa$0$0$copyload$i545602;
      HEAP32[$462 >> 2] = (HEAP32[$462 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($461, $3);
     $$0438 = $454;
     while (1) {
      if ($$0438 >>> 0 >= $459 >>> 0) break;
      $478 = HEAP32[$462 >> 2] | 0;
      $480 = (HEAP32[$2 >> 2] | 0) + ($$0438 * 24 | 0) | 0;
      $481 = $478 + -12 | 0;
      $482 = HEAP32[$481 >> 2] | 0;
      if (($482 | 0) == (HEAP32[$478 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($478 + -16 | 0, $480); else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($482, $480);
       HEAP32[$481 >> 2] = (HEAP32[$481 >> 2] | 0) + 24;
      }
      $$0438 = $$0438 + 1 | 0;
     }
     if (!(($459 | 0) == ($454 + 1 | 0) & (HEAP8[$2 + 63 >> 0] | 0) != 0)) {
      $$5 = $455;
      break L1;
     }
     $490 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($455, $1, $2) | 0;
     if (($490 | 0) == ($455 | 0)) {
      $$5 = $455;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, (HEAP32[$450 >> 2] | 0) + -24 | 0);
     $494 = HEAP32[$450 >> 2] | 0;
     $$0$i$i$idx$i548 = 0;
     while (1) {
      if (($$0$i$i$idx$i548 | 0) == -1) break;
      $$0$i$i$add$i549 = $$0$i$i$idx$i548 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($494 + ($$0$i$i$add$i549 * 24 | 0) | 0);
      $$0$i$i$idx$i548 = $$0$i$i$add$i549;
     }
     HEAP32[$450 >> 2] = $494 + -24;
     $499 = HEAP8[$3 + 11 >> 0] | 0;
     $500 = $499 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($494 + -48 | 0, $500 ? HEAP32[$3 >> 2] | 0 : $3, $500 ? HEAP32[$3 + 4 >> 2] | 0 : $499 & 255) | 0;
     $508 = (HEAP32[$450 >> 2] | 0) + -24 | 0;
     HEAP32[$5 >> 2] = HEAP32[$$sroa$0$0$$sroa_idx$i544 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($4, $508, $5);
     $509 = HEAP32[$462 >> 2] | 0;
     if ($509 >>> 0 < (HEAP32[$464 >> 2] | 0) >>> 0) {
      HEAP32[$509 >> 2] = 0;
      $513 = $509 + 4 | 0;
      HEAP32[$513 >> 2] = 0;
      $514 = $509 + 8 | 0;
      HEAP32[$514 >> 2] = 0;
      HEAP32[$509 + 12 >> 2] = HEAP32[$4 + 12 >> 2];
      HEAP32[$509 >> 2] = HEAP32[$4 >> 2];
      $518 = $4 + 4 | 0;
      HEAP32[$513 >> 2] = HEAP32[$518 >> 2];
      $520 = $4 + 8 | 0;
      HEAP32[$514 >> 2] = HEAP32[$520 >> 2];
      HEAP32[$520 >> 2] = 0;
      HEAP32[$518 >> 2] = 0;
      HEAP32[$4 >> 2] = 0;
      HEAP32[$462 >> 2] = (HEAP32[$462 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE21__push_back_slow_pathIS6_EEvOT_($461, $4);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$5 = $490;
     break L1;
     break;
    }
   case 85:
    {
     $524 = $0 + 1 | 0;
     if (($524 | 0) == ($1 | 0)) {
      $$5 = $0;
      break L1;
     }
     $526 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($524, $1, $2) | 0;
     if (($526 | 0) == ($524 | 0)) {
      $$5 = $0;
      break L1;
     }
     $528 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($526, $1, $2) | 0;
     if (($528 | 0) == ($526 | 0)) {
      $$5 = $0;
      break L1;
     }
     $530 = $2 + 4 | 0;
     $531 = HEAP32[$530 >> 2] | 0;
     if ((($531 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      $$5 = $0;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $531 + -24 | 0);
     $538 = HEAP32[$530 >> 2] | 0;
     $$0$i$i$idx$i560 = 0;
     while (1) {
      if (($$0$i$i$idx$i560 | 0) == -1) break;
      $$0$i$i$add$i561 = $$0$i$i$idx$i560 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($538 + ($$0$i$i$add$i561 * 24 | 0) | 0);
      $$0$i$i$idx$i560 = $$0$i$i$add$i561;
     }
     HEAP32[$530 >> 2] = $538 + -24;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_jjRKS6_($4, $538 + -48 | 0, 9);
     $542 = __ZNSt3__211char_traitsIcE6lengthEPKc(22299) | 0;
     $544 = HEAP8[$4 + 11 >> 0] | 0;
     if (($542 | 0) == (($544 << 24 >> 24 < 0 ? HEAP32[$4 + 4 >> 2] | 0 : $544 & 255) | 0)) {
      $552 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEjjPKcj($4, 22299, $542) | 0) == 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
      if ($552) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($4, (HEAP32[$530 >> 2] | 0) + -24 | 0);
       $571 = HEAP32[$530 >> 2] | 0;
       $$0$i$i$idx$i568 = 0;
       while (1) {
        if (($$0$i$i$idx$i568 | 0) == -1) break;
        $$0$i$i$add$i569 = $$0$i$i$idx$i568 + -1 | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($571 + ($$0$i$i$add$i569 * 24 | 0) | 0);
        $$0$i$i$idx$i568 = $$0$i$i$add$i569;
       }
       HEAP32[$530 >> 2] = $571 + -24;
       $574 = $4 + 11 | 0;
       $575 = HEAP8[$574 >> 0] | 0;
       $576 = $575 << 24 >> 24 < 0;
       $578 = $4 + 4 | 0;
       $581 = $576 ? HEAP32[$4 >> 2] | 0 : $4;
       $585 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($581 + 9 | 0, $581 + ($576 ? HEAP32[$578 >> 2] | 0 : $575 & 255) | 0, $2) | 0;
       if (($585 | 0) == (((HEAP8[$574 >> 0] | 0) < 0 ? HEAP32[$4 >> 2] | 0 : $4) + 9 | 0)) {
        __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_($7, $3, 22309);
        $611 = HEAP8[$574 >> 0] | 0;
        $612 = $611 << 24 >> 24 < 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($7, $612 ? HEAP32[$4 >> 2] | 0 : $4, $612 ? HEAP32[$578 >> 2] | 0 : $611 & 255) | 0;
        HEAP32[$11 >> 2] = HEAP32[$7 >> 2];
        HEAP32[$11 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
        HEAP32[$11 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
        $$0$i$i$i582 = 0;
        while (1) {
         if (($$0$i$i$i582 | 0) == 3) break;
         HEAP32[$7 + ($$0$i$i$i582 << 2) >> 2] = 0;
         $$0$i$i$i582 = $$0$i$i$i582 + 1 | 0;
        }
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($5, $11);
        $621 = HEAP32[$530 >> 2] | 0;
        if ($621 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($621, $5);
         HEAP32[$530 >> 2] = (HEAP32[$530 >> 2] | 0) + 24;
        } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $5);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($11);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
       } else {
        __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_($9, $3, 22311);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($10, (HEAP32[$530 >> 2] | 0) + -24 | 0);
        $595 = HEAP8[$10 + 11 >> 0] | 0;
        $596 = $595 << 24 >> 24 < 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($9, $596 ? HEAP32[$10 >> 2] | 0 : $10, $596 ? HEAP32[$10 + 4 >> 2] | 0 : $595 & 255) | 0;
        HEAP32[$7 >> 2] = HEAP32[$9 >> 2];
        HEAP32[$7 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
        HEAP32[$7 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
        $$0$i$i$i575 = 0;
        while (1) {
         if (($$0$i$i$i575 | 0) == 3) break;
         HEAP32[$9 + ($$0$i$i$i575 << 2) >> 2] = 0;
         $$0$i$i$i575 = $$0$i$i$i575 + 1 | 0;
        }
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($7, 22313) | 0;
        HEAP32[$8 >> 2] = HEAP32[$7 >> 2];
        HEAP32[$8 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
        HEAP32[$8 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
        $$0$i$i$i579 = 0;
        while (1) {
         if (($$0$i$i$i579 | 0) == 3) break;
         HEAP32[$7 + ($$0$i$i$i579 << 2) >> 2] = 0;
         $$0$i$i$i579 = $$0$i$i$i579 + 1 | 0;
        }
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($5, $8);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$530 >> 2] | 0) + -24 | 0, $5);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($10);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
      } else label = 167;
     } else {
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
      label = 167;
     }
     if ((label | 0) == 167) {
      __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_($5, $3, 22309);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($7, (HEAP32[$530 >> 2] | 0) + -24 | 0);
      $556 = HEAP8[$7 + 11 >> 0] | 0;
      $557 = $556 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($5, $557 ? HEAP32[$7 >> 2] | 0 : $7, $557 ? HEAP32[$7 + 4 >> 2] | 0 : $556 & 255) | 0;
      HEAP32[$6 >> 2] = HEAP32[$5 >> 2];
      HEAP32[$6 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
      HEAP32[$6 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
      $$0$i$i$i = 0;
      while (1) {
       if (($$0$i$i$i | 0) == 3) break;
       HEAP32[$5 + ($$0$i$i$i << 2) >> 2] = 0;
       $$0$i$i$i = $$0$i$i$i + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($4, $6);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$530 >> 2] | 0) + -24 | 0, $4);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
     }
     $628 = (HEAP32[$530 >> 2] | 0) + -24 | 0;
     HEAP32[$5 >> 2] = HEAP32[$2 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($4, $628, $5);
     $629 = $2 + 20 | 0;
     $630 = HEAP32[$629 >> 2] | 0;
     if ($630 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
      HEAP32[$630 >> 2] = 0;
      $635 = $630 + 4 | 0;
      HEAP32[$635 >> 2] = 0;
      $636 = $630 + 8 | 0;
      HEAP32[$636 >> 2] = 0;
      HEAP32[$630 + 12 >> 2] = HEAP32[$4 + 12 >> 2];
      HEAP32[$630 >> 2] = HEAP32[$4 >> 2];
      $640 = $4 + 4 | 0;
      HEAP32[$635 >> 2] = HEAP32[$640 >> 2];
      $642 = $4 + 8 | 0;
      HEAP32[$636 >> 2] = HEAP32[$642 >> 2];
      HEAP32[$642 >> 2] = 0;
      HEAP32[$640 >> 2] = 0;
      HEAP32[$4 >> 2] = 0;
      HEAP32[$629 >> 2] = (HEAP32[$629 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $4);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$5 = $528;
     break L1;
     break;
    }
   case 83:
    {
     $647 = $0 + 1 | 0;
     if (($647 | 0) != ($1 | 0)) if ((HEAP8[$647 >> 0] | 0) == 116) {
      $651 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      if (($651 | 0) == ($0 | 0)) {
       $$5 = $0;
       break L1;
      }
      $655 = HEAP32[$2 + 4 >> 2] | 0;
      if ((HEAP32[$2 >> 2] | 0) == ($655 | 0)) {
       $$5 = $0;
       break L1;
      }
      HEAP32[$4 >> 2] = HEAP32[$2 + 12 >> 2];
      __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($3, $655 + -24 | 0, $4);
      $658 = $2 + 20 | 0;
      $659 = HEAP32[$658 >> 2] | 0;
      if ($659 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
       HEAP32[$659 >> 2] = 0;
       $664 = $659 + 4 | 0;
       HEAP32[$664 >> 2] = 0;
       $665 = $659 + 8 | 0;
       HEAP32[$665 >> 2] = 0;
       HEAP32[$659 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
       HEAP32[$659 >> 2] = HEAP32[$3 >> 2];
       $669 = $3 + 4 | 0;
       HEAP32[$664 >> 2] = HEAP32[$669 >> 2];
       $671 = $3 + 8 | 0;
       HEAP32[$665 >> 2] = HEAP32[$671 >> 2];
       HEAP32[$671 >> 2] = 0;
       HEAP32[$669 >> 2] = 0;
       HEAP32[$3 >> 2] = 0;
       HEAP32[$658 >> 2] = (HEAP32[$658 >> 2] | 0) + 16;
      } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $3);
      __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($3);
      $$5 = $651;
      break L1;
     }
     $676 = __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
     if (($676 | 0) == ($0 | 0)) {
      $$5 = $0;
      break L1;
     }
     $678 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($676, $1, $2) | 0;
     if (($678 | 0) == ($676 | 0)) {
      $$5 = $676;
      break L1;
     }
     $680 = $2 + 4 | 0;
     $681 = HEAP32[$680 >> 2] | 0;
     if ((($681 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      $$5 = $676;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $681 + -24 | 0);
     $688 = HEAP32[$680 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($688 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$680 >> 2] = $688 + -24;
     $693 = HEAP8[$3 + 11 >> 0] | 0;
     $694 = $693 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($688 + -48 | 0, $694 ? HEAP32[$3 >> 2] | 0 : $3, $694 ? HEAP32[$3 + 4 >> 2] | 0 : $693 & 255) | 0;
     $702 = (HEAP32[$680 >> 2] | 0) + -24 | 0;
     HEAP32[$5 >> 2] = HEAP32[$2 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($4, $702, $5);
     $703 = $2 + 20 | 0;
     $704 = HEAP32[$703 >> 2] | 0;
     if ($704 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
      HEAP32[$704 >> 2] = 0;
      $709 = $704 + 4 | 0;
      HEAP32[$709 >> 2] = 0;
      $710 = $704 + 8 | 0;
      HEAP32[$710 >> 2] = 0;
      HEAP32[$704 + 12 >> 2] = HEAP32[$4 + 12 >> 2];
      HEAP32[$704 >> 2] = HEAP32[$4 >> 2];
      $714 = $4 + 4 | 0;
      HEAP32[$709 >> 2] = HEAP32[$714 >> 2];
      $716 = $4 + 8 | 0;
      HEAP32[$710 >> 2] = HEAP32[$716 >> 2];
      HEAP32[$716 >> 2] = 0;
      HEAP32[$714 >> 2] = 0;
      HEAP32[$4 >> 2] = 0;
      HEAP32[$703 >> 2] = (HEAP32[$703 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $4);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$5 = $678;
     break L1;
     break;
    }
   case 68:
    {
     $721 = $0 + 1 | 0;
     if (($721 | 0) != ($1 | 0)) switch (HEAP8[$721 >> 0] | 0) {
     case 112:
      {
       $725 = $2 + 4 | 0;
       $729 = ((HEAP32[$725 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
       $730 = $0 + 2 | 0;
       $731 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($730, $1, $2) | 0;
       $735 = ((HEAP32[$725 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
       if (($731 | 0) == ($730 | 0)) break L59;
       $$sroa$0$0$copyload$i490598 = HEAP32[$2 + 12 >> 2] | 0;
       HEAP32[$3 >> 2] = $$sroa$0$0$copyload$i490598;
       $737 = $2 + 20 | 0;
       $738 = HEAP32[$737 >> 2] | 0;
       if ($738 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
        HEAP32[$738 >> 2] = 0;
        HEAP32[$738 + 4 >> 2] = 0;
        HEAP32[$738 + 8 >> 2] = 0;
        HEAP32[$738 + 12 >> 2] = $$sroa$0$0$copyload$i490598;
        HEAP32[$737 >> 2] = (HEAP32[$737 >> 2] | 0) + 16;
       } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($2 + 16 | 0, $3);
       $$0 = $729;
       while (1) {
        if ($$0 >>> 0 >= $735 >>> 0) {
         $$5 = $731;
         break L1;
        }
        $749 = HEAP32[$737 >> 2] | 0;
        $751 = (HEAP32[$2 >> 2] | 0) + ($$0 * 24 | 0) | 0;
        $752 = $749 + -12 | 0;
        $753 = HEAP32[$752 >> 2] | 0;
        if (($753 | 0) == (HEAP32[$749 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($749 + -16 | 0, $751); else {
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($753, $751);
         HEAP32[$752 >> 2] = (HEAP32[$752 >> 2] | 0) + 24;
        }
        $$0 = $$0 + 1 | 0;
       }
       break;
      }
     case 84:
     case 116:
      {
       $761 = __ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
       if (($761 | 0) == ($0 | 0)) break L59;
       $765 = HEAP32[$2 + 4 >> 2] | 0;
       if ((HEAP32[$2 >> 2] | 0) == ($765 | 0)) {
        $$5 = $0;
        break L1;
       }
       HEAP32[$4 >> 2] = HEAP32[$2 + 12 >> 2];
       __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($3, $765 + -24 | 0, $4);
       $768 = $2 + 20 | 0;
       $769 = HEAP32[$768 >> 2] | 0;
       if ($769 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
        HEAP32[$769 >> 2] = 0;
        $774 = $769 + 4 | 0;
        HEAP32[$774 >> 2] = 0;
        $775 = $769 + 8 | 0;
        HEAP32[$775 >> 2] = 0;
        HEAP32[$769 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
        HEAP32[$769 >> 2] = HEAP32[$3 >> 2];
        $779 = $3 + 4 | 0;
        HEAP32[$774 >> 2] = HEAP32[$779 >> 2];
        $781 = $3 + 8 | 0;
        HEAP32[$775 >> 2] = HEAP32[$781 >> 2];
        HEAP32[$781 >> 2] = 0;
        HEAP32[$779 >> 2] = 0;
        HEAP32[$3 >> 2] = 0;
        HEAP32[$768 >> 2] = (HEAP32[$768 >> 2] | 0) + 16;
       } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $3);
       __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($3);
       $$5 = $761;
       break L1;
       break;
      }
     case 118:
      {
       $786 = __ZN10__cxxabiv112_GLOBAL__N_117parse_vector_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
       if (($786 | 0) == ($0 | 0)) break L59;
       $790 = HEAP32[$2 + 4 >> 2] | 0;
       if ((HEAP32[$2 >> 2] | 0) == ($790 | 0)) {
        $$5 = $0;
        break L1;
       }
       HEAP32[$4 >> 2] = HEAP32[$2 + 12 >> 2];
       __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($3, $790 + -24 | 0, $4);
       $793 = $2 + 20 | 0;
       $794 = HEAP32[$793 >> 2] | 0;
       if ($794 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
        HEAP32[$794 >> 2] = 0;
        $799 = $794 + 4 | 0;
        HEAP32[$799 >> 2] = 0;
        $800 = $794 + 8 | 0;
        HEAP32[$800 >> 2] = 0;
        HEAP32[$794 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
        HEAP32[$794 >> 2] = HEAP32[$3 >> 2];
        $804 = $3 + 4 | 0;
        HEAP32[$799 >> 2] = HEAP32[$804 >> 2];
        $806 = $3 + 8 | 0;
        HEAP32[$800 >> 2] = HEAP32[$806 >> 2];
        HEAP32[$806 >> 2] = 0;
        HEAP32[$804 >> 2] = 0;
        HEAP32[$3 >> 2] = 0;
        HEAP32[$793 >> 2] = (HEAP32[$793 >> 2] | 0) + 16;
       } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $3);
       __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($3);
       $$5 = $786;
       break L1;
       break;
      }
     default:
      break L59;
     }
     break;
    }
   default:
    {}
   } while (0);
   $811 = __ZN10__cxxabiv112_GLOBAL__N_118parse_builtin_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
   if (($811 | 0) == ($0 | 0)) {
    $813 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
    if (($813 | 0) == ($0 | 0)) $$5 = $0; else {
     $817 = HEAP32[$2 + 4 >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($817 | 0)) $$5 = $0; else {
      HEAP32[$4 >> 2] = HEAP32[$2 + 12 >> 2];
      __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($3, $817 + -24 | 0, $4);
      $820 = $2 + 20 | 0;
      $821 = HEAP32[$820 >> 2] | 0;
      if ($821 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
       HEAP32[$821 >> 2] = 0;
       $826 = $821 + 4 | 0;
       HEAP32[$826 >> 2] = 0;
       $827 = $821 + 8 | 0;
       HEAP32[$827 >> 2] = 0;
       HEAP32[$821 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
       HEAP32[$821 >> 2] = HEAP32[$3 >> 2];
       $831 = $3 + 4 | 0;
       HEAP32[$826 >> 2] = HEAP32[$831 >> 2];
       $833 = $3 + 8 | 0;
       HEAP32[$827 >> 2] = HEAP32[$833 >> 2];
       HEAP32[$833 >> 2] = 0;
       HEAP32[$831 >> 2] = 0;
       HEAP32[$3 >> 2] = 0;
       HEAP32[$820 >> 2] = (HEAP32[$820 >> 2] | 0) + 16;
      } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $3);
      __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($3);
      $$5 = $813;
     }
    }
   } else $$5 = $811;
  } else $$5 = $102;
 } while (0);
 STACKTOP = sp;
 return $$5 | 0;
}
function _malloc($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i16$i = 0, $$0187$i = 0, $$0189$i = 0, $$0190$i = 0, $$0191$i = 0, $$0197 = 0, $$0199 = 0, $$02065$i$i = 0, $$0207$lcssa$i$i = 0, $$02074$i$i = 0, $$0211$i$i = 0, $$0212$i$i = 0, $$024372$i = 0, $$0286$i$i = 0, $$028711$i$i = 0, $$0288$lcssa$i$i = 0, $$028810$i$i = 0, $$0294$i$i = 0, $$0295$i$i = 0, $$0340$i = 0, $$034217$i = 0, $$0343$lcssa$i = 0, $$034316$i = 0, $$0345$i = 0, $$0351$i = 0, $$0357$i = 0, $$0358$i = 0, $$0360$i = 0, $$0361$i = 0, $$0367$i = 0, $$1194$i = 0, $$1194$i$be = 0, $$1194$i$ph = 0, $$1196$i = 0, $$1196$i$be = 0, $$1196$i$ph = 0, $$124471$i = 0, $$1290$i$i = 0, $$1290$i$i$be = 0, $$1290$i$i$ph = 0, $$1292$i$i = 0, $$1292$i$i$be = 0, $$1292$i$i$ph = 0, $$1341$i = 0, $$1346$i = 0, $$1362$i = 0, $$1369$i = 0, $$1369$i$be = 0, $$1369$i$ph = 0, $$1373$i = 0, $$1373$i$be = 0, $$1373$i$ph = 0, $$2234243136$i = 0, $$2247$ph$i = 0, $$2253$ph$i = 0, $$2353$i = 0, $$3$i = 0, $$3$i$i = 0, $$3$i203 = 0, $$3$i203218 = 0, $$3348$i = 0, $$3371$i = 0, $$4$lcssa$i = 0, $$420$i = 0, $$420$i$ph = 0, $$4236$i = 0, $$4349$lcssa$i = 0, $$434919$i = 0, $$434919$i$ph = 0, $$4355$i = 0, $$535618$i = 0, $$535618$i$ph = 0, $$723947$i = 0, $$748$i = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i18$iZ2D = 0, $$pre$phi$i209Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi17$i$iZ2D = 0, $$pre$phiZ2D = 0, $1 = 0, $1000 = 0, $1003 = 0, $1008 = 0, $101 = 0, $1014 = 0, $1017 = 0, $1018 = 0, $102 = 0, $1025 = 0, $1037 = 0, $1042 = 0, $1049 = 0, $1050 = 0, $1051 = 0, $1060 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $108 = 0, $112 = 0, $114 = 0, $115 = 0, $117 = 0, $119 = 0, $121 = 0, $123 = 0, $125 = 0, $127 = 0, $129 = 0, $134 = 0, $14 = 0, $140 = 0, $143 = 0, $146 = 0, $149 = 0, $150 = 0, $151 = 0, $153 = 0, $156 = 0, $158 = 0, $16 = 0, $161 = 0, $163 = 0, $166 = 0, $169 = 0, $17 = 0, $170 = 0, $172 = 0, $173 = 0, $175 = 0, $176 = 0, $178 = 0, $179 = 0, $18 = 0, $184 = 0, $185 = 0, $19 = 0, $193 = 0, $198 = 0, $20 = 0, $202 = 0, $208 = 0, $215 = 0, $219 = 0, $228 = 0, $229 = 0, $231 = 0, $232 = 0, $236 = 0, $237 = 0, $245 = 0, $246 = 0, $247 = 0, $249 = 0, $250 = 0, $255 = 0, $256 = 0, $259 = 0, $261 = 0, $264 = 0, $269 = 0, $27 = 0, $276 = 0, $286 = 0, $290 = 0, $299 = 0, $30 = 0, $302 = 0, $306 = 0, $308 = 0, $309 = 0, $311 = 0, $313 = 0, $315 = 0, $317 = 0, $319 = 0, $321 = 0, $323 = 0, $333 = 0, $334 = 0, $336 = 0, $34 = 0, $341 = 0, $346 = 0, $348 = 0, $351 = 0, $353 = 0, $356 = 0, $358 = 0, $361 = 0, $364 = 0, $365 = 0, $367 = 0, $368 = 0, $37 = 0, $370 = 0, $371 = 0, $373 = 0, $374 = 0, $379 = 0, $380 = 0, $385 = 0, $388 = 0, $393 = 0, $397 = 0, $403 = 0, $41 = 0, $410 = 0, $414 = 0, $422 = 0, $425 = 0, $426 = 0, $427 = 0, $431 = 0, $432 = 0, $438 = 0, $44 = 0, $443 = 0, $444 = 0, $447 = 0, $449 = 0, $452 = 0, $457 = 0, $463 = 0, $465 = 0, $467 = 0, $469 = 0, $47 = 0, $475 = 0, $487 = 0, $49 = 0, $492 = 0, $499 = 0, $50 = 0, $500 = 0, $501 = 0, $510 = 0, $512 = 0, $513 = 0, $515 = 0, $52 = 0, $524 = 0, $528 = 0, $530 = 0, $531 = 0, $532 = 0, $54 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $550 = 0, $552 = 0, $553 = 0, $559 = 0, $56 = 0, $561 = 0, $568 = 0, $570 = 0, $572 = 0, $573 = 0, $574 = 0, $58 = 0, $582 = 0, $583 = 0, $586 = 0, $590 = 0, $593 = 0, $596 = 0, $6 = 0, $60 = 0, $602 = 0, $606 = 0, $610 = 0, $619 = 0, $62 = 0, $620 = 0, $626 = 0, $628 = 0, $632 = 0, $635 = 0, $637 = 0, $64 = 0, $641 = 0, $643 = 0, $648 = 0, $649 = 0, $650 = 0, $656 = 0, $658 = 0, $662 = 0, $664 = 0, $67 = 0, $673 = 0, $675 = 0, $680 = 0, $681 = 0, $682 = 0, $688 = 0, $69 = 0, $690 = 0, $694 = 0, $7 = 0, $70 = 0, $700 = 0, $704 = 0, $71 = 0, $710 = 0, $712 = 0, $718 = 0, $72 = 0, $722 = 0, $723 = 0, $728 = 0, $73 = 0, $734 = 0, $739 = 0, $742 = 0, $743 = 0, $746 = 0, $748 = 0, $750 = 0, $753 = 0, $764 = 0, $769 = 0, $77 = 0, $771 = 0, $774 = 0, $776 = 0, $779 = 0, $782 = 0, $783 = 0, $784 = 0, $786 = 0, $788 = 0, $789 = 0, $791 = 0, $792 = 0, $797 = 0, $798 = 0, $8 = 0, $80 = 0, $807 = 0, $812 = 0, $815 = 0, $816 = 0, $822 = 0, $83 = 0, $830 = 0, $836 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $845 = 0, $846 = 0, $852 = 0, $857 = 0, $858 = 0, $861 = 0, $863 = 0, $866 = 0, $87 = 0, $871 = 0, $877 = 0, $879 = 0, $881 = 0, $882 = 0, $889 = 0, $9 = 0, $901 = 0, $906 = 0, $913 = 0, $914 = 0, $915 = 0, $92 = 0, $923 = 0, $927 = 0, $93 = 0, $931 = 0, $933 = 0, $939 = 0, $940 = 0, $942 = 0, $943 = 0, $945 = 0, $947 = 0, $95 = 0, $952 = 0, $953 = 0, $954 = 0, $96 = 0, $960 = 0, $962 = 0, $968 = 0, $973 = 0, $976 = 0, $977 = 0, $978 = 0, $98 = 0, $982 = 0, $983 = 0, $989 = 0, $994 = 0, $995 = 0, $998 = 0, $spec$select$i205 = 0, $spec$select3$i = 0, $spec$select49$i = 0, label = 0, sp = 0, $962$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 do if ($0 >>> 0 < 245) {
  $6 = $0 >>> 0 < 11 ? 16 : $0 + 11 & -8;
  $7 = $6 >>> 3;
  $8 = HEAP32[6121] | 0;
  $9 = $8 >>> $7;
  if ($9 & 3 | 0) {
   $14 = ($9 & 1 ^ 1) + $7 | 0;
   $16 = 24524 + ($14 << 1 << 2) | 0;
   $17 = $16 + 8 | 0;
   $18 = HEAP32[$17 >> 2] | 0;
   $19 = $18 + 8 | 0;
   $20 = HEAP32[$19 >> 2] | 0;
   do if (($20 | 0) == ($16 | 0)) HEAP32[6121] = $8 & ~(1 << $14); else {
    if ((HEAP32[6125] | 0) >>> 0 > $20 >>> 0) _abort();
    $27 = $20 + 12 | 0;
    if ((HEAP32[$27 >> 2] | 0) == ($18 | 0)) {
     HEAP32[$27 >> 2] = $16;
     HEAP32[$17 >> 2] = $20;
     break;
    } else _abort();
   } while (0);
   $30 = $14 << 3;
   HEAP32[$18 + 4 >> 2] = $30 | 3;
   $34 = $18 + $30 + 4 | 0;
   HEAP32[$34 >> 2] = HEAP32[$34 >> 2] | 1;
   $$0 = $19;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $37 = HEAP32[6123] | 0;
  if ($6 >>> 0 > $37 >>> 0) {
   if ($9 | 0) {
    $41 = 2 << $7;
    $44 = $9 << $7 & ($41 | 0 - $41);
    $47 = ($44 & 0 - $44) + -1 | 0;
    $49 = $47 >>> 12 & 16;
    $50 = $47 >>> $49;
    $52 = $50 >>> 5 & 8;
    $54 = $50 >>> $52;
    $56 = $54 >>> 2 & 4;
    $58 = $54 >>> $56;
    $60 = $58 >>> 1 & 2;
    $62 = $58 >>> $60;
    $64 = $62 >>> 1 & 1;
    $67 = ($52 | $49 | $56 | $60 | $64) + ($62 >>> $64) | 0;
    $69 = 24524 + ($67 << 1 << 2) | 0;
    $70 = $69 + 8 | 0;
    $71 = HEAP32[$70 >> 2] | 0;
    $72 = $71 + 8 | 0;
    $73 = HEAP32[$72 >> 2] | 0;
    do if (($73 | 0) == ($69 | 0)) {
     $77 = $8 & ~(1 << $67);
     HEAP32[6121] = $77;
     $98 = $77;
    } else {
     if ((HEAP32[6125] | 0) >>> 0 > $73 >>> 0) _abort();
     $80 = $73 + 12 | 0;
     if ((HEAP32[$80 >> 2] | 0) == ($71 | 0)) {
      HEAP32[$80 >> 2] = $69;
      HEAP32[$70 >> 2] = $73;
      $98 = $8;
      break;
     } else _abort();
    } while (0);
    $83 = $67 << 3;
    $84 = $83 - $6 | 0;
    HEAP32[$71 + 4 >> 2] = $6 | 3;
    $87 = $71 + $6 | 0;
    HEAP32[$87 + 4 >> 2] = $84 | 1;
    HEAP32[$71 + $83 >> 2] = $84;
    if ($37 | 0) {
     $92 = HEAP32[6126] | 0;
     $93 = $37 >>> 3;
     $95 = 24524 + ($93 << 1 << 2) | 0;
     $96 = 1 << $93;
     if (!($98 & $96)) {
      HEAP32[6121] = $98 | $96;
      $$0199 = $95;
      $$pre$phiZ2D = $95 + 8 | 0;
     } else {
      $101 = $95 + 8 | 0;
      $102 = HEAP32[$101 >> 2] | 0;
      if ((HEAP32[6125] | 0) >>> 0 > $102 >>> 0) _abort(); else {
       $$0199 = $102;
       $$pre$phiZ2D = $101;
      }
     }
     HEAP32[$$pre$phiZ2D >> 2] = $92;
     HEAP32[$$0199 + 12 >> 2] = $92;
     HEAP32[$92 + 8 >> 2] = $$0199;
     HEAP32[$92 + 12 >> 2] = $95;
    }
    HEAP32[6123] = $84;
    HEAP32[6126] = $87;
    $$0 = $72;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $108 = HEAP32[6122] | 0;
   if (!$108) $$0197 = $6; else {
    $112 = ($108 & 0 - $108) + -1 | 0;
    $114 = $112 >>> 12 & 16;
    $115 = $112 >>> $114;
    $117 = $115 >>> 5 & 8;
    $119 = $115 >>> $117;
    $121 = $119 >>> 2 & 4;
    $123 = $119 >>> $121;
    $125 = $123 >>> 1 & 2;
    $127 = $123 >>> $125;
    $129 = $127 >>> 1 & 1;
    $134 = HEAP32[24788 + (($117 | $114 | $121 | $125 | $129) + ($127 >>> $129) << 2) >> 2] | 0;
    $$0189$i = $134;
    $$0190$i = $134;
    $$0191$i = (HEAP32[$134 + 4 >> 2] & -8) - $6 | 0;
    while (1) {
     $140 = HEAP32[$$0189$i + 16 >> 2] | 0;
     if (!$140) {
      $143 = HEAP32[$$0189$i + 20 >> 2] | 0;
      if (!$143) break; else $146 = $143;
     } else $146 = $140;
     $149 = (HEAP32[$146 + 4 >> 2] & -8) - $6 | 0;
     $150 = $149 >>> 0 < $$0191$i >>> 0;
     $$0189$i = $146;
     $$0190$i = $150 ? $146 : $$0190$i;
     $$0191$i = $150 ? $149 : $$0191$i;
    }
    $151 = HEAP32[6125] | 0;
    if ($151 >>> 0 > $$0190$i >>> 0) _abort();
    $153 = $$0190$i + $6 | 0;
    if ($153 >>> 0 <= $$0190$i >>> 0) _abort();
    $156 = HEAP32[$$0190$i + 24 >> 2] | 0;
    $158 = HEAP32[$$0190$i + 12 >> 2] | 0;
    do if (($158 | 0) == ($$0190$i | 0)) {
     $169 = $$0190$i + 20 | 0;
     $170 = HEAP32[$169 >> 2] | 0;
     if (!$170) {
      $172 = $$0190$i + 16 | 0;
      $173 = HEAP32[$172 >> 2] | 0;
      if (!$173) {
       $$3$i = 0;
       break;
      } else {
       $$1194$i$ph = $173;
       $$1196$i$ph = $172;
      }
     } else {
      $$1194$i$ph = $170;
      $$1196$i$ph = $169;
     }
     $$1194$i = $$1194$i$ph;
     $$1196$i = $$1196$i$ph;
     while (1) {
      $175 = $$1194$i + 20 | 0;
      $176 = HEAP32[$175 >> 2] | 0;
      if (!$176) {
       $178 = $$1194$i + 16 | 0;
       $179 = HEAP32[$178 >> 2] | 0;
       if (!$179) break; else {
        $$1194$i$be = $179;
        $$1196$i$be = $178;
       }
      } else {
       $$1194$i$be = $176;
       $$1196$i$be = $175;
      }
      $$1194$i = $$1194$i$be;
      $$1196$i = $$1196$i$be;
     }
     if ($151 >>> 0 > $$1196$i >>> 0) _abort(); else {
      HEAP32[$$1196$i >> 2] = 0;
      $$3$i = $$1194$i;
      break;
     }
    } else {
     $161 = HEAP32[$$0190$i + 8 >> 2] | 0;
     if ($151 >>> 0 > $161 >>> 0) _abort();
     $163 = $161 + 12 | 0;
     if ((HEAP32[$163 >> 2] | 0) != ($$0190$i | 0)) _abort();
     $166 = $158 + 8 | 0;
     if ((HEAP32[$166 >> 2] | 0) == ($$0190$i | 0)) {
      HEAP32[$163 >> 2] = $158;
      HEAP32[$166 >> 2] = $161;
      $$3$i = $158;
      break;
     } else _abort();
    } while (0);
    L78 : do if ($156 | 0) {
     $184 = HEAP32[$$0190$i + 28 >> 2] | 0;
     $185 = 24788 + ($184 << 2) | 0;
     do if (($$0190$i | 0) == (HEAP32[$185 >> 2] | 0)) {
      HEAP32[$185 >> 2] = $$3$i;
      if (!$$3$i) {
       HEAP32[6122] = $108 & ~(1 << $184);
       break L78;
      }
     } else if ((HEAP32[6125] | 0) >>> 0 > $156 >>> 0) _abort(); else {
      $193 = $156 + 16 | 0;
      HEAP32[((HEAP32[$193 >> 2] | 0) == ($$0190$i | 0) ? $193 : $156 + 20 | 0) >> 2] = $$3$i;
      if (!$$3$i) break L78; else break;
     } while (0);
     $198 = HEAP32[6125] | 0;
     if ($198 >>> 0 > $$3$i >>> 0) _abort();
     HEAP32[$$3$i + 24 >> 2] = $156;
     $202 = HEAP32[$$0190$i + 16 >> 2] | 0;
     do if ($202 | 0) if ($198 >>> 0 > $202 >>> 0) _abort(); else {
      HEAP32[$$3$i + 16 >> 2] = $202;
      HEAP32[$202 + 24 >> 2] = $$3$i;
      break;
     } while (0);
     $208 = HEAP32[$$0190$i + 20 >> 2] | 0;
     if ($208 | 0) if ((HEAP32[6125] | 0) >>> 0 > $208 >>> 0) _abort(); else {
      HEAP32[$$3$i + 20 >> 2] = $208;
      HEAP32[$208 + 24 >> 2] = $$3$i;
      break;
     }
    } while (0);
    if ($$0191$i >>> 0 < 16) {
     $215 = $$0191$i + $6 | 0;
     HEAP32[$$0190$i + 4 >> 2] = $215 | 3;
     $219 = $$0190$i + $215 + 4 | 0;
     HEAP32[$219 >> 2] = HEAP32[$219 >> 2] | 1;
    } else {
     HEAP32[$$0190$i + 4 >> 2] = $6 | 3;
     HEAP32[$153 + 4 >> 2] = $$0191$i | 1;
     HEAP32[$153 + $$0191$i >> 2] = $$0191$i;
     if ($37 | 0) {
      $228 = HEAP32[6126] | 0;
      $229 = $37 >>> 3;
      $231 = 24524 + ($229 << 1 << 2) | 0;
      $232 = 1 << $229;
      if (!($232 & $8)) {
       HEAP32[6121] = $232 | $8;
       $$0187$i = $231;
       $$pre$phi$iZ2D = $231 + 8 | 0;
      } else {
       $236 = $231 + 8 | 0;
       $237 = HEAP32[$236 >> 2] | 0;
       if ((HEAP32[6125] | 0) >>> 0 > $237 >>> 0) _abort(); else {
        $$0187$i = $237;
        $$pre$phi$iZ2D = $236;
       }
      }
      HEAP32[$$pre$phi$iZ2D >> 2] = $228;
      HEAP32[$$0187$i + 12 >> 2] = $228;
      HEAP32[$228 + 8 >> 2] = $$0187$i;
      HEAP32[$228 + 12 >> 2] = $231;
     }
     HEAP32[6123] = $$0191$i;
     HEAP32[6126] = $153;
    }
    $$0 = $$0190$i + 8 | 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
  } else $$0197 = $6;
 } else if ($0 >>> 0 > 4294967231) $$0197 = -1; else {
  $245 = $0 + 11 | 0;
  $246 = $245 & -8;
  $247 = HEAP32[6122] | 0;
  if (!$247) $$0197 = $246; else {
   $249 = 0 - $246 | 0;
   $250 = $245 >>> 8;
   if (!$250) $$0357$i = 0; else if ($246 >>> 0 > 16777215) $$0357$i = 31; else {
    $255 = ($250 + 1048320 | 0) >>> 16 & 8;
    $256 = $250 << $255;
    $259 = ($256 + 520192 | 0) >>> 16 & 4;
    $261 = $256 << $259;
    $264 = ($261 + 245760 | 0) >>> 16 & 2;
    $269 = 14 - ($259 | $255 | $264) + ($261 << $264 >>> 15) | 0;
    $$0357$i = $246 >>> ($269 + 7 | 0) & 1 | $269 << 1;
   }
   $276 = HEAP32[24788 + ($$0357$i << 2) >> 2] | 0;
   L122 : do if (!$276) {
    $$2353$i = 0;
    $$3$i203 = 0;
    $$3348$i = $249;
    label = 85;
   } else {
    $$0340$i = 0;
    $$0345$i = $249;
    $$0351$i = $276;
    $$0358$i = $246 << (($$0357$i | 0) == 31 ? 0 : 25 - ($$0357$i >>> 1) | 0);
    $$0361$i = 0;
    while (1) {
     $286 = (HEAP32[$$0351$i + 4 >> 2] & -8) - $246 | 0;
     if ($286 >>> 0 < $$0345$i >>> 0) if (!$286) {
      $$420$i$ph = $$0351$i;
      $$434919$i$ph = 0;
      $$535618$i$ph = $$0351$i;
      label = 89;
      break L122;
     } else {
      $$1341$i = $$0351$i;
      $$1346$i = $286;
     } else {
      $$1341$i = $$0340$i;
      $$1346$i = $$0345$i;
     }
     $290 = HEAP32[$$0351$i + 20 >> 2] | 0;
     $$0351$i = HEAP32[$$0351$i + 16 + ($$0358$i >>> 31 << 2) >> 2] | 0;
     $$1362$i = ($290 | 0) == 0 | ($290 | 0) == ($$0351$i | 0) ? $$0361$i : $290;
     if (!$$0351$i) {
      $$2353$i = $$1362$i;
      $$3$i203 = $$1341$i;
      $$3348$i = $$1346$i;
      label = 85;
      break;
     } else {
      $$0340$i = $$1341$i;
      $$0345$i = $$1346$i;
      $$0358$i = $$0358$i << 1;
      $$0361$i = $$1362$i;
     }
    }
   } while (0);
   if ((label | 0) == 85) {
    if (($$2353$i | 0) == 0 & ($$3$i203 | 0) == 0) {
     $299 = 2 << $$0357$i;
     $302 = ($299 | 0 - $299) & $247;
     if (!$302) {
      $$0197 = $246;
      break;
     }
     $306 = ($302 & 0 - $302) + -1 | 0;
     $308 = $306 >>> 12 & 16;
     $309 = $306 >>> $308;
     $311 = $309 >>> 5 & 8;
     $313 = $309 >>> $311;
     $315 = $313 >>> 2 & 4;
     $317 = $313 >>> $315;
     $319 = $317 >>> 1 & 2;
     $321 = $317 >>> $319;
     $323 = $321 >>> 1 & 1;
     $$3$i203218 = 0;
     $$4355$i = HEAP32[24788 + (($311 | $308 | $315 | $319 | $323) + ($321 >>> $323) << 2) >> 2] | 0;
    } else {
     $$3$i203218 = $$3$i203;
     $$4355$i = $$2353$i;
    }
    if (!$$4355$i) {
     $$4$lcssa$i = $$3$i203218;
     $$4349$lcssa$i = $$3348$i;
    } else {
     $$420$i$ph = $$3$i203218;
     $$434919$i$ph = $$3348$i;
     $$535618$i$ph = $$4355$i;
     label = 89;
    }
   }
   if ((label | 0) == 89) {
    $$420$i = $$420$i$ph;
    $$434919$i = $$434919$i$ph;
    $$535618$i = $$535618$i$ph;
    while (1) {
     $333 = (HEAP32[$$535618$i + 4 >> 2] & -8) - $246 | 0;
     $334 = $333 >>> 0 < $$434919$i >>> 0;
     $spec$select$i205 = $334 ? $333 : $$434919$i;
     $spec$select3$i = $334 ? $$535618$i : $$420$i;
     $336 = HEAP32[$$535618$i + 16 >> 2] | 0;
     if (!$336) $341 = HEAP32[$$535618$i + 20 >> 2] | 0; else $341 = $336;
     if (!$341) {
      $$4$lcssa$i = $spec$select3$i;
      $$4349$lcssa$i = $spec$select$i205;
      break;
     } else {
      $$420$i = $spec$select3$i;
      $$434919$i = $spec$select$i205;
      $$535618$i = $341;
     }
    }
   }
   if (!$$4$lcssa$i) $$0197 = $246; else if ($$4349$lcssa$i >>> 0 < ((HEAP32[6123] | 0) - $246 | 0) >>> 0) {
    $346 = HEAP32[6125] | 0;
    if ($346 >>> 0 > $$4$lcssa$i >>> 0) _abort();
    $348 = $$4$lcssa$i + $246 | 0;
    if ($348 >>> 0 <= $$4$lcssa$i >>> 0) _abort();
    $351 = HEAP32[$$4$lcssa$i + 24 >> 2] | 0;
    $353 = HEAP32[$$4$lcssa$i + 12 >> 2] | 0;
    do if (($353 | 0) == ($$4$lcssa$i | 0)) {
     $364 = $$4$lcssa$i + 20 | 0;
     $365 = HEAP32[$364 >> 2] | 0;
     if (!$365) {
      $367 = $$4$lcssa$i + 16 | 0;
      $368 = HEAP32[$367 >> 2] | 0;
      if (!$368) {
       $$3371$i = 0;
       break;
      } else {
       $$1369$i$ph = $368;
       $$1373$i$ph = $367;
      }
     } else {
      $$1369$i$ph = $365;
      $$1373$i$ph = $364;
     }
     $$1369$i = $$1369$i$ph;
     $$1373$i = $$1373$i$ph;
     while (1) {
      $370 = $$1369$i + 20 | 0;
      $371 = HEAP32[$370 >> 2] | 0;
      if (!$371) {
       $373 = $$1369$i + 16 | 0;
       $374 = HEAP32[$373 >> 2] | 0;
       if (!$374) break; else {
        $$1369$i$be = $374;
        $$1373$i$be = $373;
       }
      } else {
       $$1369$i$be = $371;
       $$1373$i$be = $370;
      }
      $$1369$i = $$1369$i$be;
      $$1373$i = $$1373$i$be;
     }
     if ($346 >>> 0 > $$1373$i >>> 0) _abort(); else {
      HEAP32[$$1373$i >> 2] = 0;
      $$3371$i = $$1369$i;
      break;
     }
    } else {
     $356 = HEAP32[$$4$lcssa$i + 8 >> 2] | 0;
     if ($346 >>> 0 > $356 >>> 0) _abort();
     $358 = $356 + 12 | 0;
     if ((HEAP32[$358 >> 2] | 0) != ($$4$lcssa$i | 0)) _abort();
     $361 = $353 + 8 | 0;
     if ((HEAP32[$361 >> 2] | 0) == ($$4$lcssa$i | 0)) {
      HEAP32[$358 >> 2] = $353;
      HEAP32[$361 >> 2] = $356;
      $$3371$i = $353;
      break;
     } else _abort();
    } while (0);
    L176 : do if (!$351) $469 = $247; else {
     $379 = HEAP32[$$4$lcssa$i + 28 >> 2] | 0;
     $380 = 24788 + ($379 << 2) | 0;
     do if (($$4$lcssa$i | 0) == (HEAP32[$380 >> 2] | 0)) {
      HEAP32[$380 >> 2] = $$3371$i;
      if (!$$3371$i) {
       $385 = $247 & ~(1 << $379);
       HEAP32[6122] = $385;
       $469 = $385;
       break L176;
      }
     } else if ((HEAP32[6125] | 0) >>> 0 > $351 >>> 0) _abort(); else {
      $388 = $351 + 16 | 0;
      HEAP32[((HEAP32[$388 >> 2] | 0) == ($$4$lcssa$i | 0) ? $388 : $351 + 20 | 0) >> 2] = $$3371$i;
      if (!$$3371$i) {
       $469 = $247;
       break L176;
      } else break;
     } while (0);
     $393 = HEAP32[6125] | 0;
     if ($393 >>> 0 > $$3371$i >>> 0) _abort();
     HEAP32[$$3371$i + 24 >> 2] = $351;
     $397 = HEAP32[$$4$lcssa$i + 16 >> 2] | 0;
     do if ($397 | 0) if ($393 >>> 0 > $397 >>> 0) _abort(); else {
      HEAP32[$$3371$i + 16 >> 2] = $397;
      HEAP32[$397 + 24 >> 2] = $$3371$i;
      break;
     } while (0);
     $403 = HEAP32[$$4$lcssa$i + 20 >> 2] | 0;
     if (!$403) $469 = $247; else if ((HEAP32[6125] | 0) >>> 0 > $403 >>> 0) _abort(); else {
      HEAP32[$$3371$i + 20 >> 2] = $403;
      HEAP32[$403 + 24 >> 2] = $$3371$i;
      $469 = $247;
      break;
     }
    } while (0);
    L200 : do if ($$4349$lcssa$i >>> 0 < 16) {
     $410 = $$4349$lcssa$i + $246 | 0;
     HEAP32[$$4$lcssa$i + 4 >> 2] = $410 | 3;
     $414 = $$4$lcssa$i + $410 + 4 | 0;
     HEAP32[$414 >> 2] = HEAP32[$414 >> 2] | 1;
    } else {
     HEAP32[$$4$lcssa$i + 4 >> 2] = $246 | 3;
     HEAP32[$348 + 4 >> 2] = $$4349$lcssa$i | 1;
     HEAP32[$348 + $$4349$lcssa$i >> 2] = $$4349$lcssa$i;
     $422 = $$4349$lcssa$i >>> 3;
     if ($$4349$lcssa$i >>> 0 < 256) {
      $425 = 24524 + ($422 << 1 << 2) | 0;
      $426 = HEAP32[6121] | 0;
      $427 = 1 << $422;
      if (!($426 & $427)) {
       HEAP32[6121] = $426 | $427;
       $$0367$i = $425;
       $$pre$phi$i209Z2D = $425 + 8 | 0;
      } else {
       $431 = $425 + 8 | 0;
       $432 = HEAP32[$431 >> 2] | 0;
       if ((HEAP32[6125] | 0) >>> 0 > $432 >>> 0) _abort(); else {
        $$0367$i = $432;
        $$pre$phi$i209Z2D = $431;
       }
      }
      HEAP32[$$pre$phi$i209Z2D >> 2] = $348;
      HEAP32[$$0367$i + 12 >> 2] = $348;
      HEAP32[$348 + 8 >> 2] = $$0367$i;
      HEAP32[$348 + 12 >> 2] = $425;
      break;
     }
     $438 = $$4349$lcssa$i >>> 8;
     if (!$438) $$0360$i = 0; else if ($$4349$lcssa$i >>> 0 > 16777215) $$0360$i = 31; else {
      $443 = ($438 + 1048320 | 0) >>> 16 & 8;
      $444 = $438 << $443;
      $447 = ($444 + 520192 | 0) >>> 16 & 4;
      $449 = $444 << $447;
      $452 = ($449 + 245760 | 0) >>> 16 & 2;
      $457 = 14 - ($447 | $443 | $452) + ($449 << $452 >>> 15) | 0;
      $$0360$i = $$4349$lcssa$i >>> ($457 + 7 | 0) & 1 | $457 << 1;
     }
     $463 = 24788 + ($$0360$i << 2) | 0;
     HEAP32[$348 + 28 >> 2] = $$0360$i;
     $465 = $348 + 16 | 0;
     HEAP32[$465 + 4 >> 2] = 0;
     HEAP32[$465 >> 2] = 0;
     $467 = 1 << $$0360$i;
     if (!($469 & $467)) {
      HEAP32[6122] = $469 | $467;
      HEAP32[$463 >> 2] = $348;
      HEAP32[$348 + 24 >> 2] = $463;
      HEAP32[$348 + 12 >> 2] = $348;
      HEAP32[$348 + 8 >> 2] = $348;
      break;
     }
     $475 = HEAP32[$463 >> 2] | 0;
     L218 : do if ((HEAP32[$475 + 4 >> 2] & -8 | 0) == ($$4349$lcssa$i | 0)) $$0343$lcssa$i = $475; else {
      $$034217$i = $$4349$lcssa$i << (($$0360$i | 0) == 31 ? 0 : 25 - ($$0360$i >>> 1) | 0);
      $$034316$i = $475;
      while (1) {
       $492 = $$034316$i + 16 + ($$034217$i >>> 31 << 2) | 0;
       $487 = HEAP32[$492 >> 2] | 0;
       if (!$487) break;
       if ((HEAP32[$487 + 4 >> 2] & -8 | 0) == ($$4349$lcssa$i | 0)) {
        $$0343$lcssa$i = $487;
        break L218;
       } else {
        $$034217$i = $$034217$i << 1;
        $$034316$i = $487;
       }
      }
      if ((HEAP32[6125] | 0) >>> 0 > $492 >>> 0) _abort(); else {
       HEAP32[$492 >> 2] = $348;
       HEAP32[$348 + 24 >> 2] = $$034316$i;
       HEAP32[$348 + 12 >> 2] = $348;
       HEAP32[$348 + 8 >> 2] = $348;
       break L200;
      }
     } while (0);
     $499 = $$0343$lcssa$i + 8 | 0;
     $500 = HEAP32[$499 >> 2] | 0;
     $501 = HEAP32[6125] | 0;
     if ($501 >>> 0 <= $500 >>> 0 & $501 >>> 0 <= $$0343$lcssa$i >>> 0) {
      HEAP32[$500 + 12 >> 2] = $348;
      HEAP32[$499 >> 2] = $348;
      HEAP32[$348 + 8 >> 2] = $500;
      HEAP32[$348 + 12 >> 2] = $$0343$lcssa$i;
      HEAP32[$348 + 24 >> 2] = 0;
      break;
     } else _abort();
    } while (0);
    $$0 = $$4$lcssa$i + 8 | 0;
    STACKTOP = sp;
    return $$0 | 0;
   } else $$0197 = $246;
  }
 } while (0);
 $510 = HEAP32[6123] | 0;
 if ($510 >>> 0 >= $$0197 >>> 0) {
  $512 = $510 - $$0197 | 0;
  $513 = HEAP32[6126] | 0;
  if ($512 >>> 0 > 15) {
   $515 = $513 + $$0197 | 0;
   HEAP32[6126] = $515;
   HEAP32[6123] = $512;
   HEAP32[$515 + 4 >> 2] = $512 | 1;
   HEAP32[$513 + $510 >> 2] = $512;
   HEAP32[$513 + 4 >> 2] = $$0197 | 3;
  } else {
   HEAP32[6123] = 0;
   HEAP32[6126] = 0;
   HEAP32[$513 + 4 >> 2] = $510 | 3;
   $524 = $513 + $510 + 4 | 0;
   HEAP32[$524 >> 2] = HEAP32[$524 >> 2] | 1;
  }
  $$0 = $513 + 8 | 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $528 = HEAP32[6124] | 0;
 if ($528 >>> 0 > $$0197 >>> 0) {
  $530 = $528 - $$0197 | 0;
  HEAP32[6124] = $530;
  $531 = HEAP32[6127] | 0;
  $532 = $531 + $$0197 | 0;
  HEAP32[6127] = $532;
  HEAP32[$532 + 4 >> 2] = $530 | 1;
  HEAP32[$531 + 4 >> 2] = $$0197 | 3;
  $$0 = $531 + 8 | 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (!(HEAP32[6239] | 0)) {
  HEAP32[6241] = 4096;
  HEAP32[6240] = 4096;
  HEAP32[6242] = -1;
  HEAP32[6243] = -1;
  HEAP32[6244] = 0;
  HEAP32[6232] = 0;
  HEAP32[6239] = $1 & -16 ^ 1431655768;
  $546 = 4096;
 } else $546 = HEAP32[6241] | 0;
 $543 = $$0197 + 48 | 0;
 $544 = $$0197 + 47 | 0;
 $545 = $546 + $544 | 0;
 $547 = 0 - $546 | 0;
 $548 = $545 & $547;
 if ($548 >>> 0 <= $$0197 >>> 0) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $550 = HEAP32[6231] | 0;
 if ($550 | 0) {
  $552 = HEAP32[6229] | 0;
  $553 = $552 + $548 | 0;
  if ($553 >>> 0 <= $552 >>> 0 | $553 >>> 0 > $550 >>> 0) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 L257 : do if (!(HEAP32[6232] & 4)) {
  $559 = HEAP32[6127] | 0;
  L259 : do if (!$559) label = 173; else {
   $$0$i$i = 24932;
   while (1) {
    $561 = HEAP32[$$0$i$i >> 2] | 0;
    if ($561 >>> 0 <= $559 >>> 0) if (($561 + (HEAP32[$$0$i$i + 4 >> 2] | 0) | 0) >>> 0 > $559 >>> 0) break;
    $568 = HEAP32[$$0$i$i + 8 >> 2] | 0;
    if (!$568) {
     label = 173;
     break L259;
    } else $$0$i$i = $568;
   }
   $593 = $545 - $528 & $547;
   if ($593 >>> 0 < 2147483647) {
    $596 = _sbrk($593 | 0) | 0;
    if (($596 | 0) == ((HEAP32[$$0$i$i >> 2] | 0) + (HEAP32[$$0$i$i + 4 >> 2] | 0) | 0)) if (($596 | 0) == (-1 | 0)) $$2234243136$i = $593; else {
     $$723947$i = $593;
     $$748$i = $596;
     label = 190;
     break L257;
    } else {
     $$2247$ph$i = $596;
     $$2253$ph$i = $593;
     label = 181;
    }
   } else $$2234243136$i = 0;
  } while (0);
  do if ((label | 0) == 173) {
   $570 = _sbrk(0) | 0;
   if (($570 | 0) == (-1 | 0)) $$2234243136$i = 0; else {
    $572 = $570;
    $573 = HEAP32[6240] | 0;
    $574 = $573 + -1 | 0;
    $spec$select49$i = (($574 & $572 | 0) == 0 ? 0 : ($574 + $572 & 0 - $573) - $572 | 0) + $548 | 0;
    $582 = HEAP32[6229] | 0;
    $583 = $spec$select49$i + $582 | 0;
    if ($spec$select49$i >>> 0 > $$0197 >>> 0 & $spec$select49$i >>> 0 < 2147483647) {
     $586 = HEAP32[6231] | 0;
     if ($586 | 0) if ($583 >>> 0 <= $582 >>> 0 | $583 >>> 0 > $586 >>> 0) {
      $$2234243136$i = 0;
      break;
     }
     $590 = _sbrk($spec$select49$i | 0) | 0;
     if (($590 | 0) == ($570 | 0)) {
      $$723947$i = $spec$select49$i;
      $$748$i = $570;
      label = 190;
      break L257;
     } else {
      $$2247$ph$i = $590;
      $$2253$ph$i = $spec$select49$i;
      label = 181;
     }
    } else $$2234243136$i = 0;
   }
  } while (0);
  do if ((label | 0) == 181) {
   $602 = 0 - $$2253$ph$i | 0;
   if (!($543 >>> 0 > $$2253$ph$i >>> 0 & ($$2253$ph$i >>> 0 < 2147483647 & ($$2247$ph$i | 0) != (-1 | 0)))) if (($$2247$ph$i | 0) == (-1 | 0)) {
    $$2234243136$i = 0;
    break;
   } else {
    $$723947$i = $$2253$ph$i;
    $$748$i = $$2247$ph$i;
    label = 190;
    break L257;
   }
   $606 = HEAP32[6241] | 0;
   $610 = $544 - $$2253$ph$i + $606 & 0 - $606;
   if ($610 >>> 0 >= 2147483647) {
    $$723947$i = $$2253$ph$i;
    $$748$i = $$2247$ph$i;
    label = 190;
    break L257;
   }
   if ((_sbrk($610 | 0) | 0) == (-1 | 0)) {
    _sbrk($602 | 0) | 0;
    $$2234243136$i = 0;
    break;
   } else {
    $$723947$i = $610 + $$2253$ph$i | 0;
    $$748$i = $$2247$ph$i;
    label = 190;
    break L257;
   }
  } while (0);
  HEAP32[6232] = HEAP32[6232] | 4;
  $$4236$i = $$2234243136$i;
  label = 188;
 } else {
  $$4236$i = 0;
  label = 188;
 } while (0);
 if ((label | 0) == 188) if ($548 >>> 0 < 2147483647) {
  $619 = _sbrk($548 | 0) | 0;
  $620 = _sbrk(0) | 0;
  $626 = $620 - $619 | 0;
  $628 = $626 >>> 0 > ($$0197 + 40 | 0) >>> 0;
  if (!(($619 | 0) == (-1 | 0) | $628 ^ 1 | $619 >>> 0 < $620 >>> 0 & (($619 | 0) != (-1 | 0) & ($620 | 0) != (-1 | 0)) ^ 1)) {
   $$723947$i = $628 ? $626 : $$4236$i;
   $$748$i = $619;
   label = 190;
  }
 }
 if ((label | 0) == 190) {
  $632 = (HEAP32[6229] | 0) + $$723947$i | 0;
  HEAP32[6229] = $632;
  if ($632 >>> 0 > (HEAP32[6230] | 0) >>> 0) HEAP32[6230] = $632;
  $635 = HEAP32[6127] | 0;
  L294 : do if (!$635) {
   $637 = HEAP32[6125] | 0;
   if (($637 | 0) == 0 | $$748$i >>> 0 < $637 >>> 0) HEAP32[6125] = $$748$i;
   HEAP32[6233] = $$748$i;
   HEAP32[6234] = $$723947$i;
   HEAP32[6236] = 0;
   HEAP32[6130] = HEAP32[6239];
   HEAP32[6129] = -1;
   HEAP32[6134] = 24524;
   HEAP32[6133] = 24524;
   HEAP32[6136] = 24532;
   HEAP32[6135] = 24532;
   HEAP32[6138] = 24540;
   HEAP32[6137] = 24540;
   HEAP32[6140] = 24548;
   HEAP32[6139] = 24548;
   HEAP32[6142] = 24556;
   HEAP32[6141] = 24556;
   HEAP32[6144] = 24564;
   HEAP32[6143] = 24564;
   HEAP32[6146] = 24572;
   HEAP32[6145] = 24572;
   HEAP32[6148] = 24580;
   HEAP32[6147] = 24580;
   HEAP32[6150] = 24588;
   HEAP32[6149] = 24588;
   HEAP32[6152] = 24596;
   HEAP32[6151] = 24596;
   HEAP32[6154] = 24604;
   HEAP32[6153] = 24604;
   HEAP32[6156] = 24612;
   HEAP32[6155] = 24612;
   HEAP32[6158] = 24620;
   HEAP32[6157] = 24620;
   HEAP32[6160] = 24628;
   HEAP32[6159] = 24628;
   HEAP32[6162] = 24636;
   HEAP32[6161] = 24636;
   HEAP32[6164] = 24644;
   HEAP32[6163] = 24644;
   HEAP32[6166] = 24652;
   HEAP32[6165] = 24652;
   HEAP32[6168] = 24660;
   HEAP32[6167] = 24660;
   HEAP32[6170] = 24668;
   HEAP32[6169] = 24668;
   HEAP32[6172] = 24676;
   HEAP32[6171] = 24676;
   HEAP32[6174] = 24684;
   HEAP32[6173] = 24684;
   HEAP32[6176] = 24692;
   HEAP32[6175] = 24692;
   HEAP32[6178] = 24700;
   HEAP32[6177] = 24700;
   HEAP32[6180] = 24708;
   HEAP32[6179] = 24708;
   HEAP32[6182] = 24716;
   HEAP32[6181] = 24716;
   HEAP32[6184] = 24724;
   HEAP32[6183] = 24724;
   HEAP32[6186] = 24732;
   HEAP32[6185] = 24732;
   HEAP32[6188] = 24740;
   HEAP32[6187] = 24740;
   HEAP32[6190] = 24748;
   HEAP32[6189] = 24748;
   HEAP32[6192] = 24756;
   HEAP32[6191] = 24756;
   HEAP32[6194] = 24764;
   HEAP32[6193] = 24764;
   HEAP32[6196] = 24772;
   HEAP32[6195] = 24772;
   $641 = $$723947$i + -40 | 0;
   $643 = $$748$i + 8 | 0;
   $648 = ($643 & 7 | 0) == 0 ? 0 : 0 - $643 & 7;
   $649 = $$748$i + $648 | 0;
   $650 = $641 - $648 | 0;
   HEAP32[6127] = $649;
   HEAP32[6124] = $650;
   HEAP32[$649 + 4 >> 2] = $650 | 1;
   HEAP32[$$748$i + $641 + 4 >> 2] = 40;
   HEAP32[6128] = HEAP32[6243];
  } else {
   $$024372$i = 24932;
   while (1) {
    $656 = HEAP32[$$024372$i >> 2] | 0;
    $658 = HEAP32[$$024372$i + 4 >> 2] | 0;
    if (($$748$i | 0) == ($656 + $658 | 0)) {
     label = 199;
     break;
    }
    $662 = HEAP32[$$024372$i + 8 >> 2] | 0;
    if (!$662) break; else $$024372$i = $662;
   }
   if ((label | 0) == 199) {
    $664 = $$024372$i + 4 | 0;
    if (!(HEAP32[$$024372$i + 12 >> 2] & 8)) if ($$748$i >>> 0 > $635 >>> 0 & $656 >>> 0 <= $635 >>> 0) {
     HEAP32[$664 >> 2] = $658 + $$723947$i;
     $673 = (HEAP32[6124] | 0) + $$723947$i | 0;
     $675 = $635 + 8 | 0;
     $680 = ($675 & 7 | 0) == 0 ? 0 : 0 - $675 & 7;
     $681 = $635 + $680 | 0;
     $682 = $673 - $680 | 0;
     HEAP32[6127] = $681;
     HEAP32[6124] = $682;
     HEAP32[$681 + 4 >> 2] = $682 | 1;
     HEAP32[$635 + $673 + 4 >> 2] = 40;
     HEAP32[6128] = HEAP32[6243];
     break;
    }
   }
   $688 = HEAP32[6125] | 0;
   if ($$748$i >>> 0 < $688 >>> 0) {
    HEAP32[6125] = $$748$i;
    $753 = $$748$i;
   } else $753 = $688;
   $690 = $$748$i + $$723947$i | 0;
   $$124471$i = 24932;
   while (1) {
    if ((HEAP32[$$124471$i >> 2] | 0) == ($690 | 0)) {
     label = 207;
     break;
    }
    $694 = HEAP32[$$124471$i + 8 >> 2] | 0;
    if (!$694) break; else $$124471$i = $694;
   }
   if ((label | 0) == 207) if (!(HEAP32[$$124471$i + 12 >> 2] & 8)) {
    HEAP32[$$124471$i >> 2] = $$748$i;
    $700 = $$124471$i + 4 | 0;
    HEAP32[$700 >> 2] = (HEAP32[$700 >> 2] | 0) + $$723947$i;
    $704 = $$748$i + 8 | 0;
    $710 = $$748$i + (($704 & 7 | 0) == 0 ? 0 : 0 - $704 & 7) | 0;
    $712 = $690 + 8 | 0;
    $718 = $690 + (($712 & 7 | 0) == 0 ? 0 : 0 - $712 & 7) | 0;
    $722 = $710 + $$0197 | 0;
    $723 = $718 - $710 - $$0197 | 0;
    HEAP32[$710 + 4 >> 2] = $$0197 | 3;
    L317 : do if (($635 | 0) == ($718 | 0)) {
     $728 = (HEAP32[6124] | 0) + $723 | 0;
     HEAP32[6124] = $728;
     HEAP32[6127] = $722;
     HEAP32[$722 + 4 >> 2] = $728 | 1;
    } else {
     if ((HEAP32[6126] | 0) == ($718 | 0)) {
      $734 = (HEAP32[6123] | 0) + $723 | 0;
      HEAP32[6123] = $734;
      HEAP32[6126] = $722;
      HEAP32[$722 + 4 >> 2] = $734 | 1;
      HEAP32[$722 + $734 >> 2] = $734;
      break;
     }
     $739 = HEAP32[$718 + 4 >> 2] | 0;
     if (($739 & 3 | 0) == 1) {
      $742 = $739 & -8;
      $743 = $739 >>> 3;
      L325 : do if ($739 >>> 0 < 256) {
       $746 = HEAP32[$718 + 8 >> 2] | 0;
       $748 = HEAP32[$718 + 12 >> 2] | 0;
       $750 = 24524 + ($743 << 1 << 2) | 0;
       do if (($746 | 0) != ($750 | 0)) {
        if ($753 >>> 0 > $746 >>> 0) _abort();
        if ((HEAP32[$746 + 12 >> 2] | 0) == ($718 | 0)) break;
        _abort();
       } while (0);
       if (($748 | 0) == ($746 | 0)) {
        HEAP32[6121] = HEAP32[6121] & ~(1 << $743);
        break;
       }
       do if (($748 | 0) == ($750 | 0)) $$pre$phi17$i$iZ2D = $748 + 8 | 0; else {
        if ($753 >>> 0 > $748 >>> 0) _abort();
        $764 = $748 + 8 | 0;
        if ((HEAP32[$764 >> 2] | 0) == ($718 | 0)) {
         $$pre$phi17$i$iZ2D = $764;
         break;
        }
        _abort();
       } while (0);
       HEAP32[$746 + 12 >> 2] = $748;
       HEAP32[$$pre$phi17$i$iZ2D >> 2] = $746;
      } else {
       $769 = HEAP32[$718 + 24 >> 2] | 0;
       $771 = HEAP32[$718 + 12 >> 2] | 0;
       do if (($771 | 0) == ($718 | 0)) {
        $782 = $718 + 16 | 0;
        $783 = $782 + 4 | 0;
        $784 = HEAP32[$783 >> 2] | 0;
        if (!$784) {
         $786 = HEAP32[$782 >> 2] | 0;
         if (!$786) {
          $$3$i$i = 0;
          break;
         } else {
          $$1290$i$i$ph = $786;
          $$1292$i$i$ph = $782;
         }
        } else {
         $$1290$i$i$ph = $784;
         $$1292$i$i$ph = $783;
        }
        $$1290$i$i = $$1290$i$i$ph;
        $$1292$i$i = $$1292$i$i$ph;
        while (1) {
         $788 = $$1290$i$i + 20 | 0;
         $789 = HEAP32[$788 >> 2] | 0;
         if (!$789) {
          $791 = $$1290$i$i + 16 | 0;
          $792 = HEAP32[$791 >> 2] | 0;
          if (!$792) break; else {
           $$1290$i$i$be = $792;
           $$1292$i$i$be = $791;
          }
         } else {
          $$1290$i$i$be = $789;
          $$1292$i$i$be = $788;
         }
         $$1290$i$i = $$1290$i$i$be;
         $$1292$i$i = $$1292$i$i$be;
        }
        if ($753 >>> 0 > $$1292$i$i >>> 0) _abort(); else {
         HEAP32[$$1292$i$i >> 2] = 0;
         $$3$i$i = $$1290$i$i;
         break;
        }
       } else {
        $774 = HEAP32[$718 + 8 >> 2] | 0;
        if ($753 >>> 0 > $774 >>> 0) _abort();
        $776 = $774 + 12 | 0;
        if ((HEAP32[$776 >> 2] | 0) != ($718 | 0)) _abort();
        $779 = $771 + 8 | 0;
        if ((HEAP32[$779 >> 2] | 0) == ($718 | 0)) {
         HEAP32[$776 >> 2] = $771;
         HEAP32[$779 >> 2] = $774;
         $$3$i$i = $771;
         break;
        } else _abort();
       } while (0);
       if (!$769) break;
       $797 = HEAP32[$718 + 28 >> 2] | 0;
       $798 = 24788 + ($797 << 2) | 0;
       do if ((HEAP32[$798 >> 2] | 0) == ($718 | 0)) {
        HEAP32[$798 >> 2] = $$3$i$i;
        if ($$3$i$i | 0) break;
        HEAP32[6122] = HEAP32[6122] & ~(1 << $797);
        break L325;
       } else if ((HEAP32[6125] | 0) >>> 0 > $769 >>> 0) _abort(); else {
        $807 = $769 + 16 | 0;
        HEAP32[((HEAP32[$807 >> 2] | 0) == ($718 | 0) ? $807 : $769 + 20 | 0) >> 2] = $$3$i$i;
        if (!$$3$i$i) break L325; else break;
       } while (0);
       $812 = HEAP32[6125] | 0;
       if ($812 >>> 0 > $$3$i$i >>> 0) _abort();
       HEAP32[$$3$i$i + 24 >> 2] = $769;
       $815 = $718 + 16 | 0;
       $816 = HEAP32[$815 >> 2] | 0;
       do if ($816 | 0) if ($812 >>> 0 > $816 >>> 0) _abort(); else {
        HEAP32[$$3$i$i + 16 >> 2] = $816;
        HEAP32[$816 + 24 >> 2] = $$3$i$i;
        break;
       } while (0);
       $822 = HEAP32[$815 + 4 >> 2] | 0;
       if (!$822) break;
       if ((HEAP32[6125] | 0) >>> 0 > $822 >>> 0) _abort(); else {
        HEAP32[$$3$i$i + 20 >> 2] = $822;
        HEAP32[$822 + 24 >> 2] = $$3$i$i;
        break;
       }
      } while (0);
      $$0$i16$i = $718 + $742 | 0;
      $$0286$i$i = $742 + $723 | 0;
     } else {
      $$0$i16$i = $718;
      $$0286$i$i = $723;
     }
     $830 = $$0$i16$i + 4 | 0;
     HEAP32[$830 >> 2] = HEAP32[$830 >> 2] & -2;
     HEAP32[$722 + 4 >> 2] = $$0286$i$i | 1;
     HEAP32[$722 + $$0286$i$i >> 2] = $$0286$i$i;
     $836 = $$0286$i$i >>> 3;
     if ($$0286$i$i >>> 0 < 256) {
      $839 = 24524 + ($836 << 1 << 2) | 0;
      $840 = HEAP32[6121] | 0;
      $841 = 1 << $836;
      do if (!($840 & $841)) {
       HEAP32[6121] = $840 | $841;
       $$0294$i$i = $839;
       $$pre$phi$i18$iZ2D = $839 + 8 | 0;
      } else {
       $845 = $839 + 8 | 0;
       $846 = HEAP32[$845 >> 2] | 0;
       if ((HEAP32[6125] | 0) >>> 0 <= $846 >>> 0) {
        $$0294$i$i = $846;
        $$pre$phi$i18$iZ2D = $845;
        break;
       }
       _abort();
      } while (0);
      HEAP32[$$pre$phi$i18$iZ2D >> 2] = $722;
      HEAP32[$$0294$i$i + 12 >> 2] = $722;
      HEAP32[$722 + 8 >> 2] = $$0294$i$i;
      HEAP32[$722 + 12 >> 2] = $839;
      break;
     }
     $852 = $$0286$i$i >>> 8;
     do if (!$852) $$0295$i$i = 0; else {
      if ($$0286$i$i >>> 0 > 16777215) {
       $$0295$i$i = 31;
       break;
      }
      $857 = ($852 + 1048320 | 0) >>> 16 & 8;
      $858 = $852 << $857;
      $861 = ($858 + 520192 | 0) >>> 16 & 4;
      $863 = $858 << $861;
      $866 = ($863 + 245760 | 0) >>> 16 & 2;
      $871 = 14 - ($861 | $857 | $866) + ($863 << $866 >>> 15) | 0;
      $$0295$i$i = $$0286$i$i >>> ($871 + 7 | 0) & 1 | $871 << 1;
     } while (0);
     $877 = 24788 + ($$0295$i$i << 2) | 0;
     HEAP32[$722 + 28 >> 2] = $$0295$i$i;
     $879 = $722 + 16 | 0;
     HEAP32[$879 + 4 >> 2] = 0;
     HEAP32[$879 >> 2] = 0;
     $881 = HEAP32[6122] | 0;
     $882 = 1 << $$0295$i$i;
     if (!($881 & $882)) {
      HEAP32[6122] = $881 | $882;
      HEAP32[$877 >> 2] = $722;
      HEAP32[$722 + 24 >> 2] = $877;
      HEAP32[$722 + 12 >> 2] = $722;
      HEAP32[$722 + 8 >> 2] = $722;
      break;
     }
     $889 = HEAP32[$877 >> 2] | 0;
     L410 : do if ((HEAP32[$889 + 4 >> 2] & -8 | 0) == ($$0286$i$i | 0)) $$0288$lcssa$i$i = $889; else {
      $$028711$i$i = $$0286$i$i << (($$0295$i$i | 0) == 31 ? 0 : 25 - ($$0295$i$i >>> 1) | 0);
      $$028810$i$i = $889;
      while (1) {
       $906 = $$028810$i$i + 16 + ($$028711$i$i >>> 31 << 2) | 0;
       $901 = HEAP32[$906 >> 2] | 0;
       if (!$901) break;
       if ((HEAP32[$901 + 4 >> 2] & -8 | 0) == ($$0286$i$i | 0)) {
        $$0288$lcssa$i$i = $901;
        break L410;
       } else {
        $$028711$i$i = $$028711$i$i << 1;
        $$028810$i$i = $901;
       }
      }
      if ((HEAP32[6125] | 0) >>> 0 > $906 >>> 0) _abort(); else {
       HEAP32[$906 >> 2] = $722;
       HEAP32[$722 + 24 >> 2] = $$028810$i$i;
       HEAP32[$722 + 12 >> 2] = $722;
       HEAP32[$722 + 8 >> 2] = $722;
       break L317;
      }
     } while (0);
     $913 = $$0288$lcssa$i$i + 8 | 0;
     $914 = HEAP32[$913 >> 2] | 0;
     $915 = HEAP32[6125] | 0;
     if ($915 >>> 0 <= $914 >>> 0 & $915 >>> 0 <= $$0288$lcssa$i$i >>> 0) {
      HEAP32[$914 + 12 >> 2] = $722;
      HEAP32[$913 >> 2] = $722;
      HEAP32[$722 + 8 >> 2] = $914;
      HEAP32[$722 + 12 >> 2] = $$0288$lcssa$i$i;
      HEAP32[$722 + 24 >> 2] = 0;
      break;
     } else _abort();
    } while (0);
    $$0 = $710 + 8 | 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $$0$i$i$i = 24932;
   while (1) {
    $923 = HEAP32[$$0$i$i$i >> 2] | 0;
    if ($923 >>> 0 <= $635 >>> 0) {
     $927 = $923 + (HEAP32[$$0$i$i$i + 4 >> 2] | 0) | 0;
     if ($927 >>> 0 > $635 >>> 0) break;
    }
    $$0$i$i$i = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
   }
   $931 = $927 + -47 | 0;
   $933 = $931 + 8 | 0;
   $939 = $931 + (($933 & 7 | 0) == 0 ? 0 : 0 - $933 & 7) | 0;
   $940 = $635 + 16 | 0;
   $942 = $939 >>> 0 < $940 >>> 0 ? $635 : $939;
   $943 = $942 + 8 | 0;
   $945 = $$723947$i + -40 | 0;
   $947 = $$748$i + 8 | 0;
   $952 = ($947 & 7 | 0) == 0 ? 0 : 0 - $947 & 7;
   $953 = $$748$i + $952 | 0;
   $954 = $945 - $952 | 0;
   HEAP32[6127] = $953;
   HEAP32[6124] = $954;
   HEAP32[$953 + 4 >> 2] = $954 | 1;
   HEAP32[$$748$i + $945 + 4 >> 2] = 40;
   HEAP32[6128] = HEAP32[6243];
   $960 = $942 + 4 | 0;
   HEAP32[$960 >> 2] = 27;
   HEAP32[$943 >> 2] = HEAP32[6233];
   HEAP32[$943 + 4 >> 2] = HEAP32[6234];
   HEAP32[$943 + 8 >> 2] = HEAP32[6235];
   HEAP32[$943 + 12 >> 2] = HEAP32[6236];
   HEAP32[6233] = $$748$i;
   HEAP32[6234] = $$723947$i;
   HEAP32[6236] = 0;
   HEAP32[6235] = $943;
   $962 = $942 + 24 | 0;
   do {
    $962$looptemp = $962;
    $962 = $962 + 4 | 0;
    HEAP32[$962 >> 2] = 7;
   } while (($962$looptemp + 8 | 0) >>> 0 < $927 >>> 0);
   if (($942 | 0) != ($635 | 0)) {
    $968 = $942 - $635 | 0;
    HEAP32[$960 >> 2] = HEAP32[$960 >> 2] & -2;
    HEAP32[$635 + 4 >> 2] = $968 | 1;
    HEAP32[$942 >> 2] = $968;
    $973 = $968 >>> 3;
    if ($968 >>> 0 < 256) {
     $976 = 24524 + ($973 << 1 << 2) | 0;
     $977 = HEAP32[6121] | 0;
     $978 = 1 << $973;
     if (!($977 & $978)) {
      HEAP32[6121] = $977 | $978;
      $$0211$i$i = $976;
      $$pre$phi$i$iZ2D = $976 + 8 | 0;
     } else {
      $982 = $976 + 8 | 0;
      $983 = HEAP32[$982 >> 2] | 0;
      if ((HEAP32[6125] | 0) >>> 0 > $983 >>> 0) _abort(); else {
       $$0211$i$i = $983;
       $$pre$phi$i$iZ2D = $982;
      }
     }
     HEAP32[$$pre$phi$i$iZ2D >> 2] = $635;
     HEAP32[$$0211$i$i + 12 >> 2] = $635;
     HEAP32[$635 + 8 >> 2] = $$0211$i$i;
     HEAP32[$635 + 12 >> 2] = $976;
     break;
    }
    $989 = $968 >>> 8;
    if (!$989) $$0212$i$i = 0; else if ($968 >>> 0 > 16777215) $$0212$i$i = 31; else {
     $994 = ($989 + 1048320 | 0) >>> 16 & 8;
     $995 = $989 << $994;
     $998 = ($995 + 520192 | 0) >>> 16 & 4;
     $1000 = $995 << $998;
     $1003 = ($1000 + 245760 | 0) >>> 16 & 2;
     $1008 = 14 - ($998 | $994 | $1003) + ($1000 << $1003 >>> 15) | 0;
     $$0212$i$i = $968 >>> ($1008 + 7 | 0) & 1 | $1008 << 1;
    }
    $1014 = 24788 + ($$0212$i$i << 2) | 0;
    HEAP32[$635 + 28 >> 2] = $$0212$i$i;
    HEAP32[$635 + 20 >> 2] = 0;
    HEAP32[$940 >> 2] = 0;
    $1017 = HEAP32[6122] | 0;
    $1018 = 1 << $$0212$i$i;
    if (!($1017 & $1018)) {
     HEAP32[6122] = $1017 | $1018;
     HEAP32[$1014 >> 2] = $635;
     HEAP32[$635 + 24 >> 2] = $1014;
     HEAP32[$635 + 12 >> 2] = $635;
     HEAP32[$635 + 8 >> 2] = $635;
     break;
    }
    $1025 = HEAP32[$1014 >> 2] | 0;
    L451 : do if ((HEAP32[$1025 + 4 >> 2] & -8 | 0) == ($968 | 0)) $$0207$lcssa$i$i = $1025; else {
     $$02065$i$i = $968 << (($$0212$i$i | 0) == 31 ? 0 : 25 - ($$0212$i$i >>> 1) | 0);
     $$02074$i$i = $1025;
     while (1) {
      $1042 = $$02074$i$i + 16 + ($$02065$i$i >>> 31 << 2) | 0;
      $1037 = HEAP32[$1042 >> 2] | 0;
      if (!$1037) break;
      if ((HEAP32[$1037 + 4 >> 2] & -8 | 0) == ($968 | 0)) {
       $$0207$lcssa$i$i = $1037;
       break L451;
      } else {
       $$02065$i$i = $$02065$i$i << 1;
       $$02074$i$i = $1037;
      }
     }
     if ((HEAP32[6125] | 0) >>> 0 > $1042 >>> 0) _abort(); else {
      HEAP32[$1042 >> 2] = $635;
      HEAP32[$635 + 24 >> 2] = $$02074$i$i;
      HEAP32[$635 + 12 >> 2] = $635;
      HEAP32[$635 + 8 >> 2] = $635;
      break L294;
     }
    } while (0);
    $1049 = $$0207$lcssa$i$i + 8 | 0;
    $1050 = HEAP32[$1049 >> 2] | 0;
    $1051 = HEAP32[6125] | 0;
    if ($1051 >>> 0 <= $1050 >>> 0 & $1051 >>> 0 <= $$0207$lcssa$i$i >>> 0) {
     HEAP32[$1050 + 12 >> 2] = $635;
     HEAP32[$1049 >> 2] = $635;
     HEAP32[$635 + 8 >> 2] = $1050;
     HEAP32[$635 + 12 >> 2] = $$0207$lcssa$i$i;
     HEAP32[$635 + 24 >> 2] = 0;
     break;
    } else _abort();
   }
  } while (0);
  $1060 = HEAP32[6124] | 0;
  if ($1060 >>> 0 > $$0197 >>> 0) {
   $1062 = $1060 - $$0197 | 0;
   HEAP32[6124] = $1062;
   $1063 = HEAP32[6127] | 0;
   $1064 = $1063 + $$0197 | 0;
   HEAP32[6127] = $1064;
   HEAP32[$1064 + 4 >> 2] = $1062 | 1;
   HEAP32[$1063 + 4 >> 2] = $$0197 | 3;
   $$0 = $1063 + 8 | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 HEAP32[(___errno_location() | 0) >> 2] = 12;
 $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN2ut4arch19EntityCommandBuffer8playbackEPNS0_13EntityManagerE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0195407 = 0, $$0197 = 0, $$0198 = 0, $$0199 = 0, $$0200403 = 0, $$0201 = 0, $$0202 = 0, $$0203 = 0, $$0408 = 0, $$1$lcssa = 0, $$1404 = 0, $$2 = 0, $$phi$trans$insert = 0, $$pre410 = 0, $$sink = 0, $$sink422 = 0, $$sink423 = 0, $10 = 0, $103 = 0, $106 = 0, $108 = 0, $11 = 0, $111 = 0, $112 = 0, $114 = 0, $115 = 0, $12 = 0, $123 = 0, $126 = 0, $128 = 0, $13 = 0, $131 = 0, $133 = 0, $135 = 0, $14 = 0, $144 = 0, $15 = 0, $151 = 0, $152 = 0, $154 = 0, $157 = 0, $159 = 0, $16 = 0, $161 = 0, $163 = 0, $165 = 0, $168 = 0, $17 = 0, $170 = 0, $172 = 0, $178 = 0, $18 = 0, $183 = 0, $184 = 0, $191 = 0, $196 = 0, $197 = 0, $2 = 0, $201 = 0, $206 = 0, $208 = 0, $210 = 0, $213 = 0, $215 = 0, $217 = 0, $223 = 0, $228 = 0, $229 = 0, $236 = 0, $241 = 0, $242 = 0, $246 = 0, $251 = 0, $252 = 0, $253 = 0, $258 = 0, $259 = 0, $26 = 0, $263 = 0, $264 = 0, $266 = 0, $268 = 0, $27 = 0, $271 = 0, $273 = 0, $275 = 0, $281 = 0, $286 = 0, $287 = 0, $29 = 0, $294 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $304 = 0, $308 = 0, $310 = 0, $318 = 0, $32 = 0, $320 = 0, $323 = 0, $325 = 0, $327 = 0, $333 = 0, $338 = 0, $339 = 0, $34 = 0, $346 = 0, $35 = 0, $351 = 0, $352 = 0, $356 = 0, $36 = 0, $361 = 0, $363 = 0, $364 = 0, $37 = 0, $372 = 0, $374 = 0, $377 = 0, $379 = 0, $381 = 0, $39 = 0, $390 = 0, $397 = 0, $398 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $403 = 0, $406 = 0, $407 = 0, $41 = 0, $412 = 0, $42 = 0, $420 = 0, $422 = 0, $425 = 0, $427 = 0, $429 = 0, $43 = 0, $435 = 0, $440 = 0, $441 = 0, $448 = 0, $453 = 0, $454 = 0, $458 = 0, $463 = 0, $465 = 0, $467 = 0, $47 = 0, $475 = 0, $477 = 0, $480 = 0, $482 = 0, $484 = 0, $490 = 0, $495 = 0, $496 = 0, $5 = 0, $50 = 0, $503 = 0, $508 = 0, $509 = 0, $513 = 0, $518 = 0, $52 = 0, $520 = 0, $522 = 0, $524 = 0, $527 = 0, $529 = 0, $531 = 0, $540 = 0, $546 = 0, $548 = 0, $551 = 0, $553 = 0, $555 = 0, $558 = 0, $56 = 0, $562 = 0, $57 = 0, $570 = 0, $572 = 0, $575 = 0, $577 = 0, $579 = 0, $585 = 0, $590 = 0, $591 = 0, $598 = 0, $6 = 0, $603 = 0, $604 = 0, $608 = 0, $613 = 0, $615 = 0, $617 = 0, $625 = 0, $627 = 0, $630 = 0, $632 = 0, $634 = 0, $640 = 0, $645 = 0, $646 = 0, $653 = 0, $658 = 0, $659 = 0, $663 = 0, $668 = 0, $670 = 0, $671 = 0, $672 = 0, $674 = 0, $680 = 0, $687 = 0, $689 = 0, $69 = 0, $691 = 0, $694 = 0, $696 = 0, $698 = 0, $7 = 0, $704 = 0, $709 = 0, $710 = 0, $717 = 0, $722 = 0, $723 = 0, $727 = 0, $731 = 0, $733 = 0, $735 = 0, $738 = 0, $74 = 0, $746 = 0, $748 = 0, $75 = 0, $754 = 0, $759 = 0, $760 = 0, $767 = 0, $772 = 0, $773 = 0, $777 = 0, $782 = 0, $796 = 0, $8 = 0, $80 = 0, $800 = 0, $81 = 0, $82 = 0, $87 = 0, $9 = 0, $92 = 0, $93 = 0, $99 = 0, $phi$call405 = 0, $tmpcast$byval_copy = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer13 = 0, $vararg_buffer15 = 0, $vararg_buffer17 = 0, $vararg_buffer19 = 0, $vararg_buffer21 = 0, $vararg_buffer23 = 0, $vararg_buffer25 = 0, $vararg_buffer27 = 0, $vararg_buffer29 = 0, $vararg_buffer3 = 0, $vararg_buffer31 = 0, $vararg_buffer33 = 0, $vararg_buffer35 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $tmpcast$byval_copy = sp + 296 | 0;
 $vararg_buffer35 = sp + 280 | 0;
 $vararg_buffer33 = sp + 272 | 0;
 $vararg_buffer31 = sp + 264 | 0;
 $vararg_buffer29 = sp + 256 | 0;
 $vararg_buffer27 = sp + 248 | 0;
 $vararg_buffer25 = sp + 240 | 0;
 $vararg_buffer23 = sp + 232 | 0;
 $vararg_buffer21 = sp + 224 | 0;
 $vararg_buffer19 = sp + 200 | 0;
 $vararg_buffer17 = sp + 192 | 0;
 $vararg_buffer15 = sp + 176 | 0;
 $vararg_buffer13 = sp + 152 | 0;
 $vararg_buffer11 = sp + 144 | 0;
 $vararg_buffer9 = sp + 128 | 0;
 $vararg_buffer7 = sp + 112 | 0;
 $vararg_buffer5 = sp + 88 | 0;
 $vararg_buffer3 = sp + 80 | 0;
 $vararg_buffer1 = sp + 64 | 0;
 $vararg_buffer = sp + 40 | 0;
 $2 = sp + 16 | 0;
 $3 = sp;
 $4 = sp + 284 | 0;
 $5 = sp + 216 | 0;
 $6 = sp + 208 | 0;
 $7 = sp + 184 | 0;
 $8 = sp + 168 | 0;
 $9 = sp + 160 | 0;
 $10 = sp + 136 | 0;
 $11 = sp + 120 | 0;
 $12 = sp + 104 | 0;
 $13 = sp + 96 | 0;
 $14 = sp + 72 | 0;
 $15 = sp + 56 | 0;
 $16 = sp + 48 | 0;
 $17 = sp + 32 | 0;
 $18 = sp + 8 | 0;
 if (HEAP8[$0 + 28 >> 0] | 0) if (HEAP32[$0 + 24 >> 2] | 0) {
  _snprintf(25060, 1024, 6384, $vararg_buffer) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 6455, 6212, 285);
 }
 $26 = HEAP32[$0 + 4 >> 2] | 0;
 $27 = $0 + 32 | 0;
 $29 = $0 + 36 | 0;
 HEAP32[$29 >> 2] = HEAP32[$27 >> 2];
 $30 = $0 + 20 | 0;
 $32 = (HEAP32[$30 >> 2] | 0) + 1 | 0;
 if ($32 | 0) __ZNSt3__26vectorIN2ut6EntityENS_9allocatorIS2_EEE8__appendEj($27, $32);
 $34 = $4 + 4 | 0;
 $35 = $4 + 8 | 0;
 $36 = __Znwj(1024) | 0;
 HEAP32[$4 >> 2] = $36;
 $37 = $36 + 1024 | 0;
 HEAP32[$35 >> 2] = $37;
 _memset($36 | 0, 0, 1024) | 0;
 HEAP32[$34 >> 2] = $37;
 L8 : do if (!$26) $800 = $36; else {
  $39 = $2 + 4 | 0;
  $40 = $2 + 8 | 0;
  $41 = $0 + 32 | 0;
  $42 = $2 + 4 | 0;
  $$0195407 = 0;
  $$0408 = $26;
  L10 : while (1) {
   $43 = $$0408 + 8 | 0;
   L12 : do if ((HEAP32[$43 >> 2] | 0) >>> 0 < 13) $$1$lcssa = $$0195407; else {
    $47 = $$0408;
    $$1404 = $$0195407;
    $phi$call405 = $$0408 + 12 | 0;
    while (1) {
     do switch (HEAP32[$phi$call405 >> 2] | 0) {
     case 0:
      {
       $50 = HEAP32[$phi$call405 + 12 >> 2] | 0;
       $52 = $phi$call405 + 8 | 0;
       if (($50 | 0) > 1) __ZN2ut4arch13EntityManager14createEntitiesEPNS0_9ArchetypeEj($1, HEAP32[$52 >> 2] | 0, $50);
       __ZN2ut4arch13EntityManager14createEntitiesEPNS0_9ArchetypeEPNS_6EntityEj($1, HEAP32[$52 >> 2] | 0, HEAP32[$27 >> 2] | 0, 1);
       $$2 = $$1404;
       break;
      }
     case 1:
      {
       $56 = $phi$call405 + 12 | 0;
       $57 = HEAP32[$56 >> 2] | 0;
       if (($57 + $$1404 | 0) > (HEAP32[$30 >> 2] | 0)) {
        label = 15;
        break L10;
       }
       __ZN2ut4arch13EntityManager14createEntitiesEPNS0_9ArchetypeEPNS_6EntityEj($1, HEAP32[$phi$call405 + 8 >> 2] | 0, (HEAP32[$27 >> 2] | 0) + ($$1404 + 1 << 3) | 0, $57);
       $$2 = (HEAP32[$56 >> 2] | 0) + $$1404 | 0;
       break;
      }
     case 2:
      {
       $69 = $phi$call405 + 8 | 0;
       $74 = HEAP32[$69 + 4 >> 2] | 0;
       $75 = $5;
       HEAP32[$75 >> 2] = HEAP32[$69 >> 2];
       HEAP32[$75 + 4 >> 2] = $74;
       $80 = HEAP32[$phi$call405 + 16 >> 2] | 0;
       HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$5 >> 2];
       HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
       __ZN2ut4arch13EntityManager19instantiateEntitiesENS_6EntityEPS2_i($1, $tmpcast$byval_copy, 0, $80);
       $$2 = $$1404;
       break;
      }
     case 3:
      {
       $81 = $phi$call405 + 16 | 0;
       $82 = HEAP32[$81 >> 2] | 0;
       if (($82 + $$1404 | 0) > (HEAP32[$30 >> 2] | 0)) {
        label = 19;
        break L10;
       }
       $87 = $phi$call405 + 8 | 0;
       $92 = HEAP32[$87 + 4 >> 2] | 0;
       $93 = $6;
       HEAP32[$93 >> 2] = HEAP32[$87 >> 2];
       HEAP32[$93 + 4 >> 2] = $92;
       $99 = (HEAP32[$27 >> 2] | 0) + ($$1404 + 1 << 3) | 0;
       HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$6 >> 2];
       HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$6 + 4 >> 2];
       __ZN2ut4arch13EntityManager19instantiateEntitiesENS_6EntityEPS2_i($1, $tmpcast$byval_copy, $99, $82);
       $$2 = (HEAP32[$81 >> 2] | 0) + $$1404 | 0;
       break;
      }
     case 4:
      {
       $103 = HEAP32[$phi$call405 + 8 >> 2] | 0;
       $$phi$trans$insert = $phi$call405 + 12 | 0;
       $$pre410 = HEAP32[$$phi$trans$insert >> 2] | 0;
       if (!(HEAP32[$30 >> 2] | 0)) {
        $$0198 = $103;
        $161 = $$pre410;
       } else {
        $106 = $$pre410 << 3;
        $108 = HEAP32[$4 >> 2] | 0;
        $111 = $108;
        $112 = $108;
        if (((HEAP32[$35 >> 2] | 0) - $108 | 0) >>> 0 < $106 >>> 0) {
         $114 = (HEAP32[$34 >> 2] | 0) - $108 | 0;
         $115 = __Znwj($106) | 0;
         if (($114 | 0) > 0) _memcpy($115 | 0, $111 | 0, $114 | 0) | 0;
         HEAP32[$4 >> 2] = $115;
         HEAP32[$34 >> 2] = $115 + $114;
         HEAP32[$35 >> 2] = $115 + $106;
         if (!$108) $151 = $115; else {
          __ZdlPv($111);
          $151 = $115;
         }
        } else $151 = $112;
        $123 = HEAP32[$$phi$trans$insert >> 2] | 0;
        if (($123 | 0) > 0) {
         $$0200403 = 0;
         while (1) {
          $126 = $103 + ($$0200403 << 3) | 0;
          $128 = HEAP32[$126 >> 2] | 0;
          $131 = HEAP32[$126 + 4 >> 2] | 0;
          if (($128 | 0) < 0) {
           $133 = 0 - $128 | 0;
           $135 = HEAP32[$27 >> 2] | 0;
           if (((HEAP32[$29 >> 2] | 0) - $135 >> 3 | 0) <= ($133 | 0)) {
            label = 32;
            break L10;
           }
           $$sink = $135 + ($133 << 3) | 0;
           label = 35;
          } else if (!($131 | $128)) {
           $$sink = HEAP32[$41 >> 2] | 0;
           label = 35;
          } else {
           $154 = $128;
           $157 = $131;
          }
          if ((label | 0) == 35) {
           label = 0;
           $144 = $$sink;
           $154 = HEAP32[$144 >> 2] | 0;
           $157 = HEAP32[$144 + 4 >> 2] | 0;
          }
          $152 = $151 + ($$0200403 << 3) | 0;
          HEAP32[$152 >> 2] = $154;
          HEAP32[$152 + 4 >> 2] = $157;
          $$0200403 = $$0200403 + 1 | 0;
          $159 = HEAP32[$$phi$trans$insert >> 2] | 0;
          if (($$0200403 | 0) >= ($159 | 0)) {
           $$0198 = $151;
           $161 = $159;
           break;
          }
         }
        } else {
         $$0198 = $151;
         $161 = $123;
        }
       }
       __ZN2ut4arch13EntityManager15destroyEntitiesEPKNS_6EntityEi($1, $$0198, $161);
       $$2 = $$1404;
       break;
      }
     case 5:
      {
       $163 = $phi$call405 + 8 | 0;
       $165 = HEAP32[$163 >> 2] | 0;
       $168 = HEAP32[$163 + 4 >> 2] | 0;
       do if (($165 | 0) < 0) {
        $170 = 0 - $165 | 0;
        $172 = HEAP32[$27 >> 2] | 0;
        if (((HEAP32[$29 >> 2] | 0) - $172 >> 3 | 0) <= ($170 | 0)) {
         label = 41;
         break L10;
        }
        $178 = $172 + ($170 << 3) | 0;
        $183 = HEAP32[$178 + 4 >> 2] | 0;
        $184 = $7;
        HEAP32[$184 >> 2] = HEAP32[$178 >> 2];
        HEAP32[$184 + 4 >> 2] = $183;
       } else if (!($168 | $165)) {
        $191 = HEAP32[$41 >> 2] | 0;
        $196 = HEAP32[$191 + 4 >> 2] | 0;
        $197 = $7;
        HEAP32[$197 >> 2] = HEAP32[$191 >> 2];
        HEAP32[$197 + 4 >> 2] = $196;
        break;
       } else {
        $201 = $7;
        HEAP32[$201 >> 2] = $165;
        HEAP32[$201 + 4 >> 2] = $168;
        break;
       } while (0);
       $206 = HEAP32[$phi$call405 + 16 >> 2] | 0;
       HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$7 >> 2];
       HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$7 + 4 >> 2];
       __ZN2ut4arch13EntityManager15addComponentRawENS_6EntityEj($1, $tmpcast$byval_copy, $206);
       $$2 = $$1404;
       break;
      }
     case 10:
      {
       $208 = $phi$call405 + 8 | 0;
       $210 = HEAP32[$208 >> 2] | 0;
       $213 = HEAP32[$208 + 4 >> 2] | 0;
       do if (($210 | 0) < 0) {
        $215 = 0 - $210 | 0;
        $217 = HEAP32[$27 >> 2] | 0;
        if (((HEAP32[$29 >> 2] | 0) - $217 >> 3 | 0) <= ($215 | 0)) {
         label = 49;
         break L10;
        }
        $223 = $217 + ($215 << 3) | 0;
        $228 = HEAP32[$223 + 4 >> 2] | 0;
        $229 = $8;
        HEAP32[$229 >> 2] = HEAP32[$223 >> 2];
        HEAP32[$229 + 4 >> 2] = $228;
       } else if (!($213 | $210)) {
        $236 = HEAP32[$41 >> 2] | 0;
        $241 = HEAP32[$236 + 4 >> 2] | 0;
        $242 = $8;
        HEAP32[$242 >> 2] = HEAP32[$236 >> 2];
        HEAP32[$242 + 4 >> 2] = $241;
        break;
       } else {
        $246 = $8;
        HEAP32[$246 >> 2] = $210;
        HEAP32[$246 + 4 >> 2] = $213;
        break;
       } while (0);
       $251 = HEAP32[$phi$call405 + 16 >> 2] | 0;
       HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$8 >> 2];
       HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$8 + 4 >> 2];
       __ZN2ut4arch13EntityManager18removeComponentRawENS_6EntityEj($1, $tmpcast$byval_copy, $251);
       $$2 = $$1404;
       break;
      }
     case 11:
      {
       $252 = $phi$call405 + 8 | 0;
       $253 = $252;
       $258 = HEAP32[$253 + 4 >> 2] | 0;
       $259 = $9;
       HEAP32[$259 >> 2] = HEAP32[$253 >> 2];
       HEAP32[$259 + 4 >> 2] = $258;
       $263 = $phi$call405 + 16 | 0;
       $264 = HEAP32[$263 >> 2] | 0;
       HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$9 >> 2];
       HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$9 + 4 >> 2];
       if (__ZN2ut4arch13EntityManager15hasComponentRawENS_6EntityEj($1, $tmpcast$byval_copy, $264) | 0) {
        $266 = $252;
        $268 = HEAP32[$266 >> 2] | 0;
        $271 = HEAP32[$266 + 4 >> 2] | 0;
        do if (($268 | 0) < 0) {
         $273 = 0 - $268 | 0;
         $275 = HEAP32[$27 >> 2] | 0;
         if (((HEAP32[$29 >> 2] | 0) - $275 >> 3 | 0) <= ($273 | 0)) {
          label = 58;
          break L10;
         }
         $281 = $275 + ($273 << 3) | 0;
         $286 = HEAP32[$281 + 4 >> 2] | 0;
         $287 = $10;
         HEAP32[$287 >> 2] = HEAP32[$281 >> 2];
         HEAP32[$287 + 4 >> 2] = $286;
        } else if (!($271 | $268)) {
         $294 = HEAP32[$41 >> 2] | 0;
         $299 = HEAP32[$294 + 4 >> 2] | 0;
         $300 = $10;
         HEAP32[$300 >> 2] = HEAP32[$294 >> 2];
         HEAP32[$300 + 4 >> 2] = $299;
         break;
        } else {
         $304 = $10;
         HEAP32[$304 >> 2] = $268;
         HEAP32[$304 + 4 >> 2] = $271;
         break;
        } while (0);
        $308 = HEAP32[$263 >> 2] | 0;
        HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$10 >> 2];
        HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$10 + 4 >> 2];
        __ZN2ut4arch13EntityManager18removeComponentRawENS_6EntityEj($1, $tmpcast$byval_copy, $308);
        $$2 = $$1404;
       } else $$2 = $$1404;
       break;
      }
     case 6:
      {
       $310 = HEAP32[$phi$call405 + 24 >> 2] | 0;
       if (!(HEAP32[$30 >> 2] | 0)) $$0201 = $310; else $$0201 = __ZN2ut4arch19EntityCommandBuffer18fixupComponentDataEjPKvRNSt3__26vectorIhNS4_9allocatorIhEEEEPNS_6EntityE($0, HEAP32[$phi$call405 + 16 >> 2] | 0, $310, $4, HEAP32[$27 >> 2] | 0) | 0;
       $318 = $phi$call405 + 8 | 0;
       $320 = HEAP32[$318 >> 2] | 0;
       $323 = HEAP32[$318 + 4 >> 2] | 0;
       do if (($320 | 0) < 0) {
        $325 = 0 - $320 | 0;
        $327 = HEAP32[$27 >> 2] | 0;
        if (((HEAP32[$29 >> 2] | 0) - $327 >> 3 | 0) <= ($325 | 0)) {
         label = 68;
         break L10;
        }
        $333 = $327 + ($325 << 3) | 0;
        $338 = HEAP32[$333 + 4 >> 2] | 0;
        $339 = $11;
        HEAP32[$339 >> 2] = HEAP32[$333 >> 2];
        HEAP32[$339 + 4 >> 2] = $338;
       } else if (!($323 | $320)) {
        $346 = HEAP32[$41 >> 2] | 0;
        $351 = HEAP32[$346 + 4 >> 2] | 0;
        $352 = $11;
        HEAP32[$352 >> 2] = HEAP32[$346 >> 2];
        HEAP32[$352 + 4 >> 2] = $351;
        break;
       } else {
        $356 = $11;
        HEAP32[$356 >> 2] = $320;
        HEAP32[$356 + 4 >> 2] = $323;
        break;
       } while (0);
       $361 = HEAP32[$phi$call405 + 16 >> 2] | 0;
       $363 = HEAP32[$phi$call405 + 20 >> 2] | 0;
       HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$11 >> 2];
       HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$11 + 4 >> 2];
       __ZN2ut4arch13EntityManager19addComponentDataRawENS_6EntityEjPKvj($1, $tmpcast$byval_copy, $361, $$0201, $363);
       $$2 = $$1404;
       break;
      }
     case 13:
      {
       $364 = $phi$call405 + 24 | 0;
       if (HEAP32[$30 >> 2] | 0) __ZN2ut4arch19EntityCommandBuffer18fixupComponentDataEjPKvRNSt3__26vectorIhNS4_9allocatorIhEEEEPNS_6EntityE($0, HEAP32[$phi$call405 + 16 >> 2] | 0, HEAP32[$364 >> 2] | 0, $4, HEAP32[$27 >> 2] | 0) | 0;
       $372 = $phi$call405 + 8 | 0;
       $374 = HEAP32[$372 >> 2] | 0;
       $377 = HEAP32[$372 + 4 >> 2] | 0;
       if (($374 | 0) < 0) {
        $379 = 0 - $374 | 0;
        $381 = HEAP32[$27 >> 2] | 0;
        if (((HEAP32[$29 >> 2] | 0) - $381 >> 3 | 0) <= ($379 | 0)) {
         label = 78;
         break L10;
        }
        $$sink422 = $381 + ($379 << 3) | 0;
        label = 81;
       } else if (!($377 | $374)) {
        $$sink422 = HEAP32[$41 >> 2] | 0;
        label = 81;
       } else {
        $403 = $374;
        $406 = $377;
       }
       if ((label | 0) == 81) {
        label = 0;
        $390 = $$sink422;
        $403 = HEAP32[$390 >> 2] | 0;
        $406 = HEAP32[$390 + 4 >> 2] | 0;
       }
       $397 = HEAP32[$phi$call405 + 16 >> 2] | 0;
       $398 = HEAP32[$364 >> 2] | 0;
       $400 = HEAP32[$phi$call405 + 20 >> 2] | 0;
       $401 = $2;
       HEAP32[$401 >> 2] = $403;
       HEAP32[$401 + 4 >> 2] = $406;
       HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$2 >> 2];
       HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$2 + 4 >> 2];
       __ZN2ut4arch13EntityManager21addSharedComponentRawENS_6EntityEj($1, $tmpcast$byval_copy, $397);
       $407 = $3;
       HEAP32[$407 >> 2] = $403;
       HEAP32[$407 + 4 >> 2] = $406;
       HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$3 >> 2];
       HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
       __ZN2ut4arch13EntityManager25setSharedComponentDataRawENS_6EntityEjPKvj($1, $tmpcast$byval_copy, $397, $398, $400);
       $$2 = $$1404;
       break;
      }
     case 8:
      {
       $412 = HEAP32[$phi$call405 + 24 >> 2] | 0;
       if (!(HEAP32[$30 >> 2] | 0)) $$0203 = $412; else $$0203 = __ZN2ut4arch19EntityCommandBuffer18fixupComponentDataEjPKvRNSt3__26vectorIhNS4_9allocatorIhEEEEPNS_6EntityE($0, HEAP32[$phi$call405 + 16 >> 2] | 0, $412, $4, HEAP32[$27 >> 2] | 0) | 0;
       $420 = $phi$call405 + 8 | 0;
       $422 = HEAP32[$420 >> 2] | 0;
       $425 = HEAP32[$420 + 4 >> 2] | 0;
       do if (($422 | 0) < 0) {
        $427 = 0 - $422 | 0;
        $429 = HEAP32[$27 >> 2] | 0;
        if (((HEAP32[$29 >> 2] | 0) - $429 >> 3 | 0) <= ($427 | 0)) {
         label = 88;
         break L10;
        }
        $435 = $429 + ($427 << 3) | 0;
        $440 = HEAP32[$435 + 4 >> 2] | 0;
        $441 = $12;
        HEAP32[$441 >> 2] = HEAP32[$435 >> 2];
        HEAP32[$441 + 4 >> 2] = $440;
       } else if (!($425 | $422)) {
        $448 = HEAP32[$41 >> 2] | 0;
        $453 = HEAP32[$448 + 4 >> 2] | 0;
        $454 = $12;
        HEAP32[$454 >> 2] = HEAP32[$448 >> 2];
        HEAP32[$454 + 4 >> 2] = $453;
        break;
       } else {
        $458 = $12;
        HEAP32[$458 >> 2] = $422;
        HEAP32[$458 + 4 >> 2] = $425;
        break;
       } while (0);
       $463 = HEAP32[$phi$call405 + 16 >> 2] | 0;
       $465 = HEAP32[$phi$call405 + 20 >> 2] | 0;
       HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$12 >> 2];
       HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$12 + 4 >> 2];
       __ZN2ut4arch13EntityManager19setComponentDataRawENS_6EntityEjPKvj($1, $tmpcast$byval_copy, $463, $$0203, $465);
       $$2 = $$1404;
       break;
      }
     case 14:
      {
       $467 = HEAP32[$phi$call405 + 24 >> 2] | 0;
       if (!(HEAP32[$30 >> 2] | 0)) $$0202 = $467; else $$0202 = __ZN2ut4arch19EntityCommandBuffer18fixupComponentDataEjPKvRNSt3__26vectorIhNS4_9allocatorIhEEEEPNS_6EntityE($0, HEAP32[$phi$call405 + 16 >> 2] | 0, $467, $4, HEAP32[$27 >> 2] | 0) | 0;
       $475 = $phi$call405 + 8 | 0;
       $477 = HEAP32[$475 >> 2] | 0;
       $480 = HEAP32[$475 + 4 >> 2] | 0;
       do if (($477 | 0) < 0) {
        $482 = 0 - $477 | 0;
        $484 = HEAP32[$27 >> 2] | 0;
        if (((HEAP32[$29 >> 2] | 0) - $484 >> 3 | 0) <= ($482 | 0)) {
         label = 98;
         break L10;
        }
        $490 = $484 + ($482 << 3) | 0;
        $495 = HEAP32[$490 + 4 >> 2] | 0;
        $496 = $13;
        HEAP32[$496 >> 2] = HEAP32[$490 >> 2];
        HEAP32[$496 + 4 >> 2] = $495;
       } else if (!($480 | $477)) {
        $503 = HEAP32[$41 >> 2] | 0;
        $508 = HEAP32[$503 + 4 >> 2] | 0;
        $509 = $13;
        HEAP32[$509 >> 2] = HEAP32[$503 >> 2];
        HEAP32[$509 + 4 >> 2] = $508;
        break;
       } else {
        $513 = $13;
        HEAP32[$513 >> 2] = $477;
        HEAP32[$513 + 4 >> 2] = $480;
        break;
       } while (0);
       $518 = HEAP32[$phi$call405 + 16 >> 2] | 0;
       $520 = HEAP32[$phi$call405 + 20 >> 2] | 0;
       HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$13 >> 2];
       HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$13 + 4 >> 2];
       __ZN2ut4arch13EntityManager25setSharedComponentDataRawENS_6EntityEjPKvj($1, $tmpcast$byval_copy, $518, $$0202, $520);
       $$2 = $$1404;
       break;
      }
     case 12:
      {
       $522 = $phi$call405 + 8 | 0;
       $524 = HEAP32[$522 >> 2] | 0;
       $527 = HEAP32[$522 + 4 >> 2] | 0;
       if (($524 | 0) < 0) {
        $529 = 0 - $524 | 0;
        $531 = HEAP32[$27 >> 2] | 0;
        if (((HEAP32[$29 >> 2] | 0) - $531 >> 3 | 0) <= ($529 | 0)) {
         label = 106;
         break L10;
        }
        $$sink423 = $531 + ($529 << 3) | 0;
        label = 109;
       } else if (!($527 | $524)) {
        $$sink423 = HEAP32[$41 >> 2] | 0;
        label = 109;
       } else {
        $548 = $524;
        $551 = $527;
       }
       if ((label | 0) == 109) {
        label = 0;
        $540 = $$sink423;
        $548 = HEAP32[$540 >> 2] | 0;
        $551 = HEAP32[$540 + 4 >> 2] | 0;
       }
       $546 = $14;
       HEAP32[$546 >> 2] = $548;
       HEAP32[$546 + 4 >> 2] = $551;
       $553 = HEAP32[$phi$call405 + 16 >> 2] | 0;
       if (!$553) {
        HEAP32[$42 >> 2] = 0;
        label = 114;
       } else {
        $555 = _strlen($553) | 0;
        HEAP32[$42 >> 2] = $555;
        if (!$555) label = 114; else {
         $558 = _malloc($555 + 1 | 0) | 0;
         HEAP32[$2 >> 2] = $558;
         _memcpy($558 | 0, $553 | 0, $555 | 0) | 0;
         HEAP8[$558 + $555 >> 0] = 0;
        }
       }
       if ((label | 0) == 114) {
        label = 0;
        HEAP32[$2 >> 2] = 0;
       };
       HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$14 >> 2];
       HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$14 + 4 >> 2];
       __ZN2ut4arch13EntityManager13setEntityNameENS_6EntityERKNS_12NativeStringE($1, $tmpcast$byval_copy, $2);
       _free(HEAP32[$2 >> 2] | 0);
       $$2 = $$1404;
       break;
      }
     case 7:
      {
       $562 = HEAP32[$phi$call405 + 24 >> 2] | 0;
       if (!(HEAP32[$30 >> 2] | 0)) $$0199 = $562; else $$0199 = __ZN2ut4arch19EntityCommandBuffer18fixupComponentDataEjPKvRNSt3__26vectorIhNS4_9allocatorIhEEEEPNS_6EntityE($0, HEAP32[$phi$call405 + 16 >> 2] | 0, $562, $4, HEAP32[$27 >> 2] | 0) | 0;
       $570 = $phi$call405 + 8 | 0;
       $572 = HEAP32[$570 >> 2] | 0;
       $575 = HEAP32[$570 + 4 >> 2] | 0;
       do if (($572 | 0) < 0) {
        $577 = 0 - $572 | 0;
        $579 = HEAP32[$27 >> 2] | 0;
        if (((HEAP32[$29 >> 2] | 0) - $579 >> 3 | 0) <= ($577 | 0)) {
         label = 121;
         break L10;
        }
        $585 = $579 + ($577 << 3) | 0;
        $590 = HEAP32[$585 + 4 >> 2] | 0;
        $591 = $15;
        HEAP32[$591 >> 2] = HEAP32[$585 >> 2];
        HEAP32[$591 + 4 >> 2] = $590;
       } else if (!($575 | $572)) {
        $598 = HEAP32[$41 >> 2] | 0;
        $603 = HEAP32[$598 + 4 >> 2] | 0;
        $604 = $15;
        HEAP32[$604 >> 2] = HEAP32[$598 >> 2];
        HEAP32[$604 + 4 >> 2] = $603;
        break;
       } else {
        $608 = $15;
        HEAP32[$608 >> 2] = $572;
        HEAP32[$608 + 4 >> 2] = $575;
        break;
       } while (0);
       $613 = HEAP32[$phi$call405 + 16 >> 2] | 0;
       $615 = HEAP32[$phi$call405 + 20 >> 2] | 0;
       HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$15 >> 2];
       HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$15 + 4 >> 2];
       __ZN2ut4arch13EntityManager27addComponentDataRawWithMoveENS_6EntityEjPvjb($1, $tmpcast$byval_copy, $613, $$0199, $615, 1);
       $$2 = $$1404;
       break;
      }
     case 9:
      {
       $617 = HEAP32[$phi$call405 + 24 >> 2] | 0;
       if (!(HEAP32[$30 >> 2] | 0)) $$0197 = $617; else $$0197 = __ZN2ut4arch19EntityCommandBuffer18fixupComponentDataEjPKvRNSt3__26vectorIhNS4_9allocatorIhEEEEPNS_6EntityE($0, HEAP32[$phi$call405 + 16 >> 2] | 0, $617, $4, HEAP32[$27 >> 2] | 0) | 0;
       $625 = $phi$call405 + 8 | 0;
       $627 = HEAP32[$625 >> 2] | 0;
       $630 = HEAP32[$625 + 4 >> 2] | 0;
       do if (($627 | 0) < 0) {
        $632 = 0 - $627 | 0;
        $634 = HEAP32[$27 >> 2] | 0;
        if (((HEAP32[$29 >> 2] | 0) - $634 >> 3 | 0) <= ($632 | 0)) {
         label = 131;
         break L10;
        }
        $640 = $634 + ($632 << 3) | 0;
        $645 = HEAP32[$640 + 4 >> 2] | 0;
        $646 = $16;
        HEAP32[$646 >> 2] = HEAP32[$640 >> 2];
        HEAP32[$646 + 4 >> 2] = $645;
       } else if (!($630 | $627)) {
        $653 = HEAP32[$41 >> 2] | 0;
        $658 = HEAP32[$653 + 4 >> 2] | 0;
        $659 = $16;
        HEAP32[$659 >> 2] = HEAP32[$653 >> 2];
        HEAP32[$659 + 4 >> 2] = $658;
        break;
       } else {
        $663 = $16;
        HEAP32[$663 >> 2] = $627;
        HEAP32[$663 + 4 >> 2] = $630;
        break;
       } while (0);
       $668 = HEAP32[$phi$call405 + 16 >> 2] | 0;
       $670 = HEAP32[$phi$call405 + 20 >> 2] | 0;
       HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$16 >> 2];
       HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$16 + 4 >> 2];
       __ZN2ut4arch13EntityManager24setComponentDataWithMoveENS_6EntityEjPvjb($1, $tmpcast$byval_copy, $668, $$0197, $670, 1);
       $$2 = $$1404;
       break;
      }
     case 16:
      {
       HEAP32[$2 >> 2] = 0;
       HEAP32[$39 >> 2] = 0;
       HEAP32[$40 >> 2] = 0;
       $671 = $phi$call405 + 16 | 0;
       $672 = HEAP32[$671 >> 2] | 0;
       $674 = HEAP32[6067] | 0;
       if ((HEAP32[6068] | 0) - $674 >> 2 >>> 0 <= $672 >>> 0) {
        label = 137;
        break L10;
       }
       $680 = HEAP32[$674 + ($672 << 2) >> 2] | 0;
       HEAP32[$2 >> 2] = HEAP32[$phi$call405 + 24 >> 2];
       $687 = ((HEAP32[$phi$call405 + 20 >> 2] | 0) >>> 0) / ((HEAP32[$680 + 12 >> 2] | 0) >>> 0) | 0;
       HEAP32[$40 >> 2] = $687;
       HEAP32[$39 >> 2] = $687;
       $689 = $phi$call405 + 8 | 0;
       $691 = HEAP32[$689 >> 2] | 0;
       $694 = HEAP32[$689 + 4 >> 2] | 0;
       do if (($691 | 0) < 0) {
        $696 = 0 - $691 | 0;
        $698 = HEAP32[$27 >> 2] | 0;
        if (((HEAP32[$29 >> 2] | 0) - $698 >> 3 | 0) <= ($696 | 0)) {
         label = 141;
         break L10;
        }
        $704 = $698 + ($696 << 3) | 0;
        $709 = HEAP32[$704 + 4 >> 2] | 0;
        $710 = $17;
        HEAP32[$710 >> 2] = HEAP32[$704 >> 2];
        HEAP32[$710 + 4 >> 2] = $709;
       } else if (!($694 | $691)) {
        $717 = HEAP32[$41 >> 2] | 0;
        $722 = HEAP32[$717 + 4 >> 2] | 0;
        $723 = $17;
        HEAP32[$723 >> 2] = HEAP32[$717 >> 2];
        HEAP32[$723 + 4 >> 2] = $722;
        break;
       } else {
        $727 = $17;
        HEAP32[$727 >> 2] = $691;
        HEAP32[$727 + 4 >> 2] = $694;
        break;
       } while (0);
       $731 = HEAP32[$671 >> 2] | 0;
       HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$17 >> 2];
       HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$17 + 4 >> 2];
       __ZN2ut4arch13EntityManager16setBufferDataRawENS_6EntityEjPKNS_16NativeBufferBaseE($1, $tmpcast$byval_copy, $731, $2);
       $$2 = $$1404;
       break;
      }
     case 17:
      {
       $733 = $phi$call405 + 8 | 0;
       $735 = HEAP32[$733 >> 2] | 0;
       $738 = HEAP32[$733 + 4 >> 2] | 0;
       do if (($735 | 0) < 0) {
        if (((HEAP32[$29 >> 2] | 0) - (HEAP32[$27 >> 2] | 0) >> 3 | 0) <= (0 - $735 | 0)) {
         label = 148;
         break L10;
        }
        $746 = 0 - $735 | 0;
        $748 = HEAP32[$27 >> 2] | 0;
        if (((HEAP32[$29 >> 2] | 0) - $748 >> 3 | 0) <= ($746 | 0)) {
         label = 151;
         break L10;
        }
        $754 = $748 + ($746 << 3) | 0;
        $759 = HEAP32[$754 + 4 >> 2] | 0;
        $760 = $18;
        HEAP32[$760 >> 2] = HEAP32[$754 >> 2];
        HEAP32[$760 + 4 >> 2] = $759;
       } else if (!($738 | $735)) {
        $767 = HEAP32[$41 >> 2] | 0;
        $772 = HEAP32[$767 + 4 >> 2] | 0;
        $773 = $18;
        HEAP32[$773 >> 2] = HEAP32[$767 >> 2];
        HEAP32[$773 + 4 >> 2] = $772;
        break;
       } else {
        $777 = $18;
        HEAP32[$777 >> 2] = $735;
        HEAP32[$777 + 4 >> 2] = $738;
        break;
       } while (0);
       $782 = HEAP32[$phi$call405 + 16 >> 2] | 0;
       HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$18 >> 2];
       HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$18 + 4 >> 2];
       __ZN2ut4arch13EntityManager24setBufferDataRawWithMoveENS_6EntityEjPNS_16NativeBufferBaseE($1, $tmpcast$byval_copy, $782, $phi$call405 + 20 | 0);
       $$2 = $$1404;
       break;
      }
     default:
      {
       label = 156;
       break L10;
      }
     } while (0);
     $phi$call405 = (HEAP32[$phi$call405 + 4 >> 2] | 0) + $phi$call405 | 0;
     if (($phi$call405 | 0) == 0 ? 1 : ($phi$call405 | 0) >= ((HEAP32[$43 >> 2] | 0) + $47 | 0)) {
      $$1$lcssa = $$2;
      break L12;
     } else $$1404 = $$2;
    }
   } while (0);
   $$0408 = HEAP32[$$0408 >> 2] | 0;
   if (!$$0408) {
    label = 159;
    break;
   } else $$0195407 = $$1$lcssa;
  }
  switch (label | 0) {
  case 15:
   {
    _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 6491, 6212, 320);
    break;
   }
  case 19:
   {
    _snprintf(25060, 1024, 27124, $vararg_buffer3) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 6491, 6212, 332);
    break;
   }
  case 32:
   {
    _snprintf(25060, 1024, 6543, $vararg_buffer5) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 6575, 6212, 297);
    break;
   }
  case 41:
   {
    _snprintf(25060, 1024, 6543, $vararg_buffer7) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 6575, 6212, 297);
    break;
   }
  case 49:
   {
    _snprintf(25060, 1024, 6543, $vararg_buffer9) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 6575, 6212, 297);
    break;
   }
  case 58:
   {
    _snprintf(25060, 1024, 6543, $vararg_buffer11) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 6575, 6212, 297);
    break;
   }
  case 68:
   {
    _snprintf(25060, 1024, 6543, $vararg_buffer13) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 6575, 6212, 297);
    break;
   }
  case 78:
   {
    _snprintf(25060, 1024, 6543, $vararg_buffer15) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 6575, 6212, 297);
    break;
   }
  case 88:
   {
    _snprintf(25060, 1024, 6543, $vararg_buffer17) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 6575, 6212, 297);
    break;
   }
  case 98:
   {
    _snprintf(25060, 1024, 6543, $vararg_buffer19) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 6575, 6212, 297);
    break;
   }
  case 106:
   {
    _snprintf(25060, 1024, 6543, $vararg_buffer21) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 6575, 6212, 297);
    break;
   }
  case 121:
   {
    _snprintf(25060, 1024, 6543, $vararg_buffer23) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 6575, 6212, 297);
    break;
   }
  case 131:
   {
    _snprintf(25060, 1024, 6543, $vararg_buffer25) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 6575, 6212, 297);
    break;
   }
  case 137:
   {
    _snprintf(25060, 1024, 27124, $vararg_buffer27) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
    break;
   }
  case 141:
   {
    _snprintf(25060, 1024, 6543, $vararg_buffer29) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 6575, 6212, 297);
    break;
   }
  case 148:
   {
    _snprintf(25060, 1024, 6543, $vararg_buffer31) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 6575, 6212, 297);
    break;
   }
  case 151:
   {
    _snprintf(25060, 1024, 6543, $vararg_buffer33) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 6575, 6212, 297);
    break;
   }
  case 156:
   {
    _snprintf(25060, 1024, 6603, $vararg_buffer35) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 23477, 6212, 444);
    break;
   }
  case 159:
   {
    $800 = HEAP32[$4 >> 2] | 0;
    break L8;
    break;
   }
  }
 } while (0);
 $796 = $0 + 24 | 0;
 HEAP32[$796 >> 2] = (HEAP32[$796 >> 2] | 0) + 1;
 __ZN2ut4arch13EntityManager24didCommandBufferPlaybackERNS0_19EntityCommandBufferE($1, $0);
 if (!$800) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$34 >> 2] = $800;
 __ZdlPv($800);
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$3 = 0, $102 = 0, $103 = 0, $110 = 0, $111 = 0, $118 = 0, $119 = 0, $129 = 0, $13 = 0, $130 = 0, $137 = 0, $138 = 0, $14 = 0, $145 = 0, $146 = 0, $156 = 0, $157 = 0, $164 = 0, $165 = 0, $175 = 0, $176 = 0, $186 = 0, $187 = 0, $194 = 0, $195 = 0, $199 = 0, $202 = 0, $203 = 0, $21 = 0, $210 = 0, $211 = 0, $218 = 0, $219 = 0, $22 = 0, $229 = 0, $230 = 0, $237 = 0, $238 = 0, $245 = 0, $246 = 0, $253 = 0, $254 = 0, $261 = 0, $262 = 0, $272 = 0, $273 = 0, $280 = 0, $281 = 0, $288 = 0, $289 = 0, $29 = 0, $296 = 0, $297 = 0, $3 = 0, $30 = 0, $304 = 0, $305 = 0, $315 = 0, $316 = 0, $323 = 0, $324 = 0, $331 = 0, $332 = 0, $342 = 0, $343 = 0, $350 = 0, $351 = 0, $358 = 0, $359 = 0, $366 = 0, $367 = 0, $37 = 0, $374 = 0, $375 = 0, $38 = 0, $382 = 0, $383 = 0, $393 = 0, $394 = 0, $404 = 0, $405 = 0, $412 = 0, $413 = 0, $420 = 0, $421 = 0, $428 = 0, $429 = 0, $439 = 0, $440 = 0, $444 = 0, $48 = 0, $49 = 0, $56 = 0, $57 = 0, $64 = 0, $65 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $79 = 0, $86 = 0, $87 = 0, $94 = 0, $95 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $3 = sp;
 L1 : do if (($1 - $0 | 0) > 1) do switch (HEAP8[$0 >> 0] | 0) {
 case 97:
  {
   switch (HEAP8[$0 + 1 >> 0] | 0) {
   case 97:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($3, 22577);
     $13 = $2 + 4 | 0;
     $14 = HEAP32[$13 >> 2] | 0;
     if ($14 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($14, $3);
      HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 110:
   case 100:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($3, 22588);
     $21 = $2 + 4 | 0;
     $22 = HEAP32[$21 >> 2] | 0;
     if ($22 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($22, $3);
      HEAP32[$21 >> 2] = (HEAP32[$21 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 78:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($3, 22598);
     $29 = $2 + 4 | 0;
     $30 = HEAP32[$29 >> 2] | 0;
     if ($30 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($30, $3);
      HEAP32[$29 >> 2] = (HEAP32[$29 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 83:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($3, 22609);
     $37 = $2 + 4 | 0;
     $38 = HEAP32[$37 >> 2] | 0;
     if ($38 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($38, $3);
      HEAP32[$37 >> 2] = (HEAP32[$37 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = $0;
     break L1;
    }
   }
   break;
  }
 case 99:
  {
   switch (HEAP8[$0 + 1 >> 0] | 0) {
   case 108:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($3, 22619);
     $48 = $2 + 4 | 0;
     $49 = HEAP32[$48 >> 2] | 0;
     if ($49 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($49, $3);
      HEAP32[$48 >> 2] = (HEAP32[$48 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 109:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($3, 22630);
     $56 = $2 + 4 | 0;
     $57 = HEAP32[$56 >> 2] | 0;
     if ($57 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($57, $3);
      HEAP32[$56 >> 2] = (HEAP32[$56 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 111:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($3, 22640);
     $64 = $2 + 4 | 0;
     $65 = HEAP32[$64 >> 2] | 0;
     if ($65 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($65, $3);
      HEAP32[$64 >> 2] = (HEAP32[$64 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 118:
    {
     $72 = $2 + 63 | 0;
     $73 = HEAP8[$72 >> 0] | 0;
     HEAP8[$72 >> 0] = 0;
     $74 = $0 + 2 | 0;
     $75 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($74, $1, $2) | 0;
     HEAP8[$72 >> 0] = $73;
     if (($75 | 0) == ($74 | 0)) {
      $$3 = $0;
      break L1;
     }
     $79 = HEAP32[$2 + 4 >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($79 | 0)) {
      $$3 = $0;
      break L1;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($79 + -24 | 0, 0, 22650) | 0;
     HEAP8[$2 + 60 >> 0] = 1;
     $$3 = $75;
     break L1;
     break;
    }
   default:
    {
     $$3 = $0;
     break L1;
    }
   }
   break;
  }
 case 100:
  {
   switch (HEAP8[$0 + 1 >> 0] | 0) {
   case 97:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj18EEERAT__Kc($3, 22660);
     $86 = $2 + 4 | 0;
     $87 = HEAP32[$86 >> 2] | 0;
     if ($87 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($87, $3);
      HEAP32[$86 >> 2] = (HEAP32[$86 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 101:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($3, 22678);
     $94 = $2 + 4 | 0;
     $95 = HEAP32[$94 >> 2] | 0;
     if ($95 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($95, $3);
      HEAP32[$94 >> 2] = (HEAP32[$94 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 108:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj16EEERAT__Kc($3);
     $102 = $2 + 4 | 0;
     $103 = HEAP32[$102 >> 2] | 0;
     if ($103 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($103, $3);
      HEAP32[$102 >> 2] = (HEAP32[$102 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 118:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($3, 22688);
     $110 = $2 + 4 | 0;
     $111 = HEAP32[$110 >> 2] | 0;
     if ($111 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($111, $3);
      HEAP32[$110 >> 2] = (HEAP32[$110 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 86:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($3, 22698);
     $118 = $2 + 4 | 0;
     $119 = HEAP32[$118 >> 2] | 0;
     if ($119 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($119, $3);
      HEAP32[$118 >> 2] = (HEAP32[$118 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = $0;
     break L1;
    }
   }
   break;
  }
 case 101:
  {
   switch (HEAP8[$0 + 1 >> 0] | 0) {
   case 111:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($3, 22709);
     $129 = $2 + 4 | 0;
     $130 = HEAP32[$129 >> 2] | 0;
     if ($130 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($130, $3);
      HEAP32[$129 >> 2] = (HEAP32[$129 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 79:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($3, 22719);
     $137 = $2 + 4 | 0;
     $138 = HEAP32[$137 >> 2] | 0;
     if ($138 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($138, $3);
      HEAP32[$137 >> 2] = (HEAP32[$137 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 113:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($3, 22730);
     $145 = $2 + 4 | 0;
     $146 = HEAP32[$145 >> 2] | 0;
     if ($146 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($146, $3);
      HEAP32[$145 >> 2] = (HEAP32[$145 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = $0;
     break L1;
    }
   }
   break;
  }
 case 103:
  {
   switch (HEAP8[$0 + 1 >> 0] | 0) {
   case 101:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($3, 22741);
     $156 = $2 + 4 | 0;
     $157 = HEAP32[$156 >> 2] | 0;
     if ($157 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($157, $3);
      HEAP32[$156 >> 2] = (HEAP32[$156 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 116:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($3, 22752);
     $164 = $2 + 4 | 0;
     $165 = HEAP32[$164 >> 2] | 0;
     if ($165 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($165, $3);
      HEAP32[$164 >> 2] = (HEAP32[$164 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = $0;
     break L1;
    }
   }
   break;
  }
 case 105:
  {
   if ((HEAP8[$0 + 1 >> 0] | 0) != 120) {
    $$3 = $0;
    break L1;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($3, 22762);
   $175 = $2 + 4 | 0;
   $176 = HEAP32[$175 >> 2] | 0;
   if ($176 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($176, $3);
    HEAP32[$175 >> 2] = (HEAP32[$175 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$3 = $0 + 2 | 0;
   break L1;
   break;
  }
 case 108:
  {
   switch (HEAP8[$0 + 1 >> 0] | 0) {
   case 101:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($3, 22773);
     $186 = $2 + 4 | 0;
     $187 = HEAP32[$186 >> 2] | 0;
     if ($187 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($187, $3);
      HEAP32[$186 >> 2] = (HEAP32[$186 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 105:
    {
     $194 = $0 + 2 | 0;
     $195 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($194, $1, $2) | 0;
     if (($195 | 0) == ($194 | 0)) {
      $$3 = $0;
      break L1;
     }
     $199 = HEAP32[$2 + 4 >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($199 | 0)) {
      $$3 = $0;
      break L1;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($199 + -24 | 0, 0, 22784) | 0;
     $$3 = $195;
     break L1;
     break;
    }
   case 115:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($3, 22796);
     $202 = $2 + 4 | 0;
     $203 = HEAP32[$202 >> 2] | 0;
     if ($203 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($203, $3);
      HEAP32[$202 >> 2] = (HEAP32[$202 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 83:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($3, 22807);
     $210 = $2 + 4 | 0;
     $211 = HEAP32[$210 >> 2] | 0;
     if ($211 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($211, $3);
      HEAP32[$210 >> 2] = (HEAP32[$210 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 116:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($3, 22819);
     $218 = $2 + 4 | 0;
     $219 = HEAP32[$218 >> 2] | 0;
     if ($219 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($219, $3);
      HEAP32[$218 >> 2] = (HEAP32[$218 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = $0;
     break L1;
    }
   }
   break;
  }
 case 109:
  {
   switch (HEAP8[$0 + 1 >> 0] | 0) {
   case 105:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($3, 22829);
     $229 = $2 + 4 | 0;
     $230 = HEAP32[$229 >> 2] | 0;
     if ($230 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($230, $3);
      HEAP32[$229 >> 2] = (HEAP32[$229 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 73:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($3, 22839);
     $237 = $2 + 4 | 0;
     $238 = HEAP32[$237 >> 2] | 0;
     if ($238 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($238, $3);
      HEAP32[$237 >> 2] = (HEAP32[$237 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 108:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($3, 22678);
     $245 = $2 + 4 | 0;
     $246 = HEAP32[$245 >> 2] | 0;
     if ($246 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($246, $3);
      HEAP32[$245 >> 2] = (HEAP32[$245 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 76:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($3, 22850);
     $253 = $2 + 4 | 0;
     $254 = HEAP32[$253 >> 2] | 0;
     if ($254 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($254, $3);
      HEAP32[$253 >> 2] = (HEAP32[$253 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 109:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($3, 22861);
     $261 = $2 + 4 | 0;
     $262 = HEAP32[$261 >> 2] | 0;
     if ($262 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($262, $3);
      HEAP32[$261 >> 2] = (HEAP32[$261 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = $0;
     break L1;
    }
   }
   break;
  }
 case 110:
  {
   switch (HEAP8[$0 + 1 >> 0] | 0) {
   case 97:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj15EEERAT__Kc($3, 22872);
     $272 = $2 + 4 | 0;
     $273 = HEAP32[$272 >> 2] | 0;
     if ($273 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($273, $3);
      HEAP32[$272 >> 2] = (HEAP32[$272 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 101:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($3, 22887);
     $280 = $2 + 4 | 0;
     $281 = HEAP32[$280 >> 2] | 0;
     if ($281 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($281, $3);
      HEAP32[$280 >> 2] = (HEAP32[$280 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 103:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($3, 22829);
     $288 = $2 + 4 | 0;
     $289 = HEAP32[$288 >> 2] | 0;
     if ($289 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($289, $3);
      HEAP32[$288 >> 2] = (HEAP32[$288 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 116:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($3, 22898);
     $296 = $2 + 4 | 0;
     $297 = HEAP32[$296 >> 2] | 0;
     if ($297 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($297, $3);
      HEAP32[$296 >> 2] = (HEAP32[$296 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 119:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj13EEERAT__Kc($3, 22908);
     $304 = $2 + 4 | 0;
     $305 = HEAP32[$304 >> 2] | 0;
     if ($305 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($305, $3);
      HEAP32[$304 >> 2] = (HEAP32[$304 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = $0;
     break L1;
    }
   }
   break;
  }
 case 111:
  {
   switch (HEAP8[$0 + 1 >> 0] | 0) {
   case 111:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($3, 22921);
     $315 = $2 + 4 | 0;
     $316 = HEAP32[$315 >> 2] | 0;
     if ($316 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($316, $3);
      HEAP32[$315 >> 2] = (HEAP32[$315 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 114:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($3, 22932);
     $323 = $2 + 4 | 0;
     $324 = HEAP32[$323 >> 2] | 0;
     if ($324 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($324, $3);
      HEAP32[$323 >> 2] = (HEAP32[$323 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 82:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($3, 22942);
     $331 = $2 + 4 | 0;
     $332 = HEAP32[$331 >> 2] | 0;
     if ($332 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($332, $3);
      HEAP32[$331 >> 2] = (HEAP32[$331 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = $0;
     break L1;
    }
   }
   break;
  }
 case 112:
  {
   switch (HEAP8[$0 + 1 >> 0] | 0) {
   case 109:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($3, 22953);
     $342 = $2 + 4 | 0;
     $343 = HEAP32[$342 >> 2] | 0;
     if ($343 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($343, $3);
      HEAP32[$342 >> 2] = (HEAP32[$342 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 108:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($3, 22965);
     $350 = $2 + 4 | 0;
     $351 = HEAP32[$350 >> 2] | 0;
     if ($351 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($351, $3);
      HEAP32[$350 >> 2] = (HEAP32[$350 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 76:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($3, 22975);
     $358 = $2 + 4 | 0;
     $359 = HEAP32[$358 >> 2] | 0;
     if ($359 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($359, $3);
      HEAP32[$358 >> 2] = (HEAP32[$358 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 112:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($3, 22986);
     $366 = $2 + 4 | 0;
     $367 = HEAP32[$366 >> 2] | 0;
     if ($367 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($367, $3);
      HEAP32[$366 >> 2] = (HEAP32[$366 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 115:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($3, 22965);
     $374 = $2 + 4 | 0;
     $375 = HEAP32[$374 >> 2] | 0;
     if ($375 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($375, $3);
      HEAP32[$374 >> 2] = (HEAP32[$374 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 116:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($3, 22997);
     $382 = $2 + 4 | 0;
     $383 = HEAP32[$382 >> 2] | 0;
     if ($383 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($383, $3);
      HEAP32[$382 >> 2] = (HEAP32[$382 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = $0;
     break L1;
    }
   }
   break;
  }
 case 113:
  {
   if ((HEAP8[$0 + 1 >> 0] | 0) != 117) {
    $$3 = $0;
    break L1;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($3, 23008);
   $393 = $2 + 4 | 0;
   $394 = HEAP32[$393 >> 2] | 0;
   if ($394 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($394, $3);
    HEAP32[$393 >> 2] = (HEAP32[$393 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$3 = $0 + 2 | 0;
   break L1;
   break;
  }
 case 114:
  {
   switch (HEAP8[$0 + 1 >> 0] | 0) {
   case 109:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($3, 23018);
     $404 = $2 + 4 | 0;
     $405 = HEAP32[$404 >> 2] | 0;
     if ($405 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($405, $3);
      HEAP32[$404 >> 2] = (HEAP32[$404 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 77:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($3, 23028);
     $412 = $2 + 4 | 0;
     $413 = HEAP32[$412 >> 2] | 0;
     if ($413 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($413, $3);
      HEAP32[$412 >> 2] = (HEAP32[$412 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 115:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($3, 23039);
     $420 = $2 + 4 | 0;
     $421 = HEAP32[$420 >> 2] | 0;
     if ($421 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($421, $3);
      HEAP32[$420 >> 2] = (HEAP32[$420 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 83:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($3, 23050);
     $428 = $2 + 4 | 0;
     $429 = HEAP32[$428 >> 2] | 0;
     if ($429 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($429, $3);
      HEAP32[$428 >> 2] = (HEAP32[$428 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = $0;
     break L1;
    }
   }
   break;
  }
 case 118:
  {
   if (((HEAP8[$0 + 1 >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
    $$3 = $0;
    break L1;
   }
   $439 = $0 + 2 | 0;
   $440 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($439, $1, $2) | 0;
   if (($440 | 0) == ($439 | 0)) {
    $$3 = $0;
    break L1;
   }
   $444 = HEAP32[$2 + 4 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($444 | 0)) {
    $$3 = $0;
    break L1;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($444 + -24 | 0, 0, 22650) | 0;
   $$3 = $440;
   break L1;
   break;
  }
 default:
  {
   $$3 = $0;
   break L1;
  }
 } while (0); else $$3 = $0; while (0);
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZN2ut4arch13EntityManager12getArchetypeENS_6EntityE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i114 = 0, $$014$i$i$i = 0, $$02832$i$i$i = 0, $$02832$i$i$i44 = 0, $$02832$i$i$i61 = 0, $$02832$i$i$i80 = 0, $$02833$i$i$i = 0, $$02833$i$i$i53 = 0, $$02833$i$i$i70 = 0, $$02833$i$i$i89 = 0, $$02833$us$i$i$i = 0, $$02833$us$i$i$i47 = 0, $$02833$us$i$i$i64 = 0, $$02833$us$i$i$i83 = 0, $$032172 = 0, $$033168 = 0, $$04575$i$i$i = 0, $$04575$i$i$i100 = 0, $$04576$i$i$i = 0, $$04576$i$i$i111 = 0, $$04576$us$i$i$i = 0, $$04576$us$i$i$i103 = 0, $$047$i$i$i = 0, $$047$i$i$i118 = 0, $$1 = 0, $$1$i$i$i = 0, $$1$i$i$i119 = 0, $$2 = 0, $$2$in = 0, $$byval_copy = 0, $$byval_copy5 = 0, $$byval_copy6 = 0, $$in = 0, $$pr211 = 0, $$sink = 0, $$sink255 = 0, $$sroa$0$0$i$i$i = 0, $$sroa$0$0$i$i$i94 = 0, $$sroa$0132$0166 = 0, $$sroa$0132$0167 = 0, $103 = 0, $108 = 0, $113 = 0, $119 = 0, $12 = 0, $121 = 0, $123 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $131 = 0, $132 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $147 = 0, $153 = 0, $154 = 0, $158 = 0, $16 = 0, $168 = 0, $173 = 0, $177 = 0, $18 = 0, $182 = 0.0, $184 = 0.0, $194 = 0, $197 = 0, $199 = 0, $2 = 0, $200 = 0, $207 = 0, $208 = 0, $211 = 0, $214 = 0, $215 = 0, $22 = 0, $223 = 0, $229 = 0, $230 = 0, $232 = 0, $234 = 0, $240 = 0, $241 = 0, $245 = 0, $248 = 0, $25 = 0, $252 = 0, $254 = 0, $257 = 0, $259 = 0, $26 = 0, $264 = 0, $265 = 0, $268 = 0, $269 = 0, $271 = 0, $273 = 0, $279 = 0, $280 = 0, $284 = 0, $285 = 0, $293 = 0, $298 = 0, $3 = 0, $30 = 0, $303 = 0, $304 = 0, $306 = 0, $308 = 0, $31 = 0, $314 = 0, $315 = 0, $319 = 0, $320 = 0, $328 = 0, $333 = 0, $339 = 0, $341 = 0, $343 = 0, $348 = 0, $349 = 0, $353 = 0, $363 = 0, $368 = 0, $372 = 0, $374 = 0, $378 = 0.0, $380 = 0, $381 = 0.0, $384 = 0, $39 = 0, $392 = 0, $395 = 0, $397 = 0, $398 = 0, $4 = 0, $405 = 0, $406 = 0, $409 = 0, $412 = 0, $413 = 0, $421 = 0, $432 = 0, $434 = 0, $44 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $54 = 0, $55 = 0, $59 = 0, $6 = 0, $61 = 0, $7 = 0, $71 = 0, $78 = 0, $8 = 0, $80 = 0, $82 = 0, $84 = 0, $89 = 0, $90 = 0, $94 = 0, $95 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, label = 0, sp = 0, $$014$i$i$i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $$byval_copy6 = sp + 88 | 0;
 $$byval_copy5 = sp + 84 | 0;
 $$byval_copy = sp + 80 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $2 = sp + 76 | 0;
 $3 = sp + 64 | 0;
 $4 = sp + 44 | 0;
 $5 = sp + 28 | 0;
 $6 = sp + 40 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 20 | 0;
 __ZN2ut4arch13EntityManager19assertEntitiesExistEPKNS_6EntityEiPKc($0, $1, 1, 12692);
 if ((HEAP32[$0 + 36 >> 2] | 0) > 0) {
  $12 = HEAP32[$1 >> 2] | 0;
  $13 = $0 + 132 | 0;
  $14 = HEAP32[$13 >> 2] | 0;
  L3 : do if ($14 | 0) {
   $16 = $14 + -1 | 0;
   $18 = ($16 & $14 | 0) == 0;
   if ($18) $25 = $16 & $12; else if ($12 >>> 0 < $14 >>> 0) $25 = $12; else $25 = ($12 >>> 0) % ($14 >>> 0) | 0;
   $22 = $0 + 128 | 0;
   $26 = HEAP32[(HEAP32[$22 >> 2] | 0) + ($25 << 2) >> 2] | 0;
   if ($26 | 0) {
    $$02832$i$i$i = HEAP32[$26 >> 2] | 0;
    if ($$02832$i$i$i | 0) {
     L12 : do if ($18) {
      $$02833$us$i$i$i = $$02832$i$i$i;
      while (1) {
       $30 = HEAP32[$$02833$us$i$i$i + 4 >> 2] | 0;
       $31 = ($30 | 0) == ($12 | 0);
       if (!($31 | ($30 & $16 | 0) == ($25 | 0))) break L3;
       if ($31) if ((HEAP32[$$02833$us$i$i$i + 8 >> 2] | 0) == ($12 | 0)) {
        $$sroa$0$0$i$i$i = $$02833$us$i$i$i;
        break L12;
       }
       $$02833$us$i$i$i = HEAP32[$$02833$us$i$i$i >> 2] | 0;
       if (!$$02833$us$i$i$i) break L3;
      }
     } else {
      $$02833$i$i$i = $$02832$i$i$i;
      while (1) {
       $39 = HEAP32[$$02833$i$i$i + 4 >> 2] | 0;
       if (($39 | 0) == ($12 | 0)) {
        if ((HEAP32[$$02833$i$i$i + 8 >> 2] | 0) == ($12 | 0)) {
         $$sroa$0$0$i$i$i = $$02833$i$i$i;
         break L12;
        }
       } else {
        if ($39 >>> 0 < $14 >>> 0) $44 = $39; else $44 = ($39 >>> 0) % ($14 >>> 0) | 0;
        if (($44 | 0) != ($25 | 0)) break L3;
       }
       $$02833$i$i$i = HEAP32[$$02833$i$i$i >> 2] | 0;
       if (!$$02833$i$i$i) break L3;
      }
     } while (0);
     $49 = $$sroa$0$0$i$i$i + 12 | 0;
     HEAP32[$2 >> 2] = $49;
     HEAP32[$3 >> 2] = 0;
     $50 = $3 + 4 | 0;
     HEAP32[$50 >> 2] = 0;
     $51 = $3 + 8 | 0;
     HEAP32[$51 >> 2] = 0;
     $52 = $0 + 8 | 0;
     $$in = $49;
     $54 = 0;
     $55 = 0;
     L31 : while (1) {
      if (($54 | 0) == ($55 | 0)) __ZNSt3__26vectorIPN2ut4arch13EntityManager11FreshEntityENS_9allocatorIS5_EEE21__push_back_slow_pathIRKS5_EEvOT_($3, $2); else {
       HEAP32[$54 >> 2] = $$in;
       HEAP32[$50 >> 2] = (HEAP32[$50 >> 2] | 0) + 4;
      }
      $59 = HEAP32[$2 >> 2] | 0;
      $61 = HEAP32[$59 + 8 >> 2] | 0;
      if (!$61) {
       $71 = (HEAP8[$59 + 48 >> 0] | 0) != 0;
       if (!(HEAP32[$59 + 12 >> 2] | 0)) {
        label = 31;
        break;
       }
       if ($71) {
        label = 35;
        break;
       } else $84 = 0;
      } else if (!(HEAP8[$59 + 48 >> 0] | 0)) $84 = $61; else {
       label = 35;
       break;
      }
      $78 = HEAP32[$13 >> 2] | 0;
      if (!$78) {
       label = 57;
       break;
      }
      $80 = $78 + -1 | 0;
      $82 = ($80 & $78 | 0) == 0;
      if ($82) $89 = $80 & $84; else if ($84 >>> 0 < $78 >>> 0) $89 = $84; else $89 = ($84 >>> 0) % ($78 >>> 0) | 0;
      $90 = HEAP32[(HEAP32[$22 >> 2] | 0) + ($89 << 2) >> 2] | 0;
      if (!$90) {
       label = 57;
       break;
      }
      $$02832$i$i$i80 = HEAP32[$90 >> 2] | 0;
      if (!$$02832$i$i$i80) {
       label = 57;
       break;
      }
      L50 : do if ($82) {
       $$02833$us$i$i$i83 = $$02832$i$i$i80;
       while (1) {
        $94 = HEAP32[$$02833$us$i$i$i83 + 4 >> 2] | 0;
        $95 = ($94 | 0) == ($84 | 0);
        if (!($95 | ($94 & $80 | 0) == ($89 | 0))) {
         label = 57;
         break L31;
        }
        if ($95) if ((HEAP32[$$02833$us$i$i$i83 + 8 >> 2] | 0) == ($84 | 0)) {
         $$sroa$0$0$i$i$i94 = $$02833$us$i$i$i83;
         break L50;
        }
        $$02833$us$i$i$i83 = HEAP32[$$02833$us$i$i$i83 >> 2] | 0;
        if (!$$02833$us$i$i$i83) {
         label = 57;
         break L31;
        }
       }
      } else {
       $$02833$i$i$i89 = $$02832$i$i$i80;
       while (1) {
        $103 = HEAP32[$$02833$i$i$i89 + 4 >> 2] | 0;
        if (($103 | 0) == ($84 | 0)) {
         if ((HEAP32[$$02833$i$i$i89 + 8 >> 2] | 0) == ($84 | 0)) {
          $$sroa$0$0$i$i$i94 = $$02833$i$i$i89;
          break L50;
         }
        } else {
         if ($103 >>> 0 < $78 >>> 0) $108 = $103; else $108 = ($103 >>> 0) % ($78 >>> 0) | 0;
         if (($108 | 0) != ($89 | 0)) {
          label = 57;
          break L31;
         }
        }
        $$02833$i$i$i89 = HEAP32[$$02833$i$i$i89 >> 2] | 0;
        if (!$$02833$i$i$i89) {
         label = 57;
         break L31;
        }
       }
      } while (0);
      $113 = $$sroa$0$0$i$i$i94 + 12 | 0;
      HEAP32[$2 >> 2] = $113;
      $$in = $113;
      $54 = HEAP32[$50 >> 2] | 0;
      $55 = HEAP32[$51 >> 2] | 0;
     }
     do if ((label | 0) == 31) if ($71) {
      $$2$in = $0 + 16 | 0;
      break;
     } else {
      $$2$in = (HEAP32[(HEAP32[$52 >> 2] | 0) + 20 >> 2] | 0) + (HEAP32[$59 >> 2] << 4) + 8 | 0;
      break;
     } else if ((label | 0) == 35) {
      _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
      HEAP8[26083] = 0;
      __ZN2ut12assertFailedEPKcS1_S1_j(25060, 7402, 6920, 76);
     } else if ((label | 0) == 57) {
      HEAP32[$2 >> 2] = 0;
      $$2$in = (HEAP32[(HEAP32[$52 >> 2] | 0) + 20 >> 2] | 0) + (HEAP32[2] << 4) + 8 | 0;
     } while (0);
     $$2 = HEAP32[$$2$in >> 2] | 0;
     $119 = $$2 + 28 | 0;
     $121 = (HEAP32[$119 >> 2] | 0) + -1 | 0;
     HEAP32[$4 >> 2] = 0;
     HEAP32[$4 + 4 >> 2] = 0;
     HEAP32[$4 + 8 >> 2] = 0;
     HEAP32[$4 + 12 >> 2] = 0;
     HEAP32[$4 + 16 >> 2] = 1065353216;
     __ZNSt3__212__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEj($4, $121);
     $123 = HEAP32[$119 >> 2] | 0;
     if (($123 | 0) > 1) {
      $125 = $$2 + 32 | 0;
      $126 = $4 + 4 | 0;
      $127 = $4 + 12 | 0;
      $128 = $4 + 16 | 0;
      $129 = $4 + 8 | 0;
      $$032172 = 1;
      $434 = $123;
      while (1) {
       $142 = HEAP32[(HEAP32[$125 >> 2] | 0) + ($$032172 << 4) >> 2] | 0;
       $143 = HEAP32[$126 >> 2] | 0;
       $144 = ($143 | 0) == 0;
       L82 : do if ($144) {
        $$0$i$i$i114 = 0;
        label = 81;
       } else {
        $145 = $143 + -1 | 0;
        $147 = ($145 & $143 | 0) == 0;
        if ($147) $153 = $145 & $142; else if ($142 >>> 0 < $143 >>> 0) $153 = $142; else $153 = ($142 >>> 0) % ($143 >>> 0) | 0;
        $154 = HEAP32[(HEAP32[$4 >> 2] | 0) + ($153 << 2) >> 2] | 0;
        if (!$154) {
         $$0$i$i$i114 = $153;
         label = 81;
        } else {
         $$04575$i$i$i100 = HEAP32[$154 >> 2] | 0;
         if (!$$04575$i$i$i100) {
          $$0$i$i$i114 = $153;
          label = 81;
         } else {
          if ($147) {
           $$04576$us$i$i$i103 = $$04575$i$i$i100;
           while (1) {
            $158 = HEAP32[$$04576$us$i$i$i103 + 4 >> 2] | 0;
            if (!(($158 | 0) == ($142 | 0) | ($158 & $145 | 0) == ($153 | 0))) {
             $$0$i$i$i114 = $153;
             label = 81;
             break L82;
            }
            if ((HEAP32[$$04576$us$i$i$i103 + 8 >> 2] | 0) == ($142 | 0)) {
             $229 = $434;
             break L82;
            }
            $$04576$us$i$i$i103 = HEAP32[$$04576$us$i$i$i103 >> 2] | 0;
            if (!$$04576$us$i$i$i103) {
             $$0$i$i$i114 = $153;
             label = 81;
             break L82;
            }
           }
          }
          $$04576$i$i$i111 = $$04575$i$i$i100;
          while (1) {
           $168 = HEAP32[$$04576$i$i$i111 + 4 >> 2] | 0;
           if (($168 | 0) != ($142 | 0)) {
            if ($168 >>> 0 < $143 >>> 0) $173 = $168; else $173 = ($168 >>> 0) % ($143 >>> 0) | 0;
            if (($173 | 0) != ($153 | 0)) {
             $$0$i$i$i114 = $153;
             label = 81;
             break L82;
            }
           }
           if ((HEAP32[$$04576$i$i$i111 + 8 >> 2] | 0) == ($142 | 0)) {
            $229 = $434;
            break L82;
           }
           $$04576$i$i$i111 = HEAP32[$$04576$i$i$i111 >> 2] | 0;
           if (!$$04576$i$i$i111) {
            $$0$i$i$i114 = $153;
            label = 81;
            break;
           }
          }
         }
        }
       } while (0);
       if ((label | 0) == 81) {
        label = 0;
        $177 = __Znwj(12) | 0;
        HEAP32[$177 + 8 >> 2] = $142;
        HEAP32[$177 + 4 >> 2] = $142;
        HEAP32[$177 >> 2] = 0;
        $182 = +(((HEAP32[$127 >> 2] | 0) + 1 | 0) >>> 0);
        $184 = +HEAPF32[$128 >> 2];
        do if ($144 | $184 * +($143 >>> 0) < $182) {
         $194 = $143 << 1 | ($143 >>> 0 < 3 | ($143 + -1 & $143 | 0) != 0) & 1;
         $197 = ~~+Math_ceil(+($182 / $184)) >>> 0;
         __ZNSt3__212__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEj($4, $194 >>> 0 < $197 >>> 0 ? $197 : $194);
         $199 = HEAP32[$126 >> 2] | 0;
         $200 = $199 + -1 | 0;
         if (!($200 & $199)) {
          $$047$i$i$i118 = $199;
          $$1$i$i$i119 = $200 & $142;
          break;
         }
         if ($142 >>> 0 < $199 >>> 0) {
          $$047$i$i$i118 = $199;
          $$1$i$i$i119 = $142;
         } else {
          $$047$i$i$i118 = $199;
          $$1$i$i$i119 = ($142 >>> 0) % ($199 >>> 0) | 0;
         }
        } else {
         $$047$i$i$i118 = $143;
         $$1$i$i$i119 = $$0$i$i$i114;
        } while (0);
        $207 = (HEAP32[$4 >> 2] | 0) + ($$1$i$i$i119 << 2) | 0;
        $208 = HEAP32[$207 >> 2] | 0;
        if (!$208) {
         HEAP32[$177 >> 2] = HEAP32[$129 >> 2];
         HEAP32[$129 >> 2] = $177;
         HEAP32[$207 >> 2] = $129;
         $211 = HEAP32[$177 >> 2] | 0;
         if ($211 | 0) {
          $214 = HEAP32[$211 + 4 >> 2] | 0;
          $215 = $$047$i$i$i118 + -1 | 0;
          if (!($215 & $$047$i$i$i118)) $223 = $214 & $215; else if ($214 >>> 0 < $$047$i$i$i118 >>> 0) $223 = $214; else $223 = ($214 >>> 0) % ($$047$i$i$i118 >>> 0) | 0;
          $$sink = (HEAP32[$4 >> 2] | 0) + ($223 << 2) | 0;
          label = 94;
         }
        } else {
         HEAP32[$177 >> 2] = HEAP32[$208 >> 2];
         $$sink = $208;
         label = 94;
        }
        if ((label | 0) == 94) {
         label = 0;
         HEAP32[$$sink >> 2] = $177;
        }
        HEAP32[$127 >> 2] = (HEAP32[$127 >> 2] | 0) + 1;
        $229 = HEAP32[$119 >> 2] | 0;
       }
       $$032172 = $$032172 + 1 | 0;
       if (($$032172 | 0) >= ($229 | 0)) break; else $434 = $229;
      }
     }
     $131 = HEAP32[$3 >> 2] | 0;
     $132 = (HEAP32[$50 >> 2] | 0) - $131 | 0;
     L130 : do if ($132 | 0) {
      $136 = $4 + 4 | 0;
      $137 = $4 + 12 | 0;
      $138 = $4 + 16 | 0;
      $139 = $4 + 8 | 0;
      $$033168 = $132 >> 2;
      $259 = $131;
      L132 : while (1) {
       $257 = $$033168 + -1 | 0;
       $$sroa$0132$0166 = HEAP32[(HEAP32[$259 + ($257 << 2) >> 2] | 0) + 24 >> 2] | 0;
       L134 : do if ($$sroa$0132$0166 | 0) {
        $$sroa$0132$0167 = $$sroa$0132$0166;
        while (1) {
         $264 = $$sroa$0132$0167;
         $265 = $264 + 8 | 0;
         L138 : do switch (HEAP32[$264 + 16 >> 2] | 0) {
         case 0:
          {
           $268 = HEAP32[$265 >> 2] | 0;
           $269 = HEAP32[$136 >> 2] | 0;
           if (!$269) {
            label = 133;
            break L132;
           }
           $271 = $269 + -1 | 0;
           $273 = ($271 & $269 | 0) == 0;
           if ($273) $279 = $271 & $268; else if ($268 >>> 0 < $269 >>> 0) $279 = $268; else $279 = ($268 >>> 0) % ($269 >>> 0) | 0;
           $280 = HEAP32[(HEAP32[$4 >> 2] | 0) + ($279 << 2) >> 2] | 0;
           if (!$280) {
            label = 133;
            break L132;
           }
           $$02832$i$i$i61 = HEAP32[$280 >> 2] | 0;
           if (!$$02832$i$i$i61) {
            label = 133;
            break L132;
           }
           L148 : do if ($273) {
            $$02833$us$i$i$i64 = $$02832$i$i$i61;
            while (1) {
             $284 = HEAP32[$$02833$us$i$i$i64 + 4 >> 2] | 0;
             $285 = ($268 | 0) == ($284 | 0);
             if (!($285 | ($284 & $271 | 0) == ($279 | 0))) {
              label = 133;
              break L132;
             }
             if ($285) if ((HEAP32[$$02833$us$i$i$i64 + 8 >> 2] | 0) == ($268 | 0)) break L148;
             $$02833$us$i$i$i64 = HEAP32[$$02833$us$i$i$i64 >> 2] | 0;
             if (!$$02833$us$i$i$i64) {
              label = 133;
              break L132;
             }
            }
           } else {
            $$02833$i$i$i70 = $$02832$i$i$i61;
            while (1) {
             $293 = HEAP32[$$02833$i$i$i70 + 4 >> 2] | 0;
             if (($268 | 0) == ($293 | 0)) {
              if ((HEAP32[$$02833$i$i$i70 + 8 >> 2] | 0) == ($268 | 0)) break L148;
             } else {
              if ($293 >>> 0 < $269 >>> 0) $298 = $293; else $298 = ($293 >>> 0) % ($269 >>> 0) | 0;
              if (($298 | 0) != ($279 | 0)) {
               label = 133;
               break L132;
              }
             }
             $$02833$i$i$i70 = HEAP32[$$02833$i$i$i70 >> 2] | 0;
             if (!$$02833$i$i$i70) {
              label = 133;
              break L132;
             }
            }
           } while (0);
           __ZNSt3__212__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEjRKT_($4, $265) | 0;
           break;
          }
         case 1:
          {
           $303 = HEAP32[$265 >> 2] | 0;
           $304 = HEAP32[$136 >> 2] | 0;
           L168 : do if (!$304) {
            $$0$i$i$i = 0;
            $374 = $303;
            $380 = 0;
            $384 = 1;
           } else {
            $306 = $304 + -1 | 0;
            $308 = ($306 & $304 | 0) == 0;
            do if ($308) $314 = $306 & $303; else {
             if ($303 >>> 0 < $304 >>> 0) {
              $314 = $303;
              break;
             }
             $314 = ($303 >>> 0) % ($304 >>> 0) | 0;
            } while (0);
            $315 = HEAP32[(HEAP32[$4 >> 2] | 0) + ($314 << 2) >> 2] | 0;
            do if (!$315) {
             $$pr211 = $304;
             $343 = $303;
            } else {
             $$02832$i$i$i44 = HEAP32[$315 >> 2] | 0;
             if (!$$02832$i$i$i44) {
              $$pr211 = $304;
              $343 = $303;
              break;
             }
             L178 : do if ($308) {
              $$02833$us$i$i$i47 = $$02832$i$i$i44;
              do {
               $319 = HEAP32[$$02833$us$i$i$i47 + 4 >> 2] | 0;
               $320 = ($303 | 0) == ($319 | 0);
               if (!($320 | ($319 & $306 | 0) == ($314 | 0))) break L178;
               if ($320) if ((HEAP32[$$02833$us$i$i$i47 + 8 >> 2] | 0) == ($303 | 0)) {
                label = 155;
                break L132;
               }
               $$02833$us$i$i$i47 = HEAP32[$$02833$us$i$i$i47 >> 2] | 0;
              } while (($$02833$us$i$i$i47 | 0) != 0);
             } else {
              $$02833$i$i$i53 = $$02832$i$i$i44;
              do {
               $328 = HEAP32[$$02833$i$i$i53 + 4 >> 2] | 0;
               if (($303 | 0) == ($328 | 0)) {
                if ((HEAP32[$$02833$i$i$i53 + 8 >> 2] | 0) == ($303 | 0)) {
                 label = 155;
                 break L132;
                }
               } else {
                if ($328 >>> 0 < $304 >>> 0) $333 = $328; else $333 = ($328 >>> 0) % ($304 >>> 0) | 0;
                if (($333 | 0) != ($314 | 0)) break L178;
               }
               $$02833$i$i$i53 = HEAP32[$$02833$i$i$i53 >> 2] | 0;
              } while (($$02833$i$i$i53 | 0) != 0);
             } while (0);
             if (!$304) {
              $$0$i$i$i = 0;
              $374 = $303;
              $380 = 0;
              $384 = 1;
              break L168;
             } else {
              $$pr211 = $304;
              $343 = $303;
             }
            } while (0);
            $339 = $$pr211 + -1 | 0;
            $341 = ($339 & $$pr211 | 0) == 0;
            do if ($341) $348 = $339 & $343; else {
             if ($343 >>> 0 < $$pr211 >>> 0) {
              $348 = $343;
              break;
             }
             $348 = ($343 >>> 0) % ($$pr211 >>> 0) | 0;
            } while (0);
            $349 = HEAP32[(HEAP32[$4 >> 2] | 0) + ($348 << 2) >> 2] | 0;
            if (!$349) {
             $$0$i$i$i = $348;
             $374 = $343;
             $380 = $$pr211;
             $384 = 0;
             break;
            }
            $$04575$i$i$i = HEAP32[$349 >> 2] | 0;
            if (!$$04575$i$i$i) {
             $$0$i$i$i = $348;
             $374 = $343;
             $380 = $$pr211;
             $384 = 0;
             break;
            }
            if ($341) {
             $$04576$us$i$i$i = $$04575$i$i$i;
             while (1) {
              $353 = HEAP32[$$04576$us$i$i$i + 4 >> 2] | 0;
              if (!(($353 | 0) == ($343 | 0) | ($353 & $339 | 0) == ($348 | 0))) {
               $$0$i$i$i = $348;
               $374 = $343;
               $380 = $$pr211;
               $384 = 0;
               break L168;
              }
              if ((HEAP32[$$04576$us$i$i$i + 8 >> 2] | 0) == ($343 | 0)) break L138;
              $$04576$us$i$i$i = HEAP32[$$04576$us$i$i$i >> 2] | 0;
              if (!$$04576$us$i$i$i) {
               $$0$i$i$i = $348;
               $374 = $343;
               $380 = $$pr211;
               $384 = 0;
               break L168;
              }
             }
            }
            $$04576$i$i$i = $$04575$i$i$i;
            while (1) {
             $363 = HEAP32[$$04576$i$i$i + 4 >> 2] | 0;
             if (($363 | 0) != ($343 | 0)) {
              if ($363 >>> 0 < $$pr211 >>> 0) $368 = $363; else $368 = ($363 >>> 0) % ($$pr211 >>> 0) | 0;
              if (($368 | 0) != ($348 | 0)) {
               $$0$i$i$i = $348;
               $374 = $343;
               $380 = $$pr211;
               $384 = 0;
               break L168;
              }
             }
             if ((HEAP32[$$04576$i$i$i + 8 >> 2] | 0) == ($343 | 0)) break L138;
             $$04576$i$i$i = HEAP32[$$04576$i$i$i >> 2] | 0;
             if (!$$04576$i$i$i) {
              $$0$i$i$i = $348;
              $374 = $343;
              $380 = $$pr211;
              $384 = 0;
              break;
             }
            }
           } while (0);
           $372 = __Znwj(12) | 0;
           HEAP32[$372 + 8 >> 2] = $374;
           HEAP32[$372 + 4 >> 2] = $374;
           HEAP32[$372 >> 2] = 0;
           $378 = +(((HEAP32[$137 >> 2] | 0) + 1 | 0) >>> 0);
           $381 = +HEAPF32[$138 >> 2];
           do if ($384 | $381 * +($380 >>> 0) < $378) {
            $392 = $380 << 1 | ($380 >>> 0 < 3 | ($380 + -1 & $380 | 0) != 0) & 1;
            $395 = ~~+Math_ceil(+($378 / $381)) >>> 0;
            __ZNSt3__212__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEj($4, $392 >>> 0 < $395 >>> 0 ? $395 : $392);
            $397 = HEAP32[$136 >> 2] | 0;
            $398 = $397 + -1 | 0;
            if (!($398 & $397)) {
             $$047$i$i$i = $397;
             $$1$i$i$i = $398 & $374;
             break;
            }
            if ($374 >>> 0 < $397 >>> 0) {
             $$047$i$i$i = $397;
             $$1$i$i$i = $374;
             break;
            }
            $$047$i$i$i = $397;
            $$1$i$i$i = ($374 >>> 0) % ($397 >>> 0) | 0;
           } else {
            $$047$i$i$i = $380;
            $$1$i$i$i = $$0$i$i$i;
           } while (0);
           $405 = (HEAP32[$4 >> 2] | 0) + ($$1$i$i$i << 2) | 0;
           $406 = HEAP32[$405 >> 2] | 0;
           do if (!$406) {
            HEAP32[$372 >> 2] = HEAP32[$139 >> 2];
            HEAP32[$139 >> 2] = $372;
            HEAP32[$405 >> 2] = $139;
            $409 = HEAP32[$372 >> 2] | 0;
            if (!$409) break;
            $412 = HEAP32[$409 + 4 >> 2] | 0;
            $413 = $$047$i$i$i + -1 | 0;
            do if (!($413 & $$047$i$i$i)) $421 = $412 & $413; else {
             if ($412 >>> 0 < $$047$i$i$i >>> 0) {
              $421 = $412;
              break;
             }
             $421 = ($412 >>> 0) % ($$047$i$i$i >>> 0) | 0;
            } while (0);
            $$sink255 = (HEAP32[$4 >> 2] | 0) + ($421 << 2) | 0;
            label = 188;
           } else {
            HEAP32[$372 >> 2] = HEAP32[$406 >> 2];
            $$sink255 = $406;
            label = 188;
           } while (0);
           if ((label | 0) == 188) {
            label = 0;
            HEAP32[$$sink255 >> 2] = $372;
           }
           HEAP32[$137 >> 2] = (HEAP32[$137 >> 2] | 0) + 1;
           break;
          }
         default:
          {}
         } while (0);
         $$sroa$0132$0167 = HEAP32[$$sroa$0132$0167 >> 2] | 0;
         if (!$$sroa$0132$0167) break L134;
        }
       } while (0);
       if (!$257) break L130;
       $$033168 = $257;
       $259 = HEAP32[$3 >> 2] | 0;
      }
      if ((label | 0) == 133) {
       _snprintf(25060, 1024, 12720, $vararg_buffer1) | 0;
       HEAP8[26083] = 0;
       __ZN2ut12assertFailedEPKcS1_S1_j(25060, 12767, 6920, 92);
      } else if ((label | 0) == 155) {
       _snprintf(25060, 1024, 12796, $vararg_buffer3) | 0;
       HEAP8[26083] = 0;
       __ZN2ut12assertFailedEPKcS1_S1_j(25060, 12842, 6920, 95);
      }
     } while (0);
     HEAP32[$5 >> 2] = 0;
     $230 = $5 + 4 | 0;
     HEAP32[$230 >> 2] = 0;
     HEAP32[$5 + 8 >> 2] = 0;
     HEAP32[$6 >> 2] = 0;
     $232 = $4 + 8 | 0;
     HEAP32[$7 >> 2] = HEAP32[$232 >> 2];
     HEAP32[$8 >> 2] = 0;
     HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
     HEAP32[$$byval_copy5 >> 2] = HEAP32[$7 >> 2];
     HEAP32[$$byval_copy6 >> 2] = HEAP32[$8 >> 2];
     __ZNSt3__26vectorIjNS_9allocatorIjEEE6insertINS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEEEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsISC_E9referenceEEE5valueENS_11__wrap_iterIPjEEE4typeENSG_IPKjEESC_SC_($5, $$byval_copy, $$byval_copy5, $$byval_copy6) | 0;
     $234 = HEAP32[$5 >> 2] | 0;
     __ZN2ut4arch13EntityManager31toTypeInArchetypeListWithEntityEPKjj($$byval_copy6, 0, $234, (HEAP32[$230 >> 2] | 0) - $234 >> 2);
     $240 = __ZN2ut4arch16ArchetypeManager20getOrCreateArchetypeERKNSt3__26vectorIjNS2_9allocatorIjEEEE(HEAP32[$0 + 4 >> 2] | 0, $$byval_copy6) | 0;
     $241 = HEAP32[$$byval_copy6 >> 2] | 0;
     if ($241 | 0) {
      HEAP32[$$byval_copy6 + 4 >> 2] = $241;
      __ZdlPv($241);
     }
     $245 = HEAP32[$5 >> 2] | 0;
     if ($245 | 0) {
      HEAP32[$230 >> 2] = $245;
      __ZdlPv($245);
     }
     $248 = HEAP32[$232 >> 2] | 0;
     if ($248 | 0) {
      $$014$i$i$i = $248;
      do {
       $$014$i$i$i$looptemp = $$014$i$i$i;
       $$014$i$i$i = HEAP32[$$014$i$i$i >> 2] | 0;
       __ZdlPv($$014$i$i$i$looptemp);
      } while (($$014$i$i$i | 0) != 0);
     }
     $252 = HEAP32[$4 >> 2] | 0;
     HEAP32[$4 >> 2] = 0;
     if ($252 | 0) __ZdlPv($252);
     $254 = HEAP32[$3 >> 2] | 0;
     if ($254 | 0) {
      HEAP32[$50 >> 2] = $254;
      __ZdlPv($254);
     }
     $$1 = $240;
     STACKTOP = sp;
     return $$1 | 0;
    }
   }
  } while (0);
  $432 = $12;
 } else $432 = HEAP32[$1 >> 2] | 0;
 $$1 = HEAP32[(HEAP32[(HEAP32[$0 + 8 >> 2] | 0) + 20 >> 2] | 0) + ($432 << 4) + 8 >> 2] | 0;
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZN9rapidjson13GenericReaderINS_4UTF8IcEES2_NS_12CrtAllocatorEE11ParseNumberILj1ENS_25GenericInsituStringStreamIS2_EENS_15GenericDocumentIS2_NS_19MemoryPoolAllocatorIS3_EES3_EEEEvRT0_RT1_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i165 = 0.0, $$0100437 = 0, $$0103$shrunk = 0, $$0112$off0301305 = 0, $$0114378 = 0, $$0121436 = 0, $$0130$lcssa = 0, $$0130396 = 0, $$0135$off0306 = 0, $$10 = 0, $$1101446 = 0, $$1115382 = 0, $$1122445 = 0, $$1131 = 0, $$1411 = 0.0, $$2 = 0.0, $$2102302304 = 0, $$2123 = 0, $$2132388 = 0, $$2137$off0 = 0, $$3 = 0.0, $$3117 = 0, $$3124418 = 0, $$3133 = 0, $$4125427 = 0, $$4134 = 0, $$4390 = 0.0, $$5 = 0.0, $$5126 = 0, $$5126307 = 0, $$6 = 0.0, $$6120320 = 0, $$6127$lcssa = 0, $$6127397 = 0, $$8129 = 0, $$8321 = 0.0, $$9389 = 0, $$pre$phiZ2D = 0, $$sroa$0$0 = 0, $$sroa$0$0$copyload = 0, $$sroa$0$10$lcssa = 0, $$sroa$0$10395 = 0, $$sroa$0$11 = 0, $$sroa$0$13 = 0, $$sroa$0$14 = 0, $$sroa$0$1435 = 0, $$sroa$0$17$in = 0, $$sroa$0$20 = 0, $$sroa$0$20$in = 0, $$sroa$0$23 = 0, $$sroa$0$2444 = 0, $$sroa$0$26 = 0, $$sroa$0$28319 = 0, $$sroa$0$29 = 0, $$sroa$0$3 = 0, $$sroa$0$4417 = 0, $$sroa$0$5426 = 0, $$sroa$0$6 = 0, $$sroa$0$7410 = 0, $$sroa$0$8 = 0, $$sroa$79$0$$sroa_idx289 = 0, $$sroa$79$0$copyload337 = 0, $$sroa$79291$0$$sroa_idx293 = 0, $$sroa$79291$0$copyload = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $105 = 0.0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $112 = 0, $117 = 0, $118 = 0, $121 = 0, $132 = 0, $133 = 0, $135 = 0, $136 = 0, $137 = 0, $139 = 0, $144 = 0, $146 = 0, $149 = 0, $15 = 0, $151 = 0, $153 = 0, $157 = 0, $159 = 0, $16 = 0, $160 = 0, $164 = 0, $165 = 0, $166 = 0, $171 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $18 = 0, $183 = 0, $184 = 0, $186 = 0, $189 = 0.0, $19 = 0, $190 = 0, $199 = 0, $20 = 0, $200 = 0, $202 = 0, $205 = 0, $208 = 0, $210 = 0, $212 = 0, $213 = 0, $215 = 0, $216 = 0, $219 = 0, $220 = 0, $221 = 0, $223 = 0, $225 = 0, $230 = 0, $237 = 0, $238 = 0, $24 = 0, $244 = 0, $246 = 0, $250 = 0, $255 = 0, $26 = 0, $262 = 0, $264 = 0.0, $266 = 0, $27 = 0, $276 = 0, $284 = 0, $285 = 0, $287 = 0, $288 = 0, $290 = 0, $291 = 0, $292 = 0, $296 = 0, $3 = 0, $31 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $325 = 0, $326 = 0, $33 = 0, $330 = 0, $343 = 0, $345 = 0, $346 = 0, $349 = 0, $359 = 0, $360 = 0, $361 = 0, $370 = 0, $371 = 0, $38 = 0, $4 = 0, $40 = 0, $41 = 0, $45 = 0, $46 = 0, $47 = 0, $49 = 0, $54 = 0, $55 = 0, $56 = 0, $58 = 0, $6 = 0, $60 = 0, $68 = 0, $69 = 0, $71 = 0, $72 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $82 = 0, $84 = 0, $9 = 0, $92 = 0, $93 = 0, $95 = 0, $96 = 0, $spec$select$i$i = 0, $spec$select157 = 0, $spec$select332 = 0.0, label = 0;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 $$sroa$79$0$$sroa_idx289 = $1 + 4 | 0;
 $$sroa$79$0$copyload337 = HEAP32[$$sroa$79$0$$sroa_idx289 >> 2] | 0;
 $$sroa$79291$0$$sroa_idx293 = $1 + 8 | 0;
 $$sroa$79291$0$copyload = HEAP32[$$sroa$79291$0$$sroa_idx293 >> 2] | 0;
 $3 = $$sroa$0$0$copyload - $$sroa$79291$0$copyload | 0;
 $4 = $$sroa$0$0$copyload;
 $6 = (HEAP8[$4 >> 0] | 0) == 45;
 $$sroa$0$0 = $6 ? $4 + 1 | 0 : $$sroa$0$0$copyload;
 $9 = $$sroa$0$0;
 $10 = HEAP8[$9 >> 0] | 0;
 L1 : do if ($10 << 24 >> 24 == 48) {
  $$0112$off0301305 = 0;
  $$0135$off0306 = 0;
  $$2 = 0.0;
  $$2102302304 = 0;
  $$5126307 = 0;
  $$sroa$0$8 = $9 + 1 | 0;
  $144 = 0;
  $146 = 0;
 } else {
  if (($10 + -49 & 255) >= 9) {
   $49 = $0 + 24 | 0;
   if (HEAP32[$49 >> 2] | 0) ___assert_fail(17049, 16987, 1202, 17150);
   HEAP32[$49 >> 2] = 3;
   HEAP32[$0 + 28 >> 2] = $$sroa$0$0 - $$sroa$79291$0$copyload;
   $$sroa$0$29 = $$sroa$0$0;
   HEAP32[$1 >> 2] = $$sroa$0$29;
   HEAP32[$$sroa$79$0$$sroa_idx289 >> 2] = $$sroa$79$0$copyload337;
   HEAP32[$$sroa$79291$0$$sroa_idx293 >> 2] = $$sroa$79291$0$copyload;
   return;
  }
  $15 = $9 + 1 | 0;
  $16 = $15;
  $18 = ($10 << 24 >> 24) + -48 | 0;
  $19 = HEAP8[$15 >> 0] | 0;
  $20 = ($19 + -48 & 255) < 10;
  L11 : do if ($6) {
   if (!$20) {
    $$0112$off0301305 = 0;
    $$0135$off0306 = 0;
    $$2 = 0.0;
    $$2102302304 = $18;
    $$5126307 = 0;
    $$sroa$0$8 = $16;
    $144 = 0;
    $146 = 0;
    break L1;
   }
   $$0100437 = $18;
   $$0121436 = 0;
   $$sroa$0$1435 = $16;
   $24 = $19;
   $27 = $15;
   while (1) {
    if ($$0100437 >>> 0 > 214748363) {
     if (($$0100437 | 0) != 214748364) {
      $$0103$shrunk = $$0100437;
      $$2123 = $$0121436;
      $$sroa$0$3 = $$sroa$0$1435;
      break L11;
     }
     if ($24 << 24 >> 24 > 56) {
      $$0103$shrunk = 214748364;
      $$2123 = $$0121436;
      $$sroa$0$3 = $$sroa$0$1435;
      break L11;
     }
    }
    $26 = $27 + 1 | 0;
    $31 = ($$0100437 * 10 | 0) + -48 + ($24 << 24 >> 24) | 0;
    $32 = $$0121436 + 1 | 0;
    $33 = HEAP8[$26 >> 0] | 0;
    if (($33 + -48 & 255) < 10) {
     $$0100437 = $31;
     $$0121436 = $32;
     $$sroa$0$1435 = $26;
     $24 = $33;
     $27 = $26;
    } else break;
   }
   $$0112$off0301305 = 0;
   $$0135$off0306 = 0;
   $$2 = 0.0;
   $$2102302304 = $31;
   $$5126307 = $32;
   $$sroa$0$8 = $26;
   $144 = 0;
   $146 = 0;
   break L1;
  } else {
   if (!$20) {
    $$0112$off0301305 = 0;
    $$0135$off0306 = 0;
    $$2 = 0.0;
    $$2102302304 = $18;
    $$5126307 = 0;
    $$sroa$0$8 = $16;
    $144 = 0;
    $146 = 0;
    break L1;
   }
   $$1101446 = $18;
   $$1122445 = 0;
   $$sroa$0$2444 = $16;
   $38 = $19;
   $41 = $15;
   while (1) {
    if ($$1101446 >>> 0 > 429496728) {
     if (($$1101446 | 0) != 429496729) {
      $$0103$shrunk = $$1101446;
      $$2123 = $$1122445;
      $$sroa$0$3 = $$sroa$0$2444;
      break L11;
     }
     if ($38 << 24 >> 24 > 53) {
      $$0103$shrunk = 429496729;
      $$2123 = $$1122445;
      $$sroa$0$3 = $$sroa$0$2444;
      break L11;
     }
    }
    $40 = $41 + 1 | 0;
    $45 = ($$1101446 * 10 | 0) + -48 + ($38 << 24 >> 24) | 0;
    $46 = $$1122445 + 1 | 0;
    $47 = HEAP8[$40 >> 0] | 0;
    if (($47 + -48 & 255) < 10) {
     $$1101446 = $45;
     $$1122445 = $46;
     $$sroa$0$2444 = $40;
     $38 = $47;
     $41 = $40;
    } else break;
   }
   $$0112$off0301305 = 0;
   $$0135$off0306 = 0;
   $$2 = 0.0;
   $$2102302304 = $45;
   $$5126307 = $46;
   $$sroa$0$8 = $40;
   $144 = 0;
   $146 = 0;
   break L1;
  } while (0);
  $54 = $$sroa$0$3;
  $55 = HEAP8[$54 >> 0] | 0;
  $56 = ($55 + -48 & 255) < 10;
  L31 : do if ($6) {
   if (!$56) {
    $$0112$off0301305 = 1;
    $$0135$off0306 = 0;
    $$2 = 0.0;
    $$2102302304 = $$0103$shrunk;
    $$5126307 = $$2123;
    $$sroa$0$8 = $$sroa$0$3;
    $144 = $$0103$shrunk;
    $146 = 0;
    break L1;
   }
   $$3124418 = $$2123;
   $$sroa$0$4417 = $$sroa$0$3;
   $58 = 0;
   $60 = $$0103$shrunk;
   $68 = $55;
   $72 = $54;
   while (1) {
    if ($58 >>> 0 > 214748364 | ($58 | 0) == 214748364 & $60 >>> 0 > 3435973835) if (($60 | 0) != -858993460 | ($58 | 0) != 214748364 | $68 << 24 >> 24 > 56) {
     $$5126 = $$3124418;
     $$sroa$0$6 = $$sroa$0$4417;
     $106 = $60;
     $107 = $58;
     break L31;
    }
    $69 = ___muldi3($60 | 0, $58 | 0, 10, 0) | 0;
    $71 = $72 + 1 | 0;
    $76 = _i64Add($69 | 0, tempRet0 | 0, ($68 << 24 >> 24) + -48 | 0, 0) | 0;
    $77 = tempRet0;
    $78 = $$3124418 + 1 | 0;
    $79 = HEAP8[$71 >> 0] | 0;
    if (($79 + -48 & 255) < 10) {
     $$3124418 = $78;
     $$sroa$0$4417 = $71;
     $58 = $77;
     $60 = $76;
     $68 = $79;
     $72 = $71;
    } else break;
   }
   $$0112$off0301305 = 1;
   $$0135$off0306 = 0;
   $$2 = 0.0;
   $$2102302304 = $$0103$shrunk;
   $$5126307 = $78;
   $$sroa$0$8 = $71;
   $144 = $76;
   $146 = $77;
   break L1;
  } else {
   if (!$56) {
    $$0112$off0301305 = 1;
    $$0135$off0306 = 0;
    $$2 = 0.0;
    $$2102302304 = $$0103$shrunk;
    $$5126307 = $$2123;
    $$sroa$0$8 = $$sroa$0$3;
    $144 = $$0103$shrunk;
    $146 = 0;
    break L1;
   }
   $$4125427 = $$2123;
   $$sroa$0$5426 = $$sroa$0$3;
   $82 = 0;
   $84 = $$0103$shrunk;
   $92 = $55;
   $96 = $54;
   while (1) {
    if ($82 >>> 0 > 429496729 | ($82 | 0) == 429496729 & $84 >>> 0 > 2576980376) if (($84 | 0) != -1717986919 | ($82 | 0) != 429496729 | $92 << 24 >> 24 > 53) {
     $$5126 = $$4125427;
     $$sroa$0$6 = $$sroa$0$5426;
     $106 = $84;
     $107 = $82;
     break L31;
    }
    $93 = ___muldi3($84 | 0, $82 | 0, 10, 0) | 0;
    $95 = $96 + 1 | 0;
    $100 = _i64Add($93 | 0, tempRet0 | 0, ($92 << 24 >> 24) + -48 | 0, 0) | 0;
    $101 = tempRet0;
    $102 = $$4125427 + 1 | 0;
    $103 = HEAP8[$95 >> 0] | 0;
    if (($103 + -48 & 255) < 10) {
     $$4125427 = $102;
     $$sroa$0$5426 = $95;
     $82 = $101;
     $84 = $100;
     $92 = $103;
     $96 = $95;
    } else break;
   }
   $$0112$off0301305 = 1;
   $$0135$off0306 = 0;
   $$2 = 0.0;
   $$2102302304 = $$0103$shrunk;
   $$5126307 = $102;
   $$sroa$0$8 = $95;
   $144 = $100;
   $146 = $101;
   break L1;
  } while (0);
  $105 = +($106 >>> 0) + 4294967296.0 * +($107 >>> 0);
  $108 = $$sroa$0$6;
  $109 = HEAP8[$108 >> 0] | 0;
  if (($109 + -48 & 255) < 10) {
   $$1411 = $105;
   $$sroa$0$7410 = $$sroa$0$6;
   $118 = $108;
   $121 = $109;
   while (1) {
    if ($$1411 >= 1797693134862315758041281.0e283) break;
    $117 = $118 + 1 | 0;
    $$1411 = $$1411 * 10.0 + +(($121 << 24 >> 24) + -48 | 0);
    $121 = HEAP8[$117 >> 0] | 0;
    if (($121 + -48 & 255) >= 10) {
     label = 38;
     break;
    } else {
     $$sroa$0$7410 = $117;
     $118 = $117;
    }
   }
   if ((label | 0) == 38) {
    $$0112$off0301305 = 1;
    $$0135$off0306 = 1;
    $$2 = $$1411;
    $$2102302304 = $$0103$shrunk;
    $$5126307 = $$5126;
    $$sroa$0$8 = $117;
    $144 = $106;
    $146 = $107;
    break;
   }
   $112 = $0 + 24 | 0;
   if (HEAP32[$112 >> 2] | 0) ___assert_fail(17049, 16987, 1235, 17150);
   HEAP32[$112 >> 2] = 13;
   HEAP32[$0 + 28 >> 2] = $3;
   $$sroa$0$29 = $$sroa$0$7410;
   HEAP32[$1 >> 2] = $$sroa$0$29;
   HEAP32[$$sroa$79$0$$sroa_idx289 >> 2] = $$sroa$79$0$copyload337;
   HEAP32[$$sroa$79291$0$$sroa_idx293 >> 2] = $$sroa$79291$0$copyload;
   return;
  } else {
   $$0112$off0301305 = 1;
   $$0135$off0306 = 1;
   $$2 = $105;
   $$2102302304 = $$0103$shrunk;
   $$5126307 = $$5126;
   $$sroa$0$8 = $$sroa$0$6;
   $144 = $106;
   $146 = $107;
  }
 } while (0);
 $132 = $$sroa$0$8;
 $133 = HEAP8[$132 >> 0] | 0;
 if ($133 << 24 >> 24 == 46) {
  $135 = $132 + 1 | 0;
  $136 = $135;
  $137 = HEAP8[$135 >> 0] | 0;
  if (($137 + -48 & 255) >= 10) {
   $139 = $0 + 24 | 0;
   if (HEAP32[$139 >> 2] | 0) ___assert_fail(17049, 16987, 1247, 17150);
   HEAP32[$139 >> 2] = 14;
   HEAP32[$0 + 28 >> 2] = $136 - $$sroa$79291$0$copyload;
   $$sroa$0$29 = $136;
   HEAP32[$1 >> 2] = $$sroa$0$29;
   HEAP32[$$sroa$79$0$$sroa_idx289 >> 2] = $$sroa$79$0$copyload337;
   HEAP32[$$sroa$79291$0$$sroa_idx293 >> 2] = $$sroa$79291$0$copyload;
   return;
  }
  if ($$0135$off0306) {
   $$1131 = 0;
   $$3 = $$2;
   $$8129 = $$5126307;
   $$sroa$0$11 = $136;
   $370 = $144;
   $371 = $146;
  } else {
   $$0130396 = 0;
   $$6127397 = $$5126307;
   $$sroa$0$10395 = $136;
   $149 = $137;
   $151 = $$0112$off0301305 ? $146 : 0;
   $153 = $$0112$off0301305 ? $144 : $$2102302304;
   $160 = $135;
   while (1) {
    if ($151 >>> 0 > 2097151 | ($151 | 0) == 2097151 & $153 >>> 0 > 4294967295 | $149 << 24 >> 24 > 57) {
     $$0130$lcssa = $$0130396;
     $$6127$lcssa = $$6127397;
     $$sroa$0$10$lcssa = $$sroa$0$10395;
     $175 = $153;
     $176 = $151;
     break;
    }
    $157 = ___muldi3($153 | 0, $151 | 0, 10, 0) | 0;
    $159 = $160 + 1 | 0;
    $164 = _i64Add($157 | 0, tempRet0 | 0, ($149 << 24 >> 24) + -48 | 0, 0) | 0;
    $165 = tempRet0;
    $166 = $$0130396 + -1 | 0;
    $spec$select157 = $$6127397 + ((($164 | 0) != 0 | ($165 | 0) != 0) & 1) | 0;
    $171 = HEAP8[$159 >> 0] | 0;
    if ($171 << 24 >> 24 > 47) {
     $$0130396 = $166;
     $$6127397 = $spec$select157;
     $$sroa$0$10395 = $159;
     $149 = $171;
     $151 = $165;
     $153 = $164;
     $160 = $159;
    } else {
     label = 52;
     break;
    }
   }
   if ((label | 0) == 52) {
    $$0130$lcssa = $166;
    $$6127$lcssa = $spec$select157;
    $$sroa$0$10$lcssa = $159;
    $175 = $164;
    $176 = $165;
   }
   $$1131 = $$0130$lcssa;
   $$3 = +($175 >>> 0) + 4294967296.0 * +($176 >>> 0);
   $$8129 = $$6127$lcssa;
   $$sroa$0$11 = $$sroa$0$10$lcssa;
   $370 = $175;
   $371 = $176;
  }
  $177 = $$sroa$0$11;
  $178 = HEAP8[$177 >> 0] | 0;
  if (($178 + -48 & 255) < 10) {
   $$2132388 = $$1131;
   $$4390 = $$3;
   $$9389 = $$8129;
   $183 = $177;
   $186 = $178;
   while (1) {
    if (($$9389 | 0) < 17) {
     $184 = $183 + 1 | 0;
     $189 = $$4390 * 10.0 + +(($186 << 24 >> 24) + -48 | 0);
     $190 = $$2132388 + -1 | 0;
     if ($189 > 0.0) {
      $$10 = $$9389 + 1 | 0;
      $$3133 = $190;
      $$5 = $189;
      $$sroa$0$13 = $184;
     } else {
      $$10 = $$9389;
      $$3133 = $190;
      $$5 = $189;
      $$sroa$0$13 = $184;
     }
    } else {
     $$10 = $$9389;
     $$3133 = $$2132388;
     $$5 = $$4390;
     $$sroa$0$13 = $183 + 1 | 0;
    }
    $183 = $$sroa$0$13;
    $186 = HEAP8[$183 >> 0] | 0;
    if (($186 + -48 & 255) >= 10) break; else {
     $$2132388 = $$3133;
     $$4390 = $$5;
     $$9389 = $$10;
    }
   }
   $$2137$off0 = 1;
   $$4134 = $$3133;
   $$6 = $$5;
   $$pre$phiZ2D = $$sroa$0$13;
   $$sroa$0$14 = $$sroa$0$13;
   $199 = $186;
   $200 = $370;
   $202 = $371;
  } else {
   $$2137$off0 = 1;
   $$4134 = $$1131;
   $$6 = $$3;
   $$pre$phiZ2D = $177;
   $$sroa$0$14 = $$sroa$0$11;
   $199 = $178;
   $200 = $370;
   $202 = $371;
  }
 } else {
  $$2137$off0 = $$0135$off0306;
  $$4134 = 0;
  $$6 = $$2;
  $$pre$phiZ2D = $132;
  $$sroa$0$14 = $$sroa$0$8;
  $199 = $133;
  $200 = $144;
  $202 = $146;
 }
 switch ($199 << 24 >> 24) {
 case 69:
 case 101:
  {
   $$sroa$0$17$in = $$pre$phiZ2D + 1 | 0;
   $spec$select332 = $$2137$off0 ? $$6 : +(($$0112$off0301305 ? $200 : $$2102302304) >>> 0) + 4294967296.0 * +(($$0112$off0301305 ? $202 : 0) >>> 0);
   $205 = HEAP8[$$sroa$0$17$in >> 0] | 0;
   $208 = $205 << 24 >> 24 == 45;
   $$sroa$0$20$in = $205 << 24 >> 24 == 43 ? $$pre$phiZ2D + 2 | 0 : $208 ? $$pre$phiZ2D + 2 | 0 : $$sroa$0$17$in;
   $$sroa$0$20 = $$sroa$0$20$in;
   $210 = HEAP8[$$sroa$0$20$in >> 0] | 0;
   if (($210 + -48 & 255) >= 10) {
    $255 = $0 + 24 | 0;
    if (HEAP32[$255 >> 2] | 0) ___assert_fail(17049, 16987, 1323, 17150);
    HEAP32[$255 >> 2] = 15;
    HEAP32[$0 + 28 >> 2] = $$sroa$0$20 - $$sroa$79291$0$copyload;
    $$sroa$0$29 = $$sroa$0$20;
    HEAP32[$1 >> 2] = $$sroa$0$29;
    HEAP32[$$sroa$79$0$$sroa_idx289 >> 2] = $$sroa$79$0$copyload337;
    HEAP32[$$sroa$79291$0$$sroa_idx293 >> 2] = $$sroa$79291$0$copyload;
    return;
   }
   $212 = $$sroa$0$20$in + 1 | 0;
   $213 = $212;
   $215 = ($210 << 24 >> 24) + -48 | 0;
   do if ($208) {
    $216 = HEAP8[$212 >> 0] | 0;
    if (($216 + -48 & 255) < 10) {
     $$0114378 = $215;
     $220 = $212;
     $223 = $216;
     while (1) {
      $219 = $220 + 1 | 0;
      $221 = $219;
      $225 = ($$0114378 * 10 | 0) + -48 + ($223 << 24 >> 24) | 0;
      if (($225 | 0) > 214748363) if (((HEAP8[$219 >> 0] | 0) + -48 & 255) < 10) {
       $230 = $219;
       do $230 = $230 + 1 | 0; while (((HEAP8[$230 >> 0] | 0) + -48 & 255) < 10);
       $$sroa$0$23 = $230;
      } else $$sroa$0$23 = $221; else $$sroa$0$23 = $221;
      $220 = $$sroa$0$23;
      $223 = HEAP8[$220 >> 0] | 0;
      if (($223 + -48 & 255) >= 10) {
       $$3117 = $225;
       $$sroa$0$26 = $$sroa$0$23;
       break;
      } else $$0114378 = $225;
     }
    } else {
     $$3117 = $215;
     $$sroa$0$26 = $213;
    }
   } else {
    $237 = 308 - $$4134 | 0;
    $238 = HEAP8[$212 >> 0] | 0;
    if (($238 + -48 & 255) < 10) {
     $$1115382 = $215;
     $244 = $212;
     $246 = $238;
     while (1) {
      $244 = $244 + 1 | 0;
      $$1115382 = ($$1115382 * 10 | 0) + -48 + ($246 << 24 >> 24) | 0;
      if (($$1115382 | 0) > ($237 | 0)) break;
      $246 = HEAP8[$244 >> 0] | 0;
      if (($246 + -48 & 255) >= 10) {
       label = 83;
       break;
      }
     }
     if ((label | 0) == 83) {
      $$3117 = $$1115382;
      $$sroa$0$26 = $244;
      break;
     }
     $250 = $0 + 24 | 0;
     if (HEAP32[$250 >> 2] | 0) ___assert_fail(17049, 16987, 1318, 17150);
     HEAP32[$250 >> 2] = 13;
     HEAP32[$0 + 28 >> 2] = $3;
     $$sroa$0$29 = $244;
     HEAP32[$1 >> 2] = $$sroa$0$29;
     HEAP32[$$sroa$79$0$$sroa_idx289 >> 2] = $$sroa$79$0$copyload337;
     HEAP32[$$sroa$79291$0$$sroa_idx293 >> 2] = $$sroa$79291$0$copyload;
     return;
    } else {
     $$3117 = $215;
     $$sroa$0$26 = $213;
    }
   } while (0);
   $$6120320 = $208 ? 0 - $$3117 | 0 : $$3117;
   $$8321 = $spec$select332;
   $$sroa$0$28319 = $$sroa$0$26;
   break;
  }
 default:
  if ($$2137$off0) {
   $$6120320 = 0;
   $$8321 = $$6;
   $$sroa$0$28319 = $$sroa$0$14;
  } else {
   if (!$$0112$off0301305) if ($6) {
    $343 = 0 - $$2102302304 | 0;
    $345 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushINS_12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorIS2_EEEEEEPT_j($2 + 32 | 0, 1) | 0;
    $346 = $345 + 8 | 0;
    HEAP32[$346 >> 2] = 0;
    HEAP32[$346 + 4 >> 2] = 0;
    HEAP32[$346 + 8 >> 2] = 0;
    HEAP32[$346 + 12 >> 2] = 0;
    $349 = $345;
    HEAP32[$349 >> 2] = $343;
    HEAP32[$349 + 4 >> 2] = (($343 | 0) < 0) << 31 >> 31;
    HEAP16[$345 + 18 >> 1] = ($343 >> 31 & 65216) + 502;
    $$sroa$0$29 = $$sroa$0$14;
    HEAP32[$1 >> 2] = $$sroa$0$29;
    HEAP32[$$sroa$79$0$$sroa_idx289 >> 2] = $$sroa$79$0$copyload337;
    HEAP32[$$sroa$79291$0$$sroa_idx293 >> 2] = $$sroa$79291$0$copyload;
    return;
   } else {
    $359 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushINS_12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorIS2_EEEEEEPT_j($2 + 32 | 0, 1) | 0;
    $360 = $359 + 8 | 0;
    HEAP32[$360 >> 2] = 0;
    HEAP32[$360 + 4 >> 2] = 0;
    HEAP32[$360 + 8 >> 2] = 0;
    HEAP32[$360 + 12 >> 2] = 0;
    $361 = $359;
    HEAP32[$361 >> 2] = $$2102302304;
    HEAP32[$361 + 4 >> 2] = 0;
    HEAP16[$359 + 18 >> 1] = ($$2102302304 >> 31 & 65504) + 502;
    $$sroa$0$29 = $$sroa$0$14;
    HEAP32[$1 >> 2] = $$sroa$0$29;
    HEAP32[$$sroa$79$0$$sroa_idx289 >> 2] = $$sroa$79$0$copyload337;
    HEAP32[$$sroa$79291$0$$sroa_idx293 >> 2] = $$sroa$79291$0$copyload;
    return;
   }
   if (!$6) {
    $319 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushINS_12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorIS2_EEEEEEPT_j($2 + 32 | 0, 1) | 0;
    $320 = $319 + 8 | 0;
    HEAP32[$320 >> 2] = 0;
    HEAP32[$320 + 4 >> 2] = 0;
    HEAP32[$320 + 8 >> 2] = 0;
    HEAP32[$320 + 12 >> 2] = 0;
    $321 = $319;
    HEAP32[$321 >> 2] = $200;
    HEAP32[$321 + 4 >> 2] = $202;
    $325 = $319 + 18 | 0;
    $326 = _bitshift64Lshr($200 | 0, $202 | 0, 56) | 0;
    $330 = $326 & 128 ^ 406;
    HEAP16[$325 >> 1] = $330;
    if ($202 >>> 0 > 0 | ($202 | 0) == 0 & $200 >>> 0 > 4294967295) {
     $$sroa$0$29 = $$sroa$0$14;
     HEAP32[$1 >> 2] = $$sroa$0$29;
     HEAP32[$$sroa$79$0$$sroa_idx289 >> 2] = $$sroa$79$0$copyload337;
     HEAP32[$$sroa$79291$0$$sroa_idx293 >> 2] = $$sroa$79291$0$copyload;
     return;
    }
    HEAP16[$325 >> 1] = $330 | 64;
    if ($202 >>> 0 > 0 | ($202 | 0) == 0 & $200 >>> 0 > 2147483647) {
     $$sroa$0$29 = $$sroa$0$14;
     HEAP32[$1 >> 2] = $$sroa$0$29;
     HEAP32[$$sroa$79$0$$sroa_idx289 >> 2] = $$sroa$79$0$copyload337;
     HEAP32[$$sroa$79291$0$$sroa_idx293 >> 2] = $$sroa$79291$0$copyload;
     return;
    }
    HEAP16[$325 >> 1] = $330 | 96;
    $$sroa$0$29 = $$sroa$0$14;
    HEAP32[$1 >> 2] = $$sroa$0$29;
    HEAP32[$$sroa$79$0$$sroa_idx289 >> 2] = $$sroa$79$0$copyload337;
    HEAP32[$$sroa$79291$0$$sroa_idx293 >> 2] = $$sroa$79291$0$copyload;
    return;
   }
   $287 = _i64Subtract(0, 0, $200 | 0, $202 | 0) | 0;
   $288 = tempRet0;
   $290 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushINS_12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorIS2_EEEEEEPT_j($2 + 32 | 0, 1) | 0;
   $291 = $290 + 8 | 0;
   HEAP32[$291 >> 2] = 0;
   HEAP32[$291 + 4 >> 2] = 0;
   HEAP32[$291 + 8 >> 2] = 0;
   HEAP32[$291 + 12 >> 2] = 0;
   $292 = $290;
   HEAP32[$292 >> 2] = $287;
   HEAP32[$292 + 4 >> 2] = $288;
   $296 = $290 + 18 | 0;
   HEAP16[$296 >> 1] = 150;
   if (($288 | 0) > -1 | ($288 | 0) == -1 & $287 >>> 0 > 4294967295) {
    $spec$select$i$i = $288 >>> 0 > 0 | ($288 | 0) == 0 & $287 >>> 0 > 4294967295 ? 406 : 470;
    HEAP16[$296 >> 1] = $spec$select$i$i;
    if ($288 >>> 0 > 0 | ($288 | 0) == 0 & $287 >>> 0 > 2147483647) {
     $$sroa$0$29 = $$sroa$0$14;
     HEAP32[$1 >> 2] = $$sroa$0$29;
     HEAP32[$$sroa$79$0$$sroa_idx289 >> 2] = $$sroa$79$0$copyload337;
     HEAP32[$$sroa$79291$0$$sroa_idx293 >> 2] = $$sroa$79291$0$copyload;
     return;
    }
    HEAP16[$296 >> 1] = $spec$select$i$i | 32;
    $$sroa$0$29 = $$sroa$0$14;
    HEAP32[$1 >> 2] = $$sroa$0$29;
    HEAP32[$$sroa$79$0$$sroa_idx289 >> 2] = $$sroa$79$0$copyload337;
    HEAP32[$$sroa$79291$0$$sroa_idx293 >> 2] = $$sroa$79291$0$copyload;
    return;
   } else {
    if (!(($288 | 0) > -1 | ($288 | 0) == -1 & $287 >>> 0 > 2147483647)) {
     $$sroa$0$29 = $$sroa$0$14;
     HEAP32[$1 >> 2] = $$sroa$0$29;
     HEAP32[$$sroa$79$0$$sroa_idx289 >> 2] = $$sroa$79$0$copyload337;
     HEAP32[$$sroa$79291$0$$sroa_idx293 >> 2] = $$sroa$79291$0$copyload;
     return;
    }
    HEAP16[$296 >> 1] = 182;
    $$sroa$0$29 = $$sroa$0$14;
    HEAP32[$1 >> 2] = $$sroa$0$29;
    HEAP32[$$sroa$79$0$$sroa_idx289 >> 2] = $$sroa$79$0$copyload337;
    HEAP32[$$sroa$79291$0$$sroa_idx293 >> 2] = $$sroa$79291$0$copyload;
    return;
   }
  }
 }
 $262 = $$6120320 + $$4134 | 0;
 do if (($262 | 0) < -308) {
  $264 = $$8321 / 1.e+308;
  if (($262 | 0) < -616) $$0$i165 = 0.0; else {
   $266 = -308 - $262 | 0;
   if ($266 >>> 0 < 309) {
    $$0$i165 = $264 / +HEAPF64[704 + ($266 << 3) >> 3];
    break;
   } else ___assert_fail(17162, 17181, 48, 17241);
  }
 } else if (($262 | 0) > -1) if ($262 >>> 0 < 309) {
  $$0$i165 = $$8321 * +HEAPF64[704 + ($262 << 3) >> 3];
  break;
 } else ___assert_fail(17162, 17181, 48, 17241); else {
  $276 = 0 - $262 | 0;
  if ($276 >>> 0 < 309) {
   $$0$i165 = $$8321 / +HEAPF64[704 + ($276 << 3) >> 3];
   break;
  } else ___assert_fail(17162, 17181, 48, 17241);
 } while (0);
 $284 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushINS_12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorIS2_EEEEEEPT_j($2 + 32 | 0, 1) | 0;
 $285 = $284 + 8 | 0;
 HEAP32[$285 >> 2] = 0;
 HEAP32[$285 + 4 >> 2] = 0;
 HEAP32[$285 + 8 >> 2] = 0;
 HEAP32[$285 + 12 >> 2] = 0;
 HEAPF64[$284 >> 3] = $6 ? -$$0$i165 : $$0$i165;
 HEAP16[$284 + 18 >> 1] = 534;
 $$sroa$0$29 = $$sroa$0$28319;
 HEAP32[$1 >> 2] = $$sroa$0$29;
 HEAP32[$$sroa$79$0$$sroa_idx289 >> 2] = $$sroa$79$0$copyload337;
 HEAP32[$$sroa$79291$0$$sroa_idx293 >> 2] = $$sroa$79291$0$copyload;
 return;
}

function __ZNSt3__212__next_primeEj($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$0328 = 0, $$0334 = 0, $$0337 = 0, $$1 = 0, $$2332 = 0, $$4 = 0, $$5 = 0, $$6 = 0, $$8 = 0, $$sink369 = 0, $1 = 0, $100 = 0, $104 = 0, $105 = 0, $109 = 0, $110 = 0, $114 = 0, $115 = 0, $119 = 0, $120 = 0, $124 = 0, $125 = 0, $129 = 0, $130 = 0, $134 = 0, $135 = 0, $139 = 0, $140 = 0, $144 = 0, $145 = 0, $149 = 0, $150 = 0, $154 = 0, $155 = 0, $159 = 0, $16 = 0, $160 = 0, $164 = 0, $165 = 0, $169 = 0, $170 = 0, $174 = 0, $175 = 0, $179 = 0, $180 = 0, $184 = 0, $185 = 0, $189 = 0, $19 = 0, $190 = 0, $194 = 0, $195 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $204 = 0, $205 = 0, $209 = 0, $210 = 0, $214 = 0, $215 = 0, $219 = 0, $220 = 0, $224 = 0, $225 = 0, $229 = 0, $230 = 0, $234 = 0, $235 = 0, $239 = 0, $240 = 0, $244 = 0, $245 = 0, $249 = 0, $25 = 0, $250 = 0, $254 = 0, $255 = 0, $259 = 0, $260 = 0, $261 = 0, $263 = 0, $266 = 0, $267 = 0, $29 = 0, $3 = 0, $30 = 0, $34 = 0, $35 = 0, $39 = 0, $40 = 0, $44 = 0, $45 = 0, $49 = 0, $50 = 0, $54 = 0, $55 = 0, $59 = 0, $60 = 0, $64 = 0, $65 = 0, $69 = 0, $7 = 0, $70 = 0, $74 = 0, $75 = 0, $79 = 0, $8 = 0, $80 = 0, $84 = 0, $85 = 0, $89 = 0, $90 = 0, $94 = 0, $95 = 0, $99 = 0, $spec$select = 0, $spec$select339$sink = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = sp + 8 | 0;
 $3 = sp + 4 | 0;
 HEAP32[$2 >> 2] = $0;
 do if ($0 >>> 0 < 212) $$8 = HEAP32[(__ZNSt3__213__lower_boundIRNS_6__lessIjjEEPKjjEET0_S6_S6_RKT1_T_(4516, 4708, $2, $1) | 0) >> 2] | 0; else {
  $7 = ($0 >>> 0) / 210 | 0;
  $8 = $7 * 210 | 0;
  HEAP32[$3 >> 2] = $0 - $8;
  $$0328 = 0;
  $$0337 = $7;
  $$sink369 = $8;
  $spec$select339$sink = (__ZNSt3__213__lower_boundIRNS_6__lessIjjEEPKjjEET0_S6_S6_RKT1_T_(4708, 4900, $3, $1) | 0) - 4708 >> 2;
  L4 : while (1) {
   $16 = (HEAP32[4708 + ($spec$select339$sink << 2) >> 2] | 0) + $$sink369 | 0;
   $$0334 = 5;
   while (1) {
    if ($$0334 >>> 0 >= 47) {
     label = 6;
     break;
    }
    $19 = HEAP32[4516 + ($$0334 << 2) >> 2] | 0;
    $20 = ($16 >>> 0) / ($19 >>> 0) | 0;
    if ($20 >>> 0 < $19 >>> 0) {
     label = 107;
     break L4;
    }
    if (($16 | 0) == (Math_imul($20, $19) | 0)) {
     $$6 = $$0328;
     break;
    } else $$0334 = $$0334 + 1 | 0;
   }
   L10 : do if ((label | 0) == 6) {
    label = 0;
    $$0 = 211;
    $$4 = $$0328;
    L12 : while (1) {
     $25 = ($16 >>> 0) / ($$0 >>> 0) | 0;
     do if ($25 >>> 0 < $$0 >>> 0) {
      $$1 = $$0;
      $$2332 = 1;
      $$5 = $16;
     } else if (($16 | 0) == (Math_imul($25, $$0) | 0)) {
      $$1 = $$0;
      $$2332 = 9;
      $$5 = $$4;
     } else {
      $29 = $$0 + 10 | 0;
      $30 = ($16 >>> 0) / ($29 >>> 0) | 0;
      if ($30 >>> 0 < $29 >>> 0) {
       $$1 = $29;
       $$2332 = 1;
       $$5 = $16;
      } else if (($16 | 0) == (Math_imul($30, $29) | 0)) {
       $$1 = $29;
       $$2332 = 9;
       $$5 = $$4;
      } else {
       $34 = $$0 + 12 | 0;
       $35 = ($16 >>> 0) / ($34 >>> 0) | 0;
       if ($35 >>> 0 < $34 >>> 0) {
        $$1 = $34;
        $$2332 = 1;
        $$5 = $16;
       } else if (($16 | 0) == (Math_imul($35, $34) | 0)) {
        $$1 = $34;
        $$2332 = 9;
        $$5 = $$4;
       } else {
        $39 = $$0 + 16 | 0;
        $40 = ($16 >>> 0) / ($39 >>> 0) | 0;
        if ($40 >>> 0 < $39 >>> 0) {
         $$1 = $39;
         $$2332 = 1;
         $$5 = $16;
        } else if (($16 | 0) == (Math_imul($40, $39) | 0)) {
         $$1 = $39;
         $$2332 = 9;
         $$5 = $$4;
        } else {
         $44 = $$0 + 18 | 0;
         $45 = ($16 >>> 0) / ($44 >>> 0) | 0;
         if ($45 >>> 0 < $44 >>> 0) {
          $$1 = $44;
          $$2332 = 1;
          $$5 = $16;
         } else if (($16 | 0) == (Math_imul($45, $44) | 0)) {
          $$1 = $44;
          $$2332 = 9;
          $$5 = $$4;
         } else {
          $49 = $$0 + 22 | 0;
          $50 = ($16 >>> 0) / ($49 >>> 0) | 0;
          if ($50 >>> 0 < $49 >>> 0) {
           $$1 = $49;
           $$2332 = 1;
           $$5 = $16;
          } else if (($16 | 0) == (Math_imul($50, $49) | 0)) {
           $$1 = $49;
           $$2332 = 9;
           $$5 = $$4;
          } else {
           $54 = $$0 + 28 | 0;
           $55 = ($16 >>> 0) / ($54 >>> 0) | 0;
           if ($55 >>> 0 < $54 >>> 0) {
            $$1 = $54;
            $$2332 = 1;
            $$5 = $16;
           } else if (($16 | 0) == (Math_imul($55, $54) | 0)) {
            $$1 = $54;
            $$2332 = 9;
            $$5 = $$4;
           } else {
            $59 = $$0 + 30 | 0;
            $60 = ($16 >>> 0) / ($59 >>> 0) | 0;
            if ($60 >>> 0 < $59 >>> 0) {
             $$1 = $59;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($60, $59) | 0)) {
             $$1 = $59;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $64 = $$0 + 36 | 0;
            $65 = ($16 >>> 0) / ($64 >>> 0) | 0;
            if ($65 >>> 0 < $64 >>> 0) {
             $$1 = $64;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($65, $64) | 0)) {
             $$1 = $64;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $69 = $$0 + 40 | 0;
            $70 = ($16 >>> 0) / ($69 >>> 0) | 0;
            if ($70 >>> 0 < $69 >>> 0) {
             $$1 = $69;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($70, $69) | 0)) {
             $$1 = $69;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $74 = $$0 + 42 | 0;
            $75 = ($16 >>> 0) / ($74 >>> 0) | 0;
            if ($75 >>> 0 < $74 >>> 0) {
             $$1 = $74;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($75, $74) | 0)) {
             $$1 = $74;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $79 = $$0 + 46 | 0;
            $80 = ($16 >>> 0) / ($79 >>> 0) | 0;
            if ($80 >>> 0 < $79 >>> 0) {
             $$1 = $79;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($80, $79) | 0)) {
             $$1 = $79;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $84 = $$0 + 52 | 0;
            $85 = ($16 >>> 0) / ($84 >>> 0) | 0;
            if ($85 >>> 0 < $84 >>> 0) {
             $$1 = $84;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($85, $84) | 0)) {
             $$1 = $84;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $89 = $$0 + 58 | 0;
            $90 = ($16 >>> 0) / ($89 >>> 0) | 0;
            if ($90 >>> 0 < $89 >>> 0) {
             $$1 = $89;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($90, $89) | 0)) {
             $$1 = $89;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $94 = $$0 + 60 | 0;
            $95 = ($16 >>> 0) / ($94 >>> 0) | 0;
            if ($95 >>> 0 < $94 >>> 0) {
             $$1 = $94;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($95, $94) | 0)) {
             $$1 = $94;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $99 = $$0 + 66 | 0;
            $100 = ($16 >>> 0) / ($99 >>> 0) | 0;
            if ($100 >>> 0 < $99 >>> 0) {
             $$1 = $99;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($100, $99) | 0)) {
             $$1 = $99;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $104 = $$0 + 70 | 0;
            $105 = ($16 >>> 0) / ($104 >>> 0) | 0;
            if ($105 >>> 0 < $104 >>> 0) {
             $$1 = $104;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($105, $104) | 0)) {
             $$1 = $104;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $109 = $$0 + 72 | 0;
            $110 = ($16 >>> 0) / ($109 >>> 0) | 0;
            if ($110 >>> 0 < $109 >>> 0) {
             $$1 = $109;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($110, $109) | 0)) {
             $$1 = $109;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $114 = $$0 + 78 | 0;
            $115 = ($16 >>> 0) / ($114 >>> 0) | 0;
            if ($115 >>> 0 < $114 >>> 0) {
             $$1 = $114;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($115, $114) | 0)) {
             $$1 = $114;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $119 = $$0 + 82 | 0;
            $120 = ($16 >>> 0) / ($119 >>> 0) | 0;
            if ($120 >>> 0 < $119 >>> 0) {
             $$1 = $119;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($120, $119) | 0)) {
             $$1 = $119;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $124 = $$0 + 88 | 0;
            $125 = ($16 >>> 0) / ($124 >>> 0) | 0;
            if ($125 >>> 0 < $124 >>> 0) {
             $$1 = $124;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($125, $124) | 0)) {
             $$1 = $124;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $129 = $$0 + 96 | 0;
            $130 = ($16 >>> 0) / ($129 >>> 0) | 0;
            if ($130 >>> 0 < $129 >>> 0) {
             $$1 = $129;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($130, $129) | 0)) {
             $$1 = $129;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $134 = $$0 + 100 | 0;
            $135 = ($16 >>> 0) / ($134 >>> 0) | 0;
            if ($135 >>> 0 < $134 >>> 0) {
             $$1 = $134;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($135, $134) | 0)) {
             $$1 = $134;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $139 = $$0 + 102 | 0;
            $140 = ($16 >>> 0) / ($139 >>> 0) | 0;
            if ($140 >>> 0 < $139 >>> 0) {
             $$1 = $139;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($140, $139) | 0)) {
             $$1 = $139;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $144 = $$0 + 106 | 0;
            $145 = ($16 >>> 0) / ($144 >>> 0) | 0;
            if ($145 >>> 0 < $144 >>> 0) {
             $$1 = $144;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($145, $144) | 0)) {
             $$1 = $144;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $149 = $$0 + 108 | 0;
            $150 = ($16 >>> 0) / ($149 >>> 0) | 0;
            if ($150 >>> 0 < $149 >>> 0) {
             $$1 = $149;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($150, $149) | 0)) {
             $$1 = $149;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $154 = $$0 + 112 | 0;
            $155 = ($16 >>> 0) / ($154 >>> 0) | 0;
            if ($155 >>> 0 < $154 >>> 0) {
             $$1 = $154;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($155, $154) | 0)) {
             $$1 = $154;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $159 = $$0 + 120 | 0;
            $160 = ($16 >>> 0) / ($159 >>> 0) | 0;
            if ($160 >>> 0 < $159 >>> 0) {
             $$1 = $159;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($160, $159) | 0)) {
             $$1 = $159;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $164 = $$0 + 126 | 0;
            $165 = ($16 >>> 0) / ($164 >>> 0) | 0;
            if ($165 >>> 0 < $164 >>> 0) {
             $$1 = $164;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($165, $164) | 0)) {
             $$1 = $164;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $169 = $$0 + 130 | 0;
            $170 = ($16 >>> 0) / ($169 >>> 0) | 0;
            if ($170 >>> 0 < $169 >>> 0) {
             $$1 = $169;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($170, $169) | 0)) {
             $$1 = $169;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $174 = $$0 + 136 | 0;
            $175 = ($16 >>> 0) / ($174 >>> 0) | 0;
            if ($175 >>> 0 < $174 >>> 0) {
             $$1 = $174;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($175, $174) | 0)) {
             $$1 = $174;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $179 = $$0 + 138 | 0;
            $180 = ($16 >>> 0) / ($179 >>> 0) | 0;
            if ($180 >>> 0 < $179 >>> 0) {
             $$1 = $179;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($180, $179) | 0)) {
             $$1 = $179;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $184 = $$0 + 142 | 0;
            $185 = ($16 >>> 0) / ($184 >>> 0) | 0;
            if ($185 >>> 0 < $184 >>> 0) {
             $$1 = $184;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($185, $184) | 0)) {
             $$1 = $184;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $189 = $$0 + 148 | 0;
            $190 = ($16 >>> 0) / ($189 >>> 0) | 0;
            if ($190 >>> 0 < $189 >>> 0) {
             $$1 = $189;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($190, $189) | 0)) {
             $$1 = $189;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $194 = $$0 + 150 | 0;
            $195 = ($16 >>> 0) / ($194 >>> 0) | 0;
            if ($195 >>> 0 < $194 >>> 0) {
             $$1 = $194;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($195, $194) | 0)) {
             $$1 = $194;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $199 = $$0 + 156 | 0;
            $200 = ($16 >>> 0) / ($199 >>> 0) | 0;
            if ($200 >>> 0 < $199 >>> 0) {
             $$1 = $199;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($200, $199) | 0)) {
             $$1 = $199;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $204 = $$0 + 162 | 0;
            $205 = ($16 >>> 0) / ($204 >>> 0) | 0;
            if ($205 >>> 0 < $204 >>> 0) {
             $$1 = $204;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($205, $204) | 0)) {
             $$1 = $204;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $209 = $$0 + 166 | 0;
            $210 = ($16 >>> 0) / ($209 >>> 0) | 0;
            if ($210 >>> 0 < $209 >>> 0) {
             $$1 = $209;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($210, $209) | 0)) {
             $$1 = $209;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $214 = $$0 + 168 | 0;
            $215 = ($16 >>> 0) / ($214 >>> 0) | 0;
            if ($215 >>> 0 < $214 >>> 0) {
             $$1 = $214;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($215, $214) | 0)) {
             $$1 = $214;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $219 = $$0 + 172 | 0;
            $220 = ($16 >>> 0) / ($219 >>> 0) | 0;
            if ($220 >>> 0 < $219 >>> 0) {
             $$1 = $219;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($220, $219) | 0)) {
             $$1 = $219;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $224 = $$0 + 178 | 0;
            $225 = ($16 >>> 0) / ($224 >>> 0) | 0;
            if ($225 >>> 0 < $224 >>> 0) {
             $$1 = $224;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($225, $224) | 0)) {
             $$1 = $224;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $229 = $$0 + 180 | 0;
            $230 = ($16 >>> 0) / ($229 >>> 0) | 0;
            if ($230 >>> 0 < $229 >>> 0) {
             $$1 = $229;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($230, $229) | 0)) {
             $$1 = $229;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $234 = $$0 + 186 | 0;
            $235 = ($16 >>> 0) / ($234 >>> 0) | 0;
            if ($235 >>> 0 < $234 >>> 0) {
             $$1 = $234;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($235, $234) | 0)) {
             $$1 = $234;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $239 = $$0 + 190 | 0;
            $240 = ($16 >>> 0) / ($239 >>> 0) | 0;
            if ($240 >>> 0 < $239 >>> 0) {
             $$1 = $239;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($240, $239) | 0)) {
             $$1 = $239;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $244 = $$0 + 192 | 0;
            $245 = ($16 >>> 0) / ($244 >>> 0) | 0;
            if ($245 >>> 0 < $244 >>> 0) {
             $$1 = $244;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($245, $244) | 0)) {
             $$1 = $244;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $249 = $$0 + 196 | 0;
            $250 = ($16 >>> 0) / ($249 >>> 0) | 0;
            if ($250 >>> 0 < $249 >>> 0) {
             $$1 = $249;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($250, $249) | 0)) {
             $$1 = $249;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $254 = $$0 + 198 | 0;
            $255 = ($16 >>> 0) / ($254 >>> 0) | 0;
            if ($255 >>> 0 < $254 >>> 0) {
             $$1 = $254;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($255, $254) | 0)) {
             $$1 = $254;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $259 = $$0 + 208 | 0;
            $260 = ($16 >>> 0) / ($259 >>> 0) | 0;
            $261 = $260 >>> 0 < $259 >>> 0;
            $263 = ($16 | 0) == (Math_imul($260, $259) | 0);
            $$1 = $261 | $263 ? $259 : $$0 + 210 | 0;
            $$2332 = $261 ? 1 : $263 ? 9 : 0;
            $$5 = $261 ? $16 : $$4;
           }
          }
         }
        }
       }
      }
     } while (0);
     switch ($$2332 & 15) {
     case 9:
      {
       $$6 = $$5;
       break L10;
       break;
      }
     case 0:
      {
       $$0 = $$1;
       $$4 = $$5;
       break;
      }
     default:
      break L12;
     }
    }
    if (!$$2332) $$6 = $$5; else {
     label = 108;
     break L4;
    }
   } while (0);
   $266 = $spec$select339$sink + 1 | 0;
   $267 = ($266 | 0) == 48;
   $spec$select = $$0337 + ($267 & 1) | 0;
   $$0328 = $$6;
   $$0337 = $spec$select;
   $$sink369 = $spec$select * 210 | 0;
   $spec$select339$sink = $267 ? 0 : $266;
  }
  if ((label | 0) == 107) {
   HEAP32[$2 >> 2] = $16;
   $$8 = $16;
   break;
  } else if ((label | 0) == 108) {
   HEAP32[$2 >> 2] = $16;
   $$8 = $$5;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $$8 | 0;
}

function _fmt_fp($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0463$lcssa = 0, $$0463588 = 0, $$0464599 = 0, $$0471 = 0.0, $$0479 = 0, $$0487657 = 0, $$0488669 = 0, $$0488671 = 0, $$0497670 = 0, $$0498 = 0, $$0511586 = 0.0, $$0513 = 0, $$0516652 = 0, $$0522 = 0, $$0523 = 0, $$0525 = 0, $$0527 = 0, $$0529$in646 = 0, $$0532651 = 0, $$1465 = 0, $$1467 = 0.0, $$1469 = 0.0, $$1472 = 0.0, $$1480 = 0, $$1482$lcssa = 0, $$1482683 = 0, $$1489656 = 0, $$1499 = 0, $$1510587 = 0, $$1514$lcssa = 0, $$1514614 = 0, $$1517 = 0, $$1526 = 0, $$1530621 = 0, $$1533$lcssa = 0, $$1533645 = 0, $$1604 = 0, $$2 = 0, $$2473 = 0.0, $$2476 = 0, $$2483 = 0, $$2490$lcssa = 0, $$2490638 = 0, $$2500$lcssa = 0, $$2500682 = 0, $$2515 = 0, $$2518634 = 0, $$2531 = 0, $$2534633 = 0, $$3 = 0.0, $$3477 = 0, $$3484$lcssa = 0, $$3484663 = 0, $$3501$lcssa = 0, $$3501676 = 0, $$3535620 = 0, $$4 = 0.0, $$4478$lcssa = 0, $$4478594 = 0, $$4492 = 0, $$4502$lcssa = 0, $$4502662 = 0, $$4520 = 0, $$5$lcssa = 0, $$5486$lcssa = 0, $$5486639 = 0, $$5493603 = 0, $$5503 = 0, $$5521 = 0, $$5609 = 0, $$6 = 0, $$6494593 = 0, $$7495608 = 0, $$8 = 0, $$8506 = 0, $$9 = 0, $$9507$lcssa = 0, $$9507625 = 0, $$lcssa583 = 0, $$pn = 0, $$pr = 0, $$pr564 = 0, $$pre$phi713Z2D = 0, $$pre$phi714Z2D = 0, $$pre716 = 0, $$sink755 = 0, $10 = 0, $103 = 0, $104 = 0, $108 = 0, $109 = 0, $11 = 0, $113 = 0, $115 = 0, $116 = 0, $12 = 0, $123 = 0, $126 = 0, $13 = 0, $134 = 0, $135 = 0, $138 = 0, $140 = 0, $141 = 0, $144 = 0, $146 = 0, $15 = 0.0, $150 = 0, $153 = 0, $157 = 0, $16 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $167 = 0, $173 = 0, $174 = 0, $175 = 0, $187 = 0, $198 = 0, $202 = 0, $203 = 0, $206 = 0, $211 = 0, $212 = 0, $214 = 0, $222 = 0, $223 = 0, $225 = 0, $227 = 0, $229 = 0, $231 = 0, $232 = 0, $234 = 0, $237 = 0, $240 = 0, $245 = 0, $248 = 0, $25 = 0, $251 = 0, $253 = 0, $255 = 0, $257 = 0, $262 = 0, $263 = 0, $266 = 0, $268 = 0, $270 = 0, $273 = 0, $286 = 0, $291 = 0, $30 = 0, $300 = 0, $301 = 0, $305 = 0, $308 = 0, $310 = 0, $312 = 0, $316 = 0, $319 = 0, $320 = 0, $324 = 0, $334 = 0, $339 = 0, $34 = 0, $342 = 0, $343 = 0, $344 = 0, $346 = 0, $351 = 0, $364 = 0, $368 = 0, $373 = 0, $38 = 0.0, $382 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $389 = 0, $39 = 0, $393 = 0, $395 = 0, $398 = 0, $401 = 0, $412 = 0, $42 = 0, $44 = 0, $47 = 0, $49 = 0, $6 = 0, $63 = 0, $66 = 0, $69 = 0, $7 = 0, $71 = 0, $79 = 0, $8 = 0, $80 = 0, $82 = 0, $83 = 0, $89 = 0, $9 = 0, $spec$select = 0, $spec$select539 = 0, $spec$select540 = 0, $spec$select540721 = 0, $spec$select541 = 0, $spec$select544 = 0.0, $spec$select548 = 0, $spec$select549 = 0, $spec$select551 = 0, $spec$select554 = 0, $spec$select557 = 0, $spec$select567 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 560 | 0;
 $6 = sp + 8 | 0;
 $7 = sp;
 $8 = sp + 524 | 0;
 $9 = $8;
 $10 = sp + 512 | 0;
 HEAP32[$7 >> 2] = 0;
 $11 = $10 + 12 | 0;
 $12 = ___DOUBLE_BITS_671($1) | 0;
 $13 = tempRet0;
 if (($13 | 0) < 0) {
  $15 = -$1;
  $16 = ___DOUBLE_BITS_671($15) | 0;
  $$0471 = $15;
  $$0522 = 1;
  $$0523 = 19768;
  $25 = tempRet0;
  $412 = $16;
 } else {
  $$0471 = $1;
  $$0522 = ($4 & 2049 | 0) != 0 & 1;
  $$0523 = ($4 & 2048 | 0) == 0 ? (($4 & 1 | 0) == 0 ? 19769 : 19774) : 19771;
  $25 = $13;
  $412 = $12;
 }
 do if (0 == 0 & ($25 & 2146435072 | 0) == 2146435072) {
  $30 = ($5 & 32 | 0) != 0;
  $34 = $$0522 + 3 | 0;
  _pad_670($0, 32, $2, $34, $4 & -65537);
  _out($0, $$0523, $$0522);
  _out($0, $$0471 != $$0471 | 0.0 != 0.0 ? ($30 ? 19795 : 19799) : $30 ? 19787 : 19791, 3);
  _pad_670($0, 32, $2, $34, $4 ^ 8192);
  $$sink755 = $34;
 } else {
  $38 = +_frexpl($$0471, $7) * 2.0;
  $39 = $38 != 0.0;
  if ($39) HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + -1;
  $42 = $5 | 32;
  if (($42 | 0) == 97) {
   $44 = $5 & 32;
   $spec$select = ($44 | 0) == 0 ? $$0523 : $$0523 + 9 | 0;
   $47 = $$0522 | 2;
   $49 = 12 - $3 | 0;
   do if ($3 >>> 0 > 11 | ($49 | 0) == 0) $$1472 = $38; else {
    $$0511586 = 8.0;
    $$1510587 = $49;
    do {
     $$1510587 = $$1510587 + -1 | 0;
     $$0511586 = $$0511586 * 16.0;
    } while (($$1510587 | 0) != 0);
    if ((HEAP8[$spec$select >> 0] | 0) == 45) {
     $$1472 = -($$0511586 + (-$38 - $$0511586));
     break;
    } else {
     $$1472 = $38 + $$0511586 - $$0511586;
     break;
    }
   } while (0);
   $63 = HEAP32[$7 >> 2] | 0;
   $66 = ($63 | 0) < 0 ? 0 - $63 | 0 : $63;
   $69 = _fmt_u($66, (($66 | 0) < 0) << 31 >> 31, $11) | 0;
   if (($69 | 0) == ($11 | 0)) {
    $71 = $10 + 11 | 0;
    HEAP8[$71 >> 0] = 48;
    $$0513 = $71;
   } else $$0513 = $69;
   HEAP8[$$0513 + -1 >> 0] = ($63 >> 31 & 2) + 43;
   $79 = $$0513 + -2 | 0;
   HEAP8[$79 >> 0] = $5 + 15;
   $80 = ($3 | 0) < 1;
   $82 = ($4 & 8 | 0) == 0;
   $$0525 = $8;
   $$2473 = $$1472;
   while (1) {
    $83 = ~~$$2473;
    $89 = $$0525 + 1 | 0;
    HEAP8[$$0525 >> 0] = $44 | HEAPU8[19803 + $83 >> 0];
    $$2473 = ($$2473 - +($83 | 0)) * 16.0;
    if (($89 - $9 | 0) == 1) if ($82 & ($80 & $$2473 == 0.0)) $$1526 = $89; else {
     HEAP8[$89 >> 0] = 46;
     $$1526 = $$0525 + 2 | 0;
    } else $$1526 = $89;
    if (!($$2473 != 0.0)) break; else $$0525 = $$1526;
   }
   $$pre716 = $$1526;
   if (!$3) label = 25; else if ((-2 - $9 + $$pre716 | 0) < ($3 | 0)) {
    $103 = $11;
    $104 = $79;
    $$0527 = $3 + 2 + $103 - $104 | 0;
    $$pre$phi713Z2D = $103;
    $$pre$phi714Z2D = $104;
   } else label = 25;
   if ((label | 0) == 25) {
    $108 = $11;
    $109 = $79;
    $$0527 = $108 - $9 - $109 + $$pre716 | 0;
    $$pre$phi713Z2D = $108;
    $$pre$phi714Z2D = $109;
   }
   $113 = $$0527 + $47 | 0;
   _pad_670($0, 32, $2, $113, $4);
   _out($0, $spec$select, $47);
   _pad_670($0, 48, $2, $113, $4 ^ 65536);
   $115 = $$pre716 - $9 | 0;
   _out($0, $8, $115);
   $116 = $$pre$phi713Z2D - $$pre$phi714Z2D | 0;
   _pad_670($0, 48, $$0527 - ($115 + $116) | 0, 0, 0);
   _out($0, $79, $116);
   _pad_670($0, 32, $2, $113, $4 ^ 8192);
   $$sink755 = $113;
   break;
  }
  $spec$select539 = ($3 | 0) < 0 ? 6 : $3;
  if ($39) {
   $123 = (HEAP32[$7 >> 2] | 0) + -28 | 0;
   HEAP32[$7 >> 2] = $123;
   $$3 = $38 * 268435456.0;
   $$pr = $123;
  } else {
   $$3 = $38;
   $$pr = HEAP32[$7 >> 2] | 0;
  }
  $$0498 = ($$pr | 0) < 0 ? $6 : $6 + 288 | 0;
  $$1499 = $$0498;
  $$4 = $$3;
  do {
   $126 = ~~$$4 >>> 0;
   HEAP32[$$1499 >> 2] = $126;
   $$1499 = $$1499 + 4 | 0;
   $$4 = ($$4 - +($126 >>> 0)) * 1.0e9;
  } while ($$4 != 0.0);
  if (($$pr | 0) > 0) {
   $$1482683 = $$0498;
   $$2500682 = $$1499;
   $134 = $$pr;
   while (1) {
    $135 = ($134 | 0) < 29 ? $134 : 29;
    $$0488669 = $$2500682 + -4 | 0;
    if ($$0488669 >>> 0 < $$1482683 >>> 0) $$2483 = $$1482683; else {
     $$0488671 = $$0488669;
     $$0497670 = 0;
     do {
      $138 = _bitshift64Shl(HEAP32[$$0488671 >> 2] | 0, 0, $135 | 0) | 0;
      $140 = _i64Add($138 | 0, tempRet0 | 0, $$0497670 | 0, 0) | 0;
      $141 = tempRet0;
      $$0497670 = ___udivdi3($140 | 0, $141 | 0, 1e9, 0) | 0;
      $144 = ___muldi3($$0497670 | 0, tempRet0 | 0, 1e9, 0) | 0;
      $146 = _i64Subtract($140 | 0, $141 | 0, $144 | 0, tempRet0 | 0) | 0;
      HEAP32[$$0488671 >> 2] = $146;
      $$0488671 = $$0488671 + -4 | 0;
     } while ($$0488671 >>> 0 >= $$1482683 >>> 0);
     if (!$$0497670) $$2483 = $$1482683; else {
      $150 = $$1482683 + -4 | 0;
      HEAP32[$150 >> 2] = $$0497670;
      $$2483 = $150;
     }
    }
    L57 : do if ($$2500682 >>> 0 > $$2483 >>> 0) {
     $$3501676 = $$2500682;
     while (1) {
      $153 = $$3501676 + -4 | 0;
      if (HEAP32[$153 >> 2] | 0) {
       $$3501$lcssa = $$3501676;
       break L57;
      }
      if ($153 >>> 0 > $$2483 >>> 0) $$3501676 = $153; else {
       $$3501$lcssa = $153;
       break;
      }
     }
    } else $$3501$lcssa = $$2500682; while (0);
    $157 = (HEAP32[$7 >> 2] | 0) - $135 | 0;
    HEAP32[$7 >> 2] = $157;
    if (($157 | 0) > 0) {
     $$1482683 = $$2483;
     $$2500682 = $$3501$lcssa;
     $134 = $157;
    } else {
     $$1482$lcssa = $$2483;
     $$2500$lcssa = $$3501$lcssa;
     $$pr564 = $157;
     break;
    }
   }
  } else {
   $$1482$lcssa = $$0498;
   $$2500$lcssa = $$1499;
   $$pr564 = $$pr;
  }
  if (($$pr564 | 0) < 0) {
   $162 = (($spec$select539 + 25 | 0) / 9 | 0) + 1 | 0;
   $163 = ($42 | 0) == 102;
   $$3484663 = $$1482$lcssa;
   $$4502662 = $$2500$lcssa;
   $165 = $$pr564;
   while (1) {
    $164 = 0 - $165 | 0;
    $167 = ($164 | 0) < 9 ? $164 : 9;
    if ($$3484663 >>> 0 < $$4502662 >>> 0) {
     $173 = (1 << $167) + -1 | 0;
     $174 = 1e9 >>> $167;
     $$0487657 = 0;
     $$1489656 = $$3484663;
     do {
      $175 = HEAP32[$$1489656 >> 2] | 0;
      HEAP32[$$1489656 >> 2] = ($175 >>> $167) + $$0487657;
      $$0487657 = Math_imul($175 & $173, $174) | 0;
      $$1489656 = $$1489656 + 4 | 0;
     } while ($$1489656 >>> 0 < $$4502662 >>> 0);
     $spec$select540 = (HEAP32[$$3484663 >> 2] | 0) == 0 ? $$3484663 + 4 | 0 : $$3484663;
     if (!$$0487657) {
      $$5503 = $$4502662;
      $spec$select540721 = $spec$select540;
     } else {
      HEAP32[$$4502662 >> 2] = $$0487657;
      $$5503 = $$4502662 + 4 | 0;
      $spec$select540721 = $spec$select540;
     }
    } else {
     $$5503 = $$4502662;
     $spec$select540721 = (HEAP32[$$3484663 >> 2] | 0) == 0 ? $$3484663 + 4 | 0 : $$3484663;
    }
    $187 = $163 ? $$0498 : $spec$select540721;
    $spec$select541 = ($$5503 - $187 >> 2 | 0) > ($162 | 0) ? $187 + ($162 << 2) | 0 : $$5503;
    $165 = (HEAP32[$7 >> 2] | 0) + $167 | 0;
    HEAP32[$7 >> 2] = $165;
    if (($165 | 0) >= 0) {
     $$3484$lcssa = $spec$select540721;
     $$4502$lcssa = $spec$select541;
     break;
    } else {
     $$3484663 = $spec$select540721;
     $$4502662 = $spec$select541;
    }
   }
  } else {
   $$3484$lcssa = $$1482$lcssa;
   $$4502$lcssa = $$2500$lcssa;
  }
  $198 = $$0498;
  if ($$3484$lcssa >>> 0 < $$4502$lcssa >>> 0) {
   $202 = ($198 - $$3484$lcssa >> 2) * 9 | 0;
   $203 = HEAP32[$$3484$lcssa >> 2] | 0;
   if ($203 >>> 0 < 10) $$1517 = $202; else {
    $$0516652 = $202;
    $$0532651 = 10;
    while (1) {
     $$0532651 = $$0532651 * 10 | 0;
     $206 = $$0516652 + 1 | 0;
     if ($203 >>> 0 < $$0532651 >>> 0) {
      $$1517 = $206;
      break;
     } else $$0516652 = $206;
    }
   }
  } else $$1517 = 0;
  $211 = ($42 | 0) == 103;
  $212 = ($spec$select539 | 0) != 0;
  $214 = $spec$select539 - (($42 | 0) == 102 ? 0 : $$1517) + (($212 & $211) << 31 >> 31) | 0;
  if (($214 | 0) < ((($$4502$lcssa - $198 >> 2) * 9 | 0) + -9 | 0)) {
   $222 = $214 + 9216 | 0;
   $223 = ($222 | 0) / 9 | 0;
   $225 = $$0498 + 4 + ($223 + -1024 << 2) | 0;
   $227 = $222 - ($223 * 9 | 0) | 0;
   if (($227 | 0) < 8) {
    $$0529$in646 = $227;
    $$1533645 = 10;
    while (1) {
     $229 = $$1533645 * 10 | 0;
     if (($$0529$in646 | 0) < 7) {
      $$0529$in646 = $$0529$in646 + 1 | 0;
      $$1533645 = $229;
     } else {
      $$1533$lcssa = $229;
      break;
     }
    }
   } else $$1533$lcssa = 10;
   $231 = HEAP32[$225 >> 2] | 0;
   $232 = ($231 >>> 0) / ($$1533$lcssa >>> 0) | 0;
   $234 = $231 - (Math_imul($232, $$1533$lcssa) | 0) | 0;
   $237 = ($225 + 4 | 0) == ($$4502$lcssa | 0);
   if ($237 & ($234 | 0) == 0) {
    $$4492 = $225;
    $$4520 = $$1517;
    $$8 = $$3484$lcssa;
   } else {
    $spec$select544 = ($232 & 1 | 0) == 0 ? 9007199254740992.0 : 9007199254740994.0;
    $240 = $$1533$lcssa >>> 1;
    $spec$select567 = $234 >>> 0 < $240 >>> 0 ? .5 : $237 & ($234 | 0) == ($240 | 0) ? 1.0 : 1.5;
    if (!$$0522) {
     $$1467 = $spec$select567;
     $$1469 = $spec$select544;
    } else {
     $245 = (HEAP8[$$0523 >> 0] | 0) == 45;
     $$1467 = $245 ? -$spec$select567 : $spec$select567;
     $$1469 = $245 ? -$spec$select544 : $spec$select544;
    }
    $248 = $231 - $234 | 0;
    HEAP32[$225 >> 2] = $248;
    if ($$1469 + $$1467 != $$1469) {
     $251 = $248 + $$1533$lcssa | 0;
     HEAP32[$225 >> 2] = $251;
     if ($251 >>> 0 > 999999999) {
      $$2490638 = $225;
      $$5486639 = $$3484$lcssa;
      while (1) {
       $253 = $$2490638 + -4 | 0;
       HEAP32[$$2490638 >> 2] = 0;
       if ($253 >>> 0 < $$5486639 >>> 0) {
        $255 = $$5486639 + -4 | 0;
        HEAP32[$255 >> 2] = 0;
        $$6 = $255;
       } else $$6 = $$5486639;
       $257 = (HEAP32[$253 >> 2] | 0) + 1 | 0;
       HEAP32[$253 >> 2] = $257;
       if ($257 >>> 0 > 999999999) {
        $$2490638 = $253;
        $$5486639 = $$6;
       } else {
        $$2490$lcssa = $253;
        $$5486$lcssa = $$6;
        break;
       }
      }
     } else {
      $$2490$lcssa = $225;
      $$5486$lcssa = $$3484$lcssa;
     }
     $262 = ($198 - $$5486$lcssa >> 2) * 9 | 0;
     $263 = HEAP32[$$5486$lcssa >> 2] | 0;
     if ($263 >>> 0 < 10) {
      $$4492 = $$2490$lcssa;
      $$4520 = $262;
      $$8 = $$5486$lcssa;
     } else {
      $$2518634 = $262;
      $$2534633 = 10;
      while (1) {
       $$2534633 = $$2534633 * 10 | 0;
       $266 = $$2518634 + 1 | 0;
       if ($263 >>> 0 < $$2534633 >>> 0) {
        $$4492 = $$2490$lcssa;
        $$4520 = $266;
        $$8 = $$5486$lcssa;
        break;
       } else $$2518634 = $266;
      }
     }
    } else {
     $$4492 = $225;
     $$4520 = $$1517;
     $$8 = $$3484$lcssa;
    }
   }
   $268 = $$4492 + 4 | 0;
   $$5521 = $$4520;
   $$8506 = $$4502$lcssa >>> 0 > $268 >>> 0 ? $268 : $$4502$lcssa;
   $$9 = $$8;
  } else {
   $$5521 = $$1517;
   $$8506 = $$4502$lcssa;
   $$9 = $$3484$lcssa;
  }
  $270 = 0 - $$5521 | 0;
  L109 : do if ($$8506 >>> 0 > $$9 >>> 0) {
   $$9507625 = $$8506;
   while (1) {
    $273 = $$9507625 + -4 | 0;
    if (HEAP32[$273 >> 2] | 0) {
     $$9507$lcssa = $$9507625;
     $$lcssa583 = 1;
     break L109;
    }
    if ($273 >>> 0 > $$9 >>> 0) $$9507625 = $273; else {
     $$9507$lcssa = $273;
     $$lcssa583 = 0;
     break;
    }
   }
  } else {
   $$9507$lcssa = $$8506;
   $$lcssa583 = 0;
  } while (0);
  do if ($211) {
   $spec$select548 = $spec$select539 + (($212 ^ 1) & 1) | 0;
   if (($spec$select548 | 0) > ($$5521 | 0) & ($$5521 | 0) > -5) {
    $$0479 = $5 + -1 | 0;
    $$2476 = $spec$select548 + -1 - $$5521 | 0;
   } else {
    $$0479 = $5 + -2 | 0;
    $$2476 = $spec$select548 + -1 | 0;
   }
   if (!($4 & 8)) {
    if ($$lcssa583) {
     $286 = HEAP32[$$9507$lcssa + -4 >> 2] | 0;
     if (!$286) $$2531 = 9; else if (!(($286 >>> 0) % 10 | 0)) {
      $$1530621 = 0;
      $$3535620 = 10;
      while (1) {
       $$3535620 = $$3535620 * 10 | 0;
       $291 = $$1530621 + 1 | 0;
       if (($286 >>> 0) % ($$3535620 >>> 0) | 0 | 0) {
        $$2531 = $291;
        break;
       } else $$1530621 = $291;
      }
     } else $$2531 = 0;
    } else $$2531 = 9;
    $300 = (($$9507$lcssa - $198 >> 2) * 9 | 0) + -9 | 0;
    if (($$0479 | 32 | 0) == 102) {
     $301 = $300 - $$2531 | 0;
     $spec$select549 = ($301 | 0) > 0 ? $301 : 0;
     $$1480 = $$0479;
     $$3477 = ($$2476 | 0) < ($spec$select549 | 0) ? $$2476 : $spec$select549;
     break;
    } else {
     $305 = $300 + $$5521 - $$2531 | 0;
     $spec$select551 = ($305 | 0) > 0 ? $305 : 0;
     $$1480 = $$0479;
     $$3477 = ($$2476 | 0) < ($spec$select551 | 0) ? $$2476 : $spec$select551;
     break;
    }
   } else {
    $$1480 = $$0479;
    $$3477 = $$2476;
   }
  } else {
   $$1480 = $5;
   $$3477 = $spec$select539;
  } while (0);
  $308 = ($$3477 | 0) != 0;
  $310 = $308 ? 1 : $4 >>> 3 & 1;
  $312 = ($$1480 | 32 | 0) == 102;
  if ($312) {
   $$2515 = 0;
   $$pn = ($$5521 | 0) > 0 ? $$5521 : 0;
  } else {
   $316 = ($$5521 | 0) < 0 ? $270 : $$5521;
   $319 = _fmt_u($316, (($316 | 0) < 0) << 31 >> 31, $11) | 0;
   $320 = $11;
   if (($320 - $319 | 0) < 2) {
    $$1514614 = $319;
    while (1) {
     $324 = $$1514614 + -1 | 0;
     HEAP8[$324 >> 0] = 48;
     if (($320 - $324 | 0) < 2) $$1514614 = $324; else {
      $$1514$lcssa = $324;
      break;
     }
    }
   } else $$1514$lcssa = $319;
   HEAP8[$$1514$lcssa + -1 >> 0] = ($$5521 >> 31 & 2) + 43;
   $334 = $$1514$lcssa + -2 | 0;
   HEAP8[$334 >> 0] = $$1480;
   $$2515 = $334;
   $$pn = $320 - $334 | 0;
  }
  $339 = $$0522 + 1 + $$3477 + $310 + $$pn | 0;
  _pad_670($0, 32, $2, $339, $4);
  _out($0, $$0523, $$0522);
  _pad_670($0, 48, $2, $339, $4 ^ 65536);
  if ($312) {
   $spec$select554 = $$9 >>> 0 > $$0498 >>> 0 ? $$0498 : $$9;
   $342 = $8 + 9 | 0;
   $343 = $342;
   $344 = $8 + 8 | 0;
   $$5493603 = $spec$select554;
   do {
    $346 = _fmt_u(HEAP32[$$5493603 >> 2] | 0, 0, $342) | 0;
    if (($$5493603 | 0) == ($spec$select554 | 0)) if (($346 | 0) == ($342 | 0)) {
     HEAP8[$344 >> 0] = 48;
     $$1465 = $344;
    } else $$1465 = $346; else if ($346 >>> 0 > $8 >>> 0) {
     _memset($8 | 0, 48, $346 - $9 | 0) | 0;
     $$0464599 = $346;
     while (1) {
      $351 = $$0464599 + -1 | 0;
      if ($351 >>> 0 > $8 >>> 0) $$0464599 = $351; else {
       $$1465 = $351;
       break;
      }
     }
    } else $$1465 = $346;
    _out($0, $$1465, $343 - $$1465 | 0);
    $$5493603 = $$5493603 + 4 | 0;
   } while ($$5493603 >>> 0 <= $$0498 >>> 0);
   if (!(($4 & 8 | 0) == 0 & ($308 ^ 1))) _out($0, 22566, 1);
   if ($$5493603 >>> 0 < $$9507$lcssa >>> 0 & ($$3477 | 0) > 0) {
    $$4478594 = $$3477;
    $$6494593 = $$5493603;
    while (1) {
     $364 = _fmt_u(HEAP32[$$6494593 >> 2] | 0, 0, $342) | 0;
     if ($364 >>> 0 > $8 >>> 0) {
      _memset($8 | 0, 48, $364 - $9 | 0) | 0;
      $$0463588 = $364;
      while (1) {
       $368 = $$0463588 + -1 | 0;
       if ($368 >>> 0 > $8 >>> 0) $$0463588 = $368; else {
        $$0463$lcssa = $368;
        break;
       }
      }
     } else $$0463$lcssa = $364;
     _out($0, $$0463$lcssa, ($$4478594 | 0) < 9 ? $$4478594 : 9);
     $$6494593 = $$6494593 + 4 | 0;
     $373 = $$4478594 + -9 | 0;
     if (!($$6494593 >>> 0 < $$9507$lcssa >>> 0 & ($$4478594 | 0) > 9)) {
      $$4478$lcssa = $373;
      break;
     } else $$4478594 = $373;
    }
   } else $$4478$lcssa = $$3477;
   _pad_670($0, 48, $$4478$lcssa + 9 | 0, 9, 0);
  } else {
   $spec$select557 = $$lcssa583 ? $$9507$lcssa : $$9 + 4 | 0;
   if ($$9 >>> 0 < $spec$select557 >>> 0 & ($$3477 | 0) > -1) {
    $382 = $8 + 9 | 0;
    $384 = ($4 & 8 | 0) == 0;
    $385 = $382;
    $386 = 0 - $9 | 0;
    $387 = $8 + 8 | 0;
    $$5609 = $$3477;
    $$7495608 = $$9;
    while (1) {
     $389 = _fmt_u(HEAP32[$$7495608 >> 2] | 0, 0, $382) | 0;
     if (($389 | 0) == ($382 | 0)) {
      HEAP8[$387 >> 0] = 48;
      $$0 = $387;
     } else $$0 = $389;
     do if (($$7495608 | 0) == ($$9 | 0)) {
      $395 = $$0 + 1 | 0;
      _out($0, $$0, 1);
      if ($384 & ($$5609 | 0) < 1) {
       $$2 = $395;
       break;
      }
      _out($0, 22566, 1);
      $$2 = $395;
     } else {
      if ($$0 >>> 0 <= $8 >>> 0) {
       $$2 = $$0;
       break;
      }
      _memset($8 | 0, 48, $$0 + $386 | 0) | 0;
      $$1604 = $$0;
      while (1) {
       $393 = $$1604 + -1 | 0;
       if ($393 >>> 0 > $8 >>> 0) $$1604 = $393; else {
        $$2 = $393;
        break;
       }
      }
     } while (0);
     $398 = $385 - $$2 | 0;
     _out($0, $$2, ($$5609 | 0) > ($398 | 0) ? $398 : $$5609);
     $401 = $$5609 - $398 | 0;
     $$7495608 = $$7495608 + 4 | 0;
     if (!($$7495608 >>> 0 < $spec$select557 >>> 0 & ($401 | 0) > -1)) {
      $$5$lcssa = $401;
      break;
     } else $$5609 = $401;
    }
   } else $$5$lcssa = $$3477;
   _pad_670($0, 48, $$5$lcssa + 18 | 0, 18, 0);
   _out($0, $$2515, $11 - $$2515 | 0);
  }
  _pad_670($0, 32, $2, $339, $4 ^ 8192);
  $$sink755 = $339;
 } while (0);
 STACKTOP = sp;
 return (($$sink755 | 0) < ($2 | 0) ? $2 : $$sink755) | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_117parse_nested_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$add$i184 = 0, $$0$i$i$add$i188 = 0, $$0$i$i$add$i199 = 0, $$0$i$i$add$i210 = 0, $$0$i$i$add$i220 = 0, $$0$i$i$add$i231 = 0, $$0$i$i$idx$i = 0, $$0$i$i$idx$i183 = 0, $$0$i$i$idx$i187 = 0, $$0$i$i$idx$i198 = 0, $$0$i$i$idx$i209 = 0, $$0$i$i$idx$i219 = 0, $$0$i$i$idx$i230 = 0, $$0151$off0$ph = 0, $$0157 = 0, $$1158 = 0, $$2159 = 0, $$2159$be = 0, $$2159$ph = 0, $$2159$ph$be = 0, $$4166 = 0, $$sink = 0, $$sroa$0$0$$sroa_idx$i215 = 0, $101 = 0, $102 = 0, $105 = 0, $106 = 0, $11 = 0, $114 = 0, $119 = 0, $122 = 0, $124 = 0, $13 = 0, $130 = 0, $133 = 0, $134 = 0, $141 = 0, $142 = 0, $145 = 0, $146 = 0, $154 = 0, $157 = 0, $16 = 0, $162 = 0, $165 = 0, $167 = 0, $17 = 0, $173 = 0, $176 = 0, $177 = 0, $184 = 0, $185 = 0, $188 = 0, $189 = 0, $197 = 0, $202 = 0, $206 = 0, $207 = 0, $214 = 0, $215 = 0, $218 = 0, $219 = 0, $227 = 0, $229 = 0, $234 = 0, $237 = 0, $239 = 0, $245 = 0, $248 = 0, $249 = 0, $256 = 0, $257 = 0, $260 = 0, $261 = 0, $269 = 0, $274 = 0, $3 = 0, $36 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $70 = 0, $74 = 0, $79 = 0, $82 = 0, $84 = 0, $90 = 0, $93 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $3 = sp + 36 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 8 | 0;
 $6 = sp;
 L1 : do if (($0 | 0) == ($1 | 0)) $$4166 = $0; else if ((HEAP8[$0 >> 0] | 0) == 78) {
  $11 = __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($0 + 1 | 0, $1, $3) | 0;
  L4 : do if (($11 | 0) != ($1 | 0)) {
   $13 = $2 + 52 | 0;
   HEAP32[$13 >> 2] = 0;
   switch (HEAP8[$11 >> 0] | 0) {
   case 82:
    {
     $$sink = 1;
     label = 6;
     break;
    }
   case 79:
    {
     $$sink = 2;
     label = 6;
     break;
    }
   default:
    $$0157 = $11;
   }
   if ((label | 0) == 6) {
    HEAP32[$13 >> 2] = $$sink;
    $$0157 = $11 + 1 | 0;
   }
   $16 = $2 + 4 | 0;
   $17 = HEAP32[$16 >> 2] | 0;
   if ($17 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    HEAP32[$17 >> 2] = 0;
    HEAP32[$17 + 4 >> 2] = 0;
    HEAP32[$17 + 8 >> 2] = 0;
    HEAP32[$17 + 12 >> 2] = 0;
    HEAP32[$17 + 16 >> 2] = 0;
    HEAP32[$17 + 20 >> 2] = 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2Ev($17);
    HEAP32[$16 >> 2] = (HEAP32[$16 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE24__emplace_back_slow_pathIJEEEvDpOT_($2);
   if (($1 - $$0157 | 0) > 1) if ((HEAP8[$$0157 >> 0] | 0) == 83) if ((HEAP8[$$0157 + 1 >> 0] | 0) == 116) {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc((HEAP32[$16 >> 2] | 0) + -24 | 0, 23653);
    $$1158 = $$0157 + 2 | 0;
   } else $$1158 = $$0157; else $$1158 = $$0157; else $$1158 = $$0157;
   if (($$1158 | 0) == ($1 | 0)) {
    $36 = HEAP32[$16 >> 2] | 0;
    $$0$i$i$idx$i = 0;
    while (1) {
     if (($$0$i$i$idx$i | 0) == -1) break;
     $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($36 + ($$0$i$i$add$i * 24 | 0) | 0);
     $$0$i$i$idx$i = $$0$i$i$add$i;
    }
    HEAP32[$16 >> 2] = $36 + -24;
    break;
   }
   $39 = $4 + 11 | 0;
   $40 = $4 + 4 | 0;
   $$sroa$0$0$$sroa_idx$i215 = $2 + 12 | 0;
   $41 = $2 + 20 | 0;
   $42 = $2 + 24 | 0;
   $43 = $5 + 11 | 0;
   $44 = $5 + 4 | 0;
   $45 = $5 + 11 | 0;
   $46 = $5 + 4 | 0;
   $47 = $5 + 12 | 0;
   $48 = $5 + 4 | 0;
   $49 = $5 + 8 | 0;
   $50 = $2 + 16 | 0;
   $51 = $5 + 12 | 0;
   $52 = $5 + 4 | 0;
   $53 = $5 + 8 | 0;
   $54 = $5 + 11 | 0;
   $55 = $5 + 4 | 0;
   $56 = $5 + 12 | 0;
   $57 = $5 + 4 | 0;
   $58 = $5 + 8 | 0;
   $59 = $5 + 11 | 0;
   $60 = $5 + 4 | 0;
   $61 = $5 + 12 | 0;
   $62 = $5 + 4 | 0;
   $63 = $5 + 8 | 0;
   $64 = $5 + 12 | 0;
   $65 = $5 + 4 | 0;
   $66 = $5 + 8 | 0;
   $$0151$off0$ph = 0;
   $$2159$ph = $$1158;
   L27 : while (1) {
    $$2159 = $$2159$ph;
    L29 : while (1) {
     $67 = HEAP8[$$2159 >> 0] | 0;
     if ($67 << 24 >> 24 == 69) break L27;
     switch ($67 << 24 >> 24 | 0) {
     case 83:
      {
       label = 23;
       break L29;
       break;
      }
     case 84:
      {
       label = 39;
       break L29;
       break;
      }
     case 68:
      {
       label = 53;
       break L29;
       break;
      }
     case 73:
      {
       $197 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($$2159, $1, $2) | 0;
       if (($197 | 0) == ($$2159 | 0) | ($197 | 0) == ($1 | 0)) break L4;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($4, (HEAP32[$16 >> 2] | 0) + -24 | 0);
       $202 = HEAP32[$16 >> 2] | 0;
       $$0$i$i$idx$i209 = 0;
       while (1) {
        if (($$0$i$i$idx$i209 | 0) == -1) break;
        $$0$i$i$add$i210 = $$0$i$i$idx$i209 + -1 | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($202 + ($$0$i$i$add$i210 * 24 | 0) | 0);
        $$0$i$i$idx$i209 = $$0$i$i$add$i210;
       }
       HEAP32[$16 >> 2] = $202 + -24;
       $206 = HEAP8[$39 >> 0] | 0;
       $207 = $206 << 24 >> 24 < 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($202 + -48 | 0, $207 ? HEAP32[$4 >> 2] | 0 : $4, $207 ? HEAP32[$40 >> 2] | 0 : $206 & 255) | 0;
       $214 = (HEAP32[$16 >> 2] | 0) + -24 | 0;
       HEAP32[$6 >> 2] = HEAP32[$$sroa$0$0$$sroa_idx$i215 >> 2];
       __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($5, $214, $6);
       $215 = HEAP32[$41 >> 2] | 0;
       if ($215 >>> 0 < (HEAP32[$42 >> 2] | 0) >>> 0) {
        HEAP32[$215 >> 2] = 0;
        $218 = $215 + 4 | 0;
        HEAP32[$218 >> 2] = 0;
        $219 = $215 + 8 | 0;
        HEAP32[$219 >> 2] = 0;
        HEAP32[$215 + 12 >> 2] = HEAP32[$47 >> 2];
        HEAP32[$215 >> 2] = HEAP32[$5 >> 2];
        HEAP32[$218 >> 2] = HEAP32[$48 >> 2];
        HEAP32[$219 >> 2] = HEAP32[$49 >> 2];
        HEAP32[$49 >> 2] = 0;
        HEAP32[$48 >> 2] = 0;
        HEAP32[$5 >> 2] = 0;
        HEAP32[$41 >> 2] = (HEAP32[$41 >> 2] | 0) + 16;
       } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE21__push_back_slow_pathIS6_EEvOT_($50, $5);
       __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($5);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
       $$2159$be = $197;
       break;
      }
     case 76:
      {
       $227 = $$2159 + 1 | 0;
       if (($227 | 0) == ($1 | 0)) break L4; else $$2159$be = $227;
       break;
      }
     default:
      {
       label = 79;
       break L29;
      }
     }
     $$2159 = $$2159$be;
    }
    L45 : do if ((label | 0) == 23) {
     label = 0;
     $70 = $$2159 + 1 | 0;
     if (($70 | 0) != ($1 | 0)) if ((HEAP8[$70 >> 0] | 0) == 116) {
      label = 79;
      break;
     }
     $74 = __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($$2159, $1, $2) | 0;
     if (($74 | 0) == ($$2159 | 0) | ($74 | 0) == ($1 | 0)) break L4;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($4, (HEAP32[$16 >> 2] | 0) + -24 | 0);
     $79 = HEAP32[$16 >> 2] | 0;
     $$0$i$i$idx$i183 = 0;
     while (1) {
      if (($$0$i$i$idx$i183 | 0) == -1) break;
      $$0$i$i$add$i184 = $$0$i$i$idx$i183 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($79 + ($$0$i$i$add$i184 * 24 | 0) | 0);
      $$0$i$i$idx$i183 = $$0$i$i$add$i184;
     }
     HEAP32[$16 >> 2] = $79 + -24;
     $82 = $79 + -48 | 0;
     $84 = HEAP8[$82 + 11 >> 0] | 0;
     if ($84 << 24 >> 24 < 0) $90 = HEAP32[$79 + -44 >> 2] | 0; else $90 = $84 & 255;
     if (!$90) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_($82, $4); else {
      __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($5, 22349, $4);
      $93 = HEAP8[$54 >> 0] | 0;
      $94 = $93 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[$16 >> 2] | 0) + -24 | 0, $94 ? HEAP32[$5 >> 2] | 0 : $5, $94 ? HEAP32[$55 >> 2] | 0 : $93 & 255) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
      $101 = (HEAP32[$16 >> 2] | 0) + -24 | 0;
      HEAP32[$6 >> 2] = HEAP32[$$sroa$0$0$$sroa_idx$i215 >> 2];
      __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($5, $101, $6);
      $102 = HEAP32[$41 >> 2] | 0;
      if ($102 >>> 0 < (HEAP32[$42 >> 2] | 0) >>> 0) {
       HEAP32[$102 >> 2] = 0;
       $105 = $102 + 4 | 0;
       HEAP32[$105 >> 2] = 0;
       $106 = $102 + 8 | 0;
       HEAP32[$106 >> 2] = 0;
       HEAP32[$102 + 12 >> 2] = HEAP32[$64 >> 2];
       HEAP32[$102 >> 2] = HEAP32[$5 >> 2];
       HEAP32[$105 >> 2] = HEAP32[$65 >> 2];
       HEAP32[$106 >> 2] = HEAP32[$66 >> 2];
       HEAP32[$66 >> 2] = 0;
       HEAP32[$65 >> 2] = 0;
       HEAP32[$5 >> 2] = 0;
       HEAP32[$41 >> 2] = (HEAP32[$41 >> 2] | 0) + 16;
      } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE21__push_back_slow_pathIS6_EEvOT_($50, $5);
      __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($5);
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     $$2159$ph$be = $74;
    } else if ((label | 0) == 39) {
     label = 0;
     $114 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($$2159, $1, $2) | 0;
     if (($114 | 0) == ($$2159 | 0) | ($114 | 0) == ($1 | 0)) break L4;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($4, (HEAP32[$16 >> 2] | 0) + -24 | 0);
     $119 = HEAP32[$16 >> 2] | 0;
     $$0$i$i$idx$i187 = 0;
     while (1) {
      if (($$0$i$i$idx$i187 | 0) == -1) break;
      $$0$i$i$add$i188 = $$0$i$i$idx$i187 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($119 + ($$0$i$i$add$i188 * 24 | 0) | 0);
      $$0$i$i$idx$i187 = $$0$i$i$add$i188;
     }
     HEAP32[$16 >> 2] = $119 + -24;
     $122 = $119 + -48 | 0;
     $124 = HEAP8[$122 + 11 >> 0] | 0;
     if ($124 << 24 >> 24 < 0) $130 = HEAP32[$119 + -44 >> 2] | 0; else $130 = $124 & 255;
     if (!$130) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_($122, $4); else {
      __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($5, 22349, $4);
      $133 = HEAP8[$45 >> 0] | 0;
      $134 = $133 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[$16 >> 2] | 0) + -24 | 0, $134 ? HEAP32[$5 >> 2] | 0 : $5, $134 ? HEAP32[$46 >> 2] | 0 : $133 & 255) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
     }
     $141 = (HEAP32[$16 >> 2] | 0) + -24 | 0;
     HEAP32[$6 >> 2] = HEAP32[$$sroa$0$0$$sroa_idx$i215 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($5, $141, $6);
     $142 = HEAP32[$41 >> 2] | 0;
     if ($142 >>> 0 < (HEAP32[$42 >> 2] | 0) >>> 0) {
      HEAP32[$142 >> 2] = 0;
      $145 = $142 + 4 | 0;
      HEAP32[$145 >> 2] = 0;
      $146 = $142 + 8 | 0;
      HEAP32[$146 >> 2] = 0;
      HEAP32[$142 + 12 >> 2] = HEAP32[$56 >> 2];
      HEAP32[$142 >> 2] = HEAP32[$5 >> 2];
      HEAP32[$145 >> 2] = HEAP32[$57 >> 2];
      HEAP32[$146 >> 2] = HEAP32[$58 >> 2];
      HEAP32[$58 >> 2] = 0;
      HEAP32[$57 >> 2] = 0;
      HEAP32[$5 >> 2] = 0;
      HEAP32[$41 >> 2] = (HEAP32[$41 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE21__push_back_slow_pathIS6_EEvOT_($50, $5);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($5);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     $$2159$ph$be = $114;
    } else if ((label | 0) == 53) {
     label = 0;
     $154 = $$2159 + 1 | 0;
     if (($154 | 0) != ($1 | 0)) switch (HEAP8[$154 >> 0] | 0) {
     case 84:
     case 116:
      break;
     default:
      {
       label = 79;
       break L45;
      }
     }
     $157 = __ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_($$2159, $1, $2) | 0;
     if (($157 | 0) == ($$2159 | 0) | ($157 | 0) == ($1 | 0)) break L4;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($4, (HEAP32[$16 >> 2] | 0) + -24 | 0);
     $162 = HEAP32[$16 >> 2] | 0;
     $$0$i$i$idx$i198 = 0;
     while (1) {
      if (($$0$i$i$idx$i198 | 0) == -1) break;
      $$0$i$i$add$i199 = $$0$i$i$idx$i198 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($162 + ($$0$i$i$add$i199 * 24 | 0) | 0);
      $$0$i$i$idx$i198 = $$0$i$i$add$i199;
     }
     HEAP32[$16 >> 2] = $162 + -24;
     $165 = $162 + -48 | 0;
     $167 = HEAP8[$165 + 11 >> 0] | 0;
     if ($167 << 24 >> 24 < 0) $173 = HEAP32[$162 + -44 >> 2] | 0; else $173 = $167 & 255;
     if (!$173) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_($165, $4); else {
      __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($5, 22349, $4);
      $176 = HEAP8[$59 >> 0] | 0;
      $177 = $176 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[$16 >> 2] | 0) + -24 | 0, $177 ? HEAP32[$5 >> 2] | 0 : $5, $177 ? HEAP32[$60 >> 2] | 0 : $176 & 255) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
     }
     $184 = (HEAP32[$16 >> 2] | 0) + -24 | 0;
     HEAP32[$6 >> 2] = HEAP32[$$sroa$0$0$$sroa_idx$i215 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($5, $184, $6);
     $185 = HEAP32[$41 >> 2] | 0;
     if ($185 >>> 0 < (HEAP32[$42 >> 2] | 0) >>> 0) {
      HEAP32[$185 >> 2] = 0;
      $188 = $185 + 4 | 0;
      HEAP32[$188 >> 2] = 0;
      $189 = $185 + 8 | 0;
      HEAP32[$189 >> 2] = 0;
      HEAP32[$185 + 12 >> 2] = HEAP32[$61 >> 2];
      HEAP32[$185 >> 2] = HEAP32[$5 >> 2];
      HEAP32[$188 >> 2] = HEAP32[$62 >> 2];
      HEAP32[$189 >> 2] = HEAP32[$63 >> 2];
      HEAP32[$63 >> 2] = 0;
      HEAP32[$62 >> 2] = 0;
      HEAP32[$5 >> 2] = 0;
      HEAP32[$41 >> 2] = (HEAP32[$41 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE21__push_back_slow_pathIS6_EEvOT_($50, $5);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($5);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     $$2159$ph$be = $157;
    } while (0);
    if ((label | 0) == 79) {
     label = 0;
     $229 = __ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_($$2159, $1, $2) | 0;
     if (($229 | 0) == ($$2159 | 0) | ($229 | 0) == ($1 | 0)) break L4;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($4, (HEAP32[$16 >> 2] | 0) + -24 | 0);
     $234 = HEAP32[$16 >> 2] | 0;
     $$0$i$i$idx$i219 = 0;
     while (1) {
      if (($$0$i$i$idx$i219 | 0) == -1) break;
      $$0$i$i$add$i220 = $$0$i$i$idx$i219 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($234 + ($$0$i$i$add$i220 * 24 | 0) | 0);
      $$0$i$i$idx$i219 = $$0$i$i$add$i220;
     }
     HEAP32[$16 >> 2] = $234 + -24;
     $237 = $234 + -48 | 0;
     $239 = HEAP8[$237 + 11 >> 0] | 0;
     if ($239 << 24 >> 24 < 0) $245 = HEAP32[$234 + -44 >> 2] | 0; else $245 = $239 & 255;
     if (!$245) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_($237, $4); else {
      __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($5, 22349, $4);
      $248 = HEAP8[$43 >> 0] | 0;
      $249 = $248 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[$16 >> 2] | 0) + -24 | 0, $249 ? HEAP32[$5 >> 2] | 0 : $5, $249 ? HEAP32[$44 >> 2] | 0 : $248 & 255) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
     }
     $256 = (HEAP32[$16 >> 2] | 0) + -24 | 0;
     HEAP32[$6 >> 2] = HEAP32[$$sroa$0$0$$sroa_idx$i215 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($5, $256, $6);
     $257 = HEAP32[$41 >> 2] | 0;
     if ($257 >>> 0 < (HEAP32[$42 >> 2] | 0) >>> 0) {
      HEAP32[$257 >> 2] = 0;
      $260 = $257 + 4 | 0;
      HEAP32[$260 >> 2] = 0;
      $261 = $257 + 8 | 0;
      HEAP32[$261 >> 2] = 0;
      HEAP32[$257 + 12 >> 2] = HEAP32[$51 >> 2];
      HEAP32[$257 >> 2] = HEAP32[$5 >> 2];
      HEAP32[$260 >> 2] = HEAP32[$52 >> 2];
      HEAP32[$261 >> 2] = HEAP32[$53 >> 2];
      HEAP32[$53 >> 2] = 0;
      HEAP32[$52 >> 2] = 0;
      HEAP32[$5 >> 2] = 0;
      HEAP32[$41 >> 2] = (HEAP32[$41 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE21__push_back_slow_pathIS6_EEvOT_($50, $5);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($5);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     $$2159$ph$be = $229;
    }
    $$0151$off0$ph = 1;
    $$2159$ph = $$2159$ph$be;
   }
   $269 = $$2159 + 1 | 0;
   HEAP32[$2 + 48 >> 2] = HEAP32[$3 >> 2];
   if ($$0151$off0$ph) {
    $274 = HEAP32[$41 >> 2] | 0;
    if ((HEAP32[$2 + 16 >> 2] | 0) != ($274 | 0)) {
     $$0$i$i$idx$i230 = 0;
     while (1) {
      if (($$0$i$i$idx$i230 | 0) == -1) break;
      $$0$i$i$add$i231 = $$0$i$i$idx$i230 + -1 | 0;
      __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($274 + ($$0$i$i$add$i231 << 4) | 0);
      $$0$i$i$idx$i230 = $$0$i$i$add$i231;
     }
     HEAP32[$41 >> 2] = $274 + -16;
    }
   }
   $$4166 = $269;
   break L1;
  } while (0);
  $$4166 = $0;
 } else $$4166 = $0; while (0);
 STACKTOP = sp;
 return $$4166 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_builtin_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$1 = 0, $103 = 0, $104 = 0, $111 = 0, $112 = 0, $119 = 0, $120 = 0, $127 = 0, $128 = 0, $135 = 0, $136 = 0, $143 = 0, $144 = 0, $15 = 0, $151 = 0, $152 = 0, $159 = 0, $16 = 0, $160 = 0, $167 = 0, $168 = 0, $175 = 0, $176 = 0, $178 = 0, $182 = 0, $183 = 0, $190 = 0, $191 = 0, $198 = 0, $199 = 0, $206 = 0, $207 = 0, $214 = 0, $215 = 0, $222 = 0, $223 = 0, $23 = 0, $230 = 0, $231 = 0, $238 = 0, $239 = 0, $24 = 0, $3 = 0, $31 = 0, $32 = 0, $39 = 0, $40 = 0, $47 = 0, $48 = 0, $55 = 0, $56 = 0, $63 = 0, $64 = 0, $7 = 0, $71 = 0, $72 = 0, $79 = 0, $8 = 0, $80 = 0, $87 = 0, $88 = 0, $95 = 0, $96 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $3 = sp;
 L1 : do if (($0 | 0) == ($1 | 0)) $$1 = $0; else do switch (HEAP8[$0 >> 0] | 0) {
 case 118:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($3, 23714);
   $7 = $2 + 4 | 0;
   $8 = HEAP32[$7 >> 2] | 0;
   if ($8 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($8, $3);
    HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 119:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj8EEERAT__Kc($3);
   $15 = $2 + 4 | 0;
   $16 = HEAP32[$15 >> 2] | 0;
   if ($16 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($16, $3);
    HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 98:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($3, 23719);
   $23 = $2 + 4 | 0;
   $24 = HEAP32[$23 >> 2] | 0;
   if ($24 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($24, $3);
    HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 99:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($3, 23488);
   $31 = $2 + 4 | 0;
   $32 = HEAP32[$31 >> 2] | 0;
   if ($32 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($32, $3);
    HEAP32[$31 >> 2] = (HEAP32[$31 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 97:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($3, 23493);
   $39 = $2 + 4 | 0;
   $40 = HEAP32[$39 >> 2] | 0;
   if ($40 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($40, $3);
    HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 104:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj14EEERAT__Kc($3, 23505);
   $47 = $2 + 4 | 0;
   $48 = HEAP32[$47 >> 2] | 0;
   if ($48 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($48, $3);
    HEAP32[$47 >> 2] = (HEAP32[$47 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 115:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj6EEERAT__Kc($3, 23519);
   $55 = $2 + 4 | 0;
   $56 = HEAP32[$55 >> 2] | 0;
   if ($56 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($56, $3);
    HEAP32[$55 >> 2] = (HEAP32[$55 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 116:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj15EEERAT__Kc($3, 23525);
   $63 = $2 + 4 | 0;
   $64 = HEAP32[$63 >> 2] | 0;
   if ($64 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($64, $3);
    HEAP32[$63 >> 2] = (HEAP32[$63 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 105:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj4EEERAT__Kc($3, 23724);
   $71 = $2 + 4 | 0;
   $72 = HEAP32[$71 >> 2] | 0;
   if ($72 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($72, $3);
    HEAP32[$71 >> 2] = (HEAP32[$71 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 106:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj13EEERAT__Kc($3, 23728);
   $79 = $2 + 4 | 0;
   $80 = HEAP32[$79 >> 2] | 0;
   if ($80 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($80, $3);
    HEAP32[$79 >> 2] = (HEAP32[$79 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 108:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($3, 23741);
   $87 = $2 + 4 | 0;
   $88 = HEAP32[$87 >> 2] | 0;
   if ($88 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($88, $3);
    HEAP32[$87 >> 2] = (HEAP32[$87 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 109:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj14EEERAT__Kc($3, 23746);
   $95 = $2 + 4 | 0;
   $96 = HEAP32[$95 >> 2] | 0;
   if ($96 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($96, $3);
    HEAP32[$95 >> 2] = (HEAP32[$95 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 120:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($3, 23760);
   $103 = $2 + 4 | 0;
   $104 = HEAP32[$103 >> 2] | 0;
   if ($104 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($104, $3);
    HEAP32[$103 >> 2] = (HEAP32[$103 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 121:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj19EEERAT__Kc($3);
   $111 = $2 + 4 | 0;
   $112 = HEAP32[$111 >> 2] | 0;
   if ($112 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($112, $3);
    HEAP32[$111 >> 2] = (HEAP32[$111 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 110:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj9EEERAT__Kc($3, 23554);
   $119 = $2 + 4 | 0;
   $120 = HEAP32[$119 >> 2] | 0;
   if ($120 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($120, $3);
    HEAP32[$119 >> 2] = (HEAP32[$119 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 111:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj18EEERAT__Kc($3, 23563);
   $127 = $2 + 4 | 0;
   $128 = HEAP32[$127 >> 2] | 0;
   if ($128 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($128, $3);
    HEAP32[$127 >> 2] = (HEAP32[$127 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 102:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj6EEERAT__Kc($3, 23770);
   $135 = $2 + 4 | 0;
   $136 = HEAP32[$135 >> 2] | 0;
   if ($136 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($136, $3);
    HEAP32[$135 >> 2] = (HEAP32[$135 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 100:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj7EEERAT__Kc($3);
   $143 = $2 + 4 | 0;
   $144 = HEAP32[$143 >> 2] | 0;
   if ($144 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($144, $3);
    HEAP32[$143 >> 2] = (HEAP32[$143 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 101:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($3, 23776);
   $151 = $2 + 4 | 0;
   $152 = HEAP32[$151 >> 2] | 0;
   if ($152 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($152, $3);
    HEAP32[$151 >> 2] = (HEAP32[$151 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 103:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($3, 23788);
   $159 = $2 + 4 | 0;
   $160 = HEAP32[$159 >> 2] | 0;
   if ($160 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($160, $3);
    HEAP32[$159 >> 2] = (HEAP32[$159 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 122:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj4EEERAT__Kc($3, 23799);
   $167 = $2 + 4 | 0;
   $168 = HEAP32[$167 >> 2] | 0;
   if ($168 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($168, $3);
    HEAP32[$167 >> 2] = (HEAP32[$167 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 117:
  {
   $175 = $0 + 1 | 0;
   $176 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($175, $1, $2) | 0;
   $$1 = ($176 | 0) == ($175 | 0) ? $0 : $176;
   break L1;
   break;
  }
 case 68:
  {
   $178 = $0 + 1 | 0;
   if (($178 | 0) == ($1 | 0)) {
    $$1 = $0;
    break L1;
   }
   switch (HEAP8[$178 >> 0] | 0) {
   case 100:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($3, 23803);
     $182 = $2 + 4 | 0;
     $183 = HEAP32[$182 >> 2] | 0;
     if ($183 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($183, $3);
      HEAP32[$182 >> 2] = (HEAP32[$182 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$1 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 101:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($3, 23813);
     $190 = $2 + 4 | 0;
     $191 = HEAP32[$190 >> 2] | 0;
     if ($191 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($191, $3);
      HEAP32[$190 >> 2] = (HEAP32[$190 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$1 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 102:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($3, 23824);
     $198 = $2 + 4 | 0;
     $199 = HEAP32[$198 >> 2] | 0;
     if ($199 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($199, $3);
      HEAP32[$198 >> 2] = (HEAP32[$198 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$1 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 104:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($3, 23834);
     $206 = $2 + 4 | 0;
     $207 = HEAP32[$206 >> 2] | 0;
     if ($207 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($207, $3);
      HEAP32[$206 >> 2] = (HEAP32[$206 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$1 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 105:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj9EEERAT__Kc($3, 23844);
     $214 = $2 + 4 | 0;
     $215 = HEAP32[$214 >> 2] | 0;
     if ($215 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($215, $3);
      HEAP32[$214 >> 2] = (HEAP32[$214 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$1 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 115:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj9EEERAT__Kc($3, 23853);
     $222 = $2 + 4 | 0;
     $223 = HEAP32[$222 >> 2] | 0;
     if ($223 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($223, $3);
      HEAP32[$222 >> 2] = (HEAP32[$222 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$1 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 97:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($3, 23862);
     $230 = $2 + 4 | 0;
     $231 = HEAP32[$230 >> 2] | 0;
     if ($231 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($231, $3);
      HEAP32[$230 >> 2] = (HEAP32[$230 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$1 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 110:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj15EEERAT__Kc($3, 23867);
     $238 = $2 + 4 | 0;
     $239 = HEAP32[$238 >> 2] | 0;
     if ($239 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($239, $3);
      HEAP32[$238 >> 2] = (HEAP32[$238 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$1 = $0 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$1 = $0;
     break L1;
    }
   }
   break;
  }
 default:
  {
   $$1 = $0;
   break L1;
  }
 } while (0); while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNSt3__26__sortIRNS_6__lessIN2ut4arch13ComponentSpecES4_EEPS4_EEvT0_S8_T_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i188 = 0, $$0$i$i31$i = 0, $$0$i$i31$i190 = 0, $$0154247 = 0, $$0154247$phi = 0, $$0160248 = 0, $$0167 = 0, $$0174 = 0, $$1 = 0, $$1$ph = 0, $$1$ph$be = 0, $$1155 = 0, $$1161 = 0, $$1181$ph = 0, $$1181$ph$be = 0, $$2156 = 0, $$2162 = 0, $$2176 = 0, $$2179 = 0, $$3157 = 0, $$3163 = 0, $$3170 = 0, $$4158 = 0, $$4164 = 0, $$4171 = 0, $$5159 = 0, $$5165 = 0, $$5172 = 0, $$6 = 0, $$6166 = 0, $$6173 = 0, $$6186 = 0, $$pre$phi274Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $101 = 0, $102 = 0, $106 = 0, $11 = 0, $110 = 0, $112 = 0, $115 = 0, $116 = 0, $12 = 0, $121 = 0, $122 = 0, $126 = 0, $13 = 0, $130 = 0, $135 = 0, $136 = 0, $14 = 0, $140 = 0, $144 = 0, $150 = 0, $155 = 0, $156 = 0, $160 = 0, $173 = 0, $174 = 0, $175 = 0, $179 = 0, $180 = 0, $188 = 0, $195 = 0, $197 = 0, $200 = 0, $201 = 0, $206 = 0, $207 = 0, $211 = 0, $215 = 0, $216 = 0, $22 = 0, $224 = 0, $226 = 0, $229 = 0, $230 = 0, $235 = 0, $236 = 0, $24 = 0, $240 = 0, $244 = 0, $246 = 0, $249 = 0, $250 = 0, $255 = 0, $256 = 0, $260 = 0, $264 = 0, $269 = 0, $27 = 0, $270 = 0, $274 = 0, $278 = 0, $28 = 0, $283 = 0, $288 = 0, $289 = 0, $293 = 0, $297 = 0, $298 = 0, $3 = 0, $307 = 0, $308 = 0, $309 = 0, $318 = 0, $319 = 0, $326 = 0, $328 = 0, $33 = 0, $331 = 0, $332 = 0, $337 = 0, $338 = 0, $34 = 0, $342 = 0, $347 = 0, $350 = 0, $351 = 0, $352 = 0, $360 = 0, $361 = 0, $369 = 0, $371 = 0, $374 = 0, $375 = 0, $38 = 0, $380 = 0, $381 = 0, $385 = 0, $390 = 0, $391 = 0, $398 = 0, $4 = 0, $400 = 0, $403 = 0, $404 = 0, $409 = 0, $410 = 0, $414 = 0, $419 = 0, $42 = 0, $421 = 0, $423 = 0, $424 = 0, $425 = 0, $43 = 0, $433 = 0, $434 = 0, $44 = 0, $442 = 0, $444 = 0, $447 = 0, $448 = 0, $45 = 0, $453 = 0, $454 = 0, $458 = 0, $466 = 0, $467 = 0, $476 = 0, $478 = 0, $481 = 0, $482 = 0, $487 = 0, $488 = 0, $492 = 0, $497 = 0, $498 = 0, $5 = 0, $501 = 0, $53 = 0, $6 = 0, $61 = 0, $63 = 0, $66 = 0, $67 = 0, $7 = 0, $72 = 0, $73 = 0, $77 = 0, $8 = 0, $81 = 0, $82 = 0, $90 = 0, $92 = 0, $95 = 0, $96 = 0, label = 0;
 $$1$ph = $0;
 $$1181$ph = $1;
 L1 : while (1) {
  $3 = $$1181$ph;
  $4 = $$1181$ph + -8 | 0;
  $5 = $$1181$ph + -16 | 0;
  $6 = $$1181$ph + -4 | 0;
  $7 = $$1181$ph;
  $8 = $$1181$ph + -4 | 0;
  $$1 = $$1$ph;
  L3 : while (1) {
   $10 = $3 - $$1 | 0;
   $11 = $10 >> 3;
   switch ($11 | 0) {
   case 2:
    {
     label = 4;
     break L1;
     break;
    }
   case 3:
    {
     label = 8;
     break L1;
     break;
    }
   case 4:
    {
     label = 26;
     break L1;
     break;
    }
   case 5:
    {
     label = 27;
     break L1;
     break;
    }
   case 1:
   case 0:
    {
     label = 112;
     break L1;
     break;
    }
   default:
    {}
   }
   if (($10 | 0) < 248) {
    label = 29;
    break L1;
   }
   $173 = ($11 | 0) / 2 | 0;
   $174 = $$1 + ($173 << 3) | 0;
   do if (($10 | 0) > 7992) {
    $175 = ($11 | 0) / 4 | 0;
    $$0167 = __ZNSt3__27__sort5IRNS_6__lessIN2ut4arch13ComponentSpecES4_EEPS4_EEjT0_S8_S8_S8_S8_T_($$1, $$1 + ($175 << 3) | 0, $174, $174 + ($175 << 3) | 0, $4, $2) | 0;
    $$pre$phi274Z2D = $174;
    $$pre$phiZ2D = $$1;
   } else {
    $179 = HEAP32[$174 >> 2] | 0;
    $180 = HEAP32[$$1 >> 2] | 0;
    if (($179 | 0) == ($180 | 0)) $$0$i$i$i188 = (HEAP32[$$1 + ($173 << 3) + 4 >> 2] | 0) < (HEAP32[$$1 + 4 >> 2] | 0); else $$0$i$i$i188 = $179 >>> 0 < $180 >>> 0;
    $188 = HEAP32[$4 >> 2] | 0;
    if (($188 | 0) == ($179 | 0)) $$0$i$i31$i190 = (HEAP32[$6 >> 2] | 0) < (HEAP32[$$1 + ($173 << 3) + 4 >> 2] | 0); else $$0$i$i31$i190 = $188 >>> 0 < $179 >>> 0;
    if (!$$0$i$i$i188) {
     if (!$$0$i$i31$i190) {
      $$0167 = 0;
      $$pre$phi274Z2D = $174;
      $$pre$phiZ2D = $$1;
      break;
     }
     $195 = $174;
     $197 = HEAP32[$195 >> 2] | 0;
     $200 = HEAP32[$195 + 4 >> 2] | 0;
     $201 = $4;
     $206 = HEAP32[$201 + 4 >> 2] | 0;
     $207 = $174;
     HEAP32[$207 >> 2] = HEAP32[$201 >> 2];
     HEAP32[$207 + 4 >> 2] = $206;
     $211 = $4;
     HEAP32[$211 >> 2] = $197;
     HEAP32[$211 + 4 >> 2] = $200;
     $215 = HEAP32[$174 >> 2] | 0;
     $216 = HEAP32[$$1 >> 2] | 0;
     if (($215 | 0) == ($216 | 0)) {
      if ((HEAP32[$$1 + ($173 << 3) + 4 >> 2] | 0) >= (HEAP32[$$1 + 4 >> 2] | 0)) {
       $$0167 = 1;
       $$pre$phi274Z2D = $174;
       $$pre$phiZ2D = $$1;
       break;
      }
     } else if ($215 >>> 0 >= $216 >>> 0) {
      $$0167 = 1;
      $$pre$phi274Z2D = $174;
      $$pre$phiZ2D = $$1;
      break;
     }
     $224 = $$1;
     $226 = HEAP32[$224 >> 2] | 0;
     $229 = HEAP32[$224 + 4 >> 2] | 0;
     $230 = $174;
     $235 = HEAP32[$230 + 4 >> 2] | 0;
     $236 = $$1;
     HEAP32[$236 >> 2] = HEAP32[$230 >> 2];
     HEAP32[$236 + 4 >> 2] = $235;
     $240 = $174;
     HEAP32[$240 >> 2] = $226;
     HEAP32[$240 + 4 >> 2] = $229;
     $$0167 = 2;
     $$pre$phi274Z2D = $174;
     $$pre$phiZ2D = $$1;
     break;
    }
    $244 = $$1;
    $246 = HEAP32[$244 >> 2] | 0;
    $249 = HEAP32[$244 + 4 >> 2] | 0;
    if ($$0$i$i31$i190) {
     $250 = $4;
     $255 = HEAP32[$250 + 4 >> 2] | 0;
     $256 = $$1;
     HEAP32[$256 >> 2] = HEAP32[$250 >> 2];
     HEAP32[$256 + 4 >> 2] = $255;
     $260 = $4;
     HEAP32[$260 >> 2] = $246;
     HEAP32[$260 + 4 >> 2] = $249;
     $$0167 = 1;
     $$pre$phi274Z2D = $174;
     $$pre$phiZ2D = $$1;
     break;
    }
    $264 = $174;
    $269 = HEAP32[$264 + 4 >> 2] | 0;
    $270 = $$1;
    HEAP32[$270 >> 2] = HEAP32[$264 >> 2];
    HEAP32[$270 + 4 >> 2] = $269;
    $274 = $174;
    HEAP32[$274 >> 2] = $246;
    HEAP32[$274 + 4 >> 2] = $249;
    $278 = HEAP32[$4 >> 2] | 0;
    if (($278 | 0) == ($246 | 0)) {
     if ((HEAP32[$8 >> 2] | 0) >= ($249 | 0)) {
      $$0167 = 1;
      $$pre$phi274Z2D = $174;
      $$pre$phiZ2D = $$1;
      break;
     }
    } else if ($278 >>> 0 >= $246 >>> 0) {
     $$0167 = 1;
     $$pre$phi274Z2D = $174;
     $$pre$phiZ2D = $$1;
     break;
    }
    $283 = $4;
    $288 = HEAP32[$283 + 4 >> 2] | 0;
    $289 = $174;
    HEAP32[$289 >> 2] = HEAP32[$283 >> 2];
    HEAP32[$289 + 4 >> 2] = $288;
    $293 = $4;
    HEAP32[$293 >> 2] = $246;
    HEAP32[$293 + 4 >> 2] = $249;
    $$0167 = 2;
    $$pre$phi274Z2D = $174;
    $$pre$phiZ2D = $$1;
   } while (0);
   $297 = HEAP32[$$pre$phiZ2D >> 2] | 0;
   $298 = HEAP32[$$pre$phi274Z2D >> 2] | 0;
   if (($297 | 0) == ($298 | 0)) if ((HEAP32[$$1 + 4 >> 2] | 0) < (HEAP32[$$1 + ($173 << 3) + 4 >> 2] | 0)) {
    $$3157 = $4;
    $$3170 = $$0167;
   } else label = 53; else if ($297 >>> 0 < $298 >>> 0) {
    $$3157 = $4;
    $$3170 = $$0167;
   } else label = 53;
   if ((label | 0) == 53) {
    label = 0;
    if (($$1 | 0) == ($5 | 0)) {
     label = 55;
     break;
    }
    $307 = $$1 + ($173 << 3) + 4 | 0;
    $$0154247 = $4;
    $391 = $5;
    while (1) {
     $390 = HEAP32[$391 >> 2] | 0;
     if (($390 | 0) == ($298 | 0)) {
      if ((HEAP32[$$0154247 + -4 >> 2] | 0) < (HEAP32[$307 >> 2] | 0)) break;
     } else if ($390 >>> 0 < $298 >>> 0) break;
     $419 = $391 + -8 | 0;
     if (($$1 | 0) == ($419 | 0)) {
      label = 55;
      break L3;
     } else {
      $$0154247$phi = $391;
      $391 = $419;
      $$0154247 = $$0154247$phi;
     }
    }
    $398 = $$1;
    $400 = HEAP32[$398 >> 2] | 0;
    $403 = HEAP32[$398 + 4 >> 2] | 0;
    $404 = $391;
    $409 = HEAP32[$404 + 4 >> 2] | 0;
    $410 = $$1;
    HEAP32[$410 >> 2] = HEAP32[$404 >> 2];
    HEAP32[$410 + 4 >> 2] = $409;
    $414 = $391;
    HEAP32[$414 >> 2] = $400;
    HEAP32[$414 + 4 >> 2] = $403;
    $$3157 = $391;
    $$3170 = $$0167 + 1 | 0;
   }
   $421 = $$1 + 8 | 0;
   L48 : do if ($421 >>> 0 < $$3157 >>> 0) {
    $$0174 = $174;
    $$4158 = $$3157;
    $$4164 = $421;
    $$4171 = $$3170;
    while (1) {
     $423 = HEAP32[$$0174 >> 2] | 0;
     $424 = $$0174 + 4 | 0;
     $$5165 = $$4164;
     while (1) {
      $425 = HEAP32[$$5165 >> 2] | 0;
      if (($425 | 0) == ($423 | 0)) {
       if ((HEAP32[$$5165 + 4 >> 2] | 0) >= (HEAP32[$424 >> 2] | 0)) break;
      } else if ($425 >>> 0 >= $423 >>> 0) break;
      $$5165 = $$5165 + 8 | 0;
     }
     $$5159 = $$4158;
     while (1) {
      $433 = $$5159 + -8 | 0;
      $434 = HEAP32[$433 >> 2] | 0;
      if (($434 | 0) == ($423 | 0)) {
       if ((HEAP32[$$5159 + -4 >> 2] | 0) < (HEAP32[$424 >> 2] | 0)) break;
      } else if ($434 >>> 0 < $423 >>> 0) break;
      $$5159 = $433;
     }
     if ($$5165 >>> 0 > $433 >>> 0) {
      $$2176 = $$0174;
      $$5172 = $$4171;
      $$6166 = $$5165;
      break L48;
     }
     $442 = $$5165;
     $444 = HEAP32[$442 >> 2] | 0;
     $447 = HEAP32[$442 + 4 >> 2] | 0;
     $448 = $433;
     $453 = HEAP32[$448 + 4 >> 2] | 0;
     $454 = $$5165;
     HEAP32[$454 >> 2] = HEAP32[$448 >> 2];
     HEAP32[$454 + 4 >> 2] = $453;
     $458 = $433;
     HEAP32[$458 >> 2] = $444;
     HEAP32[$458 + 4 >> 2] = $447;
     $$0174 = ($$0174 | 0) == ($$5165 | 0) ? $433 : $$0174;
     $$4158 = $433;
     $$4164 = $$5165 + 8 | 0;
     $$4171 = $$4171 + 1 | 0;
    }
   } else {
    $$2176 = $174;
    $$5172 = $$3170;
    $$6166 = $421;
   } while (0);
   do if (($$6166 | 0) == ($$2176 | 0)) $$6173 = $$5172; else {
    $466 = HEAP32[$$2176 >> 2] | 0;
    $467 = HEAP32[$$6166 >> 2] | 0;
    if (($466 | 0) == ($467 | 0)) {
     if ((HEAP32[$$2176 + 4 >> 2] | 0) >= (HEAP32[$$6166 + 4 >> 2] | 0)) {
      $$6173 = $$5172;
      break;
     }
    } else if ($466 >>> 0 >= $467 >>> 0) {
     $$6173 = $$5172;
     break;
    }
    $476 = $$6166;
    $478 = HEAP32[$476 >> 2] | 0;
    $481 = HEAP32[$476 + 4 >> 2] | 0;
    $482 = $$2176;
    $487 = HEAP32[$482 + 4 >> 2] | 0;
    $488 = $$6166;
    HEAP32[$488 >> 2] = HEAP32[$482 >> 2];
    HEAP32[$488 + 4 >> 2] = $487;
    $492 = $$2176;
    HEAP32[$492 >> 2] = $478;
    HEAP32[$492 + 4 >> 2] = $481;
    $$6173 = $$5172 + 1 | 0;
   } while (0);
   if (!$$6173) {
    $497 = __ZNSt3__227__insertion_sort_incompleteIRNS_6__lessIN2ut4arch13ComponentSpecES4_EEPS4_EEbT0_S8_T_($$1, $$6166, $2) | 0;
    $498 = $$6166 + 8 | 0;
    if (__ZNSt3__227__insertion_sort_incompleteIRNS_6__lessIN2ut4arch13ComponentSpecES4_EEPS4_EEbT0_S8_T_($498, $$1181$ph, $2) | 0) {
     label = 105;
     break;
    }
    if ($497) {
     $$2179 = 2;
     $$6 = $498;
     $$6186 = $$1181$ph;
     label = 110;
     break;
    }
   }
   $501 = $$6166;
   if (($501 - $$1 | 0) >= ($7 - $501 | 0)) {
    label = 109;
    break;
   }
   __ZNSt3__26__sortIRNS_6__lessIN2ut4arch13ComponentSpecES4_EEPS4_EEvT0_S8_T_($$1, $$6166, $2);
   $$1 = $$6166 + 8 | 0;
  }
  L80 : do if ((label | 0) == 55) {
   label = 0;
   $308 = $$1 + 8 | 0;
   $309 = HEAP32[$4 >> 2] | 0;
   if (($297 | 0) == ($309 | 0)) if ((HEAP32[$$1 + 4 >> 2] | 0) < (HEAP32[$$1181$ph + -4 >> 2] | 0)) $$1161 = $308; else label = 58; else if ($297 >>> 0 < $309 >>> 0) $$1161 = $308; else label = 58;
   if ((label | 0) == 58) {
    label = 0;
    if (($308 | 0) == ($4 | 0)) {
     label = 112;
     break L1;
    }
    $318 = $$1 + 4 | 0;
    $$0160248 = $308;
    while (1) {
     $319 = HEAP32[$$0160248 >> 2] | 0;
     if (($297 | 0) == ($319 | 0)) {
      if ((HEAP32[$318 >> 2] | 0) < (HEAP32[$$0160248 + 4 >> 2] | 0)) break;
     } else if ($297 >>> 0 < $319 >>> 0) break;
     $347 = $$0160248 + 8 | 0;
     if (($347 | 0) == ($4 | 0)) {
      label = 112;
      break L1;
     } else $$0160248 = $347;
    }
    $326 = $$0160248;
    $328 = HEAP32[$326 >> 2] | 0;
    $331 = HEAP32[$326 + 4 >> 2] | 0;
    $332 = $4;
    $337 = HEAP32[$332 + 4 >> 2] | 0;
    $338 = $$0160248;
    HEAP32[$338 >> 2] = HEAP32[$332 >> 2];
    HEAP32[$338 + 4 >> 2] = $337;
    $342 = $4;
    HEAP32[$342 >> 2] = $328;
    HEAP32[$342 + 4 >> 2] = $331;
    $$1161 = $$0160248 + 8 | 0;
   }
   if (($$1161 | 0) == ($4 | 0)) {
    label = 112;
    break L1;
   }
   $350 = $$1 + 4 | 0;
   $$1155 = $4;
   $$2162 = $$1161;
   while (1) {
    $351 = HEAP32[$$pre$phiZ2D >> 2] | 0;
    $$3163 = $$2162;
    while (1) {
     $352 = HEAP32[$$3163 >> 2] | 0;
     if (($351 | 0) == ($352 | 0)) {
      if ((HEAP32[$350 >> 2] | 0) < (HEAP32[$$3163 + 4 >> 2] | 0)) break;
     } else if ($351 >>> 0 < $352 >>> 0) break;
     $$3163 = $$3163 + 8 | 0;
    }
    $$2156 = $$1155;
    while (1) {
     $360 = $$2156 + -8 | 0;
     $361 = HEAP32[$360 >> 2] | 0;
     if (($351 | 0) == ($361 | 0)) {
      if ((HEAP32[$350 >> 2] | 0) >= (HEAP32[$$2156 + -4 >> 2] | 0)) break;
     } else if ($351 >>> 0 >= $361 >>> 0) break;
     $$2156 = $360;
    }
    if ($$3163 >>> 0 >= $360 >>> 0) {
     $$2179 = 4;
     $$6 = $$3163;
     $$6186 = $$1181$ph;
     label = 110;
     break L80;
    }
    $369 = $$3163;
    $371 = HEAP32[$369 >> 2] | 0;
    $374 = HEAP32[$369 + 4 >> 2] | 0;
    $375 = $360;
    $380 = HEAP32[$375 + 4 >> 2] | 0;
    $381 = $$3163;
    HEAP32[$381 >> 2] = HEAP32[$375 >> 2];
    HEAP32[$381 + 4 >> 2] = $380;
    $385 = $360;
    HEAP32[$385 >> 2] = $371;
    HEAP32[$385 + 4 >> 2] = $374;
    $$1155 = $360;
    $$2162 = $$3163 + 8 | 0;
   }
  } else if ((label | 0) == 105) {
   label = 0;
   $$2179 = $497 ? 1 : 2;
   $$6 = $$1;
   $$6186 = $497 ? $$1181$ph : $$6166;
   label = 110;
  } else if ((label | 0) == 109) {
   label = 0;
   __ZNSt3__26__sortIRNS_6__lessIN2ut4arch13ComponentSpecES4_EEPS4_EEvT0_S8_T_($$6166 + 8 | 0, $$1181$ph, $2);
   $$1$ph$be = $$1;
   $$1181$ph$be = $$6166;
  } while (0);
  if ((label | 0) == 110) {
   label = 0;
   switch ($$2179 & 7) {
   case 2:
   case 4:
   case 0:
    {
     $$1$ph$be = $$6;
     $$1181$ph$be = $$6186;
     break;
    }
   default:
    {
     label = 112;
     break L1;
    }
   }
  }
  $$1$ph = $$1$ph$be;
  $$1181$ph = $$1181$ph$be;
 }
 if ((label | 0) == 4) {
  $12 = $$1181$ph + -8 | 0;
  $13 = HEAP32[$12 >> 2] | 0;
  $14 = HEAP32[$$1 >> 2] | 0;
  if (($13 | 0) == ($14 | 0)) {
   if ((HEAP32[$$1181$ph + -4 >> 2] | 0) >= (HEAP32[$$1 + 4 >> 2] | 0)) return;
  } else if ($13 >>> 0 >= $14 >>> 0) return;
  $22 = $$1;
  $24 = HEAP32[$22 >> 2] | 0;
  $27 = HEAP32[$22 + 4 >> 2] | 0;
  $28 = $12;
  $33 = HEAP32[$28 + 4 >> 2] | 0;
  $34 = $$1;
  HEAP32[$34 >> 2] = HEAP32[$28 >> 2];
  HEAP32[$34 + 4 >> 2] = $33;
  $38 = $12;
  HEAP32[$38 >> 2] = $24;
  HEAP32[$38 + 4 >> 2] = $27;
  return;
 } else if ((label | 0) == 8) {
  $42 = $$1 + 8 | 0;
  $43 = $$1181$ph + -8 | 0;
  $44 = HEAP32[$42 >> 2] | 0;
  $45 = HEAP32[$$1 >> 2] | 0;
  if (($44 | 0) == ($45 | 0)) $$0$i$i$i = (HEAP32[$$1 + 12 >> 2] | 0) < (HEAP32[$$1 + 4 >> 2] | 0); else $$0$i$i$i = $44 >>> 0 < $45 >>> 0;
  $53 = HEAP32[$43 >> 2] | 0;
  if (($53 | 0) == ($44 | 0)) $$0$i$i31$i = (HEAP32[$$1181$ph + -4 >> 2] | 0) < (HEAP32[$$1 + 12 >> 2] | 0); else $$0$i$i31$i = $53 >>> 0 < $44 >>> 0;
  if (!$$0$i$i$i) {
   if (!$$0$i$i31$i) return;
   $61 = $42;
   $63 = HEAP32[$61 >> 2] | 0;
   $66 = HEAP32[$61 + 4 >> 2] | 0;
   $67 = $43;
   $72 = HEAP32[$67 + 4 >> 2] | 0;
   $73 = $42;
   HEAP32[$73 >> 2] = HEAP32[$67 >> 2];
   HEAP32[$73 + 4 >> 2] = $72;
   $77 = $43;
   HEAP32[$77 >> 2] = $63;
   HEAP32[$77 + 4 >> 2] = $66;
   $81 = HEAP32[$42 >> 2] | 0;
   $82 = HEAP32[$$1 >> 2] | 0;
   if (($81 | 0) == ($82 | 0)) {
    if ((HEAP32[$$1 + 12 >> 2] | 0) >= (HEAP32[$$1 + 4 >> 2] | 0)) return;
   } else if ($81 >>> 0 >= $82 >>> 0) return;
   $90 = $$1;
   $92 = HEAP32[$90 >> 2] | 0;
   $95 = HEAP32[$90 + 4 >> 2] | 0;
   $96 = $42;
   $101 = HEAP32[$96 + 4 >> 2] | 0;
   $102 = $$1;
   HEAP32[$102 >> 2] = HEAP32[$96 >> 2];
   HEAP32[$102 + 4 >> 2] = $101;
   $106 = $42;
   HEAP32[$106 >> 2] = $92;
   HEAP32[$106 + 4 >> 2] = $95;
   return;
  }
  $110 = $$1;
  $112 = HEAP32[$110 >> 2] | 0;
  $115 = HEAP32[$110 + 4 >> 2] | 0;
  if ($$0$i$i31$i) {
   $116 = $43;
   $121 = HEAP32[$116 + 4 >> 2] | 0;
   $122 = $$1;
   HEAP32[$122 >> 2] = HEAP32[$116 >> 2];
   HEAP32[$122 + 4 >> 2] = $121;
   $126 = $43;
   HEAP32[$126 >> 2] = $112;
   HEAP32[$126 + 4 >> 2] = $115;
   return;
  }
  $130 = $42;
  $135 = HEAP32[$130 + 4 >> 2] | 0;
  $136 = $$1;
  HEAP32[$136 >> 2] = HEAP32[$130 >> 2];
  HEAP32[$136 + 4 >> 2] = $135;
  $140 = $42;
  HEAP32[$140 >> 2] = $112;
  HEAP32[$140 + 4 >> 2] = $115;
  $144 = HEAP32[$43 >> 2] | 0;
  if (($144 | 0) == ($112 | 0)) {
   if ((HEAP32[$$1181$ph + -4 >> 2] | 0) >= ($115 | 0)) return;
  } else if ($144 >>> 0 >= $112 >>> 0) return;
  $150 = $43;
  $155 = HEAP32[$150 + 4 >> 2] | 0;
  $156 = $42;
  HEAP32[$156 >> 2] = HEAP32[$150 >> 2];
  HEAP32[$156 + 4 >> 2] = $155;
  $160 = $43;
  HEAP32[$160 >> 2] = $112;
  HEAP32[$160 + 4 >> 2] = $115;
  return;
 } else if ((label | 0) == 26) {
  __ZNSt3__27__sort4IRNS_6__lessIN2ut4arch13ComponentSpecES4_EEPS4_EEjT0_S8_S8_S8_T_($$1, $$1 + 8 | 0, $$1 + 16 | 0, $$1181$ph + -8 | 0, $2) | 0;
  return;
 } else if ((label | 0) == 27) {
  __ZNSt3__27__sort5IRNS_6__lessIN2ut4arch13ComponentSpecES4_EEPS4_EEjT0_S8_S8_S8_S8_T_($$1, $$1 + 8 | 0, $$1 + 16 | 0, $$1 + 24 | 0, $$1181$ph + -8 | 0, $2) | 0;
  return;
 } else if ((label | 0) == 29) {
  __ZNSt3__218__insertion_sort_3IRNS_6__lessIN2ut4arch13ComponentSpecES4_EEPS4_EEvT0_S8_T_($$1, $$1181$ph, $2);
  return;
 } else if ((label | 0) == 112) return;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$add$i199 = 0, $$0$i$i$add$i203 = 0, $$0$i$i$add$i209 = 0, $$0$i$i$add$i213 = 0, $$0$i$i$add$i223 = 0, $$0$i$i$add$i229 = 0, $$0$i$i$add$i233 = 0, $$0$i$i$add$i243 = 0, $$0$i$i$add$i253 = 0, $$0$i$i$add$i257 = 0, $$0$i$i$i = 0, $$0$i$i$i216 = 0, $$0$i$i$i236 = 0, $$0$i$i$i246 = 0, $$0$i$i$i260 = 0, $$0$i$i$idx$i = 0, $$0$i$i$idx$i198 = 0, $$0$i$i$idx$i202 = 0, $$0$i$i$idx$i208 = 0, $$0$i$i$idx$i212 = 0, $$0$i$i$idx$i222 = 0, $$0$i$i$idx$i228 = 0, $$0$i$i$idx$i232 = 0, $$0$i$i$idx$i242 = 0, $$0$i$i$idx$i252 = 0, $$0$i$i$idx$i256 = 0, $$0182$off0 = 0, $$0183 = 0, $$1184 = 0, $$2185 = 0, $$3186 = 0, $$4187 = 0, $$6181 = 0, $$pre = 0, $$pre$phi298Z2D = 0, $$pre$phi300Z2D = 0, $100 = 0, $107 = 0, $116 = 0, $117 = 0, $124 = 0, $126 = 0, $128 = 0, $129 = 0, $13 = 0, $136 = 0, $141 = 0, $142 = 0, $149 = 0, $15 = 0, $152 = 0, $153 = 0, $157 = 0, $158 = 0, $165 = 0, $174 = 0, $175 = 0, $182 = 0, $186 = 0, $187 = 0, $19 = 0, $190 = 0, $191 = 0, $194 = 0, $197 = 0, $204 = 0, $212 = 0, $213 = 0, $219 = 0, $220 = 0, $223 = 0, $227 = 0, $234 = 0, $243 = 0, $244 = 0, $3 = 0, $30 = 0, $33 = 0, $34 = 0, $37 = 0, $39 = 0, $4 = 0, $46 = 0, $5 = 0, $51 = 0, $52 = 0, $60 = 0, $63 = 0, $64 = 0, $67 = 0, $70 = 0, $77 = 0, $85 = 0, $86 = 0, $92 = 0, $93 = 0, $96 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $3 = sp + 12 | 0;
 $4 = sp;
 $5 = $1;
 L1 : do if (($5 - $0 | 0) > 2) {
  if ((HEAP8[$0 >> 0] | 0) == 103) {
   $13 = (HEAP8[$0 + 1 >> 0] | 0) == 115;
   $$0182$off0 = $13;
   $$0183 = $13 ? $0 + 2 | 0 : $0;
  } else {
   $$0182$off0 = 0;
   $$0183 = $0;
  }
  $15 = __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($$0183, $1, $2) | 0;
  if (($15 | 0) != ($$0183 | 0)) {
   if (!$$0182$off0) {
    $$6181 = $15;
    break;
   }
   $19 = HEAP32[$2 + 4 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($19 | 0)) {
    $$6181 = $0;
    break;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($19 + -24 | 0, 0, 22349) | 0;
   $$6181 = $15;
   break;
  }
  if (($5 - $$0183 | 0) > 2) if ((HEAP8[$$0183 >> 0] | 0) == 115) if ((HEAP8[$$0183 + 1 >> 0] | 0) == 114) {
   $30 = $$0183 + 2 | 0;
   if ((HEAP8[$30 >> 0] | 0) == 78) {
    $33 = $$0183 + 3 | 0;
    $34 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_($33, $1, $2) | 0;
    if (($34 | 0) == ($33 | 0) | ($34 | 0) == ($1 | 0)) {
     $$6181 = $0;
     break;
    }
    $37 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($34, $1, $2) | 0;
    $$pre = $2 + 4 | 0;
    do if (($37 | 0) == ($34 | 0)) {
     $$1184 = $34;
     $$pre$phi298Z2D = $2;
    } else {
     $39 = HEAP32[$$pre >> 2] | 0;
     if ((($39 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      $$6181 = $0;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $39 + -24 | 0);
     $46 = HEAP32[$$pre >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($46 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$$pre >> 2] = $46 + -24;
     $51 = HEAP8[$3 + 11 >> 0] | 0;
     $52 = $51 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($46 + -48 | 0, $52 ? HEAP32[$3 >> 2] | 0 : $3, $52 ? HEAP32[$3 + 4 >> 2] | 0 : $51 & 255) | 0;
     if (($37 | 0) != ($1 | 0)) {
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$1184 = $37;
      $$pre$phi298Z2D = $2;
      break;
     }
     $60 = HEAP32[$$pre >> 2] | 0;
     $$0$i$i$idx$i198 = 0;
     while (1) {
      if (($$0$i$i$idx$i198 | 0) == -1) break;
      $$0$i$i$add$i199 = $$0$i$i$idx$i198 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($60 + ($$0$i$i$add$i199 * 24 | 0) | 0);
      $$0$i$i$idx$i198 = $$0$i$i$add$i199;
     }
     HEAP32[$$pre >> 2] = $60 + -24;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$6181 = $0;
     break L1;
    } while (0);
    $63 = $4 + 11 | 0;
    $64 = $4 + 4 | 0;
    $$2185 = $$1184;
    while (1) {
     if ((HEAP8[$$2185 >> 0] | 0) == 69) break;
     $67 = __ZN10__cxxabiv112_GLOBAL__N_132parse_unresolved_qualifier_levelINS0_2DbEEEPKcS4_S4_RT_($$2185, $1, $2) | 0;
     if (($67 | 0) == ($$2185 | 0) | ($67 | 0) == ($1 | 0)) {
      $$6181 = $0;
      break L1;
     }
     $70 = HEAP32[$$pre >> 2] | 0;
     if ((($70 - (HEAP32[$$pre$phi298Z2D >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      $$6181 = $0;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $70 + -24 | 0);
     $77 = HEAP32[$$pre >> 2] | 0;
     $$0$i$i$idx$i202 = 0;
     while (1) {
      if (($$0$i$i$idx$i202 | 0) == -1) break;
      $$0$i$i$add$i203 = $$0$i$i$idx$i202 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($77 + ($$0$i$i$add$i203 * 24 | 0) | 0);
      $$0$i$i$idx$i202 = $$0$i$i$add$i203;
     }
     HEAP32[$$pre >> 2] = $77 + -24;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($3, 0, 22349) | 0;
     HEAP32[$4 >> 2] = HEAP32[$3 >> 2];
     HEAP32[$4 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
     HEAP32[$4 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
     $$0$i$i$i = 0;
     while (1) {
      if (($$0$i$i$i | 0) == 3) break;
      HEAP32[$3 + ($$0$i$i$i << 2) >> 2] = 0;
      $$0$i$i$i = $$0$i$i$i + 1 | 0;
     }
     $85 = HEAP8[$63 >> 0] | 0;
     $86 = $85 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[$$pre >> 2] | 0) + -24 | 0, $86 ? HEAP32[$4 >> 2] | 0 : $4, $86 ? HEAP32[$64 >> 2] | 0 : $85 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$2185 = $67;
    }
    $92 = $$2185 + 1 | 0;
    $93 = __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($92, $1, $2) | 0;
    if (($93 | 0) == ($92 | 0)) {
     $96 = HEAP32[$$pre >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($96 | 0)) {
      $$6181 = $0;
      break;
     }
     $$0$i$i$idx$i208 = 0;
     while (1) {
      if (($$0$i$i$idx$i208 | 0) == -1) break;
      $$0$i$i$add$i209 = $$0$i$i$idx$i208 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($96 + ($$0$i$i$add$i209 * 24 | 0) | 0);
      $$0$i$i$idx$i208 = $$0$i$i$add$i209;
     }
     HEAP32[$$pre >> 2] = $96 + -24;
     $$6181 = $0;
     break;
    }
    $100 = HEAP32[$$pre >> 2] | 0;
    if ((($100 - (HEAP32[$$pre$phi298Z2D >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     $$6181 = $0;
     break;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $100 + -24 | 0);
    $107 = HEAP32[$$pre >> 2] | 0;
    $$0$i$i$idx$i212 = 0;
    while (1) {
     if (($$0$i$i$idx$i212 | 0) == -1) break;
     $$0$i$i$add$i213 = $$0$i$i$idx$i212 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($107 + ($$0$i$i$add$i213 * 24 | 0) | 0);
     $$0$i$i$idx$i212 = $$0$i$i$add$i213;
    }
    HEAP32[$$pre >> 2] = $107 + -24;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($3, 0, 22349) | 0;
    HEAP32[$4 >> 2] = HEAP32[$3 >> 2];
    HEAP32[$4 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
    HEAP32[$4 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
    $$0$i$i$i216 = 0;
    while (1) {
     if (($$0$i$i$i216 | 0) == 3) break;
     HEAP32[$3 + ($$0$i$i$i216 << 2) >> 2] = 0;
     $$0$i$i$i216 = $$0$i$i$i216 + 1 | 0;
    }
    $116 = HEAP8[$4 + 11 >> 0] | 0;
    $117 = $116 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[$$pre >> 2] | 0) + -24 | 0, $117 ? HEAP32[$4 >> 2] | 0 : $4, $117 ? HEAP32[$4 + 4 >> 2] | 0 : $116 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$6181 = $93;
    break;
   }
   $124 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_($30, $1, $2) | 0;
   if (($124 | 0) != ($30 | 0)) {
    $126 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($124, $1, $2) | 0;
    if (($126 | 0) == ($124 | 0)) $$3186 = $124; else {
     $128 = $2 + 4 | 0;
     $129 = HEAP32[$128 >> 2] | 0;
     if ((($129 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      $$6181 = $0;
      break;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $129 + -24 | 0);
     $136 = HEAP32[$128 >> 2] | 0;
     $$0$i$i$idx$i222 = 0;
     while (1) {
      if (($$0$i$i$idx$i222 | 0) == -1) break;
      $$0$i$i$add$i223 = $$0$i$i$idx$i222 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($136 + ($$0$i$i$add$i223 * 24 | 0) | 0);
      $$0$i$i$idx$i222 = $$0$i$i$add$i223;
     }
     HEAP32[$128 >> 2] = $136 + -24;
     $141 = HEAP8[$3 + 11 >> 0] | 0;
     $142 = $141 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($136 + -48 | 0, $142 ? HEAP32[$3 >> 2] | 0 : $3, $142 ? HEAP32[$3 + 4 >> 2] | 0 : $141 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$3186 = $126;
    }
    $149 = __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($$3186, $1, $2) | 0;
    if (($149 | 0) == ($$3186 | 0)) {
     $152 = $2 + 4 | 0;
     $153 = HEAP32[$152 >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($153 | 0)) {
      $$6181 = $0;
      break;
     }
     $$0$i$i$idx$i228 = 0;
     while (1) {
      if (($$0$i$i$idx$i228 | 0) == -1) break;
      $$0$i$i$add$i229 = $$0$i$i$idx$i228 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($153 + ($$0$i$i$add$i229 * 24 | 0) | 0);
      $$0$i$i$idx$i228 = $$0$i$i$add$i229;
     }
     HEAP32[$152 >> 2] = $153 + -24;
     $$6181 = $0;
     break;
    }
    $157 = $2 + 4 | 0;
    $158 = HEAP32[$157 >> 2] | 0;
    if ((($158 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     $$6181 = $0;
     break;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $158 + -24 | 0);
    $165 = HEAP32[$157 >> 2] | 0;
    $$0$i$i$idx$i232 = 0;
    while (1) {
     if (($$0$i$i$idx$i232 | 0) == -1) break;
     $$0$i$i$add$i233 = $$0$i$i$idx$i232 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($165 + ($$0$i$i$add$i233 * 24 | 0) | 0);
     $$0$i$i$idx$i232 = $$0$i$i$add$i233;
    }
    HEAP32[$157 >> 2] = $165 + -24;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($3, 0, 22349) | 0;
    HEAP32[$4 >> 2] = HEAP32[$3 >> 2];
    HEAP32[$4 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
    HEAP32[$4 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
    $$0$i$i$i236 = 0;
    while (1) {
     if (($$0$i$i$i236 | 0) == 3) break;
     HEAP32[$3 + ($$0$i$i$i236 << 2) >> 2] = 0;
     $$0$i$i$i236 = $$0$i$i$i236 + 1 | 0;
    }
    $174 = HEAP8[$4 + 11 >> 0] | 0;
    $175 = $174 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[$157 >> 2] | 0) + -24 | 0, $175 ? HEAP32[$4 >> 2] | 0 : $4, $175 ? HEAP32[$4 + 4 >> 2] | 0 : $174 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$6181 = $149;
    break;
   }
   $182 = __ZN10__cxxabiv112_GLOBAL__N_132parse_unresolved_qualifier_levelINS0_2DbEEEPKcS4_S4_RT_($30, $1, $2) | 0;
   if (($182 | 0) == ($30 | 0) | ($182 | 0) == ($1 | 0)) $$6181 = $0; else {
    if ($$0182$off0) {
     $186 = $2 + 4 | 0;
     $187 = HEAP32[$186 >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($187 | 0)) {
      $$6181 = $0;
      break;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($187 + -24 | 0, 0, 22349) | 0;
     $$pre$phi300Z2D = $186;
    } else $$pre$phi300Z2D = $2 + 4 | 0;
    $190 = $4 + 11 | 0;
    $191 = $4 + 4 | 0;
    $$4187 = $182;
    while (1) {
     if ((HEAP8[$$4187 >> 0] | 0) == 69) break;
     $194 = __ZN10__cxxabiv112_GLOBAL__N_132parse_unresolved_qualifier_levelINS0_2DbEEEPKcS4_S4_RT_($$4187, $1, $2) | 0;
     if (($194 | 0) == ($$4187 | 0) | ($194 | 0) == ($1 | 0)) {
      $$6181 = $0;
      break L1;
     }
     $197 = HEAP32[$$pre$phi300Z2D >> 2] | 0;
     if ((($197 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      $$6181 = $0;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $197 + -24 | 0);
     $204 = HEAP32[$$pre$phi300Z2D >> 2] | 0;
     $$0$i$i$idx$i242 = 0;
     while (1) {
      if (($$0$i$i$idx$i242 | 0) == -1) break;
      $$0$i$i$add$i243 = $$0$i$i$idx$i242 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($204 + ($$0$i$i$add$i243 * 24 | 0) | 0);
      $$0$i$i$idx$i242 = $$0$i$i$add$i243;
     }
     HEAP32[$$pre$phi300Z2D >> 2] = $204 + -24;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($3, 0, 22349) | 0;
     HEAP32[$4 >> 2] = HEAP32[$3 >> 2];
     HEAP32[$4 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
     HEAP32[$4 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
     $$0$i$i$i246 = 0;
     while (1) {
      if (($$0$i$i$i246 | 0) == 3) break;
      HEAP32[$3 + ($$0$i$i$i246 << 2) >> 2] = 0;
      $$0$i$i$i246 = $$0$i$i$i246 + 1 | 0;
     }
     $212 = HEAP8[$190 >> 0] | 0;
     $213 = $212 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[$$pre$phi300Z2D >> 2] | 0) + -24 | 0, $213 ? HEAP32[$4 >> 2] | 0 : $4, $213 ? HEAP32[$191 >> 2] | 0 : $212 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$4187 = $194;
    }
    $219 = $$4187 + 1 | 0;
    $220 = __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($219, $1, $2) | 0;
    if (($220 | 0) == ($219 | 0)) {
     $223 = HEAP32[$$pre$phi300Z2D >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($223 | 0)) {
      $$6181 = $0;
      break;
     }
     $$0$i$i$idx$i252 = 0;
     while (1) {
      if (($$0$i$i$idx$i252 | 0) == -1) break;
      $$0$i$i$add$i253 = $$0$i$i$idx$i252 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($223 + ($$0$i$i$add$i253 * 24 | 0) | 0);
      $$0$i$i$idx$i252 = $$0$i$i$add$i253;
     }
     HEAP32[$$pre$phi300Z2D >> 2] = $223 + -24;
     $$6181 = $0;
     break;
    }
    $227 = HEAP32[$$pre$phi300Z2D >> 2] | 0;
    if ((($227 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$6181 = $0; else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $227 + -24 | 0);
     $234 = HEAP32[$$pre$phi300Z2D >> 2] | 0;
     $$0$i$i$idx$i256 = 0;
     while (1) {
      if (($$0$i$i$idx$i256 | 0) == -1) break;
      $$0$i$i$add$i257 = $$0$i$i$idx$i256 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($234 + ($$0$i$i$add$i257 * 24 | 0) | 0);
      $$0$i$i$idx$i256 = $$0$i$i$add$i257;
     }
     HEAP32[$$pre$phi300Z2D >> 2] = $234 + -24;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($3, 0, 22349) | 0;
     HEAP32[$4 >> 2] = HEAP32[$3 >> 2];
     HEAP32[$4 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
     HEAP32[$4 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
     $$0$i$i$i260 = 0;
     while (1) {
      if (($$0$i$i$i260 | 0) == 3) break;
      HEAP32[$3 + ($$0$i$i$i260 << 2) >> 2] = 0;
      $$0$i$i$i260 = $$0$i$i$i260 + 1 | 0;
     }
     $243 = HEAP8[$4 + 11 >> 0] | 0;
     $244 = $243 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[$$pre$phi300Z2D >> 2] | 0) + -24 | 0, $244 ? HEAP32[$4 >> 2] | 0 : $4, $244 ? HEAP32[$4 + 4 >> 2] | 0 : $243 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$6181 = $220;
    }
   }
  } else $$6181 = $0; else $$6181 = $0; else $$6181 = $0;
 } else $$6181 = $0; while (0);
 STACKTOP = sp;
 return $$6181 | 0;
}

function _printf_core($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0228 = 0, $$0229334 = 0, $$0232 = 0, $$0235 = 0, $$0237 = 0, $$0240313 = 0, $$0240313371 = 0, $$0240333 = 0, $$0243 = 0, $$0243$ph = 0, $$0243$ph$be = 0, $$0247 = 0, $$0247$ph = 0, $$0249$lcssa = 0, $$0249321 = 0, $$0252 = 0, $$0253 = 0, $$0254 = 0, $$0259 = 0, $$0262$lcssa = 0, $$0262328 = 0, $$0269$ph = 0, $$1 = 0, $$1230340 = 0, $$1233 = 0, $$1236 = 0, $$1238 = 0, $$1241339 = 0, $$1248 = 0, $$1255 = 0, $$1260 = 0, $$1263 = 0, $$1270 = 0, $$2 = 0, $$2234 = 0, $$2239 = 0, $$2242320 = 0, $$2256 = 0, $$2261 = 0, $$2271 = 0, $$3265 = 0, $$3272 = 0, $$3317 = 0, $$4258370 = 0, $$4266 = 0, $$5 = 0, $$6268 = 0, $$lcssa308 = 0, $$pre$phiZ2D = 0, $$pre360 = 0, $$pre363 = 0, $$sink = 0, $10 = 0, $102 = 0, $103 = 0, $106 = 0, $109 = 0, $11 = 0, $112 = 0, $114 = 0, $12 = 0, $122 = 0, $126 = 0, $13 = 0, $137 = 0, $14 = 0, $141 = 0, $148 = 0, $149 = 0, $151 = 0, $152 = 0, $154 = 0, $163 = 0, $164 = 0, $169 = 0, $172 = 0, $177 = 0, $178 = 0, $183 = 0, $185 = 0, $192 = 0, $193 = 0, $20 = 0, $204 = 0, $21 = 0, $216 = 0, $223 = 0, $225 = 0, $228 = 0, $23 = 0, $230 = 0, $238 = 0, $24 = 0, $240 = 0, $243 = 0, $244 = 0, $248 = 0, $25 = 0, $252 = 0, $254 = 0, $257 = 0, $259 = 0, $260 = 0, $261 = 0, $27 = 0, $271 = 0, $272 = 0, $277 = 0, $279 = 0, $280 = 0, $286 = 0, $298 = 0, $30 = 0, $301 = 0, $302 = 0, $315 = 0, $317 = 0, $318 = 0, $322 = 0, $326 = 0, $328 = 0, $339 = 0, $341 = 0, $348 = 0, $351 = 0, $358 = 0, $359 = 0, $43 = 0, $5 = 0, $51 = 0, $52 = 0, $54 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $7 = 0, $76 = 0, $8 = 0, $80 = 0, $9 = 0, $or$cond = 0, $or$cond278 = 0, $spec$select = 0, $spec$select284 = 0, $storemerge273$lcssa = 0, $storemerge273327 = 0, $storemerge274 = 0, label = 0, sp = 0, $154$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $5 = sp + 16 | 0;
 $6 = sp;
 $7 = sp + 24 | 0;
 $8 = sp + 8 | 0;
 $9 = sp + 20 | 0;
 HEAP32[$5 >> 2] = $1;
 $10 = ($0 | 0) != 0;
 $11 = $7 + 40 | 0;
 $12 = $11;
 $13 = $7 + 39 | 0;
 $14 = $8 + 4 | 0;
 $$0243$ph = 0;
 $$0247$ph = 0;
 $$0269$ph = 0;
 L1 : while (1) {
  $$0243 = $$0243$ph;
  $$0247 = $$0247$ph;
  while (1) {
   do if (($$0247 | 0) > -1) if (($$0243 | 0) > (2147483647 - $$0247 | 0)) {
    HEAP32[(___errno_location() | 0) >> 2] = 75;
    $$1248 = -1;
    break;
   } else {
    $$1248 = $$0243 + $$0247 | 0;
    break;
   } else $$1248 = $$0247; while (0);
   $20 = HEAP32[$5 >> 2] | 0;
   $21 = HEAP8[$20 >> 0] | 0;
   if (!($21 << 24 >> 24)) {
    label = 94;
    break L1;
   }
   $23 = $21;
   $25 = $20;
   L12 : while (1) {
    switch ($23 << 24 >> 24) {
    case 37:
     {
      label = 10;
      break L12;
      break;
     }
    case 0:
     {
      $$0249$lcssa = $25;
      break L12;
      break;
     }
    default:
     {}
    }
    $24 = $25 + 1 | 0;
    HEAP32[$5 >> 2] = $24;
    $23 = HEAP8[$24 >> 0] | 0;
    $25 = $24;
   }
   L15 : do if ((label | 0) == 10) {
    label = 0;
    $$0249321 = $25;
    $27 = $25;
    while (1) {
     if ((HEAP8[$27 + 1 >> 0] | 0) != 37) {
      $$0249$lcssa = $$0249321;
      break L15;
     }
     $30 = $$0249321 + 1 | 0;
     $27 = $27 + 2 | 0;
     HEAP32[$5 >> 2] = $27;
     if ((HEAP8[$27 >> 0] | 0) != 37) {
      $$0249$lcssa = $30;
      break;
     } else $$0249321 = $30;
    }
   } while (0);
   $$0243 = $$0249$lcssa - $20 | 0;
   if ($10) _out($0, $20, $$0243);
   if (!$$0243) break; else $$0247 = $$1248;
  }
  $43 = (_isdigit(HEAP8[(HEAP32[$5 >> 2] | 0) + 1 >> 0] | 0) | 0) == 0;
  $$pre360 = HEAP32[$5 >> 2] | 0;
  if ($43) {
   $$0253 = -1;
   $$1270 = $$0269$ph;
   $$sink = 1;
  } else if ((HEAP8[$$pre360 + 2 >> 0] | 0) == 36) {
   $$0253 = (HEAP8[$$pre360 + 1 >> 0] | 0) + -48 | 0;
   $$1270 = 1;
   $$sink = 3;
  } else {
   $$0253 = -1;
   $$1270 = $$0269$ph;
   $$sink = 1;
  }
  $51 = $$pre360 + $$sink | 0;
  HEAP32[$5 >> 2] = $51;
  $52 = HEAP8[$51 >> 0] | 0;
  $54 = ($52 << 24 >> 24) + -32 | 0;
  if ($54 >>> 0 > 31 | (1 << $54 & 75913 | 0) == 0) {
   $$0262$lcssa = 0;
   $$lcssa308 = $52;
   $storemerge273$lcssa = $51;
  } else {
   $$0262328 = 0;
   $60 = $54;
   $storemerge273327 = $51;
   while (1) {
    $61 = 1 << $60 | $$0262328;
    $62 = $storemerge273327 + 1 | 0;
    HEAP32[$5 >> 2] = $62;
    $63 = HEAP8[$62 >> 0] | 0;
    $60 = ($63 << 24 >> 24) + -32 | 0;
    if ($60 >>> 0 > 31 | (1 << $60 & 75913 | 0) == 0) {
     $$0262$lcssa = $61;
     $$lcssa308 = $63;
     $storemerge273$lcssa = $62;
     break;
    } else {
     $$0262328 = $61;
     $storemerge273327 = $62;
    }
   }
  }
  if ($$lcssa308 << 24 >> 24 == 42) {
   if (!(_isdigit(HEAP8[$storemerge273$lcssa + 1 >> 0] | 0) | 0)) label = 27; else {
    $76 = HEAP32[$5 >> 2] | 0;
    if ((HEAP8[$76 + 2 >> 0] | 0) == 36) {
     $80 = $76 + 1 | 0;
     HEAP32[$4 + ((HEAP8[$80 >> 0] | 0) + -48 << 2) >> 2] = 10;
     $$0259 = HEAP32[$3 + ((HEAP8[$80 >> 0] | 0) + -48 << 3) >> 2] | 0;
     $$2271 = 1;
     $storemerge274 = $76 + 3 | 0;
    } else label = 27;
   }
   if ((label | 0) == 27) {
    label = 0;
    if ($$1270 | 0) {
     $$0 = -1;
     break;
    }
    if ($10) {
     $102 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $103 = HEAP32[$102 >> 2] | 0;
     HEAP32[$2 >> 2] = $102 + 4;
     $358 = $103;
    } else $358 = 0;
    $$0259 = $358;
    $$2271 = 0;
    $storemerge274 = (HEAP32[$5 >> 2] | 0) + 1 | 0;
   }
   HEAP32[$5 >> 2] = $storemerge274;
   $106 = ($$0259 | 0) < 0;
   $$1260 = $106 ? 0 - $$0259 | 0 : $$0259;
   $$1263 = $106 ? $$0262$lcssa | 8192 : $$0262$lcssa;
   $$3272 = $$2271;
   $112 = $storemerge274;
  } else {
   $109 = _getint($5) | 0;
   if (($109 | 0) < 0) {
    $$0 = -1;
    break;
   }
   $$1260 = $109;
   $$1263 = $$0262$lcssa;
   $$3272 = $$1270;
   $112 = HEAP32[$5 >> 2] | 0;
  }
  do if ((HEAP8[$112 >> 0] | 0) == 46) {
   $114 = $112 + 1 | 0;
   if ((HEAP8[$114 >> 0] | 0) != 42) {
    HEAP32[$5 >> 2] = $114;
    $152 = _getint($5) | 0;
    $$0254 = $152;
    $$pre363 = HEAP32[$5 >> 2] | 0;
    break;
   }
   if (_isdigit(HEAP8[$112 + 2 >> 0] | 0) | 0) {
    $122 = HEAP32[$5 >> 2] | 0;
    if ((HEAP8[$122 + 3 >> 0] | 0) == 36) {
     $126 = $122 + 2 | 0;
     HEAP32[$4 + ((HEAP8[$126 >> 0] | 0) + -48 << 2) >> 2] = 10;
     $137 = HEAP32[$3 + ((HEAP8[$126 >> 0] | 0) + -48 << 3) >> 2] | 0;
     $141 = $122 + 4 | 0;
     HEAP32[$5 >> 2] = $141;
     $$0254 = $137;
     $$pre363 = $141;
     break;
    }
   }
   if ($$3272 | 0) {
    $$0 = -1;
    break L1;
   }
   if ($10) {
    $148 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
    $149 = HEAP32[$148 >> 2] | 0;
    HEAP32[$2 >> 2] = $148 + 4;
    $359 = $149;
   } else $359 = 0;
   $151 = (HEAP32[$5 >> 2] | 0) + 2 | 0;
   HEAP32[$5 >> 2] = $151;
   $$0254 = $359;
   $$pre363 = $151;
  } else {
   $$0254 = -1;
   $$pre363 = $112;
  } while (0);
  $$0252 = 0;
  $154 = $$pre363;
  while (1) {
   if (((HEAP8[$154 >> 0] | 0) + -65 | 0) >>> 0 > 57) {
    $$0 = -1;
    break L1;
   }
   $154$looptemp = $154;
   $154 = $154 + 1 | 0;
   HEAP32[$5 >> 2] = $154;
   $163 = HEAP8[(HEAP8[$154$looptemp >> 0] | 0) + -65 + (19287 + ($$0252 * 58 | 0)) >> 0] | 0;
   $164 = $163 & 255;
   if (($164 + -1 | 0) >>> 0 >= 8) break; else $$0252 = $164;
  }
  if (!($163 << 24 >> 24)) {
   $$0 = -1;
   break;
  }
  $169 = ($$0253 | 0) > -1;
  do if ($163 << 24 >> 24 == 19) if ($169) {
   $$0 = -1;
   break L1;
  } else label = 54; else {
   if ($169) {
    HEAP32[$4 + ($$0253 << 2) >> 2] = $164;
    $172 = $3 + ($$0253 << 3) | 0;
    $177 = HEAP32[$172 + 4 >> 2] | 0;
    $178 = $6;
    HEAP32[$178 >> 2] = HEAP32[$172 >> 2];
    HEAP32[$178 + 4 >> 2] = $177;
    label = 54;
    break;
   }
   if (!$10) {
    $$0 = 0;
    break L1;
   }
   _pop_arg($6, $164, $2);
   $183 = HEAP32[$5 >> 2] | 0;
   label = 55;
  } while (0);
  if ((label | 0) == 54) {
   label = 0;
   if ($10) {
    $183 = $154;
    label = 55;
   } else $$0243$ph$be = 0;
  }
  L77 : do if ((label | 0) == 55) {
   label = 0;
   $185 = HEAP8[$183 + -1 >> 0] | 0;
   $$0235 = ($$0252 | 0) != 0 & ($185 & 15 | 0) == 3 ? $185 & -33 : $185;
   $192 = $$1263 & -65537;
   $spec$select = ($$1263 & 8192 | 0) == 0 ? $$1263 : $192;
   L79 : do switch ($$0235 | 0) {
   case 110:
    {
     switch (($$0252 & 255) << 24 >> 24) {
     case 0:
      {
       HEAP32[HEAP32[$6 >> 2] >> 2] = $$1248;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
     case 1:
      {
       HEAP32[HEAP32[$6 >> 2] >> 2] = $$1248;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
     case 2:
      {
       $204 = HEAP32[$6 >> 2] | 0;
       HEAP32[$204 >> 2] = $$1248;
       HEAP32[$204 + 4 >> 2] = (($$1248 | 0) < 0) << 31 >> 31;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
     case 3:
      {
       HEAP16[HEAP32[$6 >> 2] >> 1] = $$1248;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
     case 4:
      {
       HEAP8[HEAP32[$6 >> 2] >> 0] = $$1248;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
     case 6:
      {
       HEAP32[HEAP32[$6 >> 2] >> 2] = $$1248;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
     case 7:
      {
       $216 = HEAP32[$6 >> 2] | 0;
       HEAP32[$216 >> 2] = $$1248;
       HEAP32[$216 + 4 >> 2] = (($$1248 | 0) < 0) << 31 >> 31;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
     default:
      {
       $$0243$ph$be = 0;
       break L77;
      }
     }
     break;
    }
   case 112:
    {
     $$1236 = 120;
     $$1255 = $$0254 >>> 0 > 8 ? $$0254 : 8;
     $$3265 = $spec$select | 8;
     label = 67;
     break;
    }
   case 88:
   case 120:
    {
     $$1236 = $$0235;
     $$1255 = $$0254;
     $$3265 = $spec$select;
     label = 67;
     break;
    }
   case 111:
    {
     $238 = $6;
     $240 = HEAP32[$238 >> 2] | 0;
     $243 = HEAP32[$238 + 4 >> 2] | 0;
     $244 = _fmt_o($240, $243, $11) | 0;
     $248 = $12 - $244 | 0;
     $$0228 = $244;
     $$1233 = 0;
     $$1238 = 19751;
     $$2256 = ($spec$select & 8 | 0) == 0 | ($$0254 | 0) > ($248 | 0) ? $$0254 : $248 + 1 | 0;
     $$4266 = $spec$select;
     $277 = $240;
     $279 = $243;
     label = 73;
     break;
    }
   case 105:
   case 100:
    {
     $252 = $6;
     $254 = HEAP32[$252 >> 2] | 0;
     $257 = HEAP32[$252 + 4 >> 2] | 0;
     if (($257 | 0) < 0) {
      $259 = _i64Subtract(0, 0, $254 | 0, $257 | 0) | 0;
      $260 = tempRet0;
      $261 = $6;
      HEAP32[$261 >> 2] = $259;
      HEAP32[$261 + 4 >> 2] = $260;
      $$0232 = 1;
      $$0237 = 19751;
      $271 = $259;
      $272 = $260;
      label = 72;
      break L79;
     } else {
      $$0232 = ($spec$select & 2049 | 0) != 0 & 1;
      $$0237 = ($spec$select & 2048 | 0) == 0 ? (($spec$select & 1 | 0) == 0 ? 19751 : 19753) : 19752;
      $271 = $254;
      $272 = $257;
      label = 72;
      break L79;
     }
     break;
    }
   case 117:
    {
     $193 = $6;
     $$0232 = 0;
     $$0237 = 19751;
     $271 = HEAP32[$193 >> 2] | 0;
     $272 = HEAP32[$193 + 4 >> 2] | 0;
     label = 72;
     break;
    }
   case 99:
    {
     HEAP8[$13 >> 0] = HEAP32[$6 >> 2];
     $$2 = $13;
     $$2234 = 0;
     $$2239 = 19751;
     $$5 = 1;
     $$6268 = $192;
     $$pre$phiZ2D = $12;
     break;
    }
   case 109:
    {
     $$1 = _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0;
     label = 77;
     break;
    }
   case 115:
    {
     $298 = HEAP32[$6 >> 2] | 0;
     $$1 = ($298 | 0) == 0 ? 19761 : $298;
     label = 77;
     break;
    }
   case 67:
    {
     HEAP32[$8 >> 2] = HEAP32[$6 >> 2];
     HEAP32[$14 >> 2] = 0;
     HEAP32[$6 >> 2] = $8;
     $$4258370 = -1;
     label = 81;
     break;
    }
   case 83:
    {
     if (!$$0254) {
      _pad_670($0, 32, $$1260, 0, $spec$select);
      $$0240313371 = 0;
      label = 91;
     } else {
      $$4258370 = $$0254;
      label = 81;
     }
     break;
    }
   case 65:
   case 71:
   case 70:
   case 69:
   case 97:
   case 103:
   case 102:
   case 101:
    {
     $$0243$ph$be = _fmt_fp($0, +HEAPF64[$6 >> 3], $$1260, $$0254, $spec$select, $$0235) | 0;
     break L77;
     break;
    }
   default:
    {
     $$2 = $20;
     $$2234 = 0;
     $$2239 = 19751;
     $$5 = $$0254;
     $$6268 = $spec$select;
     $$pre$phiZ2D = $12;
    }
   } while (0);
   L103 : do if ((label | 0) == 67) {
    label = 0;
    $223 = $6;
    $225 = HEAP32[$223 >> 2] | 0;
    $228 = HEAP32[$223 + 4 >> 2] | 0;
    $230 = _fmt_x($225, $228, $11, $$1236 & 32) | 0;
    $or$cond278 = ($$3265 & 8 | 0) == 0 | ($225 | 0) == 0 & ($228 | 0) == 0;
    $$0228 = $230;
    $$1233 = $or$cond278 ? 0 : 2;
    $$1238 = $or$cond278 ? 19751 : 19751 + ($$1236 >>> 4) | 0;
    $$2256 = $$1255;
    $$4266 = $$3265;
    $277 = $225;
    $279 = $228;
    label = 73;
   } else if ((label | 0) == 72) {
    label = 0;
    $$0228 = _fmt_u($271, $272, $11) | 0;
    $$1233 = $$0232;
    $$1238 = $$0237;
    $$2256 = $$0254;
    $$4266 = $spec$select;
    $277 = $271;
    $279 = $272;
    label = 73;
   } else if ((label | 0) == 77) {
    label = 0;
    $301 = _memchr($$1, 0, $$0254) | 0;
    $302 = ($301 | 0) == 0;
    $$2 = $$1;
    $$2234 = 0;
    $$2239 = 19751;
    $$5 = $302 ? $$0254 : $301 - $$1 | 0;
    $$6268 = $192;
    $$pre$phiZ2D = $302 ? $$1 + $$0254 | 0 : $301;
   } else if ((label | 0) == 81) {
    label = 0;
    $$0229334 = HEAP32[$6 >> 2] | 0;
    $$0240333 = 0;
    while (1) {
     $315 = HEAP32[$$0229334 >> 2] | 0;
     if (!$315) {
      $$0240313 = $$0240333;
      break;
     }
     $317 = _wctomb($9, $315) | 0;
     $318 = ($317 | 0) < 0;
     if ($318 | $317 >>> 0 > ($$4258370 - $$0240333 | 0) >>> 0) {
      label = 85;
      break;
     }
     $322 = $317 + $$0240333 | 0;
     if ($$4258370 >>> 0 > $322 >>> 0) {
      $$0229334 = $$0229334 + 4 | 0;
      $$0240333 = $322;
     } else {
      $$0240313 = $322;
      break;
     }
    }
    if ((label | 0) == 85) {
     label = 0;
     if ($318) {
      $$0 = -1;
      break L1;
     } else $$0240313 = $$0240333;
    }
    _pad_670($0, 32, $$1260, $$0240313, $spec$select);
    if (!$$0240313) {
     $$0240313371 = 0;
     label = 91;
    } else {
     $$1230340 = HEAP32[$6 >> 2] | 0;
     $$1241339 = 0;
     while (1) {
      $326 = HEAP32[$$1230340 >> 2] | 0;
      if (!$326) {
       $$0240313371 = $$0240313;
       label = 91;
       break L103;
      }
      $328 = _wctomb($9, $326) | 0;
      $$1241339 = $328 + $$1241339 | 0;
      if (($$1241339 | 0) > ($$0240313 | 0)) {
       $$0240313371 = $$0240313;
       label = 91;
       break L103;
      }
      _out($0, $9, $328);
      if ($$1241339 >>> 0 >= $$0240313 >>> 0) {
       $$0240313371 = $$0240313;
       label = 91;
       break;
      } else $$1230340 = $$1230340 + 4 | 0;
     }
    }
   } while (0);
   if ((label | 0) == 73) {
    label = 0;
    $280 = ($277 | 0) != 0 | ($279 | 0) != 0;
    $or$cond = ($$2256 | 0) != 0 | $280;
    $286 = $12 - $$0228 + (($280 ^ 1) & 1) | 0;
    $$2 = $or$cond ? $$0228 : $11;
    $$2234 = $$1233;
    $$2239 = $$1238;
    $$5 = $or$cond ? (($$2256 | 0) > ($286 | 0) ? $$2256 : $286) : 0;
    $$6268 = ($$2256 | 0) > -1 ? $$4266 & -65537 : $$4266;
    $$pre$phiZ2D = $12;
   } else if ((label | 0) == 91) {
    label = 0;
    _pad_670($0, 32, $$1260, $$0240313371, $spec$select ^ 8192);
    $$0243$ph$be = ($$1260 | 0) > ($$0240313371 | 0) ? $$1260 : $$0240313371;
    break;
   }
   $339 = $$pre$phiZ2D - $$2 | 0;
   $spec$select284 = ($$5 | 0) < ($339 | 0) ? $339 : $$5;
   $341 = $spec$select284 + $$2234 | 0;
   $$2261 = ($$1260 | 0) < ($341 | 0) ? $341 : $$1260;
   _pad_670($0, 32, $$2261, $341, $$6268);
   _out($0, $$2239, $$2234);
   _pad_670($0, 48, $$2261, $341, $$6268 ^ 65536);
   _pad_670($0, 48, $spec$select284, $339, 0);
   _out($0, $$2, $339);
   _pad_670($0, 32, $$2261, $341, $$6268 ^ 8192);
   $$0243$ph$be = $$2261;
  } while (0);
  $$0243$ph = $$0243$ph$be;
  $$0247$ph = $$1248;
  $$0269$ph = $$3272;
 }
 L125 : do if ((label | 0) == 94) if (!$0) if (!$$0269$ph) $$0 = 0; else {
  $$2242320 = 1;
  while (1) {
   $348 = HEAP32[$4 + ($$2242320 << 2) >> 2] | 0;
   if (!$348) break;
   _pop_arg($3 + ($$2242320 << 3) | 0, $348, $2);
   $351 = $$2242320 + 1 | 0;
   if ($351 >>> 0 < 10) $$2242320 = $351; else {
    $$0 = 1;
    break L125;
   }
  }
  $$3317 = $$2242320;
  while (1) {
   if (HEAP32[$4 + ($$3317 << 2) >> 2] | 0) {
    $$0 = -1;
    break L125;
   }
   $$3317 = $$3317 + 1 | 0;
   if ($$3317 >>> 0 >= 10) {
    $$0 = 1;
    break;
   }
  }
 } else $$0 = $$1248; while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_expr_primaryINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i246 = 0, $$0$i$i$i250 = 0, $$0208 = 0, $$3 = 0, $100 = 0, $102 = 0, $103 = 0, $108 = 0, $109 = 0, $115 = 0, $121 = 0, $127 = 0, $128 = 0, $138 = 0, $139 = 0, $15 = 0, $18 = 0, $20 = 0, $28 = 0, $29 = 0, $3 = 0, $36 = 0, $37 = 0, $4 = 0, $44 = 0, $46 = 0, $48 = 0, $5 = 0, $50 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $6 = 0, $60 = 0, $62 = 0, $64 = 0, $66 = 0, $68 = 0, $7 = 0, $70 = 0, $72 = 0, $74 = 0, $76 = 0, $78 = 0, $8 = 0, $80 = 0, $82 = 0, $84 = 0, $86 = 0, $88 = 0, $90 = 0, $92 = 0, $94 = 0, $96 = 0, $97 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $3 = sp + 64 | 0;
 $4 = sp + 48 | 0;
 $5 = sp + 36 | 0;
 $6 = sp + 24 | 0;
 $7 = sp + 12 | 0;
 $8 = sp;
 L1 : do if (($1 - $0 | 0) > 3) if ((HEAP8[$0 >> 0] | 0) == 76) {
  $15 = $0 + 1 | 0;
  do switch (HEAP8[$15 >> 0] | 0) {
  case 84:
   {
    $$3 = $0;
    break L1;
    break;
   }
  case 119:
   {
    $18 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 23469, __ZNSt3__211char_traitsIcE6lengthEPKc(23469) | 0);
    $20 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($18, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($20 | 0) == ($18 | 0) ? $0 : $20;
    break L1;
    break;
   }
  case 98:
   {
    if ((HEAP8[$0 + 3 >> 0] | 0) != 69) {
     $$3 = $0;
     break L1;
    }
    switch (HEAP8[$0 + 2 >> 0] | 0) {
    case 48:
     {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj6EEERAT__Kc($3, 23477);
      $28 = $2 + 4 | 0;
      $29 = HEAP32[$28 >> 2] | 0;
      if ($29 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($29, $3);
       HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + 24;
      } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
      $$3 = $0 + 4 | 0;
      break L1;
      break;
     }
    case 49:
     {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($3, 23483);
      $36 = $2 + 4 | 0;
      $37 = HEAP32[$36 >> 2] | 0;
      if ($37 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($37, $3);
       HEAP32[$36 >> 2] = (HEAP32[$36 >> 2] | 0) + 24;
      } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
      $$3 = $0 + 4 | 0;
      break L1;
      break;
     }
    default:
     {
      $$3 = $0;
      break L1;
     }
    }
    break;
   }
  case 99:
   {
    $44 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 23488, __ZNSt3__211char_traitsIcE6lengthEPKc(23488) | 0);
    $46 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($44, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($46 | 0) == ($44 | 0) ? $0 : $46;
    break L1;
    break;
   }
  case 97:
   {
    $48 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 23493, __ZNSt3__211char_traitsIcE6lengthEPKc(23493) | 0);
    $50 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($48, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($50 | 0) == ($48 | 0) ? $0 : $50;
    break L1;
    break;
   }
  case 104:
   {
    $52 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 23505, __ZNSt3__211char_traitsIcE6lengthEPKc(23505) | 0);
    $54 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($52, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($54 | 0) == ($52 | 0) ? $0 : $54;
    break L1;
    break;
   }
  case 115:
   {
    $56 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 23519, __ZNSt3__211char_traitsIcE6lengthEPKc(23519) | 0);
    $58 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($56, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($58 | 0) == ($56 | 0) ? $0 : $58;
    break L1;
    break;
   }
  case 116:
   {
    $60 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 23525, __ZNSt3__211char_traitsIcE6lengthEPKc(23525) | 0);
    $62 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($60, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($62 | 0) == ($60 | 0) ? $0 : $62;
    break L1;
    break;
   }
  case 105:
   {
    $64 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 27124, __ZNSt3__211char_traitsIcE6lengthEPKc(27124) | 0);
    $66 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($64, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($66 | 0) == ($64 | 0) ? $0 : $66;
    break L1;
    break;
   }
  case 106:
   {
    $68 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 23540, __ZNSt3__211char_traitsIcE6lengthEPKc(23540) | 0);
    $70 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($68, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($70 | 0) == ($68 | 0) ? $0 : $70;
    break L1;
    break;
   }
  case 108:
   {
    $72 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 23542, __ZNSt3__211char_traitsIcE6lengthEPKc(23542) | 0);
    $74 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($72, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($74 | 0) == ($72 | 0) ? $0 : $74;
    break L1;
    break;
   }
  case 109:
   {
    $76 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 23544, __ZNSt3__211char_traitsIcE6lengthEPKc(23544) | 0);
    $78 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($76, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($78 | 0) == ($76 | 0) ? $0 : $78;
    break L1;
    break;
   }
  case 120:
   {
    $80 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 23547, __ZNSt3__211char_traitsIcE6lengthEPKc(23547) | 0);
    $82 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($80, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($82 | 0) == ($80 | 0) ? $0 : $82;
    break L1;
    break;
   }
  case 121:
   {
    $84 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 23550, __ZNSt3__211char_traitsIcE6lengthEPKc(23550) | 0);
    $86 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($84, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($86 | 0) == ($84 | 0) ? $0 : $86;
    break L1;
    break;
   }
  case 110:
   {
    $88 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 23554, __ZNSt3__211char_traitsIcE6lengthEPKc(23554) | 0);
    $90 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($88, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($90 | 0) == ($88 | 0) ? $0 : $90;
    break L1;
    break;
   }
  case 111:
   {
    $92 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 23563, __ZNSt3__211char_traitsIcE6lengthEPKc(23563) | 0);
    $94 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($92, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($94 | 0) == ($92 | 0) ? $0 : $94;
    break L1;
    break;
   }
  case 102:
   {
    $96 = $0 + 2 | 0;
    $97 = __ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIfNS0_2DbEEEPKcS4_S4_RT0_($96, $1, $2) | 0;
    $$3 = ($97 | 0) == ($96 | 0) ? $0 : $97;
    break L1;
    break;
   }
  case 100:
   {
    $99 = $0 + 2 | 0;
    $100 = __ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIdNS0_2DbEEEPKcS4_S4_RT0_($99, $1, $2) | 0;
    $$3 = ($100 | 0) == ($99 | 0) ? $0 : $100;
    break L1;
    break;
   }
  case 101:
   {
    $102 = $0 + 2 | 0;
    $103 = __ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIeNS0_2DbEEEPKcS4_S4_RT0_($102, $1, $2) | 0;
    $$3 = ($103 | 0) == ($102 | 0) ? $0 : $103;
    break L1;
    break;
   }
  case 95:
   {
    if ((HEAP8[$0 + 2 >> 0] | 0) != 90) {
     $$3 = $0;
     break L1;
    }
    $108 = $0 + 3 | 0;
    $109 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($108, $1, $2) | 0;
    if (($109 | 0) == ($108 | 0) | ($109 | 0) == ($1 | 0)) {
     $$3 = $0;
     break L1;
    }
    $$3 = (HEAP8[$109 >> 0] | 0) == 69 ? $109 + 1 | 0 : $0;
    break L1;
    break;
   }
  default:
   {
    $115 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($15, $1, $2) | 0;
    if (($115 | 0) == ($15 | 0) | ($115 | 0) == ($1 | 0)) {
     $$3 = $0;
     break L1;
    }
    if ((HEAP8[$115 >> 0] | 0) == 69) {
     $$3 = $115 + 1 | 0;
     break L1;
    }
    $$0208 = $115;
    while (1) {
     if (($$0208 | 0) == ($1 | 0)) {
      $$3 = $0;
      break L1;
     }
     $121 = HEAP8[$$0208 >> 0] | 0;
     if ((($121 << 24 >> 24) + -48 | 0) >>> 0 >= 10) break;
     $$0208 = $$0208 + 1 | 0;
    }
    if (!(($$0208 | 0) != ($115 | 0) & $121 << 24 >> 24 == 69)) {
     $$3 = $0;
     break L1;
    }
    $127 = $2 + 4 | 0;
    $128 = HEAP32[$127 >> 2] | 0;
    if ((HEAP32[$2 >> 2] | 0) == ($128 | 0)) {
     $$3 = $0;
     break L1;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($7, $128 + -24 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($7, 0, 22277) | 0;
    HEAP32[$6 >> 2] = HEAP32[$7 >> 2];
    HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
    HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$7 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($6, 22275) | 0;
    HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
    HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
    HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
    $$0$i$i$i246 = 0;
    while (1) {
     if (($$0$i$i$i246 | 0) == 3) break;
     HEAP32[$6 + ($$0$i$i$i246 << 2) >> 2] = 0;
     $$0$i$i$i246 = $$0$i$i$i246 + 1 | 0;
    }
    HEAP32[$8 >> 2] = 0;
    HEAP32[$8 + 4 >> 2] = 0;
    HEAP32[$8 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_($8, $115, $$0208);
    $138 = HEAP8[$8 + 11 >> 0] | 0;
    $139 = $138 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($5, $139 ? HEAP32[$8 >> 2] | 0 : $8, $139 ? HEAP32[$8 + 4 >> 2] | 0 : $138 & 255) | 0;
    HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
    $$0$i$i$i250 = 0;
    while (1) {
     if (($$0$i$i$i250 | 0) == 3) break;
     HEAP32[$5 + ($$0$i$i$i250 << 2) >> 2] = 0;
     $$0$i$i$i250 = $$0$i$i$i250 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$127 >> 2] | 0) + -24 | 0, $3);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
    $$3 = $$0208 + 1 | 0;
    break L1;
   }
  } while (0);
 } else $$3 = $0; else $$3 = $0; while (0);
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$add$i = 0, $$0$i$i$add$i188 = 0, $$0$i$i$i$i = 0, $$0$i$i$idx$i = 0, $$0$i$i$idx$i187 = 0, $$0$i$i193 = 0, $$0$i$i198 = 0, $$0132 = 0, $$0141$off0$ph = 0, $$0168 = 0, $$11 = 0, $$1135 = 0, $$1169 = 0, $$1169$ph = 0, $$2136 = 0, $$3144$off0$ph = 0, $$3171 = 0, $$4158 = 0, $$5139 = 0, $$6140 = 0, $$6160 = 0, $$in = 0, $$in210 = 0, $$pre$phi248Z2D = 0, $$pre$phiZ2D = 0, $$pre242 = 0, $10 = 0, $104 = 0, $105 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $128 = 0, $13 = 0, $134 = 0, $142 = 0, $143 = 0, $151 = 0, $153 = 0, $154 = 0, $157 = 0, $162 = 0, $166 = 0, $167 = 0, $168 = 0, $171 = 0, $176 = 0, $177 = 0, $19 = 0, $198 = 0, $199 = 0, $21 = 0, $23 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $36 = 0, $4 = 0, $41 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $61 = 0, $7 = 0, $70 = 0, $73 = 0, $75 = 0, $8 = 0, $80 = 0, $81 = 0, $84 = 0, $85 = 0, $88 = 0, $92 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $3 = sp + 48 | 0;
 $4 = sp + 40 | 0;
 $5 = sp + 32 | 0;
 $6 = sp + 24 | 0;
 $7 = sp + 12 | 0;
 $8 = sp;
 if (($0 | 0) == ($1 | 0)) {
  $$6140 = $0;
  label = 90;
 } else {
  $10 = $2 + 56 | 0;
  __ZN10__cxxabiv112_GLOBAL__N_110save_valueIjEC2ERj($4, $10);
  HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 1;
  $13 = $2 + 61 | 0;
  __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbEC2ERb($5, $13);
  if ((HEAP32[$10 >> 2] | 0) >>> 0 > 1) HEAP8[$13 >> 0] = 1;
  L6 : do switch (HEAP8[$0 >> 0] | 0) {
  case 84:
  case 71:
   {
    $$5139 = __ZN10__cxxabiv112_GLOBAL__N_118parse_special_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
    $$6160 = 1;
    break;
   }
  default:
   {
    $19 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
    $21 = HEAP32[$2 + 48 >> 2] | 0;
    $23 = HEAP32[$2 + 52 >> 2] | 0;
    L8 : do if (($19 | 0) == ($0 | 0)) $$2136 = $0; else if (($19 | 0) == ($1 | 0)) $$2136 = $1; else {
     switch (HEAP8[$19 >> 0] | 0) {
     case 46:
     case 69:
      {
       $$2136 = $19;
       break L8;
       break;
      }
     default:
      {}
     }
     __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbEC2ERb($6, $13);
     HEAP8[$13 >> 0] = 0;
     HEAP32[$7 >> 2] = 0;
     HEAP32[$7 + 4 >> 2] = 0;
     HEAP32[$7 + 8 >> 2] = 0;
     $$0$i$i198 = 0;
     while (1) {
      if (($$0$i$i198 | 0) == 3) break;
      HEAP32[$7 + ($$0$i$i198 << 2) >> 2] = 0;
      $$0$i$i198 = $$0$i$i198 + 1 | 0;
     }
     $30 = $2 + 4 | 0;
     $31 = HEAP32[$30 >> 2] | 0;
     L16 : do if ((HEAP32[$2 >> 2] | 0) == ($31 | 0)) {
      $$1135 = $0;
      $$4158 = 0;
     } else {
      $33 = $31 + -24 | 0;
      $35 = HEAP8[$33 + 11 >> 0] | 0;
      $36 = $35 << 24 >> 24 < 0;
      if ($36) $41 = HEAP32[$31 + -20 >> 2] | 0; else $41 = $35 & 255;
      if (!$41) {
       $$1135 = $0;
       $$4158 = 0;
      } else {
       if (!(HEAP8[$2 + 60 >> 0] | 0)) {
        if ($36) {
         $50 = HEAP32[$33 >> 2] | 0;
         $51 = HEAP32[$31 + -20 >> 2] | 0;
        } else {
         $50 = $33;
         $51 = $35 & 255;
        }
        if ((HEAP8[$50 + $51 + -1 >> 0] | 0) == 62) {
         if ($36) {
          $$in = HEAP32[$31 + -20 >> 2] | 0;
          $61 = HEAP32[$33 >> 2] | 0;
         } else {
          $$in = $35 & 255;
          $61 = $33;
         }
         if ((HEAP8[$61 + ($$in + -2) >> 0] | 0) == 45) {
          $$0168 = $19;
          $$pre$phiZ2D = $33;
         } else {
          if ($36) {
           $$in210 = HEAP32[$31 + -20 >> 2] | 0;
           $70 = HEAP32[$33 >> 2] | 0;
          } else {
           $$in210 = $35 & 255;
           $70 = $33;
          }
          if ((HEAP8[$70 + ($$in210 + -2) >> 0] | 0) == 62) {
           $$0168 = $19;
           $$pre$phiZ2D = $33;
          } else {
           $73 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($19, $1, $2) | 0;
           if (($73 | 0) == ($19 | 0)) {
            $$1135 = $0;
            $$4158 = 0;
            break;
           }
           $75 = HEAP32[$30 >> 2] | 0;
           $80 = $75;
           if ((($75 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
            $$1135 = $0;
            $$4158 = 0;
            break;
           }
           $81 = $80 + -24 | 0;
           HEAP32[$8 >> 2] = HEAP32[$81 >> 2];
           HEAP32[$8 + 4 >> 2] = HEAP32[$81 + 4 >> 2];
           HEAP32[$8 + 8 >> 2] = HEAP32[$81 + 8 >> 2];
           $$0$i$i193 = 0;
           while (1) {
            if (($$0$i$i193 | 0) == 3) break;
            HEAP32[$81 + ($$0$i$i193 << 2) >> 2] = 0;
            $$0$i$i193 = $$0$i$i193 + 1 | 0;
           }
           $84 = $80 + -12 | 0;
           $85 = $7 + 11 | 0;
           if ((HEAP8[$85 >> 0] | 0) < 0) {
            $88 = HEAP32[$7 >> 2] | 0;
            HEAP8[$3 >> 0] = 0;
            __ZNSt3__211char_traitsIcE6assignERcRKc($88, $3);
            HEAP32[$7 + 4 >> 2] = 0;
           } else {
            HEAP8[$3 >> 0] = 0;
            __ZNSt3__211char_traitsIcE6assignERcRKc($7, $3);
            HEAP8[$85 >> 0] = 0;
           }
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEj($7);
           HEAP32[$7 >> 2] = HEAP32[$84 >> 2];
           HEAP32[$7 + 4 >> 2] = HEAP32[$84 + 4 >> 2];
           HEAP32[$7 + 8 >> 2] = HEAP32[$84 + 8 >> 2];
           $$0$i$i$i$i = 0;
           while (1) {
            if (($$0$i$i$i$i | 0) == 3) break;
            HEAP32[$84 + ($$0$i$i$i$i << 2) >> 2] = 0;
            $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
           }
           $92 = HEAP8[$85 >> 0] | 0;
           if (!(($92 << 24 >> 24 < 0 ? HEAP32[$7 + 4 >> 2] | 0 : $92 & 255) | 0)) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($8, 32);
           $99 = HEAP32[$30 >> 2] | 0;
           $$0$i$i$idx$i187 = 0;
           while (1) {
            if (($$0$i$i$idx$i187 | 0) == -1) break;
            $$0$i$i$add$i188 = $$0$i$i$idx$i187 + -1 | 0;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($99 + ($$0$i$i$add$i188 * 24 | 0) | 0);
            $$0$i$i$idx$i187 = $$0$i$i$add$i188;
           }
           HEAP32[$30 >> 2] = $99 + -24;
           $104 = HEAP8[$8 + 11 >> 0] | 0;
           $105 = $104 << 24 >> 24 < 0;
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($99 + -48 | 0, 0, $105 ? HEAP32[$8 >> 2] | 0 : $8, $105 ? HEAP32[$8 + 4 >> 2] | 0 : $104 & 255) | 0;
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
           $$0168 = $73;
           $$pre$phiZ2D = (HEAP32[$30 >> 2] | 0) + -24 | 0;
          }
         }
        } else {
         $$0168 = $19;
         $$pre$phiZ2D = $33;
        }
       } else {
        $$0168 = $19;
        $$pre$phiZ2D = $33;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($$pre$phiZ2D, 40);
       if (($$0168 | 0) == ($1 | 0)) label = 50; else if ((HEAP8[$$0168 >> 0] | 0) == 118) {
        $$3171 = $$0168 + 1 | 0;
        $176 = HEAP32[$2 >> 2] | 0;
        $177 = HEAP32[$30 >> 2] | 0;
       } else label = 50;
       do if ((label | 0) == 50) {
        $116 = $3 + 11 | 0;
        $117 = $3 + 4 | 0;
        $118 = $8 + 11 | 0;
        $119 = $8 + 4 | 0;
        $$0141$off0$ph = 1;
        $$1169$ph = $$0168;
        L67 : while (1) {
         $$1169 = $$1169$ph;
         while (1) {
          $123 = ((HEAP32[$30 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
          $124 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($$1169, $1, $2) | 0;
          $125 = HEAP32[$30 >> 2] | 0;
          $126 = HEAP32[$2 >> 2] | 0;
          $128 = ($125 - $126 | 0) / 24 | 0;
          if (($124 | 0) == ($$1169 | 0)) {
           label = 74;
           break L67;
          }
          if ($128 >>> 0 > $123 >>> 0) break; else $$1169 = $124;
         }
         HEAP32[$3 >> 2] = 0;
         HEAP32[$3 + 4 >> 2] = 0;
         HEAP32[$3 + 8 >> 2] = 0;
         $$0$i$i = 0;
         while (1) {
          if (($$0$i$i | 0) == 3) break;
          HEAP32[$3 + ($$0$i$i << 2) >> 2] = 0;
          $$0$i$i = $$0$i$i + 1 | 0;
         }
         $$0132 = $123;
         while (1) {
          if ($$0132 >>> 0 >= $128 >>> 0) break;
          $134 = HEAP8[$116 >> 0] | 0;
          if (($134 << 24 >> 24 < 0 ? HEAP32[$117 >> 2] | 0 : $134 & 255) | 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($3, 22499) | 0;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($8, (HEAP32[$2 >> 2] | 0) + ($$0132 * 24 | 0) | 0);
          $142 = HEAP8[$118 >> 0] | 0;
          $143 = $142 << 24 >> 24 < 0;
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($3, $143 ? HEAP32[$8 >> 2] | 0 : $8, $143 ? HEAP32[$119 >> 2] | 0 : $142 & 255) | 0;
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
          $$0132 = $$0132 + 1 | 0;
         }
         $$0 = $123;
         while (1) {
          if ($$0 >>> 0 >= $128 >>> 0) break;
          $157 = HEAP32[$30 >> 2] | 0;
          $$0$i$i$idx$i = 0;
          while (1) {
           if (($$0$i$i$idx$i | 0) == -1) break;
           $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($157 + ($$0$i$i$add$i * 24 | 0) | 0);
           $$0$i$i$idx$i = $$0$i$i$add$i;
          }
          HEAP32[$30 >> 2] = $157 + -24;
          $$0 = $$0 + 1 | 0;
         }
         $151 = HEAP8[$116 >> 0] | 0;
         $153 = HEAP32[$117 >> 2] | 0;
         $154 = $151 & 255;
         if (!(($151 << 24 >> 24 < 0 ? $153 : $154) | 0)) $$3144$off0$ph = $$0141$off0$ph; else {
          $162 = HEAP32[$30 >> 2] | 0;
          if ((HEAP32[$2 >> 2] | 0) == ($162 | 0)) {
           label = 86;
           break;
          }
          if ($$0141$off0$ph) {
           $$pre$phi248Z2D = $154;
           $166 = $162;
           $168 = $151;
           $171 = $153;
          } else {
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($162 + -24 | 0, 22499) | 0;
           $$pre242 = HEAP8[$116 >> 0] | 0;
           $$pre$phi248Z2D = $$pre242 & 255;
           $166 = HEAP32[$30 >> 2] | 0;
           $168 = $$pre242;
           $171 = HEAP32[$117 >> 2] | 0;
          }
          $167 = $168 << 24 >> 24 < 0;
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($166 + -24 | 0, $167 ? HEAP32[$3 >> 2] | 0 : $3, $167 ? $171 : $$pre$phi248Z2D) | 0;
          $$3144$off0$ph = 0;
         }
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
         $$0141$off0$ph = $$3144$off0$ph;
         $$1169$ph = $124;
        }
        if ((label | 0) == 74) {
         $$3171 = $$1169;
         $176 = $126;
         $177 = $125;
         break;
        } else if ((label | 0) == 86) {
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
         $$1135 = $0;
         $$4158 = 0;
         break L16;
        }
       } while (0);
       if (($176 | 0) == ($177 | 0)) {
        $$1135 = $0;
        $$4158 = 0;
       } else {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($177 + -24 | 0, 41);
        if ($21 & 1 | 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$30 >> 2] | 0) + -24 | 0, 22222) | 0;
        if ($21 & 2 | 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$30 >> 2] | 0) + -24 | 0, 22229) | 0;
        if ($21 & 4 | 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$30 >> 2] | 0) + -24 | 0, 22239) | 0;
        switch ($23 | 0) {
        case 1:
         {
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$30 >> 2] | 0) + -24 | 0, 23703) | 0;
          break;
         }
        case 2:
         {
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$30 >> 2] | 0) + -24 | 0, 23706) | 0;
          break;
         }
        default:
         {}
        }
        $198 = HEAP8[$7 + 11 >> 0] | 0;
        $199 = $198 << 24 >> 24 < 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[$30 >> 2] | 0) + -24 | 0, $199 ? HEAP32[$7 >> 2] | 0 : $7, $199 ? HEAP32[$7 + 4 >> 2] | 0 : $198 & 255) | 0;
        $$1135 = $$3171;
        $$4158 = 1;
       }
      }
     } while (0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
     __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbED2Ev($6);
     if ($$4158) $$2136 = $$1135; else {
      $$5139 = $$1135;
      $$6160 = 0;
      break L6;
     }
    } while (0);
    $$5139 = $$2136;
    $$6160 = 1;
   }
  } while (0);
  __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbED2Ev($5);
  __ZN10__cxxabiv112_GLOBAL__N_110save_valueIjED2Ev($4);
  if ($$6160) {
   $$6140 = $$5139;
   label = 90;
  } else $$11 = $0;
 }
 if ((label | 0) == 90) $$11 = $$6140;
 STACKTOP = sp;
 return $$11 | 0;
}

function __ZN2ut9Scheduler7resolveEv($0) {
 $0 = $0 | 0;
 var $$035$lcssa = 0, $$035132 = 0, $$06$i$i$i = 0, $$06$i$i$i37 = 0, $$1 = 0, $$byval_copy = 0, $$byval_copy7 = 0, $$lcssa$i = 0, $$pre$phi149Z2D = 0, $$pre$phi153Z2D = 0, $$pre$phi155Z2D = 0, $$pre$phiZ2D = 0, $$pre145 = 0, $$sroa$0105$0 = 0, $$sroa$0105$0137 = 0, $$sroa$0105$0138 = 0, $$sroa$051$0124 = 0, $$sroa$059$0125 = 0, $$sroa$381$0$in129 = 0, $$sroa$397$0$ptr131 = 0, $1 = 0, $10 = 0, $100 = 0, $104 = 0, $106 = 0, $109 = 0, $110 = 0, $112 = 0, $115 = 0, $116 = 0, $117 = 0, $120 = 0, $121 = 0, $124 = 0, $126 = 0, $129 = 0, $134 = 0, $14 = 0, $141 = 0, $142 = 0, $144 = 0, $145 = 0, $147 = 0, $148 = 0, $150 = 0, $151 = 0, $153 = 0, $154 = 0, $155 = 0, $157 = 0, $158 = 0, $159 = 0, $161 = 0, $162 = 0, $164 = 0, $167 = 0, $168 = 0, $172 = 0, $173 = 0, $174 = 0, $176 = 0, $178 = 0, $183 = 0, $185 = 0, $19 = 0, $190 = 0, $192 = 0, $195 = 0, $198 = 0, $199 = 0, $2 = 0, $201 = 0, $207 = 0, $209 = 0, $21 = 0, $211 = 0, $219 = 0, $22 = 0, $220 = 0, $224 = 0, $229 = 0, $231 = 0, $232 = 0, $238 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $28 = 0, $3 = 0, $34 = 0, $35 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $42 = 0, $43 = 0, $52 = 0, $54 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $64 = 0, $65 = 0, $68 = 0, $7 = 0, $70 = 0, $73 = 0, $8 = 0, $84 = 0, $85 = 0, $89 = 0, $9 = 0, $94 = 0, $95 = 0, $99 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer4 = 0, label = 0, sp = 0, $$sroa$397$0$ptr131$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy7 = sp + 24 | 0;
 $$byval_copy = sp + 56 | 0;
 $vararg_buffer4 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $1 = sp + 44 | 0;
 $2 = sp + 40 | 0;
 $3 = sp + 36 | 0;
 $4 = $0 + 72 | 0;
 $7 = $0 + 60 | 0;
 if (!(HEAP8[$4 >> 0] | 0)) {
  STACKTOP = sp;
  return $7 | 0;
 }
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = $0 + 64 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if (($10 | 0) != ($8 | 0)) {
  $$06$i$i$i = $10;
  do {
   $14 = HEAP32[$$06$i$i$i + -16 >> 2] | 0;
   if ($14 | 0) {
    HEAP32[$$06$i$i$i + -12 >> 2] = $14;
    __ZdlPv($14);
   }
   $19 = HEAP32[$$06$i$i$i + -20 >> 2] | 0;
   if ($19 | 0) {
    $21 = $19 + 4 | 0;
    $22 = HEAP32[$21 >> 2] | 0;
    HEAP32[$21 >> 2] = $22 + -1;
    if (!$22) {
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$19 >> 2] | 0) + 8 >> 2] & 63]($19);
     __ZNSt3__219__shared_weak_count14__release_weakEv($19);
    }
   }
   $28 = $$06$i$i$i + -36 | 0;
   $$06$i$i$i = $$06$i$i$i + -40 | 0;
   if ((HEAP8[$28 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$28 >> 2] | 0);
  } while (($$06$i$i$i | 0) != ($8 | 0));
 }
 HEAP32[$9 >> 2] = $8;
 HEAP32[$1 >> 2] = 0;
 $34 = $1 + 4 | 0;
 HEAP32[$34 >> 2] = 0;
 $35 = $1 + 8 | 0;
 HEAP32[$35 >> 2] = 0;
 $$sroa$0105$0137 = HEAP32[$0 + 48 >> 2] | 0;
 L19 : do if ($$sroa$0105$0137 | 0) {
  $$sroa$0105$0138 = $$sroa$0105$0137;
  $42 = 0;
  $43 = 0;
  while (1) {
   $39 = $$sroa$0105$0138;
   $40 = $39 + 12 | 0;
   if (($42 | 0) == ($43 | 0)) __ZNSt3__26vectorIN2ut9Scheduler15ScheduledSystemENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($1, $40); else {
    HEAP32[$42 >> 2] = HEAP32[$40 >> 2];
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($42 + 4 | 0, $39 + 16 | 0);
    HEAP32[$42 + 16 >> 2] = HEAP32[$39 + 28 >> 2];
    $52 = HEAP32[$39 + 32 >> 2] | 0;
    HEAP32[$42 + 20 >> 2] = $52;
    if ($52 | 0) {
     $54 = $52 + 4 | 0;
     HEAP32[$54 >> 2] = (HEAP32[$54 >> 2] | 0) + 1;
    }
    $57 = $42 + 24 | 0;
    $58 = $39 + 36 | 0;
    HEAP32[$57 >> 2] = 0;
    $59 = $42 + 28 | 0;
    HEAP32[$59 >> 2] = 0;
    $60 = $42 + 32 | 0;
    HEAP32[$60 >> 2] = 0;
    $61 = $39 + 40 | 0;
    $64 = (HEAP32[$61 >> 2] | 0) - (HEAP32[$58 >> 2] | 0) | 0;
    $65 = $64 >> 2;
    if ($64 | 0) {
     if ($65 >>> 0 > 1073741823) break;
     $68 = __Znwj($64) | 0;
     HEAP32[$59 >> 2] = $68;
     HEAP32[$57 >> 2] = $68;
     HEAP32[$60 >> 2] = $68 + ($65 << 2);
     $70 = HEAP32[$58 >> 2] | 0;
     $73 = (HEAP32[$61 >> 2] | 0) - $70 | 0;
     if (($73 | 0) > 0) {
      _memcpy($68 | 0, $70 | 0, $73 | 0) | 0;
      HEAP32[$59 >> 2] = $68 + ($73 >>> 2 << 2);
     }
    }
    HEAP8[$42 + 36 >> 0] = HEAP8[$39 + 48 >> 0] | 0;
    HEAP32[$34 >> 2] = (HEAP32[$34 >> 2] | 0) + 40;
   }
   $$sroa$0105$0 = HEAP32[$$sroa$0105$0138 >> 2] | 0;
   if (!$$sroa$0105$0) break L19;
   $$sroa$0105$0138 = $$sroa$0105$0;
   $42 = HEAP32[$34 >> 2] | 0;
   $43 = HEAP32[$35 >> 2] | 0;
  }
  __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($57);
 } while (0);
 $38 = $0 + 68 | 0;
 L38 : do {
  $84 = HEAP32[$34 >> 2] | 0;
  $85 = HEAP32[$1 >> 2] | 0;
  if (($84 | 0) == ($85 | 0)) {
   $$035$lcssa = 0;
   $89 = $84;
  } else {
   $$035132 = 0;
   $$sroa$397$0$ptr131 = $84;
   $245 = $85;
   while (1) {
    $$sroa$397$0$ptr131$looptemp = $$sroa$397$0$ptr131;
    $$sroa$397$0$ptr131 = $$sroa$397$0$ptr131 + -40 | 0;
    $94 = $$sroa$397$0$ptr131$looptemp + -16 | 0;
    $95 = $$sroa$397$0$ptr131$looptemp + -12 | 0;
    if ((HEAP32[$95 >> 2] | 0) == (HEAP32[$94 >> 2] | 0)) {
     $99 = HEAP32[$$sroa$397$0$ptr131 >> 2] | 0;
     $100 = HEAP32[$9 >> 2] | 0;
     if (($100 | 0) == (HEAP32[$38 >> 2] | 0)) {
      __ZNSt3__26vectorIN2ut9Scheduler15ScheduledSystemENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($7, $$sroa$397$0$ptr131);
      $$pre$phi149Z2D = $$sroa$397$0$ptr131$looptemp + -36 | 0;
      $$pre$phi153Z2D = $$sroa$397$0$ptr131$looptemp + -24 | 0;
      $$pre$phi155Z2D = $$sroa$397$0$ptr131$looptemp + -20 | 0;
      $$pre$phiZ2D = $$sroa$397$0$ptr131$looptemp + -4 | 0;
     } else {
      HEAP32[$100 >> 2] = $99;
      $104 = $$sroa$397$0$ptr131$looptemp + -36 | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($100 + 4 | 0, $104);
      $106 = $$sroa$397$0$ptr131$looptemp + -24 | 0;
      HEAP32[$100 + 16 >> 2] = HEAP32[$106 >> 2];
      $109 = $$sroa$397$0$ptr131$looptemp + -20 | 0;
      $110 = HEAP32[$109 >> 2] | 0;
      HEAP32[$100 + 20 >> 2] = $110;
      if ($110 | 0) {
       $112 = $110 + 4 | 0;
       HEAP32[$112 >> 2] = (HEAP32[$112 >> 2] | 0) + 1;
      }
      $115 = $100 + 24 | 0;
      HEAP32[$115 >> 2] = 0;
      $116 = $100 + 28 | 0;
      HEAP32[$116 >> 2] = 0;
      $117 = $100 + 32 | 0;
      HEAP32[$117 >> 2] = 0;
      $120 = (HEAP32[$95 >> 2] | 0) - (HEAP32[$94 >> 2] | 0) | 0;
      $121 = $120 >> 2;
      if ($120 | 0) {
       if ($121 >>> 0 > 1073741823) {
        label = 37;
        break L38;
       }
       $124 = __Znwj($120) | 0;
       HEAP32[$116 >> 2] = $124;
       HEAP32[$115 >> 2] = $124;
       HEAP32[$117 >> 2] = $124 + ($121 << 2);
       $126 = HEAP32[$94 >> 2] | 0;
       $129 = (HEAP32[$95 >> 2] | 0) - $126 | 0;
       if (($129 | 0) > 0) {
        _memcpy($124 | 0, $126 | 0, $129 | 0) | 0;
        HEAP32[$116 >> 2] = $124 + ($129 >>> 2 << 2);
       }
      }
      $134 = $$sroa$397$0$ptr131$looptemp + -4 | 0;
      HEAP8[$100 + 36 >> 0] = HEAP8[$134 >> 0] | 0;
      HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + 40;
      $$pre$phi149Z2D = $104;
      $$pre$phi153Z2D = $106;
      $$pre$phi155Z2D = $109;
      $$pre$phiZ2D = $134;
     }
     $141 = (HEAP32[$34 >> 2] | 0) + ((0 - $$035132 | 0) * 40 | 0) + -40 | 0;
     $142 = HEAP32[$$sroa$397$0$ptr131 >> 2] | 0;
     HEAP32[$$sroa$397$0$ptr131 >> 2] = HEAP32[$141 >> 2];
     HEAP32[$141 >> 2] = $142;
     $144 = $141 + 36 | 0;
     $145 = HEAP8[$$pre$phiZ2D >> 0] | 0;
     HEAP8[$$pre$phiZ2D >> 0] = HEAP8[$144 >> 0] | 0;
     HEAP8[$144 >> 0] = $145;
     $147 = $141 + 24 | 0;
     $148 = HEAP32[$94 >> 2] | 0;
     HEAP32[$94 >> 2] = HEAP32[$147 >> 2];
     HEAP32[$147 >> 2] = $148;
     $150 = $141 + 28 | 0;
     $151 = HEAP32[$95 >> 2] | 0;
     HEAP32[$95 >> 2] = HEAP32[$150 >> 2];
     HEAP32[$150 >> 2] = $151;
     $153 = $$sroa$397$0$ptr131$looptemp + -8 | 0;
     $154 = $141 + 32 | 0;
     $155 = HEAP32[$153 >> 2] | 0;
     HEAP32[$153 >> 2] = HEAP32[$154 >> 2];
     HEAP32[$154 >> 2] = $155;
     $157 = $141 + 4 | 0;
     HEAP32[$$byval_copy7 >> 2] = HEAP32[$$pre$phi149Z2D >> 2];
     HEAP32[$$byval_copy7 + 4 >> 2] = HEAP32[$$pre$phi149Z2D + 4 >> 2];
     HEAP32[$$byval_copy7 + 8 >> 2] = HEAP32[$$pre$phi149Z2D + 8 >> 2];
     HEAP32[$$pre$phi149Z2D >> 2] = HEAP32[$157 >> 2];
     HEAP32[$$pre$phi149Z2D + 4 >> 2] = HEAP32[$157 + 4 >> 2];
     HEAP32[$$pre$phi149Z2D + 8 >> 2] = HEAP32[$157 + 8 >> 2];
     HEAP32[$157 >> 2] = HEAP32[$$byval_copy7 >> 2];
     HEAP32[$157 + 4 >> 2] = HEAP32[$$byval_copy7 + 4 >> 2];
     HEAP32[$157 + 8 >> 2] = HEAP32[$$byval_copy7 + 8 >> 2];
     $158 = $141 + 16 | 0;
     $159 = HEAP32[$$pre$phi153Z2D >> 2] | 0;
     HEAP32[$$pre$phi153Z2D >> 2] = HEAP32[$158 >> 2];
     HEAP32[$158 >> 2] = $159;
     $161 = $141 + 20 | 0;
     $162 = HEAP32[$$pre$phi155Z2D >> 2] | 0;
     HEAP32[$$pre$phi155Z2D >> 2] = HEAP32[$161 >> 2];
     HEAP32[$161 >> 2] = $162;
     $164 = $$035132 + 1 | 0;
     $167 = (HEAP32[$34 >> 2] | 0) + (~$$035132 * 40 | 0) | 0;
     $168 = HEAP32[$1 >> 2] | 0;
     if (($167 | 0) == ($168 | 0)) {
      $$1 = $164;
      $192 = $167;
     } else {
      $$sroa$381$0$in129 = $167;
      $246 = $168;
      $247 = $168;
      while (1) {
       $172 = HEAP32[$$sroa$381$0$in129 + -16 >> 2] | 0;
       $173 = $$sroa$381$0$in129 + -12 | 0;
       $$sroa$381$0$in129 = $$sroa$381$0$in129 + -40 | 0;
       $174 = HEAP32[$173 >> 2] | 0;
       $176 = $174;
       L61 : do if (($172 | 0) == ($174 | 0)) {
        $$lcssa$i = $172;
        label = 48;
       } else {
        $178 = $172;
        while (1) {
         if ((HEAP32[$178 >> 2] | 0) == ($99 | 0)) {
          $$lcssa$i = $178;
          label = 48;
          break L61;
         }
         $178 = $178 + 4 | 0;
         if (($178 | 0) == ($174 | 0)) {
          $190 = $247;
          $248 = $246;
          break;
         }
        }
       } while (0);
       if ((label | 0) == 48) {
        label = 0;
        if (($$lcssa$i | 0) == ($174 | 0)) {
         $190 = $247;
         $248 = $246;
        } else {
         $183 = $$lcssa$i + 4 | 0;
         $185 = $176 - $183 | 0;
         if ($185 | 0) _memmove($$lcssa$i | 0, $183 | 0, $185 | 0) | 0;
         HEAP32[$173 >> 2] = $$lcssa$i + ($185 >> 2 << 2);
         $$pre145 = HEAP32[$1 >> 2] | 0;
         $190 = $$pre145;
         $248 = $$pre145;
        }
       }
       if (($$sroa$381$0$in129 | 0) == ($190 | 0)) {
        $$1 = $164;
        $192 = $248;
        break;
       } else {
        $246 = $248;
        $247 = $190;
       }
      }
     }
    } else {
     $$1 = $$035132;
     $192 = $245;
    }
    if (($$sroa$397$0$ptr131 | 0) == ($192 | 0)) break; else {
     $$035132 = $$1;
     $245 = $192;
    }
   }
   $$035$lcssa = $$1;
   $89 = HEAP32[$34 >> 2] | 0;
  }
  HEAP32[$2 >> 2] = $89 + ((0 - $$035$lcssa | 0) * 40 | 0);
  HEAP32[$3 >> 2] = $89;
  HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
  HEAP32[$$byval_copy7 >> 2] = HEAP32[$3 >> 2];
  __ZNSt3__26vectorIN2ut9Scheduler15ScheduledSystemENS_9allocatorIS3_EEE5eraseENS_11__wrap_iterIPKS3_EESA_($1, $$byval_copy, $$byval_copy7) | 0;
 } while (($$035$lcssa | 0) > 0);
 if ((label | 0) == 37) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($115);
 if (!$$035$lcssa) {
  $195 = HEAP32[$1 >> 2] | 0;
  if ((HEAP32[$34 >> 2] | 0) == ($195 | 0)) $219 = $195; else {
   _puts(17911) | 0;
   $198 = HEAP32[$1 >> 2] | 0;
   $199 = HEAP32[$34 >> 2] | 0;
   if (($198 | 0) == ($199 | 0)) {
    _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 23477, 17842, 259);
   }
   $$sroa$059$0125 = $198;
   do {
    $201 = $$sroa$059$0125 + 4 | 0;
    if ((HEAP8[$201 + 11 >> 0] | 0) < 0) $207 = HEAP32[$201 >> 2] | 0; else $207 = $201;
    HEAP32[$vararg_buffer1 >> 2] = HEAP32[$$sroa$059$0125 >> 2];
    HEAP32[$vararg_buffer1 + 4 >> 2] = $207;
    _printf(17949, $vararg_buffer1) | 0;
    $209 = HEAP32[$$sroa$059$0125 + 24 >> 2] | 0;
    $211 = HEAP32[$$sroa$059$0125 + 28 >> 2] | 0;
    if (($209 | 0) != ($211 | 0)) {
     $$sroa$051$0124 = $209;
     do {
      HEAP32[$vararg_buffer4 >> 2] = HEAP32[$$sroa$051$0124 >> 2];
      _printf(17968, $vararg_buffer4) | 0;
      $$sroa$051$0124 = $$sroa$051$0124 + 4 | 0;
     } while (($$sroa$051$0124 | 0) != ($211 | 0));
    }
    _puts(22324) | 0;
    $$sroa$059$0125 = $$sroa$059$0125 + 40 | 0;
   } while (($$sroa$059$0125 | 0) != ($199 | 0));
   _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 23477, 17842, 259);
  }
 } else $219 = HEAP32[$1 >> 2] | 0;
 HEAP8[$4 >> 0] = 0;
 if ($219 | 0) {
  $220 = HEAP32[$34 >> 2] | 0;
  if (($220 | 0) == ($219 | 0)) $244 = $219; else {
   $$06$i$i$i37 = $220;
   do {
    $224 = HEAP32[$$06$i$i$i37 + -16 >> 2] | 0;
    if ($224 | 0) {
     HEAP32[$$06$i$i$i37 + -12 >> 2] = $224;
     __ZdlPv($224);
    }
    $229 = HEAP32[$$06$i$i$i37 + -20 >> 2] | 0;
    if ($229 | 0) {
     $231 = $229 + 4 | 0;
     $232 = HEAP32[$231 >> 2] | 0;
     HEAP32[$231 >> 2] = $232 + -1;
     if (!$232) {
      FUNCTION_TABLE_vi[HEAP32[(HEAP32[$229 >> 2] | 0) + 8 >> 2] & 63]($229);
      __ZNSt3__219__shared_weak_count14__release_weakEv($229);
     }
    }
    $238 = $$06$i$i$i37 + -36 | 0;
    $$06$i$i$i37 = $$06$i$i$i37 + -40 | 0;
    if ((HEAP8[$238 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$238 >> 2] | 0);
   } while (($$06$i$i$i37 | 0) != ($219 | 0));
   $244 = HEAP32[$1 >> 2] | 0;
  }
  HEAP32[$34 >> 2] = $219;
  __ZdlPv($244);
 }
 STACKTOP = sp;
 return $7 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_114parse_new_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $$0$i$i$add$i = 0, $$0$i$i$add$i174 = 0, $$0$i$i$add$i186 = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i182 = 0, $$0$i$i$i196 = 0, $$0$i$i$idx$i = 0, $$0$i$i$idx$i173 = 0, $$0$i$i$idx$i185 = 0, $$0$i$i177 = 0, $$0$i$i189 = 0, $$0$i$i202 = 0, $$0$off0207 = 0, $$0138$off0 = 0, $$0150 = 0, $$0159$off0 = 0, $$0160 = 0, $$1151 = 0, $$1161 = 0, $$16 = 0, $$3143 = 0, $$3163 = 0, $$4144 = 0, $$4164206 = 0, $$phi$trans$insert = 0, $$pre$phi225Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $105 = 0, $106 = 0, $117 = 0, $118 = 0, $127 = 0, $14 = 0, $18 = 0, $21 = 0, $23 = 0, $24 = 0, $25 = 0, $29 = 0, $3 = 0, $32 = 0, $33 = 0, $39 = 0, $4 = 0, $5 = 0, $54 = 0, $55 = 0, $58 = 0, $6 = 0, $61 = 0, $65 = 0, $67 = 0, $7 = 0, $70 = 0, $72 = 0, $74 = 0, $8 = 0, $80 = 0, $83 = 0, $87 = 0, $9 = 0, $96 = 0, $97 = 0, $spec$select = 0, label = 0, sp = 0, $$3163$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $3 = sp + 88 | 0;
 $4 = sp + 76 | 0;
 $5 = sp + 64 | 0;
 $6 = sp + 40 | 0;
 $7 = sp + 16 | 0;
 $8 = sp;
 $9 = sp + 52 | 0;
 $10 = $1;
 L1 : do if (($10 - $0 | 0) > 3) {
  $14 = HEAP8[$0 >> 0] | 0;
  if ($14 << 24 >> 24 == 103) {
   $18 = (HEAP8[$0 + 1 >> 0] | 0) == 115;
   $spec$select = $18 ? $0 + 2 | 0 : $0;
   $$0159$off0 = $18;
   $$0160 = $spec$select;
   $21 = HEAP8[$spec$select >> 0] | 0;
  } else {
   $$0159$off0 = 0;
   $$0160 = $0;
   $21 = $14;
  }
  if ($21 << 24 >> 24 == 110) {
   $23 = HEAP8[$$0160 + 1 >> 0] | 0;
   switch ($23 << 24 >> 24) {
   case 97:
   case 119:
    break;
   default:
    {
     $$16 = $0;
     break L1;
    }
   }
   $24 = $23 << 24 >> 24 == 97;
   $25 = $$0160 + 2 | 0;
   L8 : do if (($25 | 0) != ($1 | 0)) {
    $$0138$off0 = 0;
    $$1161 = $25;
    while (1) {
     if ((HEAP8[$$1161 >> 0] | 0) == 95) break;
     $29 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($$1161, $1, $2) | 0;
     if (($29 | 0) == ($$1161 | 0) | ($29 | 0) == ($1 | 0)) break L8; else {
      $$0138$off0 = 1;
      $$1161 = $29;
     }
    }
    $32 = $$1161 + 1 | 0;
    $33 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($32, $1, $2) | 0;
    if (!(($33 | 0) == ($32 | 0) | ($33 | 0) == ($1 | 0))) {
     $39 = HEAP8[$33 >> 0] | 0;
     L15 : do if (($10 - $33 | 0) > 2 & $39 << 24 >> 24 == 112) {
      if ((HEAP8[$33 + 1 >> 0] | 0) != 105) break L8;
      $$3163 = $33 + 2 | 0;
      while (1) {
       if ((HEAP8[$$3163 >> 0] | 0) == 69) {
        $$0$off0207 = 1;
        $$4164206 = $$3163;
        break L15;
       }
       $$3163$looptemp = $$3163;
       $$3163 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($$3163, $1, $2) | 0;
       if (($$3163 | 0) == ($$3163$looptemp | 0) | ($$3163 | 0) == ($1 | 0)) break L8;
      }
     } else if ($39 << 24 >> 24 == 69) {
      $$0$off0207 = 0;
      $$4164206 = $33;
     } else break L8; while (0);
     HEAP32[$4 >> 2] = 0;
     HEAP32[$4 + 4 >> 2] = 0;
     HEAP32[$4 + 8 >> 2] = 0;
     $$0$i$i = 0;
     while (1) {
      if (($$0$i$i | 0) == 3) break;
      HEAP32[$4 + ($$0$i$i << 2) >> 2] = 0;
      $$0$i$i = $$0$i$i + 1 | 0;
     }
     if ($$0$off0207) {
      $54 = $2 + 4 | 0;
      $55 = HEAP32[$54 >> 2] | 0;
      if ((HEAP32[$2 >> 2] | 0) == ($55 | 0)) {
       $$1151 = $0;
       $$4144 = 1;
      } else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($5, $55 + -24 | 0);
       $58 = $4 + 11 | 0;
       if ((HEAP8[$58 >> 0] | 0) < 0) {
        $61 = HEAP32[$4 >> 2] | 0;
        HEAP8[$3 >> 0] = 0;
        __ZNSt3__211char_traitsIcE6assignERcRKc($61, $3);
        HEAP32[$4 + 4 >> 2] = 0;
       } else {
        HEAP8[$3 >> 0] = 0;
        __ZNSt3__211char_traitsIcE6assignERcRKc($4, $3);
        HEAP8[$58 >> 0] = 0;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEj($4);
       HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
       HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
       HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
       $$0$i$i$i$i = 0;
       while (1) {
        if (($$0$i$i$i$i | 0) == 3) break;
        HEAP32[$5 + ($$0$i$i$i$i << 2) >> 2] = 0;
        $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
       $65 = HEAP32[$54 >> 2] | 0;
       $$0$i$i$idx$i = 0;
       while (1) {
        if (($$0$i$i$idx$i | 0) == -1) break;
        $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($65 + ($$0$i$i$add$i * 24 | 0) | 0);
        $$0$i$i$idx$i = $$0$i$i$add$i;
       }
       $67 = $65 + -24 | 0;
       HEAP32[$54 >> 2] = $67;
       $$pre$phi225Z2D = $54;
       $$pre$phiZ2D = $2;
       $70 = $67;
       label = 33;
      }
     } else {
      $$phi$trans$insert = $2 + 4 | 0;
      $$pre$phi225Z2D = $$phi$trans$insert;
      $$pre$phiZ2D = $2;
      $70 = HEAP32[$$phi$trans$insert >> 2] | 0;
      label = 33;
     }
     if ((label | 0) == 33) if ((HEAP32[$$pre$phiZ2D >> 2] | 0) == ($70 | 0)) {
      $$1151 = $0;
      $$4144 = 1;
     } else {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($5, $70 + -24 | 0);
      $72 = HEAP32[$$pre$phi225Z2D >> 2] | 0;
      $$0$i$i$idx$i173 = 0;
      while (1) {
       if (($$0$i$i$idx$i173 | 0) == -1) break;
       $$0$i$i$add$i174 = $$0$i$i$idx$i173 + -1 | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($72 + ($$0$i$i$add$i174 * 24 | 0) | 0);
       $$0$i$i$idx$i173 = $$0$i$i$add$i174;
      }
      $74 = $72 + -24 | 0;
      HEAP32[$$pre$phi225Z2D >> 2] = $74;
      HEAP32[$6 >> 2] = 0;
      HEAP32[$6 + 4 >> 2] = 0;
      HEAP32[$6 + 8 >> 2] = 0;
      $$0$i$i177 = 0;
      while (1) {
       if (($$0$i$i177 | 0) == 3) break;
       HEAP32[$6 + ($$0$i$i177 << 2) >> 2] = 0;
       $$0$i$i177 = $$0$i$i177 + 1 | 0;
      }
      if ($$0138$off0) if ((HEAP32[$$pre$phiZ2D >> 2] | 0) == ($74 | 0)) {
       $$0150 = $0;
       $$3143 = 1;
      } else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($7, $72 + -48 | 0);
       $80 = $6 + 11 | 0;
       if ((HEAP8[$80 >> 0] | 0) < 0) {
        $83 = HEAP32[$6 >> 2] | 0;
        HEAP8[$3 >> 0] = 0;
        __ZNSt3__211char_traitsIcE6assignERcRKc($83, $3);
        HEAP32[$6 + 4 >> 2] = 0;
       } else {
        HEAP8[$3 >> 0] = 0;
        __ZNSt3__211char_traitsIcE6assignERcRKc($6, $3);
        HEAP8[$80 >> 0] = 0;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEj($6);
       HEAP32[$6 >> 2] = HEAP32[$7 >> 2];
       HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
       HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
       $$0$i$i$i$i182 = 0;
       while (1) {
        if (($$0$i$i$i$i182 | 0) == 3) break;
        HEAP32[$7 + ($$0$i$i$i$i182 << 2) >> 2] = 0;
        $$0$i$i$i$i182 = $$0$i$i$i$i182 + 1 | 0;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
       $87 = HEAP32[$$pre$phi225Z2D >> 2] | 0;
       $$0$i$i$idx$i185 = 0;
       while (1) {
        if (($$0$i$i$idx$i185 | 0) == -1) break;
        $$0$i$i$add$i186 = $$0$i$i$idx$i185 + -1 | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($87 + ($$0$i$i$add$i186 * 24 | 0) | 0);
        $$0$i$i$idx$i185 = $$0$i$i$add$i186;
       }
       HEAP32[$$pre$phi225Z2D >> 2] = $87 + -24;
       label = 52;
      } else label = 52;
      if ((label | 0) == 52) {
       HEAP32[$3 >> 2] = 0;
       HEAP32[$3 + 4 >> 2] = 0;
       HEAP32[$3 + 8 >> 2] = 0;
       $$0$i$i189 = 0;
       while (1) {
        if (($$0$i$i189 | 0) == 3) break;
        HEAP32[$3 + ($$0$i$i189 << 2) >> 2] = 0;
        $$0$i$i189 = $$0$i$i189 + 1 | 0;
       }
       if ($$0159$off0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc($3, 22349);
       if ($24) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($3, 22559) | 0; else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($3, 22309) | 0;
       if ($$0138$off0) {
        __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($8, 22277, $6);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($8, 22563) | 0;
        HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
        HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
        HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
        $$0$i$i$i = 0;
        while (1) {
         if (($$0$i$i$i | 0) == 3) break;
         HEAP32[$8 + ($$0$i$i$i << 2) >> 2] = 0;
         $$0$i$i$i = $$0$i$i$i + 1 | 0;
        }
        $96 = HEAP8[$7 + 11 >> 0] | 0;
        $97 = $96 << 24 >> 24 < 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($3, $97 ? HEAP32[$7 >> 2] | 0 : $7, $97 ? HEAP32[$7 + 4 >> 2] | 0 : $96 & 255) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
       }
       $105 = HEAP8[$5 + 11 >> 0] | 0;
       $106 = $105 << 24 >> 24 < 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($3, $106 ? HEAP32[$5 >> 2] | 0 : $5, $106 ? HEAP32[$5 + 4 >> 2] | 0 : $105 & 255) | 0;
       if ($$0$off0207) {
        __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($8, 22272, $4);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($8, 22275) | 0;
        HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
        HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
        HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
        $$0$i$i$i196 = 0;
        while (1) {
         if (($$0$i$i$i196 | 0) == 3) break;
         HEAP32[$8 + ($$0$i$i$i196 << 2) >> 2] = 0;
         $$0$i$i$i196 = $$0$i$i$i196 + 1 | 0;
        }
        $117 = HEAP8[$7 + 11 >> 0] | 0;
        $118 = $117 << 24 >> 24 < 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($3, $118 ? HEAP32[$7 >> 2] | 0 : $7, $118 ? HEAP32[$7 + 4 >> 2] | 0 : $117 & 255) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
       };
       HEAP32[$9 >> 2] = HEAP32[$3 >> 2];
       HEAP32[$9 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
       HEAP32[$9 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
       $$0$i$i202 = 0;
       while (1) {
        if (($$0$i$i202 | 0) == 3) break;
        HEAP32[$3 + ($$0$i$i202 << 2) >> 2] = 0;
        $$0$i$i202 = $$0$i$i202 + 1 | 0;
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($7, $9);
       $127 = HEAP32[$$pre$phi225Z2D >> 2] | 0;
       if ($127 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($127, $7);
        HEAP32[$$pre$phi225Z2D >> 2] = (HEAP32[$$pre$phi225Z2D >> 2] | 0) + 24;
       } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $7);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($7);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
       $$0150 = $$4164206 + 1 | 0;
       $$3143 = 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
      $$1151 = $$0150;
      $$4144 = $$3143;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     if (!$$4144) {
      $$16 = $$1151;
      break L1;
     }
    }
   } while (0);
   $$16 = $0;
  } else $$16 = $0;
 } else $$16 = $0; while (0);
 STACKTOP = sp;
 return $$16 | 0;
}

function __ZN2ut4arch13EntityManager15getEntityByNameERKNS_12NativeStringE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i$i = 0, $$02832$i$i$i = 0, $$02833$i$i$i = 0, $$02833$us$i$i$i = 0, $$03143$i = 0, $$033$lcssa$i = 0, $$03341$i = 0, $$03540$i = 0, $$038$i = 0, $$050151 = 0, $$13436$i = 0, $$sroa$0$0$i$i$i = 0, $$sroa$0101$0 = 0, $$sroa$0101$0157 = 0, $$sroa$0101$0158 = 0, $$sroa$076$1$lcssa = 0, $$sroa$076$1152 = 0, $$sroa$076$2 = 0, $$sroa$076$3124133 = 0, $$sroa$12$1$lcssa = 0, $$sroa$12$1153 = 0, $$sroa$12$2 = 0, $$sroa$12$3129132 = 0, $10 = 0, $103 = 0, $104 = 0, $108 = 0, $109 = 0, $113 = 0, $122 = 0, $125 = 0, $127 = 0, $128 = 0, $132 = 0, $133 = 0, $138 = 0, $14 = 0, $140 = 0, $141 = 0, $146 = 0, $147 = 0, $153 = 0, $158 = 0, $159 = 0, $165 = 0, $170 = 0, $171 = 0, $175 = 0, $176 = 0, $187 = 0, $188 = 0, $192 = 0, $193 = 0, $197 = 0, $198 = 0, $200 = 0, $201 = 0, $203 = 0, $204 = 0, $206 = 0, $214 = 0, $220 = 0, $225 = 0, $231 = 0, $235 = 0, $242 = 0, $244 = 0, $246 = 0, $253 = 0, $254 = 0, $258 = 0, $259 = 0, $267 = 0, $272 = 0, $278 = 0, $289 = 0, $29 = 0, $293 = 0, $297 = 0, $3 = 0, $301 = 0, $34 = 0, $35 = 0, $39 = 0, $4 = 0, $40 = 0, $44 = 0, $48 = 0, $5 = 0, $6 = 0, $60 = 0, $61 = 0, $63 = 0, $66 = 0, $67 = 0, $7 = 0, $72 = 0, $76 = 0, $78 = 0, $8 = 0, $82 = 0, $83 = 0, $85 = 0, $86 = 0, $97 = 0, $tmpcast54$byval_copy = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $tmpcast54$byval_copy = sp + 56 | 0;
 $vararg_buffer = sp + 40 | 0;
 $3 = sp + 48 | 0;
 $4 = sp + 32 | 0;
 $5 = sp + 24 | 0;
 $6 = sp;
 $7 = $2 + 4 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if (!$8) {
  $10 = $0;
  HEAP32[$10 >> 2] = 0;
  HEAP32[$10 + 4 >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 $14 = $1 + 36 | 0;
 do if ((HEAP32[$14 >> 2] | 0) > 0) if (!(HEAP8[$1 + 148 >> 0] | 0)) $40 = $8; else {
  $$sroa$0101$0157 = HEAP32[$1 + 136 >> 2] | 0;
  if (!$$sroa$0101$0157) $40 = $8; else {
   $$sroa$0101$0158 = $$sroa$0101$0157;
   while (1) {
    if (__ZN2uteqERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS_12NativeStringE($$sroa$0101$0158 + 48 | 0, $2) | 0) break;
    $$sroa$0101$0 = HEAP32[$$sroa$0101$0158 >> 2] | 0;
    if (!$$sroa$0101$0) {
     label = 10;
     break;
    } else $$sroa$0101$0158 = $$sroa$0101$0;
   }
   if ((label | 0) == 10) {
    $40 = HEAP32[$7 >> 2] | 0;
    break;
   }
   $29 = $$sroa$0101$0158 + 12 | 0;
   $34 = HEAP32[$29 + 4 >> 2] | 0;
   $35 = $0;
   HEAP32[$35 >> 2] = HEAP32[$29 >> 2];
   HEAP32[$35 + 4 >> 2] = $34;
   STACKTOP = sp;
   return;
  }
 } else $40 = $8; while (0);
 $39 = $40 >>> 1;
 if (!$39) $$033$lcssa$i = 255; else {
  $$03143$i = HEAP32[$2 >> 2] | 0;
  $$03341$i = 255;
  $$03540$i = $39;
  while (1) {
   $44 = ($$03540$i | 0) < 359 ? $$03540$i : 359;
   $$038$i = 0;
   $$13436$i = $$03341$i;
   do {
    $$13436$i = $$13436$i + (HEAPU16[$$03143$i + ($$038$i << 1) >> 1] | 0) | 0;
    $$038$i = $$038$i + 1 | 0;
   } while (($$038$i | 0) < ($44 | 0));
   $48 = ($$13436$i & 65535) + ($$13436$i >>> 16) | 0;
   $$03540$i = $$03540$i - $44 | 0;
   if (($$03540$i | 0) <= 0) {
    $$033$lcssa$i = $48;
    break;
   } else {
    $$03143$i = $$03143$i + ($44 << 1) | 0;
    $$03341$i = $48;
   }
  }
 }
 $60 = $1 + 152 + ((($$033$lcssa$i >>> 16 | $$033$lcssa$i) & 4095) << 3) | 0;
 $61 = $60;
 $63 = HEAP32[$61 >> 2] | 0;
 $66 = HEAP32[$61 + 4 >> 2] | 0;
 $67 = $3;
 HEAP32[$67 >> 2] = $63;
 HEAP32[$67 + 4 >> 2] = $66;
 HEAP32[$tmpcast54$byval_copy >> 2] = HEAP32[$3 >> 2];
 HEAP32[$tmpcast54$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 do if (__ZN2ut4arch13EntityManager6existsENS_6EntityE($1, $tmpcast54$byval_copy) | 0) {
  $72 = $4;
  HEAP32[$72 >> 2] = $63;
  HEAP32[$72 + 4 >> 2] = $66;
  $76 = HEAP32[810] | 0;
  HEAP32[$tmpcast54$byval_copy >> 2] = HEAP32[$4 >> 2];
  HEAP32[$tmpcast54$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  if (__ZN2ut4arch13EntityManager15hasComponentRawENS_6EntityEj($1, $tmpcast54$byval_copy, $76) | 0) {
   $78 = $5;
   HEAP32[$78 >> 2] = $63;
   HEAP32[$78 + 4 >> 2] = $66;
   $82 = HEAP32[810] | 0;
   HEAP32[$tmpcast54$byval_copy >> 2] = HEAP32[$5 >> 2];
   HEAP32[$tmpcast54$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
   $83 = __ZN2ut4arch13EntityManager25getComponentDataRawUnsafeENS_6EntityEj($1, $tmpcast54$byval_copy, $82) | 0;
   if (!$83) {
    _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 18019, 6920, 742);
   }
   $85 = HEAP32[$83 >> 2] | 0;
   $86 = HEAP32[$2 >> 2] | 0;
   if (($85 | 0) != ($86 | 0)) {
    if ((HEAP32[$83 + 4 >> 2] | 0) != (HEAP32[$7 >> 2] | 0)) {
     label = 24;
     break;
    }
    if (_strcmp($85, $86) | 0) {
     label = 24;
     break;
    }
   }
   if (!($66 | $63)) label = 24; else {
    $$sroa$076$3124133 = $63;
    $$sroa$12$3129132 = $66;
   }
  } else label = 24;
 } else label = 24; while (0);
 if ((label | 0) == 24) {
  $97 = HEAP32[$1 + 4 >> 2] | 0;
  if (!(HEAP8[24208] | 0)) {
   if (!(HEAP8[24216] | 0)) {
    $103 = HEAP32[(__ZN2ut20InitComponentInfoForINS_6EntityEEERNS_13ComponentInfoEv() | 0) >> 2] | 0;
    HEAP32[6115] = $103;
    $104 = 24216;
    HEAP32[$104 >> 2] = 1;
    HEAP32[$104 + 4 >> 2] = 0;
    $108 = $103;
   } else $108 = HEAP32[6115] | 0;
   HEAP32[6114] = $108;
   $109 = 24208;
   HEAP32[$109 >> 2] = 1;
   HEAP32[$109 + 4 >> 2] = 0;
   $113 = $108;
  } else $113 = HEAP32[6114] | 0;
  HEAP32[$6 >> 2] = $113;
  HEAP32[$6 + 4 >> 2] = 1;
  HEAP32[$6 + 8 >> 2] = HEAP32[810];
  HEAP32[$6 + 12 >> 2] = 1;
  if (!(HEAP8[24240] | 0)) {
   if (!(HEAP8[24248] | 0)) {
    $122 = __ZN2ut17ComponentRegistry10findByNameEPKc(18927) | 0;
    if (!$122) {
     $125 = __ZN2ut17InitComponentInfoEPKciiiijPvPFvS2_iES4_PFvPKvS2_iEPFvS2_S2_ES4_iiPKii(18927, 1, 1, 1, 0, 0, __Znwj(1) | 0, 0, 0, 0, 0, 7, 0, 0, 0, 0) | 0;
     HEAP32[$125 + 68 >> 2] = 0;
     $$0$i$i$i$i = $125;
    } else $$0$i$i$i$i = $122;
    $127 = HEAP32[$$0$i$i$i$i >> 2] | 0;
    HEAP32[6119] = $127;
    $128 = 24248;
    HEAP32[$128 >> 2] = 1;
    HEAP32[$128 + 4 >> 2] = 0;
    $132 = $127;
   } else $132 = HEAP32[6119] | 0;
   HEAP32[6118] = $132;
   $133 = 24240;
   HEAP32[$133 >> 2] = 1;
   HEAP32[$133 + 4 >> 2] = 0;
   $138 = $132;
  } else $138 = HEAP32[6118] | 0;
  HEAP32[$6 + 16 >> 2] = $138;
  HEAP32[$6 + 20 >> 2] = 5;
  $140 = __Znwj(24) | 0;
  $141 = $6;
  $146 = HEAP32[$141 + 4 >> 2] | 0;
  $147 = $140;
  HEAP32[$147 >> 2] = HEAP32[$141 >> 2];
  HEAP32[$147 + 4 >> 2] = $146;
  $153 = $6 + 8 | 0;
  $158 = HEAP32[$153 + 4 >> 2] | 0;
  $159 = $140 + 8 | 0;
  HEAP32[$159 >> 2] = HEAP32[$153 >> 2];
  HEAP32[$159 + 4 >> 2] = $158;
  $165 = $6 + 16 | 0;
  $170 = HEAP32[$165 + 4 >> 2] | 0;
  $171 = $140 + 16 | 0;
  HEAP32[$171 >> 2] = HEAP32[$165 >> 2];
  HEAP32[$171 + 4 >> 2] = $170;
  HEAP32[$tmpcast54$byval_copy >> 2] = $97;
  $175 = $tmpcast54$byval_copy + 4 | 0;
  $176 = $tmpcast54$byval_copy + 24 | 0;
  HEAP32[$175 >> 2] = 0;
  HEAP32[$175 + 4 >> 2] = 0;
  HEAP32[$175 + 8 >> 2] = 0;
  HEAP32[$175 + 12 >> 2] = 0;
  HEAP32[$175 + 16 >> 2] = 0;
  HEAP32[$176 >> 2] = -1;
  HEAP8[$tmpcast54$byval_copy + 28 >> 0] = 0;
  HEAP8[$tmpcast54$byval_copy + 29 >> 0] = 0;
  HEAP8[$tmpcast54$byval_copy + 30 >> 0] = 0;
  HEAP32[$tmpcast54$byval_copy + 32 >> 2] = 0;
  __ZN2ut4arch22ArchetypeChunkIterator9addFilterEPKNS0_13ComponentSpecEj($tmpcast54$byval_copy, $140, 3);
  __ZdlPv($140);
  if (__ZN2ut4arch22ArchetypeChunkIterator4nextEv($tmpcast54$byval_copy) | 0) {
   $$sroa$076$1152 = 0;
   $$sroa$12$1153 = 0;
   while (1) {
    if (!(HEAP8[24208] | 0)) {
     if (!(HEAP8[24216] | 0)) {
      $187 = HEAP32[(__ZN2ut20InitComponentInfoForINS_6EntityEEERNS_13ComponentInfoEv() | 0) >> 2] | 0;
      HEAP32[6115] = $187;
      $188 = 24216;
      HEAP32[$188 >> 2] = 1;
      HEAP32[$188 + 4 >> 2] = 0;
      $192 = $187;
     } else $192 = HEAP32[6115] | 0;
     HEAP32[6114] = $192;
     $193 = 24208;
     HEAP32[$193 >> 2] = 1;
     HEAP32[$193 + 4 >> 2] = 0;
     $197 = $192;
    } else $197 = HEAP32[6114] | 0;
    $198 = __ZN2ut4arch22ArchetypeChunkIterator7rawDataEj($tmpcast54$byval_copy, $197) | 0;
    $200 = __ZN2ut4arch22ArchetypeChunkIterator7rawDataEj($tmpcast54$byval_copy, HEAP32[810] | 0) | 0;
    $201 = HEAP32[$176 >> 2] | 0;
    L68 : do if (($201 | 0) > 0) {
     $203 = HEAP32[$2 >> 2] | 0;
     $204 = HEAP32[$7 >> 2] | 0;
     $$050151 = 0;
     while (1) {
      $206 = HEAP32[$200 + ($$050151 << 3) >> 2] | 0;
      if (($206 | 0) == ($203 | 0)) break;
      if ((HEAP32[$200 + ($$050151 << 3) + 4 >> 2] | 0) == ($204 | 0)) if (!(_strcmp($206, $203) | 0)) break;
      $220 = $$050151 + 1 | 0;
      if (($220 | 0) < ($201 | 0)) $$050151 = $220; else {
       $$sroa$076$2 = $$sroa$076$1152;
       $$sroa$12$2 = $$sroa$12$1153;
       break L68;
      }
     }
     $214 = $198 + ($$050151 << 3) | 0;
     $$sroa$076$2 = HEAP32[$214 >> 2] | 0;
     $$sroa$12$2 = HEAP32[$214 + 4 >> 2] | 0;
    } else {
     $$sroa$076$2 = $$sroa$076$1152;
     $$sroa$12$2 = $$sroa$12$1153;
    } while (0);
    if ((__ZN2ut4arch22ArchetypeChunkIterator4nextEv($tmpcast54$byval_copy) | 0) & ($$sroa$12$2 | $$sroa$076$2 | 0) == 0) {
     $$sroa$076$1152 = $$sroa$076$2;
     $$sroa$12$1153 = $$sroa$12$2;
    } else {
     $$sroa$076$1$lcssa = $$sroa$076$2;
     $$sroa$12$1$lcssa = $$sroa$12$2;
     break;
    }
   }
  } else {
   $$sroa$076$1$lcssa = 0;
   $$sroa$12$1$lcssa = 0;
  }
  __ZN2ut4arch22ArchetypeChunkIterator6finishEv($tmpcast54$byval_copy);
  $225 = HEAP32[$175 >> 2] | 0;
  if ($225 | 0) {
   HEAP32[$tmpcast54$byval_copy + 8 >> 2] = $225;
   __ZdlPv($225);
  }
  if (!($$sroa$12$1$lcssa | $$sroa$076$1$lcssa)) {
   $231 = $60;
   HEAP32[$231 >> 2] = 0;
   HEAP32[$231 + 4 >> 2] = 0;
   $235 = $0;
   HEAP32[$235 >> 2] = 0;
   HEAP32[$235 + 4 >> 2] = 0;
   STACKTOP = sp;
   return;
  } else {
   $$sroa$076$3124133 = $$sroa$076$1$lcssa;
   $$sroa$12$3129132 = $$sroa$12$1$lcssa;
  }
 }
 L85 : do if ((HEAP32[$14 >> 2] | 0) > 0) {
  $242 = HEAP32[$1 + 132 >> 2] | 0;
  if ($242 | 0) {
   $244 = $242 + -1 | 0;
   $246 = ($244 & $242 | 0) == 0;
   if ($246) $253 = $244 & $$sroa$076$3124133; else if ($$sroa$076$3124133 >>> 0 < $242 >>> 0) $253 = $$sroa$076$3124133; else $253 = ($$sroa$076$3124133 >>> 0) % ($242 >>> 0) | 0;
   $254 = HEAP32[(HEAP32[$1 + 128 >> 2] | 0) + ($253 << 2) >> 2] | 0;
   if ($254 | 0) {
    $$02832$i$i$i = HEAP32[$254 >> 2] | 0;
    if ($$02832$i$i$i | 0) {
     L95 : do if ($246) {
      $$02833$us$i$i$i = $$02832$i$i$i;
      while (1) {
       $258 = HEAP32[$$02833$us$i$i$i + 4 >> 2] | 0;
       $259 = ($258 | 0) == ($$sroa$076$3124133 | 0);
       if (!($259 | ($258 & $244 | 0) == ($253 | 0))) break L85;
       if ($259) if ((HEAP32[$$02833$us$i$i$i + 8 >> 2] | 0) == ($$sroa$076$3124133 | 0)) {
        $$sroa$0$0$i$i$i = $$02833$us$i$i$i;
        break L95;
       }
       $$02833$us$i$i$i = HEAP32[$$02833$us$i$i$i >> 2] | 0;
       if (!$$02833$us$i$i$i) break L85;
      }
     } else {
      $$02833$i$i$i = $$02832$i$i$i;
      while (1) {
       $267 = HEAP32[$$02833$i$i$i + 4 >> 2] | 0;
       if (($267 | 0) == ($$sroa$076$3124133 | 0)) {
        if ((HEAP32[$$02833$i$i$i + 8 >> 2] | 0) == ($$sroa$076$3124133 | 0)) {
         $$sroa$0$0$i$i$i = $$02833$i$i$i;
         break L95;
        }
       } else {
        if ($267 >>> 0 < $242 >>> 0) $272 = $267; else $272 = ($267 >>> 0) % ($242 >>> 0) | 0;
        if (($272 | 0) != ($253 | 0)) break L85;
       }
       $$02833$i$i$i = HEAP32[$$02833$i$i$i >> 2] | 0;
       if (!$$02833$i$i$i) break L85;
      }
     } while (0);
     $278 = $60;
     HEAP32[$278 >> 2] = 0;
     HEAP32[$278 + 4 >> 2] = 0;
     if ((HEAP32[$$sroa$0$0$i$i$i + 12 >> 2] | 0) == ($$sroa$076$3124133 | 0)) if ((HEAP32[$$sroa$0$0$i$i$i + 16 >> 2] | 0) == ($$sroa$12$3129132 | 0)) if (__ZN2uteqERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS_12NativeStringE($$sroa$0$0$i$i$i + 48 | 0, $2) | 0) {
      $289 = $0;
      HEAP32[$289 >> 2] = $$sroa$076$3124133;
      HEAP32[$289 + 4 >> 2] = $$sroa$12$3129132;
      STACKTOP = sp;
      return;
     }
     $293 = $0;
     HEAP32[$293 >> 2] = 0;
     HEAP32[$293 + 4 >> 2] = 0;
     STACKTOP = sp;
     return;
    }
   }
  }
 } while (0);
 $297 = $60;
 HEAP32[$297 >> 2] = $$sroa$076$3124133;
 HEAP32[$297 + 4 >> 2] = $$sroa$12$3129132;
 $301 = $0;
 HEAP32[$301 >> 2] = $$sroa$076$3124133;
 HEAP32[$301 + 4 >> 2] = $$sroa$12$3129132;
 STACKTOP = sp;
 return;
}

function __ZN2ut4arch17EntityDataManager21tryDeallocateEntitiesEPKNS_6EntityEi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0108 = 0, $$0109 = 0, $$0127 = 0, $$029130 = 0, $$044$lcssa$i = 0, $$047$i = 0, $$06$i = 0, $$1 = 0, $$1110 = 0, $$2 = 0, $$2$i = 0, $$2111 = 0, $$3 = 0, $$3112 = 0, $$4 = 0, $$4113 = 0, $$5 = 0, $$5114 = 0, $$6 = 0, $$pr = 0, $$pre$i = 0, $$pre$phi62$iZ2D = 0, $$pre145 = 0, $$pre145151 = 0, $$pre148 = 0, $$pre149 = 0, $$sroa$0$08$i$i = 0, $$sroa$0$09$i$i = 0, $$sroa$012$020$i = 0, $$sroa$012$1$i = 0, $$sroa$012$2$i = 0, $$sroa$042$0126 = 0, $10 = 0, $100 = 0, $101 = 0, $104 = 0, $11 = 0, $111 = 0, $114 = 0, $117 = 0, $12 = 0, $122 = 0, $125 = 0, $127 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $133 = 0, $14 = 0, $141 = 0, $144 = 0, $15 = 0, $152 = 0, $157 = 0, $158 = 0, $159 = 0, $163 = 0, $165 = 0, $168 = 0, $17 = 0, $170 = 0, $173 = 0, $179 = 0, $182 = 0, $184 = 0, $185 = 0, $189 = 0, $19 = 0, $190 = 0, $194 = 0, $195 = 0, $197 = 0, $199 = 0, $201 = 0, $210 = 0, $212 = 0, $217 = 0, $222 = 0, $223 = 0, $24 = 0, $28 = 0, $3 = 0, $32 = 0, $33 = 0, $35 = 0, $39 = 0, $4 = 0, $40 = 0, $43 = 0, $45 = 0, $49 = 0, $5 = 0, $52 = 0, $53 = 0, $6 = 0, $60 = 0, $66 = 0, $67 = 0, $71 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $81 = 0, $82 = 0, $86 = 0, $9 = 0, $90 = 0, $92 = 0, $95 = 0, $97 = 0, $98 = 0, $spec$select$i = 0, $spec$select$i166 = 0, $spec$select117 = 0, $tmpcast$byval_copy = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $tmpcast$byval_copy = sp + 40 | 0;
 $vararg_buffer1 = sp + 16 | 0;
 $vararg_buffer = sp + 8 | 0;
 $3 = sp + 28 | 0;
 $4 = sp + 20 | 0;
 $5 = sp + 24 | 0;
 $6 = sp;
 if (!$2) {
  STACKTOP = sp;
  return;
 }
 $8 = $0 + 20 | 0;
 $9 = $0 + 28 | 0;
 $10 = $3 + 4 | 0;
 $11 = $3 + 8 | 0;
 $$029130 = 0;
 L4 : while (1) {
  $12 = $1 + ($$029130 << 3) | 0;
  $13 = $2 - $$029130 | 0;
  $14 = HEAP32[$12 >> 2] | 0;
  $15 = HEAP32[$8 >> 2] | 0;
  $17 = HEAP32[$15 + ($14 << 4) + 12 >> 2] | 0;
  $19 = HEAP32[$15 + ($14 << 4) + 4 >> 2] | 0;
  L6 : do if (($13 | 0) > 0) if (($13 | 0) == 1) $$2$i = 1; else {
   $spec$select$i166 = 1;
   while (1) {
    $$pre$i = HEAP32[$12 + ($spec$select$i166 << 3) >> 2] | 0;
    if ((HEAP32[$15 + ($$pre$i << 4) + 12 >> 2] | 0) != ($17 | 0)) {
     $$2$i = $spec$select$i166;
     break L6;
    }
    $24 = (HEAP32[$15 + ($$pre$i << 4) + 4 >> 2] | 0) == ($spec$select$i166 + $19 | 0);
    $spec$select$i = $spec$select$i166 + ($24 & 1) | 0;
    if ($24 & ($spec$select$i | 0) < ($13 | 0)) $spec$select$i166 = $spec$select$i; else {
     $$2$i = $spec$select$i;
     break;
    }
   }
  } else $$2$i = 0; while (0);
  $28 = HEAP32[$17 + 16 >> 2] | 0;
  if (!(HEAP8[$28 + 113 >> 0] | 0)) {
   $32 = HEAP32[$9 >> 2] | 0;
   $33 = ($$2$i | 0) > 0;
   if ($33) {
    HEAP32[$15 + ($14 << 4) + 12 >> 2] = 0;
    $35 = $15 + ($14 << 4) | 0;
    HEAP32[$35 >> 2] = (HEAP32[$35 >> 2] | 0) + 1;
    HEAP32[$15 + ($14 << 4) + 4 >> 2] = $32;
    if (($$2$i | 0) == 1) $$044$lcssa$i = $14; else {
     $43 = 1;
     $49 = $14;
     while (1) {
      $$pre148 = HEAP32[$12 + ($43 << 3) >> 2] | 0;
      $$pre149 = HEAP32[$8 >> 2] | 0;
      HEAP32[$$pre149 + ($$pre148 << 4) + 12 >> 2] = 0;
      $45 = $$pre149 + ($$pre148 << 4) | 0;
      HEAP32[$45 >> 2] = (HEAP32[$45 >> 2] | 0) + 1;
      HEAP32[$$pre149 + ($$pre148 << 4) + 4 >> 2] = $49;
      $43 = $43 + 1 | 0;
      if (($43 | 0) == ($$2$i | 0)) {
       $$044$lcssa$i = $$pre148;
       break;
      } else $49 = $$pre148;
     }
    }
   } else $$044$lcssa$i = $32;
   HEAP32[$9 >> 2] = $$044$lcssa$i;
   __ZN2ut4arch5Chunk11destroyDataEPS1_ii($17, $19, $$2$i);
   $39 = $17 + 24 | 0;
   $40 = HEAP32[$39 >> 2] | 0;
   if (($40 | 0) != ($$2$i + $19 | 0)) {
    $52 = $40 - $$2$i | 0;
    $53 = $17 + 48 + ($52 << 3) | 0;
    if ($33) {
     $$047$i = 0;
     do {
      HEAP32[(HEAP32[$8 >> 2] | 0) + (HEAP32[$53 + ($$047$i << 3) >> 2] << 4) + 4 >> 2] = $$047$i + $19;
      $$047$i = $$047$i + 1 | 0;
     } while (($$047$i | 0) != ($$2$i | 0));
     $$pre$phi62$iZ2D = (HEAP32[$39 >> 2] | 0) - $$2$i | 0;
    } else $$pre$phi62$iZ2D = $52;
    __ZN2ut4arch5Chunk8moveDataEPS1_iS2_ii($17, $$pre$phi62$iZ2D, $17, $19, $$2$i);
   }
   $60 = $28 + 16 | 0;
   HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) - $$2$i;
   __ZN2ut4arch16ArchetypeManager13setChunkCountEPNS0_5ChunkEi(HEAP32[$0 >> 2] | 0, $17, (HEAP32[$39 >> 2] | 0) - $$2$i | 0);
  } else {
   HEAP32[$3 >> 2] = 0;
   HEAP32[$10 >> 2] = 0;
   HEAP32[$11 >> 2] = 0;
   $66 = $28 + 28 | 0;
   $67 = HEAP32[$66 >> 2] | 0;
   L31 : do if ($67 | 0) {
    if ($67 >>> 0 > 1073741823) {
     label = 22;
     break L4;
    }
    $71 = __Znwj($67 << 2) | 0;
    $73 = $71 + ($67 << 2) | 0;
    HEAP32[$3 >> 2] = $71;
    HEAP32[$10 >> 2] = $71;
    HEAP32[$11 >> 2] = $73;
    if ((HEAP32[$66 >> 2] | 0) > 0) {
     $77 = $28 + 32 | 0;
     $$06$i = 0;
     $81 = $71;
     $82 = $73;
     while (1) {
      $79 = (HEAP32[$77 >> 2] | 0) + ($$06$i << 4) | 0;
      if (($81 | 0) == ($82 | 0)) __ZNSt3__26vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIRKjEEvOT_($3, $79); else {
       HEAP32[$81 >> 2] = HEAP32[$79 >> 2];
       HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 4;
      }
      $86 = $$06$i + 1 | 0;
      if (($86 | 0) >= (HEAP32[$66 >> 2] | 0)) break L31;
      $$06$i = $86;
      $81 = HEAP32[$10 >> 2] | 0;
      $82 = HEAP32[$11 >> 2] | 0;
     }
    }
   } while (0);
   $90 = HEAP32[$17 + 20 >> 2] | 0;
   $92 = HEAP32[$28 + 104 >> 2] | 0;
   if (!$92) $117 = 0; else {
    $95 = STACKTOP;
    STACKTOP = STACKTOP + ((1 * ($92 << 2) | 0) + 15 & -16) | 0;
    $117 = $95;
   }
   $97 = (HEAP32[$3 >> 2] | 0) + 4 | 0;
   $98 = HEAP32[$10 >> 2] | 0;
   do if (($97 | 0) == ($98 | 0)) {
    $$2 = 0;
    $$2111 = 0;
    $$sroa$0$08$i$i = $97;
    label = 42;
   } else {
    $100 = $90;
    $$0108 = 0;
    $$0109 = 0;
    $$sroa$0$09$i$i = $97;
    $104 = HEAP32[6067] | 0;
    while (1) {
     $101 = HEAP32[$$sroa$0$09$i$i >> 2] | 0;
     if ((HEAP32[6068] | 0) - $104 >> 2 >>> 0 <= $101 >>> 0) {
      label = 35;
      break L4;
     }
     $111 = HEAP32[(HEAP32[$104 + ($101 << 2) >> 2] | 0) + 4 >> 2] | 0;
     $114 = $111 & 2;
     if (!($111 & 8)) {
      label = 37;
      break;
     }
     if (!$114) {
      $$1 = $$0108;
      $$1110 = $$0109;
     } else {
      HEAP32[$117 + ($$0109 << 2) >> 2] = HEAP32[$100 + ($$0108 << 2) >> 2];
      $$1 = $$0108 + 1 | 0;
      $$1110 = $$0109 + 1 | 0;
     }
     $122 = $$sroa$0$09$i$i + 4 | 0;
     if (($122 | 0) == ($98 | 0)) {
      label = 41;
      break;
     } else {
      $$0108 = $$1;
      $$0109 = $$1110;
      $$sroa$0$09$i$i = $122;
     }
    }
    if ((label | 0) == 37) {
     label = 0;
     $$2 = ($114 >>> 1) + $$0108 | 0;
     $$2111 = $$0109;
     $$sroa$0$08$i$i = $$sroa$0$09$i$i;
     label = 42;
     break;
    } else if ((label | 0) == 41) {
     label = 0;
     $$6 = $$1110;
     $$sroa$012$2$i = $98;
     break;
    }
   } while (0);
   if ((label | 0) == 42) {
    label = 0;
    $125 = $$sroa$0$08$i$i;
    if (($$sroa$0$08$i$i | 0) == ($98 | 0)) {
     $$6 = $$2111;
     $$sroa$012$2$i = $125;
    } else {
     $127 = $$sroa$0$08$i$i + 4 | 0;
     if (($127 | 0) == ($98 | 0)) {
      $$6 = $$2111;
      $$sroa$012$2$i = $125;
     } else {
      $129 = $90;
      $$3 = $$2;
      $$3112 = $$2111;
      $$sroa$012$020$i = $125;
      $131 = $127;
      while (1) {
       $130 = HEAP32[$131 >> 2] | 0;
       $133 = HEAP32[6067] | 0;
       if ((HEAP32[6068] | 0) - $133 >> 2 >>> 0 <= $130 >>> 0) {
        label = 46;
        break L4;
       }
       $141 = HEAP32[(HEAP32[$133 + ($130 << 2) >> 2] | 0) + 4 >> 2] | 0;
       $144 = $141 & 2;
       if (!($141 & 8)) {
        $$5 = ($144 >>> 1) + $$3 | 0;
        $$5114 = $$3112;
        $$sroa$012$1$i = $$sroa$012$020$i;
       } else {
        if (!$144) {
         $$4 = $$3;
         $$4113 = $$3112;
        } else {
         HEAP32[$117 + ($$3112 << 2) >> 2] = HEAP32[$129 + ($$3 << 2) >> 2];
         $$4 = $$3 + 1 | 0;
         $$4113 = $$3112 + 1 | 0;
        }
        $152 = $$sroa$012$020$i;
        HEAP32[$152 >> 2] = HEAP32[$131 >> 2];
        $$5 = $$4;
        $$5114 = $$4113;
        $$sroa$012$1$i = $152 + 4 | 0;
       }
       $131 = $131 + 4 | 0;
       if (($131 | 0) == ($98 | 0)) {
        $$6 = $$5114;
        $$sroa$012$2$i = $$sroa$012$1$i;
        break;
       } else {
        $$3 = $$5;
        $$3112 = $$5114;
        $$sroa$012$020$i = $$sroa$012$1$i;
       }
      }
     }
    }
   }
   $157 = $$sroa$012$2$i;
   $158 = HEAP32[$10 >> 2] | 0;
   $159 = HEAP32[$3 >> 2] | 0;
   $163 = $159 + ($$sroa$012$2$i - $159 >> 2 << 2) | 0;
   $165 = $158;
   if (($158 | 0) == ($157 | 0)) $$pre145151 = $157; else {
    $168 = $163 + ($165 - $$sroa$012$2$i >> 2 << 2) | 0;
    $170 = $165 - $168 | 0;
    if ($170 | 0) _memmove($163 | 0, $168 | 0, $170 | 0) | 0;
    $173 = $163 + ($170 >> 2 << 2) | 0;
    HEAP32[$10 >> 2] = $173;
    $$pre145151 = $173;
   }
   $spec$select117 = ($$6 | 0) == 0 ? 0 : $117;
   if (!(HEAP8[24224] | 0)) {
    if (!(HEAP8[24232] | 0)) {
     $179 = __ZN2ut17ComponentRegistry10findByNameEPKc(19064) | 0;
     if (!$179) {
      $182 = __ZN2ut17InitComponentInfoEPKciiiijPvPFvS2_iES4_PFvPKvS2_iEPFvS2_S2_ES4_iiPKii(19064, 1, 1, 1, 0, 0, __Znwj(1) | 0, 0, 0, 0, 0, 6, 0, 0, 0, 0) | 0;
      HEAP32[$182 + 68 >> 2] = 0;
      $$0$i$i$i = $182;
     } else $$0$i$i$i = $179;
     $184 = HEAP32[$$0$i$i$i >> 2] | 0;
     HEAP32[6117] = $184;
     $185 = 24232;
     HEAP32[$185 >> 2] = 1;
     HEAP32[$185 + 4 >> 2] = 0;
     $$pre145 = HEAP32[$10 >> 2] | 0;
     $189 = $184;
    } else {
     $$pre145 = $$pre145151;
     $189 = HEAP32[6117] | 0;
    }
    HEAP32[6116] = $189;
    $190 = 24224;
    HEAP32[$190 >> 2] = 1;
    HEAP32[$190 + 4 >> 2] = 0;
    $$pr = $189;
    $197 = $$pre145;
   } else {
    $$pr = HEAP32[6116] | 0;
    $197 = $$pre145151;
   }
   HEAP32[$4 >> 2] = $$pr;
   $194 = HEAP32[$3 >> 2] | 0;
   $195 = $194;
   L90 : do if (($197 | 0) == ($195 | 0)) label = 70; else {
    $$sroa$042$0126 = $194;
    $199 = $195;
    while (1) {
     if ((HEAP32[$199 >> 2] | 0) >>> 0 > $$pr >>> 0) break;
     $201 = $199 + 4 | 0;
     if (($197 | 0) == ($201 | 0)) {
      label = 70;
      break L90;
     } else {
      $$sroa$042$0126 = $201;
      $199 = $201;
     }
    }
    HEAP32[$5 >> 2] = $$sroa$042$0126;
    HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$5 >> 2];
    __ZNSt3__26vectorIjNS_9allocatorIjEEE6insertENS_11__wrap_iterIPKjEERS5_($3, $tmpcast$byval_copy, $4) | 0;
    HEAP32[$4 >> 2] = 0;
   } while (0);
   do if ((label | 0) == 70) {
    label = 0;
    if ($$pr | 0) if (($197 | 0) == (HEAP32[$11 >> 2] | 0)) {
     __ZNSt3__26vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIRKjEEvOT_($3, $4);
     break;
    } else {
     HEAP32[$197 >> 2] = $$pr;
     HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 4;
     break;
    }
   } while (0);
   $210 = __ZN2ut4arch16ArchetypeManager20getOrCreateArchetypeERKNSt3__26vectorIjNS2_9allocatorIjEEEE(HEAP32[$0 >> 2] | 0, $3) | 0;
   if (($$2$i | 0) > 0) {
    $$0127 = 0;
    do {
     $217 = $1 + ($$0127 + $$029130 << 3) | 0;
     $222 = HEAP32[$217 + 4 >> 2] | 0;
     $223 = $6;
     HEAP32[$223 >> 2] = HEAP32[$217 >> 2];
     HEAP32[$223 + 4 >> 2] = $222;
     HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$6 >> 2];
     HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$6 + 4 >> 2];
     __ZN2ut4arch17EntityDataManager12setArchetypeENS_6EntityEPNS0_9ArchetypeEPi($0, $tmpcast$byval_copy, $210, $spec$select117);
     $$0127 = $$0127 + 1 | 0;
    } while (($$0127 | 0) != ($$2$i | 0));
   }
   __ZN2ut4arch17EntityDataManager30incrementComponentOrderVersionEPNS0_9ArchetypeEPNS0_5ChunkE($0, $28, $17);
   $212 = HEAP32[$3 >> 2] | 0;
   if ($212 | 0) {
    HEAP32[$10 >> 2] = $212;
    __ZdlPv($212);
   }
  }
  $$029130 = $$2$i + $$029130 | 0;
  if (($$029130 | 0) == ($2 | 0)) {
   label = 81;
   break;
  }
 }
 if ((label | 0) == 22) _abort(); else if ((label | 0) == 35) {
  _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 } else if ((label | 0) == 46) {
  _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 } else if ((label | 0) == 81) {
  STACKTOP = sp;
  return;
 }
}

function _free($0) {
 $0 = $0 | 0;
 var $$0211$i = 0, $$0211$in$i = 0, $$0381438 = 0, $$0382$lcssa = 0, $$0382437 = 0, $$0394 = 0, $$0401 = 0, $$1 = 0, $$1380 = 0, $$1385 = 0, $$1385$be = 0, $$1385$ph = 0, $$1388 = 0, $$1388$be = 0, $$1388$ph = 0, $$1396 = 0, $$1396$be = 0, $$1396$ph = 0, $$1400 = 0, $$1400$be = 0, $$1400$ph = 0, $$2 = 0, $$3 = 0, $$3398 = 0, $$pre$phi444Z2D = 0, $$pre$phi446Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $105 = 0, $106 = 0, $114 = 0, $115 = 0, $116 = 0, $124 = 0, $13 = 0, $132 = 0, $137 = 0, $138 = 0, $141 = 0, $143 = 0, $145 = 0, $16 = 0, $160 = 0, $165 = 0, $167 = 0, $17 = 0, $170 = 0, $173 = 0, $176 = 0, $179 = 0, $180 = 0, $181 = 0, $183 = 0, $185 = 0, $186 = 0, $188 = 0, $189 = 0, $195 = 0, $196 = 0, $2 = 0, $205 = 0, $21 = 0, $210 = 0, $213 = 0, $214 = 0, $220 = 0, $235 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $244 = 0, $245 = 0, $251 = 0, $256 = 0, $257 = 0, $26 = 0, $260 = 0, $262 = 0, $265 = 0, $270 = 0, $276 = 0, $28 = 0, $280 = 0, $281 = 0, $288 = 0, $3 = 0, $300 = 0, $305 = 0, $312 = 0, $313 = 0, $314 = 0, $323 = 0, $41 = 0, $46 = 0, $48 = 0, $51 = 0, $53 = 0, $56 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $63 = 0, $65 = 0, $66 = 0, $68 = 0, $69 = 0, $7 = 0, $74 = 0, $75 = 0, $84 = 0, $89 = 0, $9 = 0, $92 = 0, $93 = 0, $99 = 0;
 if (!$0) return;
 $2 = $0 + -8 | 0;
 $3 = HEAP32[6125] | 0;
 if ($2 >>> 0 < $3 >>> 0) _abort();
 $6 = HEAP32[$0 + -4 >> 2] | 0;
 $7 = $6 & 3;
 if (($7 | 0) == 1) _abort();
 $9 = $6 & -8;
 $10 = $2 + $9 | 0;
 L10 : do if (!($6 & 1)) {
  $13 = HEAP32[$2 >> 2] | 0;
  if (!$7) return;
  $16 = $2 + (0 - $13) | 0;
  $17 = $13 + $9 | 0;
  if ($16 >>> 0 < $3 >>> 0) _abort();
  if ((HEAP32[6126] | 0) == ($16 | 0)) {
   $105 = $10 + 4 | 0;
   $106 = HEAP32[$105 >> 2] | 0;
   if (($106 & 3 | 0) != 3) {
    $$1 = $16;
    $$1380 = $17;
    $114 = $16;
    break;
   }
   HEAP32[6123] = $17;
   HEAP32[$105 >> 2] = $106 & -2;
   HEAP32[$16 + 4 >> 2] = $17 | 1;
   HEAP32[$16 + $17 >> 2] = $17;
   return;
  }
  $21 = $13 >>> 3;
  if ($13 >>> 0 < 256) {
   $24 = HEAP32[$16 + 8 >> 2] | 0;
   $26 = HEAP32[$16 + 12 >> 2] | 0;
   $28 = 24524 + ($21 << 1 << 2) | 0;
   if (($24 | 0) != ($28 | 0)) {
    if ($3 >>> 0 > $24 >>> 0) _abort();
    if ((HEAP32[$24 + 12 >> 2] | 0) != ($16 | 0)) _abort();
   }
   if (($26 | 0) == ($24 | 0)) {
    HEAP32[6121] = HEAP32[6121] & ~(1 << $21);
    $$1 = $16;
    $$1380 = $17;
    $114 = $16;
    break;
   }
   if (($26 | 0) == ($28 | 0)) $$pre$phi446Z2D = $26 + 8 | 0; else {
    if ($3 >>> 0 > $26 >>> 0) _abort();
    $41 = $26 + 8 | 0;
    if ((HEAP32[$41 >> 2] | 0) == ($16 | 0)) $$pre$phi446Z2D = $41; else _abort();
   }
   HEAP32[$24 + 12 >> 2] = $26;
   HEAP32[$$pre$phi446Z2D >> 2] = $24;
   $$1 = $16;
   $$1380 = $17;
   $114 = $16;
   break;
  }
  $46 = HEAP32[$16 + 24 >> 2] | 0;
  $48 = HEAP32[$16 + 12 >> 2] | 0;
  do if (($48 | 0) == ($16 | 0)) {
   $59 = $16 + 16 | 0;
   $60 = $59 + 4 | 0;
   $61 = HEAP32[$60 >> 2] | 0;
   if (!$61) {
    $63 = HEAP32[$59 >> 2] | 0;
    if (!$63) {
     $$3 = 0;
     break;
    } else {
     $$1385$ph = $63;
     $$1388$ph = $59;
    }
   } else {
    $$1385$ph = $61;
    $$1388$ph = $60;
   }
   $$1385 = $$1385$ph;
   $$1388 = $$1388$ph;
   while (1) {
    $65 = $$1385 + 20 | 0;
    $66 = HEAP32[$65 >> 2] | 0;
    if (!$66) {
     $68 = $$1385 + 16 | 0;
     $69 = HEAP32[$68 >> 2] | 0;
     if (!$69) break; else {
      $$1385$be = $69;
      $$1388$be = $68;
     }
    } else {
     $$1385$be = $66;
     $$1388$be = $65;
    }
    $$1385 = $$1385$be;
    $$1388 = $$1388$be;
   }
   if ($3 >>> 0 > $$1388 >>> 0) _abort(); else {
    HEAP32[$$1388 >> 2] = 0;
    $$3 = $$1385;
    break;
   }
  } else {
   $51 = HEAP32[$16 + 8 >> 2] | 0;
   if ($3 >>> 0 > $51 >>> 0) _abort();
   $53 = $51 + 12 | 0;
   if ((HEAP32[$53 >> 2] | 0) != ($16 | 0)) _abort();
   $56 = $48 + 8 | 0;
   if ((HEAP32[$56 >> 2] | 0) == ($16 | 0)) {
    HEAP32[$53 >> 2] = $48;
    HEAP32[$56 >> 2] = $51;
    $$3 = $48;
    break;
   } else _abort();
  } while (0);
  if (!$46) {
   $$1 = $16;
   $$1380 = $17;
   $114 = $16;
  } else {
   $74 = HEAP32[$16 + 28 >> 2] | 0;
   $75 = 24788 + ($74 << 2) | 0;
   do if ((HEAP32[$75 >> 2] | 0) == ($16 | 0)) {
    HEAP32[$75 >> 2] = $$3;
    if (!$$3) {
     HEAP32[6122] = HEAP32[6122] & ~(1 << $74);
     $$1 = $16;
     $$1380 = $17;
     $114 = $16;
     break L10;
    }
   } else if ((HEAP32[6125] | 0) >>> 0 > $46 >>> 0) _abort(); else {
    $84 = $46 + 16 | 0;
    HEAP32[((HEAP32[$84 >> 2] | 0) == ($16 | 0) ? $84 : $46 + 20 | 0) >> 2] = $$3;
    if (!$$3) {
     $$1 = $16;
     $$1380 = $17;
     $114 = $16;
     break L10;
    } else break;
   } while (0);
   $89 = HEAP32[6125] | 0;
   if ($89 >>> 0 > $$3 >>> 0) _abort();
   HEAP32[$$3 + 24 >> 2] = $46;
   $92 = $16 + 16 | 0;
   $93 = HEAP32[$92 >> 2] | 0;
   do if ($93 | 0) if ($89 >>> 0 > $93 >>> 0) _abort(); else {
    HEAP32[$$3 + 16 >> 2] = $93;
    HEAP32[$93 + 24 >> 2] = $$3;
    break;
   } while (0);
   $99 = HEAP32[$92 + 4 >> 2] | 0;
   if (!$99) {
    $$1 = $16;
    $$1380 = $17;
    $114 = $16;
   } else if ((HEAP32[6125] | 0) >>> 0 > $99 >>> 0) _abort(); else {
    HEAP32[$$3 + 20 >> 2] = $99;
    HEAP32[$99 + 24 >> 2] = $$3;
    $$1 = $16;
    $$1380 = $17;
    $114 = $16;
    break;
   }
  }
 } else {
  $$1 = $2;
  $$1380 = $9;
  $114 = $2;
 } while (0);
 if ($114 >>> 0 >= $10 >>> 0) _abort();
 $115 = $10 + 4 | 0;
 $116 = HEAP32[$115 >> 2] | 0;
 if (!($116 & 1)) _abort();
 if (!($116 & 2)) {
  if ((HEAP32[6127] | 0) == ($10 | 0)) {
   $124 = (HEAP32[6124] | 0) + $$1380 | 0;
   HEAP32[6124] = $124;
   HEAP32[6127] = $$1;
   HEAP32[$$1 + 4 >> 2] = $124 | 1;
   if (($$1 | 0) != (HEAP32[6126] | 0)) return;
   HEAP32[6126] = 0;
   HEAP32[6123] = 0;
   return;
  }
  if ((HEAP32[6126] | 0) == ($10 | 0)) {
   $132 = (HEAP32[6123] | 0) + $$1380 | 0;
   HEAP32[6123] = $132;
   HEAP32[6126] = $114;
   HEAP32[$$1 + 4 >> 2] = $132 | 1;
   HEAP32[$114 + $132 >> 2] = $132;
   return;
  }
  $137 = ($116 & -8) + $$1380 | 0;
  $138 = $116 >>> 3;
  L111 : do if ($116 >>> 0 < 256) {
   $141 = HEAP32[$10 + 8 >> 2] | 0;
   $143 = HEAP32[$10 + 12 >> 2] | 0;
   $145 = 24524 + ($138 << 1 << 2) | 0;
   if (($141 | 0) != ($145 | 0)) {
    if ((HEAP32[6125] | 0) >>> 0 > $141 >>> 0) _abort();
    if ((HEAP32[$141 + 12 >> 2] | 0) != ($10 | 0)) _abort();
   }
   if (($143 | 0) == ($141 | 0)) {
    HEAP32[6121] = HEAP32[6121] & ~(1 << $138);
    break;
   }
   if (($143 | 0) == ($145 | 0)) $$pre$phi444Z2D = $143 + 8 | 0; else {
    if ((HEAP32[6125] | 0) >>> 0 > $143 >>> 0) _abort();
    $160 = $143 + 8 | 0;
    if ((HEAP32[$160 >> 2] | 0) == ($10 | 0)) $$pre$phi444Z2D = $160; else _abort();
   }
   HEAP32[$141 + 12 >> 2] = $143;
   HEAP32[$$pre$phi444Z2D >> 2] = $141;
  } else {
   $165 = HEAP32[$10 + 24 >> 2] | 0;
   $167 = HEAP32[$10 + 12 >> 2] | 0;
   do if (($167 | 0) == ($10 | 0)) {
    $179 = $10 + 16 | 0;
    $180 = $179 + 4 | 0;
    $181 = HEAP32[$180 >> 2] | 0;
    if (!$181) {
     $183 = HEAP32[$179 >> 2] | 0;
     if (!$183) {
      $$3398 = 0;
      break;
     } else {
      $$1396$ph = $183;
      $$1400$ph = $179;
     }
    } else {
     $$1396$ph = $181;
     $$1400$ph = $180;
    }
    $$1396 = $$1396$ph;
    $$1400 = $$1400$ph;
    while (1) {
     $185 = $$1396 + 20 | 0;
     $186 = HEAP32[$185 >> 2] | 0;
     if (!$186) {
      $188 = $$1396 + 16 | 0;
      $189 = HEAP32[$188 >> 2] | 0;
      if (!$189) break; else {
       $$1396$be = $189;
       $$1400$be = $188;
      }
     } else {
      $$1396$be = $186;
      $$1400$be = $185;
     }
     $$1396 = $$1396$be;
     $$1400 = $$1400$be;
    }
    if ((HEAP32[6125] | 0) >>> 0 > $$1400 >>> 0) _abort(); else {
     HEAP32[$$1400 >> 2] = 0;
     $$3398 = $$1396;
     break;
    }
   } else {
    $170 = HEAP32[$10 + 8 >> 2] | 0;
    if ((HEAP32[6125] | 0) >>> 0 > $170 >>> 0) _abort();
    $173 = $170 + 12 | 0;
    if ((HEAP32[$173 >> 2] | 0) != ($10 | 0)) _abort();
    $176 = $167 + 8 | 0;
    if ((HEAP32[$176 >> 2] | 0) == ($10 | 0)) {
     HEAP32[$173 >> 2] = $167;
     HEAP32[$176 >> 2] = $170;
     $$3398 = $167;
     break;
    } else _abort();
   } while (0);
   if ($165 | 0) {
    $195 = HEAP32[$10 + 28 >> 2] | 0;
    $196 = 24788 + ($195 << 2) | 0;
    do if ((HEAP32[$196 >> 2] | 0) == ($10 | 0)) {
     HEAP32[$196 >> 2] = $$3398;
     if (!$$3398) {
      HEAP32[6122] = HEAP32[6122] & ~(1 << $195);
      break L111;
     }
    } else if ((HEAP32[6125] | 0) >>> 0 > $165 >>> 0) _abort(); else {
     $205 = $165 + 16 | 0;
     HEAP32[((HEAP32[$205 >> 2] | 0) == ($10 | 0) ? $205 : $165 + 20 | 0) >> 2] = $$3398;
     if (!$$3398) break L111; else break;
    } while (0);
    $210 = HEAP32[6125] | 0;
    if ($210 >>> 0 > $$3398 >>> 0) _abort();
    HEAP32[$$3398 + 24 >> 2] = $165;
    $213 = $10 + 16 | 0;
    $214 = HEAP32[$213 >> 2] | 0;
    do if ($214 | 0) if ($210 >>> 0 > $214 >>> 0) _abort(); else {
     HEAP32[$$3398 + 16 >> 2] = $214;
     HEAP32[$214 + 24 >> 2] = $$3398;
     break;
    } while (0);
    $220 = HEAP32[$213 + 4 >> 2] | 0;
    if ($220 | 0) if ((HEAP32[6125] | 0) >>> 0 > $220 >>> 0) _abort(); else {
     HEAP32[$$3398 + 20 >> 2] = $220;
     HEAP32[$220 + 24 >> 2] = $$3398;
     break;
    }
   }
  } while (0);
  HEAP32[$$1 + 4 >> 2] = $137 | 1;
  HEAP32[$114 + $137 >> 2] = $137;
  if (($$1 | 0) == (HEAP32[6126] | 0)) {
   HEAP32[6123] = $137;
   return;
  } else $$2 = $137;
 } else {
  HEAP32[$115 >> 2] = $116 & -2;
  HEAP32[$$1 + 4 >> 2] = $$1380 | 1;
  HEAP32[$114 + $$1380 >> 2] = $$1380;
  $$2 = $$1380;
 }
 $235 = $$2 >>> 3;
 if ($$2 >>> 0 < 256) {
  $238 = 24524 + ($235 << 1 << 2) | 0;
  $239 = HEAP32[6121] | 0;
  $240 = 1 << $235;
  if (!($239 & $240)) {
   HEAP32[6121] = $239 | $240;
   $$0401 = $238;
   $$pre$phiZ2D = $238 + 8 | 0;
  } else {
   $244 = $238 + 8 | 0;
   $245 = HEAP32[$244 >> 2] | 0;
   if ((HEAP32[6125] | 0) >>> 0 > $245 >>> 0) _abort(); else {
    $$0401 = $245;
    $$pre$phiZ2D = $244;
   }
  }
  HEAP32[$$pre$phiZ2D >> 2] = $$1;
  HEAP32[$$0401 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $$0401;
  HEAP32[$$1 + 12 >> 2] = $238;
  return;
 }
 $251 = $$2 >>> 8;
 if (!$251) $$0394 = 0; else if ($$2 >>> 0 > 16777215) $$0394 = 31; else {
  $256 = ($251 + 1048320 | 0) >>> 16 & 8;
  $257 = $251 << $256;
  $260 = ($257 + 520192 | 0) >>> 16 & 4;
  $262 = $257 << $260;
  $265 = ($262 + 245760 | 0) >>> 16 & 2;
  $270 = 14 - ($260 | $256 | $265) + ($262 << $265 >>> 15) | 0;
  $$0394 = $$2 >>> ($270 + 7 | 0) & 1 | $270 << 1;
 }
 $276 = 24788 + ($$0394 << 2) | 0;
 HEAP32[$$1 + 28 >> 2] = $$0394;
 HEAP32[$$1 + 20 >> 2] = 0;
 HEAP32[$$1 + 16 >> 2] = 0;
 $280 = HEAP32[6122] | 0;
 $281 = 1 << $$0394;
 L197 : do if (!($280 & $281)) {
  HEAP32[6122] = $280 | $281;
  HEAP32[$276 >> 2] = $$1;
  HEAP32[$$1 + 24 >> 2] = $276;
  HEAP32[$$1 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $$1;
 } else {
  $288 = HEAP32[$276 >> 2] | 0;
  L200 : do if ((HEAP32[$288 + 4 >> 2] & -8 | 0) == ($$2 | 0)) $$0382$lcssa = $288; else {
   $$0381438 = $$2 << (($$0394 | 0) == 31 ? 0 : 25 - ($$0394 >>> 1) | 0);
   $$0382437 = $288;
   while (1) {
    $305 = $$0382437 + 16 + ($$0381438 >>> 31 << 2) | 0;
    $300 = HEAP32[$305 >> 2] | 0;
    if (!$300) break;
    if ((HEAP32[$300 + 4 >> 2] & -8 | 0) == ($$2 | 0)) {
     $$0382$lcssa = $300;
     break L200;
    } else {
     $$0381438 = $$0381438 << 1;
     $$0382437 = $300;
    }
   }
   if ((HEAP32[6125] | 0) >>> 0 > $305 >>> 0) _abort(); else {
    HEAP32[$305 >> 2] = $$1;
    HEAP32[$$1 + 24 >> 2] = $$0382437;
    HEAP32[$$1 + 12 >> 2] = $$1;
    HEAP32[$$1 + 8 >> 2] = $$1;
    break L197;
   }
  } while (0);
  $312 = $$0382$lcssa + 8 | 0;
  $313 = HEAP32[$312 >> 2] | 0;
  $314 = HEAP32[6125] | 0;
  if ($314 >>> 0 <= $313 >>> 0 & $314 >>> 0 <= $$0382$lcssa >>> 0) {
   HEAP32[$313 + 12 >> 2] = $$1;
   HEAP32[$312 >> 2] = $$1;
   HEAP32[$$1 + 8 >> 2] = $313;
   HEAP32[$$1 + 12 >> 2] = $$0382$lcssa;
   HEAP32[$$1 + 24 >> 2] = 0;
   break;
  } else _abort();
 } while (0);
 $323 = (HEAP32[6129] | 0) + -1 | 0;
 HEAP32[6129] = $323;
 if ($323 | 0) return;
 $$0211$in$i = 24940;
 while (1) {
  $$0211$i = HEAP32[$$0211$in$i >> 2] | 0;
  if (!$$0211$i) break; else $$0211$in$i = $$0211$i + 8 | 0;
 }
 HEAP32[6129] = -1;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_116parse_array_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i132 = 0, $$0$i$i$i112 = 0, $$0$i$i$i119 = 0, $$0$i$i$i123 = 0, $$0$i$i$i127 = 0, $$0$i$i$idx$i = 0, $$7 = 0, $103 = 0, $104 = 0, $105 = 0, $108 = 0, $112 = 0, $113 = 0, $115 = 0, $123 = 0, $13 = 0, $131 = 0, $132 = 0, $142 = 0, $143 = 0, $144 = 0, $147 = 0, $15 = 0, $17 = 0, $18 = 0, $21 = 0, $22 = 0, $25 = 0, $27 = 0, $3 = 0, $35 = 0, $4 = 0, $41 = 0, $45 = 0, $46 = 0, $49 = 0, $5 = 0, $50 = 0, $53 = 0, $55 = 0, $6 = 0, $63 = 0, $67 = 0, $7 = 0, $75 = 0, $76 = 0, $8 = 0, $83 = 0, $88 = 0, $89 = 0, $9 = 0, $91 = 0, $92 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $3 = sp + 96 | 0;
 $4 = sp + 72 | 0;
 $5 = sp + 48 | 0;
 $6 = sp + 36 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 12 | 0;
 $9 = sp;
 do if (($0 | 0) == ($1 | 0)) $$7 = $0; else if ((HEAP8[$0 >> 0] | 0) == 65) {
  $13 = $0 + 1 | 0;
  if (($13 | 0) == ($1 | 0)) $$7 = $0; else {
   $15 = HEAP8[$13 >> 0] | 0;
   if ($15 << 24 >> 24 == 95) {
    $17 = $0 + 2 | 0;
    $18 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($17, $1, $2) | 0;
    if (($18 | 0) == ($17 | 0)) {
     $$7 = $0;
     break;
    }
    $21 = $2 + 4 | 0;
    $22 = HEAP32[$21 >> 2] | 0;
    if ((HEAP32[$2 >> 2] | 0) == ($22 | 0)) {
     $$7 = $0;
     break;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_jjRKS6_($3, $22 + -12 | 0, 2);
    $25 = __ZNSt3__211char_traitsIcE6lengthEPKc(22269) | 0;
    $27 = HEAP8[$3 + 11 >> 0] | 0;
    if (($25 | 0) == (($27 << 24 >> 24 < 0 ? HEAP32[$3 + 4 >> 2] | 0 : $27 & 255) | 0)) {
     $35 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEjjPKcj($3, 22269, $25) | 0) == 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     if ($35) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEjj((HEAP32[$21 >> 2] | 0) + -12 | 0);
    } else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc((HEAP32[$21 >> 2] | 0) + -12 | 0, 0, 23710) | 0;
    $$7 = $18;
    break;
   }
   if (($15 + -49 & 255) < 9) {
    $41 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($13, $1) | 0;
    if (($41 | 0) == ($1 | 0)) {
     $$7 = $0;
     break;
    }
    if ((HEAP8[$41 >> 0] | 0) != 95) {
     $$7 = $0;
     break;
    }
    $45 = $41 + 1 | 0;
    $46 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($45, $1, $2) | 0;
    if (($46 | 0) == ($45 | 0)) {
     $$7 = $0;
     break;
    }
    $49 = $2 + 4 | 0;
    $50 = HEAP32[$49 >> 2] | 0;
    if ((HEAP32[$2 >> 2] | 0) == ($50 | 0)) {
     $$7 = $0;
     break;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_jjRKS6_($3, $50 + -12 | 0, 2);
    $53 = __ZNSt3__211char_traitsIcE6lengthEPKc(22269) | 0;
    $55 = HEAP8[$3 + 11 >> 0] | 0;
    if (($53 | 0) == (($55 << 24 >> 24 < 0 ? HEAP32[$3 + 4 >> 2] | 0 : $55 & 255) | 0)) {
     $63 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEjjPKcj($3, 22269, $53) | 0) == 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     if ($63) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEjj((HEAP32[$49 >> 2] | 0) + -12 | 0);
    } else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $67 = (HEAP32[$49 >> 2] | 0) + -12 | 0;
    HEAP32[$5 >> 2] = 0;
    HEAP32[$5 + 4 >> 2] = 0;
    HEAP32[$5 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_($5, $13, $41);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($5, 0, 22269) | 0;
    HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$5 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($4, 22324) | 0;
    HEAP32[$3 >> 2] = HEAP32[$4 >> 2];
    HEAP32[$3 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
    HEAP32[$3 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
    $$0$i$i$i112 = 0;
    while (1) {
     if (($$0$i$i$i112 | 0) == 3) break;
     HEAP32[$4 + ($$0$i$i$i112 << 2) >> 2] = 0;
     $$0$i$i$i112 = $$0$i$i$i112 + 1 | 0;
    }
    $75 = HEAP8[$3 + 11 >> 0] | 0;
    $76 = $75 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($67, 0, $76 ? HEAP32[$3 >> 2] | 0 : $3, $76 ? HEAP32[$3 + 4 >> 2] | 0 : $75 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    $$7 = $46;
    break;
   }
   $83 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($13, $1, $2) | 0;
   if (($83 | 0) == ($13 | 0) | ($83 | 0) == ($1 | 0)) $$7 = $0; else if ((HEAP8[$83 >> 0] | 0) == 95) {
    $88 = $83 + 1 | 0;
    $89 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($88, $1, $2) | 0;
    if (($89 | 0) == ($88 | 0)) $$7 = $0; else {
     $91 = $2 + 4 | 0;
     $92 = HEAP32[$91 >> 2] | 0;
     if ((($92 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$7 = $0; else {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($4, $92 + -24 | 0);
      $99 = HEAP32[$91 >> 2] | 0;
      $$0$i$i$idx$i = 0;
      while (1) {
       if (($$0$i$i$idx$i | 0) == -1) break;
       $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($99 + ($$0$i$i$add$i * 24 | 0) | 0);
       $$0$i$i$idx$i = $$0$i$i$add$i;
      }
      HEAP32[$91 >> 2] = $99 + -24;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($5, $99 + -48 | 0);
      $103 = HEAP32[$91 >> 2] | 0;
      $104 = $103 + -24 | 0;
      $105 = $104 + 11 | 0;
      if ((HEAP8[$105 >> 0] | 0) < 0) {
       $108 = HEAP32[$104 >> 2] | 0;
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($108, $3);
       HEAP32[$103 + -20 >> 2] = 0;
      } else {
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($104, $3);
       HEAP8[$105 >> 0] = 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEj($104);
      HEAP32[$104 >> 2] = HEAP32[$4 >> 2];
      HEAP32[$104 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
      HEAP32[$104 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
      $$0$i$i$i$i = 0;
      while (1) {
       if (($$0$i$i$i$i | 0) == 3) break;
       HEAP32[$4 + ($$0$i$i$i$i << 2) >> 2] = 0;
       $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
      }
      $112 = $4 + 12 | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_jjRKS6_($3, $112, 2);
      $113 = __ZNSt3__211char_traitsIcE6lengthEPKc(22269) | 0;
      $115 = HEAP8[$3 + 11 >> 0] | 0;
      if (($113 | 0) == (($115 << 24 >> 24 < 0 ? HEAP32[$3 + 4 >> 2] | 0 : $115 & 255) | 0)) {
       $123 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEjjPKcj($3, 22269, $113) | 0) == 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
       if ($123) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEjj($112);
      } else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($9, $5);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($9, 0, 22269) | 0;
      HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
      HEAP32[$8 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
      HEAP32[$8 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
      $$0$i$i$i119 = 0;
      while (1) {
       if (($$0$i$i$i119 | 0) == 3) break;
       HEAP32[$9 + ($$0$i$i$i119 << 2) >> 2] = 0;
       $$0$i$i$i119 = $$0$i$i$i119 + 1 | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($8, 22324) | 0;
      HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
      HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
      HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
      $$0$i$i$i123 = 0;
      while (1) {
       if (($$0$i$i$i123 | 0) == 3) break;
       HEAP32[$8 + ($$0$i$i$i123 << 2) >> 2] = 0;
       $$0$i$i$i123 = $$0$i$i$i123 + 1 | 0;
      }
      $131 = HEAP8[$112 + 11 >> 0] | 0;
      $132 = $131 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($7, $132 ? HEAP32[$112 >> 2] | 0 : $112, $132 ? HEAP32[$4 + 16 >> 2] | 0 : $131 & 255) | 0;
      HEAP32[$6 >> 2] = HEAP32[$7 >> 2];
      HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
      HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
      $$0$i$i$i127 = 0;
      while (1) {
       if (($$0$i$i$i127 | 0) == 3) break;
       HEAP32[$7 + ($$0$i$i$i127 << 2) >> 2] = 0;
       $$0$i$i$i127 = $$0$i$i$i127 + 1 | 0;
      }
      $142 = HEAP32[$91 >> 2] | 0;
      $143 = $142 + -12 | 0;
      $144 = $143 + 11 | 0;
      if ((HEAP8[$144 >> 0] | 0) < 0) {
       $147 = HEAP32[$143 >> 2] | 0;
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($147, $3);
       HEAP32[$142 + -8 >> 2] = 0;
      } else {
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($143, $3);
       HEAP8[$144 >> 0] = 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEj($143);
      HEAP32[$143 >> 2] = HEAP32[$6 >> 2];
      HEAP32[$143 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
      HEAP32[$143 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
      $$0$i$i$i$i132 = 0;
      while (1) {
       if (($$0$i$i$i$i132 | 0) == 3) break;
       HEAP32[$6 + ($$0$i$i$i$i132 << 2) >> 2] = 0;
       $$0$i$i$i$i132 = $$0$i$i$i$i132 + 1 | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
      $$7 = $89;
     }
    }
   } else $$7 = $0;
  }
 } else $$7 = $0; while (0);
 STACKTOP = sp;
 return $$7 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_123parse_unnamed_type_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$add$i133 = 0, $$0$i$i$add$i139 = 0, $$0$i$i$add$i143 = 0, $$0$i$i$add$i148 = 0, $$0$i$i$add$i154 = 0, $$0$i$i$add$i158 = 0, $$0$i$i$add$i162 = 0, $$0$i$i$i$i = 0, $$0$i$i$idx$i = 0, $$0$i$i$idx$i132 = 0, $$0$i$i$idx$i138 = 0, $$0$i$i$idx$i142 = 0, $$0$i$i$idx$i147 = 0, $$0$i$i$idx$i153 = 0, $$0$i$i$idx$i157 = 0, $$0$i$i$idx$i161 = 0, $$0105 = 0, $$0105$lcssa = 0, $$0106 = 0, $$0110 = 0, $$0110$lcssa = 0, $$0116 = 0, $$2108 = 0, $$3109 = 0, $$7 = 0, $$byval_copy = 0, $101 = 0, $104 = 0, $113 = 0, $114 = 0, $125 = 0, $128 = 0, $130 = 0, $141 = 0, $147 = 0, $152 = 0, $18 = 0, $19 = 0, $25 = 0, $27 = 0, $3 = 0, $4 = 0, $44 = 0, $49 = 0, $5 = 0, $50 = 0, $56 = 0, $6 = 0, $62 = 0, $64 = 0, $67 = 0, $7 = 0, $74 = 0, $78 = 0, $79 = 0, $80 = 0, $82 = 0, $87 = 0, $89 = 0, $98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $$byval_copy = sp + 56 | 0;
 $3 = sp + 40 | 0;
 $4 = sp + 28 | 0;
 $5 = sp + 12 | 0;
 $6 = sp;
 $7 = sp + 24 | 0;
 L1 : do if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 85) {
  switch (HEAP8[$0 + 1 >> 0] | 0) {
  case 116:
   {
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 23078, __ZNSt3__211char_traitsIcE6lengthEPKc(23078) | 0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($$byval_copy, $3);
    $18 = $2 + 4 | 0;
    $19 = HEAP32[$18 >> 2] | 0;
    if ($19 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($19, $$byval_copy);
     HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $$byval_copy);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($$byval_copy);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $25 = $0 + 2 | 0;
    if (($25 | 0) == ($1 | 0)) {
     $27 = HEAP32[$18 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($27 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$18 >> 2] = $27 + -24;
     $$7 = $0;
     break L1;
    }
    if (((HEAP8[$25 >> 0] | 0) + -48 | 0) >>> 0 < 10) {
     $$0110 = $0 + 3 | 0;
     while (1) {
      if (($$0110 | 0) == ($1 | 0)) {
       $$0110$lcssa = $1;
       break;
      }
      if (((HEAP8[$$0110 >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
       $$0110$lcssa = $$0110;
       break;
      }
      $$0110 = $$0110 + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE23__append_forward_unsafeIPKcEERS7_T_SC_((HEAP32[$18 >> 2] | 0) + -24 | 0, $25, $$0110$lcssa);
     $$0116 = $$0110$lcssa;
    } else $$0116 = $25;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc((HEAP32[$18 >> 2] | 0) + -24 | 0, 39);
    if (($$0116 | 0) != ($1 | 0)) if ((HEAP8[$$0116 >> 0] | 0) == 95) {
     $$7 = $$0116 + 1 | 0;
     break L1;
    }
    $44 = HEAP32[$18 >> 2] | 0;
    $$0$i$i$idx$i132 = 0;
    while (1) {
     if (($$0$i$i$idx$i132 | 0) == -1) break;
     $$0$i$i$add$i133 = $$0$i$i$idx$i132 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($44 + ($$0$i$i$add$i133 * 24 | 0) | 0);
     $$0$i$i$idx$i132 = $$0$i$i$add$i133;
    }
    HEAP32[$18 >> 2] = $44 + -24;
    $$7 = $0;
    break L1;
    break;
   }
  case 108:
   break;
  default:
   {
    $$7 = $0;
    break L1;
   }
  }
  HEAP32[$4 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($4, 23087, __ZNSt3__211char_traitsIcE6lengthEPKc(23087) | 0);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($$byval_copy, $4);
  $49 = $2 + 4 | 0;
  $50 = HEAP32[$49 >> 2] | 0;
  if ($50 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($50, $$byval_copy);
   HEAP32[$49 >> 2] = (HEAP32[$49 >> 2] | 0) + 24;
  } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $$byval_copy);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($$byval_copy);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
  $56 = $0 + 2 | 0;
  do if ((HEAP8[$56 >> 0] | 0) == 118) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc((HEAP32[$49 >> 2] | 0) + -24 | 0, 41);
   $$2108 = $0 + 3 | 0;
  } else {
   $62 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($56, $1, $2) | 0;
   if (($62 | 0) == ($56 | 0)) {
    $64 = HEAP32[$49 >> 2] | 0;
    $$0$i$i$idx$i138 = 0;
    while (1) {
     if (($$0$i$i$idx$i138 | 0) == -1) break;
     $$0$i$i$add$i139 = $$0$i$i$idx$i138 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($64 + ($$0$i$i$add$i139 * 24 | 0) | 0);
     $$0$i$i$idx$i138 = $$0$i$i$add$i139;
    }
    HEAP32[$49 >> 2] = $64 + -24;
    $$7 = $0;
    break L1;
   }
   $67 = HEAP32[$49 >> 2] | 0;
   if ((($67 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
    $$7 = $0;
    break L1;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($5, $67 + -24 | 0);
   $74 = HEAP32[$49 >> 2] | 0;
   $$0$i$i$idx$i142 = 0;
   while (1) {
    if (($$0$i$i$idx$i142 | 0) == -1) break;
    $$0$i$i$add$i143 = $$0$i$i$idx$i142 + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($74 + ($$0$i$i$add$i143 * 24 | 0) | 0);
    $$0$i$i$idx$i142 = $$0$i$i$add$i143;
   }
   HEAP32[$49 >> 2] = $74 + -24;
   $78 = $5 + 11 | 0;
   $79 = HEAP8[$78 >> 0] | 0;
   $80 = $79 << 24 >> 24 < 0;
   $82 = $5 + 4 | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($74 + -48 | 0, $80 ? HEAP32[$5 >> 2] | 0 : $5, $80 ? HEAP32[$82 >> 2] | 0 : $79 & 255) | 0;
   $$0106 = $62;
   while (1) {
    $87 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($$0106, $1, $2) | 0;
    if (($87 | 0) == ($$0106 | 0)) {
     label = 54;
     break;
    }
    $89 = HEAP32[$49 >> 2] | 0;
    if ((($89 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     label = 82;
     break;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($6, $89 + -24 | 0);
    if ((HEAP8[$78 >> 0] | 0) < 0) {
     $98 = HEAP32[$5 >> 2] | 0;
     HEAP8[$$byval_copy >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc($98, $$byval_copy);
     HEAP32[$82 >> 2] = 0;
    } else {
     HEAP8[$$byval_copy >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc($5, $$byval_copy);
     HEAP8[$78 >> 0] = 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEj($5);
    HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
    HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
    HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
    $$0$i$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i$i | 0) == 3) break;
     HEAP32[$6 + ($$0$i$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
    $101 = HEAP32[$49 >> 2] | 0;
    $$0$i$i$idx$i147 = 0;
    while (1) {
     if (($$0$i$i$idx$i147 | 0) == -1) break;
     $$0$i$i$add$i148 = $$0$i$i$idx$i147 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($101 + ($$0$i$i$add$i148 * 24 | 0) | 0);
     $$0$i$i$idx$i147 = $$0$i$i$add$i148;
    }
    HEAP32[$49 >> 2] = $101 + -24;
    $104 = HEAP8[$78 >> 0] | 0;
    if (($104 << 24 >> 24 < 0 ? HEAP32[$82 >> 2] | 0 : $104 & 255) | 0) {
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($101 + -48 | 0, 22499) | 0;
     $113 = HEAP8[$78 >> 0] | 0;
     $114 = $113 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[$49 >> 2] | 0) + -24 | 0, $114 ? HEAP32[$5 >> 2] | 0 : $5, $114 ? HEAP32[$82 >> 2] | 0 : $113 & 255) | 0;
    }
    $$0106 = $87;
   }
   if ((label | 0) == 54) {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$49 >> 2] | 0) + -24 | 0, 22275) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    $$2108 = $$0106;
    break;
   } else if ((label | 0) == 82) {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    $$7 = $0;
    break L1;
   }
  } while (0);
  if (($$2108 | 0) != ($1 | 0)) if ((HEAP8[$$2108 >> 0] | 0) == 69) {
   $128 = $$2108 + 1 | 0;
   if (($128 | 0) == ($1 | 0)) {
    $130 = HEAP32[$49 >> 2] | 0;
    $$0$i$i$idx$i157 = 0;
    while (1) {
     if (($$0$i$i$idx$i157 | 0) == -1) break;
     $$0$i$i$add$i158 = $$0$i$i$idx$i157 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($130 + ($$0$i$i$add$i158 * 24 | 0) | 0);
     $$0$i$i$idx$i157 = $$0$i$i$add$i158;
    }
    HEAP32[$49 >> 2] = $130 + -24;
    $$7 = $0;
    break;
   }
   if (((HEAP8[$128 >> 0] | 0) + -48 | 0) >>> 0 < 10) {
    $$0105 = $$2108 + 2 | 0;
    while (1) {
     if (($$0105 | 0) == ($1 | 0)) {
      $$0105$lcssa = $1;
      break;
     }
     if (((HEAP8[$$0105 >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
      $$0105$lcssa = $$0105;
      break;
     }
     $$0105 = $$0105 + 1 | 0;
    }
    $141 = (HEAP32[$49 >> 2] | 0) + -24 | 0;
    if ((HEAP8[$141 + 11 >> 0] | 0) < 0) $147 = HEAP32[$141 >> 2] | 0; else $147 = $141;
    HEAP32[$7 >> 2] = $147 + 7;
    HEAP32[$$byval_copy >> 2] = HEAP32[$7 >> 2];
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertIPKcEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorISC_EE5valueENS_11__wrap_iterIPcEEE4typeENSD_ISA_EESC_SC_($141, $$byval_copy, $128, $$0105$lcssa) | 0;
    $$3109 = $$0105$lcssa;
   } else $$3109 = $128;
   if (($$3109 | 0) != ($1 | 0)) if ((HEAP8[$$3109 >> 0] | 0) == 95) {
    $$7 = $$3109 + 1 | 0;
    break;
   }
   $152 = HEAP32[$49 >> 2] | 0;
   $$0$i$i$idx$i161 = 0;
   while (1) {
    if (($$0$i$i$idx$i161 | 0) == -1) break;
    $$0$i$i$add$i162 = $$0$i$i$idx$i161 + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($152 + ($$0$i$i$add$i162 * 24 | 0) | 0);
    $$0$i$i$idx$i161 = $$0$i$i$add$i162;
   }
   HEAP32[$49 >> 2] = $152 + -24;
   $$7 = $0;
   break;
  }
  $125 = HEAP32[$49 >> 2] | 0;
  $$0$i$i$idx$i153 = 0;
  while (1) {
   if (($$0$i$i$idx$i153 | 0) == -1) break;
   $$0$i$i$add$i154 = $$0$i$i$idx$i153 + -1 | 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($125 + ($$0$i$i$add$i154 * 24 | 0) | 0);
   $$0$i$i$idx$i153 = $$0$i$i$add$i154;
  }
  HEAP32[$49 >> 2] = $125 + -24;
  $$7 = $0;
 } else $$7 = $0; else $$7 = $0; while (0);
 STACKTOP = sp;
 return $$7 | 0;
}

function _dispose_chunk($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$041722 = 0, $$0418$lcssa = 0, $$041821 = 0, $$0429 = 0, $$0436 = 0, $$1 = 0, $$1416 = 0, $$1424 = 0, $$1424$be = 0, $$1424$ph = 0, $$1427 = 0, $$1427$be = 0, $$1427$ph = 0, $$1431 = 0, $$1431$be = 0, $$1431$ph = 0, $$1435 = 0, $$1435$be = 0, $$1435$ph = 0, $$2 = 0, $$3 = 0, $$3433 = 0, $$pre$phi28Z2D = 0, $$pre$phi30Z2D = 0, $$pre$phiZ2D = 0, $101 = 0, $102 = 0, $108 = 0, $11 = 0, $110 = 0, $111 = 0, $117 = 0, $12 = 0, $125 = 0, $13 = 0, $130 = 0, $131 = 0, $134 = 0, $136 = 0, $138 = 0, $151 = 0, $156 = 0, $158 = 0, $161 = 0, $163 = 0, $166 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $173 = 0, $175 = 0, $176 = 0, $178 = 0, $179 = 0, $184 = 0, $185 = 0, $194 = 0, $199 = 0, $2 = 0, $20 = 0, $202 = 0, $203 = 0, $209 = 0, $22 = 0, $224 = 0, $227 = 0, $228 = 0, $229 = 0, $233 = 0, $234 = 0, $24 = 0, $240 = 0, $245 = 0, $246 = 0, $249 = 0, $251 = 0, $254 = 0, $259 = 0, $265 = 0, $269 = 0, $270 = 0, $277 = 0, $289 = 0, $294 = 0, $301 = 0, $302 = 0, $303 = 0, $37 = 0, $4 = 0, $42 = 0, $44 = 0, $47 = 0, $49 = 0, $52 = 0, $55 = 0, $56 = 0, $57 = 0, $59 = 0, $61 = 0, $62 = 0, $64 = 0, $65 = 0, $7 = 0, $70 = 0, $71 = 0, $80 = 0, $85 = 0, $88 = 0, $89 = 0, $95 = 0;
 $2 = $0 + $1 | 0;
 $4 = HEAP32[$0 + 4 >> 2] | 0;
 L1 : do if (!($4 & 1)) {
  $7 = HEAP32[$0 >> 2] | 0;
  if (!($4 & 3)) return;
  $11 = $0 + (0 - $7) | 0;
  $12 = $7 + $1 | 0;
  $13 = HEAP32[6125] | 0;
  if ($11 >>> 0 < $13 >>> 0) _abort();
  if ((HEAP32[6126] | 0) == ($11 | 0)) {
   $101 = $2 + 4 | 0;
   $102 = HEAP32[$101 >> 2] | 0;
   if (($102 & 3 | 0) != 3) {
    $$1 = $11;
    $$1416 = $12;
    break;
   }
   HEAP32[6123] = $12;
   HEAP32[$101 >> 2] = $102 & -2;
   HEAP32[$11 + 4 >> 2] = $12 | 1;
   HEAP32[$2 >> 2] = $12;
   return;
  }
  $17 = $7 >>> 3;
  if ($7 >>> 0 < 256) {
   $20 = HEAP32[$11 + 8 >> 2] | 0;
   $22 = HEAP32[$11 + 12 >> 2] | 0;
   $24 = 24524 + ($17 << 1 << 2) | 0;
   if (($20 | 0) != ($24 | 0)) {
    if ($13 >>> 0 > $20 >>> 0) _abort();
    if ((HEAP32[$20 + 12 >> 2] | 0) != ($11 | 0)) _abort();
   }
   if (($22 | 0) == ($20 | 0)) {
    HEAP32[6121] = HEAP32[6121] & ~(1 << $17);
    $$1 = $11;
    $$1416 = $12;
    break;
   }
   if (($22 | 0) == ($24 | 0)) $$pre$phi30Z2D = $22 + 8 | 0; else {
    if ($13 >>> 0 > $22 >>> 0) _abort();
    $37 = $22 + 8 | 0;
    if ((HEAP32[$37 >> 2] | 0) == ($11 | 0)) $$pre$phi30Z2D = $37; else _abort();
   }
   HEAP32[$20 + 12 >> 2] = $22;
   HEAP32[$$pre$phi30Z2D >> 2] = $20;
   $$1 = $11;
   $$1416 = $12;
   break;
  }
  $42 = HEAP32[$11 + 24 >> 2] | 0;
  $44 = HEAP32[$11 + 12 >> 2] | 0;
  do if (($44 | 0) == ($11 | 0)) {
   $55 = $11 + 16 | 0;
   $56 = $55 + 4 | 0;
   $57 = HEAP32[$56 >> 2] | 0;
   if (!$57) {
    $59 = HEAP32[$55 >> 2] | 0;
    if (!$59) {
     $$3 = 0;
     break;
    } else {
     $$1424$ph = $59;
     $$1427$ph = $55;
    }
   } else {
    $$1424$ph = $57;
    $$1427$ph = $56;
   }
   $$1424 = $$1424$ph;
   $$1427 = $$1427$ph;
   while (1) {
    $61 = $$1424 + 20 | 0;
    $62 = HEAP32[$61 >> 2] | 0;
    if (!$62) {
     $64 = $$1424 + 16 | 0;
     $65 = HEAP32[$64 >> 2] | 0;
     if (!$65) break; else {
      $$1424$be = $65;
      $$1427$be = $64;
     }
    } else {
     $$1424$be = $62;
     $$1427$be = $61;
    }
    $$1424 = $$1424$be;
    $$1427 = $$1427$be;
   }
   if ($13 >>> 0 > $$1427 >>> 0) _abort(); else {
    HEAP32[$$1427 >> 2] = 0;
    $$3 = $$1424;
    break;
   }
  } else {
   $47 = HEAP32[$11 + 8 >> 2] | 0;
   if ($13 >>> 0 > $47 >>> 0) _abort();
   $49 = $47 + 12 | 0;
   if ((HEAP32[$49 >> 2] | 0) != ($11 | 0)) _abort();
   $52 = $44 + 8 | 0;
   if ((HEAP32[$52 >> 2] | 0) == ($11 | 0)) {
    HEAP32[$49 >> 2] = $44;
    HEAP32[$52 >> 2] = $47;
    $$3 = $44;
    break;
   } else _abort();
  } while (0);
  if (!$42) {
   $$1 = $11;
   $$1416 = $12;
  } else {
   $70 = HEAP32[$11 + 28 >> 2] | 0;
   $71 = 24788 + ($70 << 2) | 0;
   do if ((HEAP32[$71 >> 2] | 0) == ($11 | 0)) {
    HEAP32[$71 >> 2] = $$3;
    if (!$$3) {
     HEAP32[6122] = HEAP32[6122] & ~(1 << $70);
     $$1 = $11;
     $$1416 = $12;
     break L1;
    }
   } else if ((HEAP32[6125] | 0) >>> 0 > $42 >>> 0) _abort(); else {
    $80 = $42 + 16 | 0;
    HEAP32[((HEAP32[$80 >> 2] | 0) == ($11 | 0) ? $80 : $42 + 20 | 0) >> 2] = $$3;
    if (!$$3) {
     $$1 = $11;
     $$1416 = $12;
     break L1;
    } else break;
   } while (0);
   $85 = HEAP32[6125] | 0;
   if ($85 >>> 0 > $$3 >>> 0) _abort();
   HEAP32[$$3 + 24 >> 2] = $42;
   $88 = $11 + 16 | 0;
   $89 = HEAP32[$88 >> 2] | 0;
   do if ($89 | 0) if ($85 >>> 0 > $89 >>> 0) _abort(); else {
    HEAP32[$$3 + 16 >> 2] = $89;
    HEAP32[$89 + 24 >> 2] = $$3;
    break;
   } while (0);
   $95 = HEAP32[$88 + 4 >> 2] | 0;
   if (!$95) {
    $$1 = $11;
    $$1416 = $12;
   } else if ((HEAP32[6125] | 0) >>> 0 > $95 >>> 0) _abort(); else {
    HEAP32[$$3 + 20 >> 2] = $95;
    HEAP32[$95 + 24 >> 2] = $$3;
    $$1 = $11;
    $$1416 = $12;
    break;
   }
  }
 } else {
  $$1 = $0;
  $$1416 = $1;
 } while (0);
 $108 = HEAP32[6125] | 0;
 if ($2 >>> 0 < $108 >>> 0) _abort();
 $110 = $2 + 4 | 0;
 $111 = HEAP32[$110 >> 2] | 0;
 if (!($111 & 2)) {
  if ((HEAP32[6127] | 0) == ($2 | 0)) {
   $117 = (HEAP32[6124] | 0) + $$1416 | 0;
   HEAP32[6124] = $117;
   HEAP32[6127] = $$1;
   HEAP32[$$1 + 4 >> 2] = $117 | 1;
   if (($$1 | 0) != (HEAP32[6126] | 0)) return;
   HEAP32[6126] = 0;
   HEAP32[6123] = 0;
   return;
  }
  if ((HEAP32[6126] | 0) == ($2 | 0)) {
   $125 = (HEAP32[6123] | 0) + $$1416 | 0;
   HEAP32[6123] = $125;
   HEAP32[6126] = $$1;
   HEAP32[$$1 + 4 >> 2] = $125 | 1;
   HEAP32[$$1 + $125 >> 2] = $125;
   return;
  }
  $130 = ($111 & -8) + $$1416 | 0;
  $131 = $111 >>> 3;
  L99 : do if ($111 >>> 0 < 256) {
   $134 = HEAP32[$2 + 8 >> 2] | 0;
   $136 = HEAP32[$2 + 12 >> 2] | 0;
   $138 = 24524 + ($131 << 1 << 2) | 0;
   if (($134 | 0) != ($138 | 0)) {
    if ($108 >>> 0 > $134 >>> 0) _abort();
    if ((HEAP32[$134 + 12 >> 2] | 0) != ($2 | 0)) _abort();
   }
   if (($136 | 0) == ($134 | 0)) {
    HEAP32[6121] = HEAP32[6121] & ~(1 << $131);
    break;
   }
   if (($136 | 0) == ($138 | 0)) $$pre$phi28Z2D = $136 + 8 | 0; else {
    if ($108 >>> 0 > $136 >>> 0) _abort();
    $151 = $136 + 8 | 0;
    if ((HEAP32[$151 >> 2] | 0) == ($2 | 0)) $$pre$phi28Z2D = $151; else _abort();
   }
   HEAP32[$134 + 12 >> 2] = $136;
   HEAP32[$$pre$phi28Z2D >> 2] = $134;
  } else {
   $156 = HEAP32[$2 + 24 >> 2] | 0;
   $158 = HEAP32[$2 + 12 >> 2] | 0;
   do if (($158 | 0) == ($2 | 0)) {
    $169 = $2 + 16 | 0;
    $170 = $169 + 4 | 0;
    $171 = HEAP32[$170 >> 2] | 0;
    if (!$171) {
     $173 = HEAP32[$169 >> 2] | 0;
     if (!$173) {
      $$3433 = 0;
      break;
     } else {
      $$1431$ph = $173;
      $$1435$ph = $169;
     }
    } else {
     $$1431$ph = $171;
     $$1435$ph = $170;
    }
    $$1431 = $$1431$ph;
    $$1435 = $$1435$ph;
    while (1) {
     $175 = $$1431 + 20 | 0;
     $176 = HEAP32[$175 >> 2] | 0;
     if (!$176) {
      $178 = $$1431 + 16 | 0;
      $179 = HEAP32[$178 >> 2] | 0;
      if (!$179) break; else {
       $$1431$be = $179;
       $$1435$be = $178;
      }
     } else {
      $$1431$be = $176;
      $$1435$be = $175;
     }
     $$1431 = $$1431$be;
     $$1435 = $$1435$be;
    }
    if ($108 >>> 0 > $$1435 >>> 0) _abort(); else {
     HEAP32[$$1435 >> 2] = 0;
     $$3433 = $$1431;
     break;
    }
   } else {
    $161 = HEAP32[$2 + 8 >> 2] | 0;
    if ($108 >>> 0 > $161 >>> 0) _abort();
    $163 = $161 + 12 | 0;
    if ((HEAP32[$163 >> 2] | 0) != ($2 | 0)) _abort();
    $166 = $158 + 8 | 0;
    if ((HEAP32[$166 >> 2] | 0) == ($2 | 0)) {
     HEAP32[$163 >> 2] = $158;
     HEAP32[$166 >> 2] = $161;
     $$3433 = $158;
     break;
    } else _abort();
   } while (0);
   if ($156 | 0) {
    $184 = HEAP32[$2 + 28 >> 2] | 0;
    $185 = 24788 + ($184 << 2) | 0;
    do if ((HEAP32[$185 >> 2] | 0) == ($2 | 0)) {
     HEAP32[$185 >> 2] = $$3433;
     if (!$$3433) {
      HEAP32[6122] = HEAP32[6122] & ~(1 << $184);
      break L99;
     }
    } else if ((HEAP32[6125] | 0) >>> 0 > $156 >>> 0) _abort(); else {
     $194 = $156 + 16 | 0;
     HEAP32[((HEAP32[$194 >> 2] | 0) == ($2 | 0) ? $194 : $156 + 20 | 0) >> 2] = $$3433;
     if (!$$3433) break L99; else break;
    } while (0);
    $199 = HEAP32[6125] | 0;
    if ($199 >>> 0 > $$3433 >>> 0) _abort();
    HEAP32[$$3433 + 24 >> 2] = $156;
    $202 = $2 + 16 | 0;
    $203 = HEAP32[$202 >> 2] | 0;
    do if ($203 | 0) if ($199 >>> 0 > $203 >>> 0) _abort(); else {
     HEAP32[$$3433 + 16 >> 2] = $203;
     HEAP32[$203 + 24 >> 2] = $$3433;
     break;
    } while (0);
    $209 = HEAP32[$202 + 4 >> 2] | 0;
    if ($209 | 0) if ((HEAP32[6125] | 0) >>> 0 > $209 >>> 0) _abort(); else {
     HEAP32[$$3433 + 20 >> 2] = $209;
     HEAP32[$209 + 24 >> 2] = $$3433;
     break;
    }
   }
  } while (0);
  HEAP32[$$1 + 4 >> 2] = $130 | 1;
  HEAP32[$$1 + $130 >> 2] = $130;
  if (($$1 | 0) == (HEAP32[6126] | 0)) {
   HEAP32[6123] = $130;
   return;
  } else $$2 = $130;
 } else {
  HEAP32[$110 >> 2] = $111 & -2;
  HEAP32[$$1 + 4 >> 2] = $$1416 | 1;
  HEAP32[$$1 + $$1416 >> 2] = $$1416;
  $$2 = $$1416;
 }
 $224 = $$2 >>> 3;
 if ($$2 >>> 0 < 256) {
  $227 = 24524 + ($224 << 1 << 2) | 0;
  $228 = HEAP32[6121] | 0;
  $229 = 1 << $224;
  if (!($228 & $229)) {
   HEAP32[6121] = $228 | $229;
   $$0436 = $227;
   $$pre$phiZ2D = $227 + 8 | 0;
  } else {
   $233 = $227 + 8 | 0;
   $234 = HEAP32[$233 >> 2] | 0;
   if ((HEAP32[6125] | 0) >>> 0 > $234 >>> 0) _abort(); else {
    $$0436 = $234;
    $$pre$phiZ2D = $233;
   }
  }
  HEAP32[$$pre$phiZ2D >> 2] = $$1;
  HEAP32[$$0436 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $$0436;
  HEAP32[$$1 + 12 >> 2] = $227;
  return;
 }
 $240 = $$2 >>> 8;
 if (!$240) $$0429 = 0; else if ($$2 >>> 0 > 16777215) $$0429 = 31; else {
  $245 = ($240 + 1048320 | 0) >>> 16 & 8;
  $246 = $240 << $245;
  $249 = ($246 + 520192 | 0) >>> 16 & 4;
  $251 = $246 << $249;
  $254 = ($251 + 245760 | 0) >>> 16 & 2;
  $259 = 14 - ($249 | $245 | $254) + ($251 << $254 >>> 15) | 0;
  $$0429 = $$2 >>> ($259 + 7 | 0) & 1 | $259 << 1;
 }
 $265 = 24788 + ($$0429 << 2) | 0;
 HEAP32[$$1 + 28 >> 2] = $$0429;
 HEAP32[$$1 + 20 >> 2] = 0;
 HEAP32[$$1 + 16 >> 2] = 0;
 $269 = HEAP32[6122] | 0;
 $270 = 1 << $$0429;
 if (!($269 & $270)) {
  HEAP32[6122] = $269 | $270;
  HEAP32[$265 >> 2] = $$1;
  HEAP32[$$1 + 24 >> 2] = $265;
  HEAP32[$$1 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $$1;
  return;
 }
 $277 = HEAP32[$265 >> 2] | 0;
 L189 : do if ((HEAP32[$277 + 4 >> 2] & -8 | 0) == ($$2 | 0)) $$0418$lcssa = $277; else {
  $$041722 = $$2 << (($$0429 | 0) == 31 ? 0 : 25 - ($$0429 >>> 1) | 0);
  $$041821 = $277;
  while (1) {
   $294 = $$041821 + 16 + ($$041722 >>> 31 << 2) | 0;
   $289 = HEAP32[$294 >> 2] | 0;
   if (!$289) break;
   if ((HEAP32[$289 + 4 >> 2] & -8 | 0) == ($$2 | 0)) {
    $$0418$lcssa = $289;
    break L189;
   } else {
    $$041722 = $$041722 << 1;
    $$041821 = $289;
   }
  }
  if ((HEAP32[6125] | 0) >>> 0 > $294 >>> 0) _abort();
  HEAP32[$294 >> 2] = $$1;
  HEAP32[$$1 + 24 >> 2] = $$041821;
  HEAP32[$$1 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $$1;
  return;
 } while (0);
 $301 = $$0418$lcssa + 8 | 0;
 $302 = HEAP32[$301 >> 2] | 0;
 $303 = HEAP32[6125] | 0;
 if (!($303 >>> 0 <= $302 >>> 0 & $303 >>> 0 <= $$0418$lcssa >>> 0)) _abort();
 HEAP32[$302 + 12 >> 2] = $$1;
 HEAP32[$301 >> 2] = $$1;
 HEAP32[$$1 + 8 >> 2] = $302;
 HEAP32[$$1 + 12 >> 2] = $$0418$lcssa;
 HEAP32[$$1 + 24 >> 2] = 0;
 return;
}

function __ZN2ut8saveDataIN9rapidjson12PrettyWriterINS1_19GenericStringBufferINS1_4UTF8IcEENS1_12CrtAllocatorEEES5_S5_S6_Lj0EEEEEvRT_RKNS_4meta10MemberDescEPKv($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i49 = 0, $$0$i$i$i53 = 0, $$0$i$i5$i = 0, $$0$i$i5$i61 = 0, $$06$i$i$i = 0, $$06$i$i$i48 = 0, $$06$i$i$i52 = 0, $$06$i$i$i56 = 0, $$sroa$0$066 = 0, $10 = 0, $100 = 0, $103 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $111 = 0, $113 = 0, $114 = 0, $127 = 0, $129 = 0, $130 = 0, $131 = 0, $134 = 0, $136 = 0, $137 = 0, $150 = 0, $152 = 0, $153 = 0, $154 = 0, $157 = 0, $159 = 0, $16 = 0, $160 = 0, $17 = 0, $172 = 0, $174 = 0, $175 = 0, $176 = 0, $179 = 0, $181 = 0, $182 = 0, $19 = 0, $194 = 0, $196 = 0, $199 = 0, $201 = 0, $202 = 0, $203 = 0, $206 = 0, $208 = 0, $209 = 0, $221 = 0.0, $222 = 0, $223 = 0, $227 = 0, $23 = 0, $239 = 0.0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $252 = 0, $262 = 0, $264 = 0, $266 = 0, $267 = 0, $27 = 0, $273 = 0, $29 = 0, $30 = 0, $4 = 0, $42 = 0, $43 = 0, $45 = 0, $49 = 0, $50 = 0, $53 = 0, $55 = 0, $56 = 0, $68 = 0, $70 = 0, $74 = 0, $75 = 0, $78 = 0, $80 = 0, $81 = 0, $93 = 0, $95 = 0, $98 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $4 = HEAP32[$1 + 8 >> 2] | 0;
 if (($4 | 0) == 3700) {
  $10 = (HEAP8[$2 + (HEAP32[$1 + 4 >> 2] | 0) >> 0] | 0) != 0;
  __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, $10 ? 2 : 1);
  __ZN9rapidjson6WriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE9WriteBoolEb($0, $10) | 0;
  STACKTOP = sp;
  return;
 }
 if (($4 | 0) == 3600) {
  $16 = HEAP8[$2 + (HEAP32[$1 + 4 >> 2] | 0) >> 0] | 0;
  $17 = $16 << 24 >> 24;
  __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, 6);
  $19 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, 11) | 0;
  if ($16 << 24 >> 24 < 0) {
   HEAP8[$19 >> 0] = 45;
   $$0$i$i$i = 0 - $17 | 0;
   $$06$i$i$i = $19 + 1 | 0;
  } else {
   $$0$i$i$i = $17;
   $$06$i$i$i = $19;
  }
  $23 = __ZN9rapidjson8internal6u32toaEjPc($$0$i$i$i, $$06$i$i$i) | 0;
  $24 = HEAP32[$0 >> 2] | 0;
  $27 = $19 - $23 | 0;
  $29 = $24 + 12 | 0;
  $30 = HEAP32[$29 >> 2] | 0;
  if (($30 - (HEAP32[$24 + 8 >> 2] | 0) | 0) >>> 0 < ($27 + 11 | 0) >>> 0) ___assert_fail(5737, 5657, 137, 5768);
  HEAP32[$29 >> 2] = $30 + (-11 - $27);
  STACKTOP = sp;
  return;
 }
 if (($4 | 0) == 3640) {
  $42 = HEAP16[$2 + (HEAP32[$1 + 4 >> 2] | 0) >> 1] | 0;
  $43 = $42 << 16 >> 16;
  __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, 6);
  $45 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, 11) | 0;
  if ($42 << 16 >> 16 < 0) {
   HEAP8[$45 >> 0] = 45;
   $$0$i$i$i49 = 0 - $43 | 0;
   $$06$i$i$i48 = $45 + 1 | 0;
  } else {
   $$0$i$i$i49 = $43;
   $$06$i$i$i48 = $45;
  }
  $49 = __ZN9rapidjson8internal6u32toaEjPc($$0$i$i$i49, $$06$i$i$i48) | 0;
  $50 = HEAP32[$0 >> 2] | 0;
  $53 = $45 - $49 | 0;
  $55 = $50 + 12 | 0;
  $56 = HEAP32[$55 >> 2] | 0;
  if (($56 - (HEAP32[$50 + 8 >> 2] | 0) | 0) >>> 0 < ($53 + 11 | 0) >>> 0) ___assert_fail(5737, 5657, 137, 5768);
  HEAP32[$55 >> 2] = $56 + (-11 - $53);
  STACKTOP = sp;
  return;
 }
 if (($4 | 0) == 3500) {
  $68 = HEAP32[$2 + (HEAP32[$1 + 4 >> 2] | 0) >> 2] | 0;
  __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, 6);
  $70 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, 11) | 0;
  if (($68 | 0) < 0) {
   HEAP8[$70 >> 0] = 45;
   $$0$i$i$i53 = 0 - $68 | 0;
   $$06$i$i$i52 = $70 + 1 | 0;
  } else {
   $$0$i$i$i53 = $68;
   $$06$i$i$i52 = $70;
  }
  $74 = __ZN9rapidjson8internal6u32toaEjPc($$0$i$i$i53, $$06$i$i$i52) | 0;
  $75 = HEAP32[$0 >> 2] | 0;
  $78 = $70 - $74 | 0;
  $80 = $75 + 12 | 0;
  $81 = HEAP32[$80 >> 2] | 0;
  if (($81 - (HEAP32[$75 + 8 >> 2] | 0) | 0) >>> 0 < ($78 + 11 | 0) >>> 0) ___assert_fail(5737, 5657, 137, 5768);
  HEAP32[$80 >> 2] = $81 + (-11 - $78);
  STACKTOP = sp;
  return;
 }
 if (($4 | 0) == 3620) {
  $93 = $2 + (HEAP32[$1 + 4 >> 2] | 0) | 0;
  $95 = HEAP32[$93 >> 2] | 0;
  $98 = HEAP32[$93 + 4 >> 2] | 0;
  __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, 6);
  $100 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, 21) | 0;
  if (($98 | 0) < 0) {
   $103 = _i64Subtract(0, 0, $95 | 0, $98 | 0) | 0;
   HEAP8[$100 >> 0] = 45;
   $$06$i$i$i56 = $100 + 1 | 0;
   $105 = $103;
   $106 = tempRet0;
  } else {
   $$06$i$i$i56 = $100;
   $105 = $95;
   $106 = $98;
  }
  $107 = __ZN9rapidjson8internal6u64toaEyPc($105, $106, $$06$i$i$i56) | 0;
  $108 = HEAP32[$0 >> 2] | 0;
  $111 = $100 - $107 | 0;
  $113 = $108 + 12 | 0;
  $114 = HEAP32[$113 >> 2] | 0;
  if (($114 - (HEAP32[$108 + 8 >> 2] | 0) | 0) >>> 0 < ($111 + 21 | 0) >>> 0) ___assert_fail(5737, 5657, 137, 5768);
  HEAP32[$113 >> 2] = $114 + (-21 - $111);
  STACKTOP = sp;
  return;
 }
 if (($4 | 0) == 3520) {
  $127 = HEAPU8[$2 + (HEAP32[$1 + 4 >> 2] | 0) >> 0] | 0;
  __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, 6);
  $129 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, 10) | 0;
  $130 = __ZN9rapidjson8internal6u32toaEjPc($127, $129) | 0;
  $131 = HEAP32[$0 >> 2] | 0;
  $134 = $129 - $130 | 0;
  $136 = $131 + 12 | 0;
  $137 = HEAP32[$136 >> 2] | 0;
  if (($137 - (HEAP32[$131 + 8 >> 2] | 0) | 0) >>> 0 < ($134 + 10 | 0) >>> 0) ___assert_fail(5737, 5657, 137, 5768);
  HEAP32[$136 >> 2] = $137 + (-10 - $134);
  STACKTOP = sp;
  return;
 }
 if (($4 | 0) == 3580) {
  $150 = HEAPU16[$2 + (HEAP32[$1 + 4 >> 2] | 0) >> 1] | 0;
  __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, 6);
  $152 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, 10) | 0;
  $153 = __ZN9rapidjson8internal6u32toaEjPc($150, $152) | 0;
  $154 = HEAP32[$0 >> 2] | 0;
  $157 = $152 - $153 | 0;
  $159 = $154 + 12 | 0;
  $160 = HEAP32[$159 >> 2] | 0;
  if (($160 - (HEAP32[$154 + 8 >> 2] | 0) | 0) >>> 0 < ($157 + 10 | 0) >>> 0) ___assert_fail(5737, 5657, 137, 5768);
  HEAP32[$159 >> 2] = $160 + (-10 - $157);
  STACKTOP = sp;
  return;
 }
 if (($4 | 0) == 3560) {
  $172 = HEAP32[$2 + (HEAP32[$1 + 4 >> 2] | 0) >> 2] | 0;
  __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, 6);
  $174 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, 10) | 0;
  $175 = __ZN9rapidjson8internal6u32toaEjPc($172, $174) | 0;
  $176 = HEAP32[$0 >> 2] | 0;
  $179 = $174 - $175 | 0;
  $181 = $176 + 12 | 0;
  $182 = HEAP32[$181 >> 2] | 0;
  if (($182 - (HEAP32[$176 + 8 >> 2] | 0) | 0) >>> 0 < ($179 + 10 | 0) >>> 0) ___assert_fail(5737, 5657, 137, 5768);
  HEAP32[$181 >> 2] = $182 + (-10 - $179);
  STACKTOP = sp;
  return;
 }
 if (($4 | 0) == 3540) {
  $194 = $2 + (HEAP32[$1 + 4 >> 2] | 0) | 0;
  $196 = HEAP32[$194 >> 2] | 0;
  $199 = HEAP32[$194 + 4 >> 2] | 0;
  __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, 6);
  $201 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, 20) | 0;
  $202 = __ZN9rapidjson8internal6u64toaEyPc($196, $199, $201) | 0;
  $203 = HEAP32[$0 >> 2] | 0;
  $206 = $201 - $202 | 0;
  $208 = $203 + 12 | 0;
  $209 = HEAP32[$208 >> 2] | 0;
  if (($209 - (HEAP32[$203 + 8 >> 2] | 0) | 0) >>> 0 < ($206 + 20 | 0) >>> 0) ___assert_fail(5737, 5657, 137, 5768);
  HEAP32[$208 >> 2] = $209 + (-20 - $206);
  STACKTOP = sp;
  return;
 }
 if (($4 | 0) == 3660) {
  $221 = +HEAPF32[$2 + (HEAP32[$1 + 4 >> 2] | 0) >> 2];
  $222 = (HEAPF32[tempDoublePtr >> 2] = $221, HEAP32[tempDoublePtr >> 2] | 0);
  $223 = $222 & 2147483647;
  if ($223 >>> 0 > 2139095040) {
   __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, 5);
   __ZN9rapidjson6WriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE11WriteStringEPKcj($0, 13221, 3) | 0;
   STACKTOP = sp;
   return;
  }
  if (($223 | 0) != 2139095040) {
   __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE6DoubleEd($0, $221) | 0;
   STACKTOP = sp;
   return;
  }
  $227 = ($222 | 0) < 0 ? 13225 : 13235;
  $$0$i$i5$i = $227;
  while (1) if (!(HEAP8[$$0$i$i5$i >> 0] | 0)) break; else $$0$i$i5$i = $$0$i$i5$i + 1 | 0;
  __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, 5);
  __ZN9rapidjson6WriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE11WriteStringEPKcj($0, $227, $$0$i$i5$i - $227 | 0) | 0;
  STACKTOP = sp;
  return;
 }
 if (($4 | 0) != 3680) {
  if (($4 | 0) != 3480) {
   _snprintf(25060, 1024, 13244, $vararg_buffer) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 23477, 12969, 93);
  }
  $262 = $2 + (HEAP32[$1 + 4 >> 2] | 0) | 0;
  $264 = HEAP32[$262 + 4 >> 2] | 0;
  $266 = $264 + 1 | 0;
  if (!$264) {
   $$sroa$0$066 = 0;
   $273 = 27124;
  } else {
   $267 = _malloc($266) | 0;
   _memcpy($267 | 0, HEAP32[$262 >> 2] | 0, $266 | 0) | 0;
   $$sroa$0$066 = $267;
   $273 = $267;
  }
  $$0$i$i = $273;
  while (1) if (!(HEAP8[$$0$i$i >> 0] | 0)) break; else $$0$i$i = $$0$i$i + 1 | 0;
  __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, 5);
  __ZN9rapidjson6WriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE11WriteStringEPKcj($0, $273, $$0$i$i - $273 | 0) | 0;
  _free($$sroa$0$066);
  STACKTOP = sp;
  return;
 }
 $239 = +HEAPF64[$2 + (HEAP32[$1 + 4 >> 2] | 0) >> 3];
 HEAPF64[tempDoublePtr >> 3] = $239;
 $240 = HEAP32[tempDoublePtr >> 2] | 0;
 $241 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 $242 = $241 & 2147483647;
 if ($242 >>> 0 > 2146435072 | ($242 | 0) == 2146435072 & $240 >>> 0 > 0) {
  __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, 5);
  __ZN9rapidjson6WriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE11WriteStringEPKcj($0, 13221, 3) | 0;
  STACKTOP = sp;
  return;
 }
 if (!(($240 | 0) == 0 & ($242 | 0) == 2146435072)) {
  __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE6DoubleEd($0, $239) | 0;
  STACKTOP = sp;
  return;
 }
 $252 = ($241 | 0) < 0 ? 13225 : 13235;
 $$0$i$i5$i61 = $252;
 while (1) if (!(HEAP8[$$0$i$i5$i61 >> 0] | 0)) break; else $$0$i$i5$i61 = $$0$i$i5$i61 + 1 | 0;
 __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, 5);
 __ZN9rapidjson6WriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE11WriteStringEPKcj($0, $252, $$0$i$i5$i61 - $252 | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZN2ut4arch16ArchetypeManager20getOrCreateArchetypeERKNSt3__26vectorIjNS2_9allocatorIjEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i141 = 0, $$0127147 = 0, $$0128149 = 0, $$0129148 = 0, $$0130152 = 0, $$0131$lcssa = 0, $$0131151 = 0, $$0134156 = 0, $$0135$lcssa = 0, $$0135155 = 0, $$0136$lcssa = 0, $$0136154 = 0, $$08$i = 0, $$pre$i = 0, $103 = 0, $112 = 0, $115 = 0, $12 = 0, $120 = 0, $122 = 0, $126 = 0, $13 = 0, $133 = 0, $14 = 0, $140 = 0, $141 = 0, $145 = 0, $146 = 0, $149 = 0, $150 = 0, $154 = 0, $156 = 0, $166 = 0, $172 = 0, $173 = 0, $177 = 0, $18 = 0, $182 = 0, $185 = 0, $187 = 0, $188 = 0, $19 = 0, $192 = 0, $193 = 0, $198 = 0, $199 = 0, $201 = 0, $207 = 0, $210 = 0, $220 = 0, $225 = 0, $23 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $41 = 0, $42 = 0, $46 = 0, $47 = 0, $49 = 0, $50 = 0, $51 = 0, $53 = 0, $59 = 0, $6 = 0, $60 = 0, $63 = 0, $69 = 0, $70 = 0, $72 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $85 = 0, $9 = 0, $90 = 0, $97 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer13 = 0, $vararg_buffer15 = 0, $vararg_buffer17 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $vararg_buffer17 = sp + 72 | 0;
 $vararg_buffer15 = sp + 64 | 0;
 $vararg_buffer13 = sp + 56 | 0;
 $vararg_buffer11 = sp + 48 | 0;
 $vararg_buffer9 = sp + 40 | 0;
 $vararg_buffer7 = sp + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $3 = __ZNSt3__212__hash_tableINS_17__hash_value_typeINS_6vectorIjNS_9allocatorIjEEEEPN2ut4arch9ArchetypeEEENS_22__unordered_map_hasherIS5_SA_NS_4hashIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_NS_8equal_toIS5_EELb1EEENS3_ISA_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_($0 + 16 | 0, $1) | 0;
 if ($3 | 0) {
  $6 = HEAP32[$3 + 20 >> 2] | 0;
  if ($6 | 0) {
   $$0 = $6;
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 __ZN2ut4arch16ArchetypeManager25assertArchetypeComponentsERKNSt3__26vectorIjNS2_9allocatorIjEEEE(0, $1);
 $8 = $0 + 36 | 0;
 $9 = $0 + 44 | 0;
 $12 = (HEAP32[$9 >> 2] | 0) + 3 & -4;
 $13 = $0 + 40 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 if (($14 | 0) == 0 | (65536 - $12 | 0) >>> 0 < 116) {
  $18 = _aligned_alloc(64, 65536) | 0;
  HEAP32[$18 >> 2] = 0;
  $19 = HEAP32[$13 >> 2] | 0;
  HEAP32[(($19 | 0) == 0 ? $8 : $19) >> 2] = $18;
  HEAP32[$13 >> 2] = $18;
  HEAP32[$9 >> 2] = 120;
  $26 = $18 + 4 | 0;
 } else {
  $23 = $12 + 116 | 0;
  HEAP32[$9 >> 2] = $23;
  if ($23 >>> 0 < 65537) $26 = $14 + $12 | 0; else {
   _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 10246, 10279, 53);
  }
 }
 $27 = $26 + 8 | 0;
 $29 = $26 + 100 | 0;
 $30 = $26 + 16 | 0;
 HEAP32[$30 >> 2] = 0;
 HEAP32[$30 + 4 >> 2] = 0;
 HEAP32[$30 + 8 >> 2] = 0;
 HEAP32[$30 + 12 >> 2] = 0;
 HEAP32[$30 + 16 >> 2] = 0;
 HEAP32[$29 >> 2] = 0;
 HEAP32[$29 + 4 >> 2] = 0;
 HEAP32[$29 + 8 >> 2] = 0;
 HEAP16[$29 + 12 >> 1] = 0;
 HEAP32[$26 >> 2] = $26;
 HEAP32[$26 + 4 >> 2] = $26;
 HEAP32[$27 >> 2] = $27;
 HEAP32[$26 + 12 >> 2] = $27;
 dest = $26 + 36 | 0;
 stop = dest + 64 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $35 = (HEAP32[$1 + 4 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) | 0;
 $36 = $35 >> 2;
 $37 = $26 + 28 | 0;
 HEAP32[$37 >> 2] = $36;
 $38 = $35 << 2;
 $41 = (HEAP32[$9 >> 2] | 0) + 3 & -4;
 $42 = HEAP32[$13 >> 2] | 0;
 if (($42 | 0) == 0 | (65536 - $41 | 0) >>> 0 < $38 >>> 0) {
  $46 = _aligned_alloc(64, 65536) | 0;
  HEAP32[$46 >> 2] = 0;
  $47 = HEAP32[$13 >> 2] | 0;
  HEAP32[(($47 | 0) == 0 ? $8 : $47) >> 2] = $46;
  HEAP32[$13 >> 2] = $46;
  HEAP32[$9 >> 2] = 4;
  $$0$i$i = 4;
  $50 = $46;
 } else {
  $$0$i$i = $41;
  $50 = $42;
 }
 $49 = $50 + $$0$i$i | 0;
 $51 = $$0$i$i + $38 | 0;
 HEAP32[$9 >> 2] = $51;
 if ($51 >>> 0 >= 65537) {
  _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 10246, 10279, 53);
 }
 $53 = $26 + 32 | 0;
 HEAP32[$53 >> 2] = $49;
 if (($35 | 0) > 0) {
  HEAP32[$49 >> 2] = HEAP32[HEAP32[$1 >> 2] >> 2];
  if (($35 | 0) > 4) {
   $63 = 1;
   do {
    HEAP32[(HEAP32[$53 >> 2] | 0) + ($63 << 4) >> 2] = HEAP32[(HEAP32[$1 >> 2] | 0) + ($63 << 2) >> 2];
    $63 = $63 + 1 | 0;
   } while (($63 | 0) < ($36 | 0));
  }
 }
 HEAP32[$30 >> 2] = 0;
 HEAP32[$26 + 24 >> 2] = 0;
 $59 = $26 + 104 | 0;
 HEAP32[$59 >> 2] = 0;
 HEAP32[$29 >> 2] = 0;
 $60 = ($35 | 0) == 0;
 do if ($60) {
  $$0135$lcssa = 0;
  $$0136$lcssa = 0;
  $69 = 0;
 } else {
  $$0134156 = 0;
  $$0135155 = 0;
  $$0136154 = 0;
  while (1) {
   $77 = HEAP32[(HEAP32[$1 >> 2] | 0) + ($$0134156 << 2) >> 2] | 0;
   $79 = HEAP32[6067] | 0;
   if ((HEAP32[6068] | 0) - $79 >> 2 >>> 0 <= $77 >>> 0) {
    label = 20;
    break;
   }
   $85 = HEAP32[$79 + ($77 << 2) >> 2] | 0;
   HEAP32[(HEAP32[$53 >> 2] | 0) + ($$0134156 << 4) + 4 >> 2] = HEAP32[$85 + 4 >> 2];
   $90 = HEAP32[$53 >> 2] | 0;
   if (HEAP32[$90 + ($$0134156 << 4) + 4 >> 2] & 2 | 0) HEAP32[$59 >> 2] = (HEAP32[$59 >> 2] | 0) + 1;
   $97 = $85 + 16 | 0;
   HEAP32[$90 + ($$0134156 << 4) + 12 >> 2] = HEAP32[$97 >> 2];
   $$0136154 = (HEAP32[$97 >> 2] | 0) + $$0136154 | 0;
   $103 = HEAP32[$85 + 8 >> 2] | 0;
   if (($103 | 0) <= 0) {
    label = 24;
    break;
   }
   $$0135155 = $$0135155 + -1 + $103 | 0;
   $$0134156 = $$0134156 + 1 | 0;
   if ($$0134156 >>> 0 >= $36 >>> 0) {
    label = 17;
    break;
   }
  }
  if ((label | 0) == 17) {
   $$0135$lcssa = $$0135155;
   $$0136$lcssa = $$0136154;
   $69 = HEAP32[$59 >> 2] | 0;
   break;
  } else if ((label | 0) == 20) {
   _snprintf(25060, 1024, 27124, $vararg_buffer3) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
  } else if ((label | 0) == 24) {
   _snprintf(25060, 1024, 27124, $vararg_buffer5) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 10356, 9243, 105);
  }
 } while (0);
 $70 = (Math_imul($69 + (HEAP32[$37 >> 2] | 0) | 0, -4) | 0) + 16336 | 0;
 $72 = ($70 - $$0135$lcssa | 0) / ($$0136$lcssa | 0) | 0;
 $73 = $26 + 20 | 0;
 HEAP32[$73 >> 2] = $72;
 if (($72 | 0) >= 2049) {
  _snprintf(25060, 1024, 27124, $vararg_buffer7) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 10371, 9243, 111);
 }
 L39 : do if ($60) $$0131$lcssa = 0; else {
  $$0130152 = 0;
  $$0131151 = 0;
  $115 = HEAP32[6067] | 0;
  while (1) {
   $112 = HEAP32[(HEAP32[$1 >> 2] | 0) + ($$0130152 << 2) >> 2] | 0;
   if ((HEAP32[6068] | 0) - $115 >> 2 >>> 0 <= $112 >>> 0) break;
   $120 = HEAP32[$115 + ($112 << 2) >> 2] | 0;
   $122 = HEAP32[$120 + 8 >> 2] | 0;
   $126 = $$0131151 + -1 + $122 & 0 - $122;
   HEAP32[(HEAP32[$53 >> 2] | 0) + ($$0130152 << 4) + 8 >> 2] = $126;
   $133 = (Math_imul(HEAP32[$73 >> 2] | 0, HEAP32[$120 + 16 >> 2] | 0) | 0) + $126 | 0;
   $$0130152 = $$0130152 + 1 | 0;
   if ($$0130152 >>> 0 >= $36 >>> 0) {
    $$0131$lcssa = $133;
    break L39;
   } else $$0131151 = $133;
  }
  _snprintf(25060, 1024, 27124, $vararg_buffer9) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 } while (0);
 if (($$0131$lcssa | 0) > ($70 | 0)) {
  _snprintf(25060, 1024, 27124, $vararg_buffer11) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 10426, 9243, 121);
 }
 __ZN2ut4arch16ArchetypeManager25assertArchetypeAlignmentsEPKNS0_9ArchetypeE(0, $26);
 L49 : do if ((HEAP32[$59 >> 2] | 0) > 0) {
  $140 = (HEAP32[$9 >> 2] | 0) + 3 & -4;
  $141 = HEAP32[$13 >> 2] | 0;
  if (($141 | 0) == 0 | (65536 - $140 | 0) >>> 0 < $35 >>> 0) {
   $145 = _aligned_alloc(64, 65536) | 0;
   HEAP32[$145 >> 2] = 0;
   $146 = HEAP32[$13 >> 2] | 0;
   HEAP32[(($146 | 0) == 0 ? $8 : $146) >> 2] = $145;
   HEAP32[$13 >> 2] = $145;
   HEAP32[$9 >> 2] = 4;
   $$0$i$i141 = 4;
   $149 = $145;
  } else {
   $$0$i$i141 = $140;
   $149 = $141;
  }
  $150 = $$0$i$i141 + $35 | 0;
  HEAP32[$9 >> 2] = $150;
  if ($150 >>> 0 >= 65537) {
   _snprintf(25060, 1024, 27124, $vararg_buffer13) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 10246, 10279, 53);
  }
  HEAP32[$29 >> 2] = $149 + $$0$i$i141;
  if (!$60) {
   $$0128149 = 0;
   $$0129148 = 0;
   while (1) {
    $154 = HEAP32[(HEAP32[$1 >> 2] | 0) + ($$0128149 << 2) >> 2] | 0;
    $156 = HEAP32[6067] | 0;
    if ((HEAP32[6068] | 0) - $156 >> 2 >>> 0 <= $154 >>> 0) break;
    $166 = (HEAP32[(HEAP32[$156 + ($154 << 2) >> 2] | 0) + 4 >> 2] & 2 | 0) == 0;
    HEAP32[(HEAP32[$29 >> 2] | 0) + ($$0128149 << 2) >> 2] = $166 ? -1 : $$0129148;
    $$0128149 = $$0128149 + 1 | 0;
    if ($$0128149 >>> 0 >= $36 >>> 0) break L49; else $$0129148 = $$0129148 + (($166 ^ 1) & 1) | 0;
   }
   _snprintf(25060, 1024, 27124, $vararg_buffer15) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
  }
 } while (0);
 $172 = $26 + 112 | 0;
 HEAP8[$172 >> 0] = 0;
 $173 = HEAP32[$37 >> 2] | 0;
 if (($173 | 0) == 2) {
  $177 = HEAP32[(HEAP32[$53 >> 2] | 0) + 16 >> 2] | 0;
  if (!(HEAP8[24224] | 0)) {
   if (!(HEAP8[24232] | 0)) {
    $182 = __ZN2ut17ComponentRegistry10findByNameEPKc(19064) | 0;
    if (!$182) {
     $185 = __ZN2ut17InitComponentInfoEPKciiiijPvPFvS2_iES4_PFvPKvS2_iEPFvS2_S2_ES4_iiPKii(19064, 1, 1, 1, 0, 0, __Znwj(1) | 0, 0, 0, 0, 0, 6, 0, 0, 0, 0) | 0;
     HEAP32[$185 + 68 >> 2] = 0;
     $$0$i$i$i = $185;
    } else $$0$i$i$i = $182;
    $187 = HEAP32[$$0$i$i$i >> 2] | 0;
    HEAP32[6117] = $187;
    $188 = 24232;
    HEAP32[$188 >> 2] = 1;
    HEAP32[$188 + 4 >> 2] = 0;
    $192 = $187;
   } else $192 = HEAP32[6117] | 0;
   HEAP32[6116] = $192;
   $193 = 24224;
   HEAP32[$193 >> 2] = 1;
   HEAP32[$193 + 4 >> 2] = 0;
   $198 = $192;
  } else $198 = HEAP32[6116] | 0;
  if (($177 | 0) == ($198 | 0)) HEAP8[$172 >> 0] = 1;
  $201 = HEAP32[$37 >> 2] | 0;
 } else $201 = $173;
 $199 = $26 + 113 | 0;
 HEAP8[$199 >> 0] = 0;
 L80 : do if (($201 | 0) > 1) {
  $$0127147 = 1;
  $210 = HEAP32[6067] | 0;
  while (1) {
   $207 = HEAP32[(HEAP32[$53 >> 2] | 0) + ($$0127147 << 4) >> 2] | 0;
   if ((HEAP32[6068] | 0) - $210 >> 2 >>> 0 <= $207 >>> 0) {
    label = 60;
    break;
   }
   $$0127147 = $$0127147 + 1 | 0;
   if (HEAP32[(HEAP32[$210 + ($207 << 2) >> 2] | 0) + 4 >> 2] & 8 | 0) {
    label = 62;
    break;
   }
   if (($$0127147 | 0) >= (HEAP32[$37 >> 2] | 0)) break L80;
  }
  if ((label | 0) == 60) {
   _snprintf(25060, 1024, 27124, $vararg_buffer17) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
  } else if ((label | 0) == 62) {
   HEAP8[$199 >> 0] = 1;
   break;
  }
 } while (0);
 $220 = $0 + 48 | 0;
 HEAP32[$26 + 108 >> 2] = HEAP32[$220 >> 2];
 HEAP32[$220 >> 2] = $26;
 HEAP32[(__ZNSt3__213unordered_mapINS_6vectorIjNS_9allocatorIjEEEEPN2ut4arch9ArchetypeENS_4hashIS4_EENS_8equal_toIS4_EENS2_INS_4pairIKS4_S8_EEEEEixERSE_($0 + 16 | 0, $1) | 0) >> 2] = $26;
 $225 = HEAP32[$37 >> 2] | 0;
 if (($225 | 0) <= 0) {
  $$0 = $26;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $$pre$i = HEAP32[$53 >> 2] | 0;
 $$08$i = 0;
 do {
  HEAP8[(HEAP32[$$pre$i + ($$08$i << 4) >> 2] & 63) + ($26 + 36) >> 0] = $$08$i;
  $$08$i = $$08$i + 1 | 0;
 } while (($$08$i | 0) != ($225 | 0));
 $$0 = $26;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_special_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i158 = 0, $$0$i$i$i161 = 0, $$0$i$i$idx$i = 0, $$11 = 0, $$4156 = 0, $$8 = 0, $$8151 = 0, $104 = 0, $105 = 0, $106 = 0, $109 = 0, $113 = 0, $115 = 0, $119 = 0, $124 = 0, $128 = 0, $129 = 0, $133 = 0, $136 = 0, $137 = 0, $141 = 0, $15 = 0, $18 = 0, $19 = 0, $23 = 0, $26 = 0, $27 = 0, $3 = 0, $31 = 0, $34 = 0, $35 = 0, $39 = 0, $4 = 0, $42 = 0, $43 = 0, $47 = 0, $5 = 0, $50 = 0, $51 = 0, $53 = 0, $55 = 0, $59 = 0, $6 = 0, $62 = 0, $63 = 0, $65 = 0, $7 = 0, $70 = 0, $71 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $93 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $3 = sp + 60 | 0;
 $4 = sp + 48 | 0;
 $5 = sp + 36 | 0;
 $6 = sp + 24 | 0;
 $7 = sp + 12 | 0;
 $8 = sp;
 L1 : do if (($1 - $0 | 0) > 2) {
  switch (HEAP8[$0 >> 0] | 0) {
  case 84:
   break;
  case 71:
   {
    switch (HEAP8[$0 + 1 >> 0] | 0) {
    case 86:
     {
      $128 = $0 + 2 | 0;
      $129 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($128, $1, $2) | 0;
      if (($129 | 0) == ($128 | 0)) {
       $$11 = $0;
       label = 60;
       break L1;
      }
      $133 = HEAP32[$2 + 4 >> 2] | 0;
      if ((HEAP32[$2 >> 2] | 0) == ($133 | 0)) {
       $$8 = $0;
       break L1;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($133 + -24 | 0, 0, 24107) | 0;
      $$11 = $129;
      label = 60;
      break L1;
      break;
     }
    case 82:
     {
      $136 = $0 + 2 | 0;
      $137 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($136, $1, $2) | 0;
      if (($137 | 0) == ($136 | 0)) {
       $$11 = $0;
       label = 60;
       break L1;
      }
      $141 = HEAP32[$2 + 4 >> 2] | 0;
      if ((HEAP32[$2 >> 2] | 0) == ($141 | 0)) {
       $$8 = $0;
       break L1;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($141 + -24 | 0, 0, 24127) | 0;
      $$11 = $137;
      label = 60;
      break L1;
      break;
     }
    default:
     {
      $$11 = $0;
      label = 60;
      break L1;
     }
    }
    break;
   }
  default:
   {
    $$11 = $0;
    label = 60;
    break L1;
   }
  }
  $15 = $0 + 1 | 0;
  switch (HEAP8[$15 >> 0] | 0) {
  case 86:
   {
    $18 = $0 + 2 | 0;
    $19 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($18, $1, $2) | 0;
    if (($19 | 0) == ($18 | 0)) {
     $$11 = $0;
     label = 60;
     break L1;
    }
    $23 = HEAP32[$2 + 4 >> 2] | 0;
    if ((HEAP32[$2 >> 2] | 0) == ($23 | 0)) {
     $$8 = $0;
     break L1;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($23 + -24 | 0, 0, 23956) | 0;
    $$11 = $19;
    label = 60;
    break L1;
    break;
   }
  case 84:
   {
    $26 = $0 + 2 | 0;
    $27 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($26, $1, $2) | 0;
    if (($27 | 0) == ($26 | 0)) {
     $$11 = $0;
     label = 60;
     break L1;
    }
    $31 = HEAP32[$2 + 4 >> 2] | 0;
    if ((HEAP32[$2 >> 2] | 0) == ($31 | 0)) {
     $$8 = $0;
     break L1;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($31 + -24 | 0, 0, 23968) | 0;
    $$11 = $27;
    label = 60;
    break L1;
    break;
   }
  case 73:
   {
    $34 = $0 + 2 | 0;
    $35 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($34, $1, $2) | 0;
    if (($35 | 0) == ($34 | 0)) {
     $$11 = $0;
     label = 60;
     break L1;
    }
    $39 = HEAP32[$2 + 4 >> 2] | 0;
    if ((HEAP32[$2 >> 2] | 0) == ($39 | 0)) {
     $$8 = $0;
     break L1;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($39 + -24 | 0, 0, 23977) | 0;
    $$11 = $35;
    label = 60;
    break L1;
    break;
   }
  case 83:
   {
    $42 = $0 + 2 | 0;
    $43 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($42, $1, $2) | 0;
    if (($43 | 0) == ($42 | 0)) {
     $$11 = $0;
     label = 60;
     break L1;
    }
    $47 = HEAP32[$2 + 4 >> 2] | 0;
    if ((HEAP32[$2 >> 2] | 0) == ($47 | 0)) {
     $$8 = $0;
     break L1;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($47 + -24 | 0, 0, 23991) | 0;
    $$11 = $43;
    label = 60;
    break L1;
    break;
   }
  case 99:
   {
    $50 = $0 + 2 | 0;
    $51 = __ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_($50, $1) | 0;
    if (($51 | 0) == ($50 | 0)) {
     $$11 = $0;
     label = 60;
     break L1;
    }
    $53 = __ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_($51, $1) | 0;
    if (($53 | 0) == ($51 | 0)) {
     $$11 = $0;
     label = 60;
     break L1;
    }
    $55 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($53, $1, $2) | 0;
    if (($55 | 0) == ($53 | 0)) {
     $$11 = $0;
     label = 60;
     break L1;
    }
    $59 = HEAP32[$2 + 4 >> 2] | 0;
    if ((HEAP32[$2 >> 2] | 0) == ($59 | 0)) {
     $$8 = $0;
     break L1;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($59 + -24 | 0, 0, 24010) | 0;
    $$11 = $55;
    label = 60;
    break L1;
    break;
   }
  case 67:
   {
    $62 = $0 + 2 | 0;
    $63 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($62, $1, $2) | 0;
    if (($63 | 0) == ($62 | 0)) {
     $$11 = $0;
     label = 60;
     break L1;
    }
    $65 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($63, $1) | 0;
    if (($65 | 0) == ($63 | 0) | ($65 | 0) == ($1 | 0)) {
     $$11 = $0;
     label = 60;
     break L1;
    }
    if ((HEAP8[$65 >> 0] | 0) != 95) {
     $$11 = $0;
     label = 60;
     break L1;
    }
    $70 = $65 + 1 | 0;
    $71 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($70, $1, $2) | 0;
    if (($71 | 0) == ($70 | 0)) {
     $$11 = $0;
     label = 60;
     break L1;
    }
    $73 = $2 + 4 | 0;
    $74 = HEAP32[$73 >> 2] | 0;
    if ((($74 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     $$8 = $0;
     break L1;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($4, $74 + -24 | 0);
    $81 = HEAP32[$73 >> 2] | 0;
    $$0$i$i$idx$i = 0;
    while (1) {
     if (($$0$i$i$idx$i | 0) == -1) break;
     $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($81 + ($$0$i$i$add$i * 24 | 0) | 0);
     $$0$i$i$idx$i = $$0$i$i$add$i;
    }
    HEAP32[$73 >> 2] = $81 + -24;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($4, 0, 24037) | 0;
    HEAP32[$7 >> 2] = HEAP32[$4 >> 2];
    HEAP32[$7 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
    HEAP32[$7 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
    $$0$i$i$i161 = 0;
    while (1) {
     if (($$0$i$i$i161 | 0) == 3) break;
     HEAP32[$4 + ($$0$i$i$i161 << 2) >> 2] = 0;
     $$0$i$i$i161 = $$0$i$i$i161 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($7, 24062) | 0;
    HEAP32[$6 >> 2] = HEAP32[$7 >> 2];
    HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
    HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
    $$0$i$i$i158 = 0;
    while (1) {
     if (($$0$i$i$i158 | 0) == 3) break;
     HEAP32[$7 + ($$0$i$i$i158 << 2) >> 2] = 0;
     $$0$i$i$i158 = $$0$i$i$i158 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($8, (HEAP32[$73 >> 2] | 0) + -24 | 0);
    $93 = HEAP8[$8 + 11 >> 0] | 0;
    $94 = $93 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($6, $94 ? HEAP32[$8 >> 2] | 0 : $8, $94 ? HEAP32[$8 + 4 >> 2] | 0 : $93 & 255) | 0;
    HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
    HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
    HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$6 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    $104 = HEAP32[$73 >> 2] | 0;
    $105 = $104 + -24 | 0;
    $106 = $105 + 11 | 0;
    if ((HEAP8[$106 >> 0] | 0) < 0) {
     $109 = HEAP32[$105 >> 2] | 0;
     HEAP8[$3 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc($109, $3);
     HEAP32[$104 + -20 >> 2] = 0;
    } else {
     HEAP8[$3 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc($105, $3);
     HEAP8[$106 >> 0] = 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEj($105);
    HEAP32[$105 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$105 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    HEAP32[$105 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
    $$0$i$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i$i | 0) == 3) break;
     HEAP32[$5 + ($$0$i$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    $$11 = $71;
    label = 60;
    break L1;
    break;
   }
  default:
   {
    $113 = __ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_($15, $1) | 0;
    do if (($113 | 0) == ($15 | 0)) {
     $$4156 = 3;
     $$8151 = $0;
    } else {
     $115 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($113, $1, $2) | 0;
     if (($115 | 0) == ($113 | 0)) {
      $$4156 = 0;
      $$8151 = $0;
     } else {
      $119 = HEAP32[$2 + 4 >> 2] | 0;
      if ((HEAP32[$2 >> 2] | 0) == ($119 | 0)) {
       $$4156 = 1;
       $$8151 = $0;
      } else {
       $124 = $119 + -24 | 0;
       if ((HEAP8[$0 + 2 >> 0] | 0) == 118) {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($124, 0, 24067) | 0;
        $$4156 = 0;
        $$8151 = $115;
        break;
       } else {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($124, 0, 24085) | 0;
        $$4156 = 0;
        $$8151 = $115;
        break;
       }
      }
     }
    } while (0);
    switch ($$4156 & 3) {
    case 3:
    case 0:
     {
      $$11 = $$8151;
      label = 60;
      break L1;
      break;
     }
    default:
     {}
    }
    if (!$$4156) {
     $$11 = $$8151;
     label = 60;
     break L1;
    } else {
     $$8 = $0;
     break L1;
    }
   }
  }
 } else {
  $$11 = $0;
  label = 60;
 } while (0);
 if ((label | 0) == 60) $$8 = $$11;
 STACKTOP = sp;
 return $$8 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_128parse_pointer_to_member_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i63 = 0, $$0$i$i$i$i80 = 0, $$0$i$i$i$i85 = 0, $$0$i$i$i51 = 0, $$0$i$i$i54 = 0, $$0$i$i$i58 = 0, $$0$i$i$i66 = 0, $$0$i$i$i70 = 0, $$0$i$i$i74 = 0, $$0$i$i$idx$i = 0, $$345 = 0, $100 = 0, $104 = 0, $105 = 0, $106 = 0, $109 = 0, $13 = 0, $14 = 0, $16 = 0, $18 = 0, $19 = 0, $26 = 0, $3 = 0, $30 = 0, $4 = 0, $42 = 0, $43 = 0, $5 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $61 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $73 = 0, $8 = 0, $81 = 0, $82 = 0, $9 = 0, $95 = 0, $96 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $3 = sp + 96 | 0;
 $4 = sp + 72 | 0;
 $5 = sp + 48 | 0;
 $6 = sp + 36 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 12 | 0;
 $9 = sp;
 if (($0 | 0) == ($1 | 0)) $$345 = $0; else if ((HEAP8[$0 >> 0] | 0) == 77) {
  $13 = $0 + 1 | 0;
  $14 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($13, $1, $2) | 0;
  if (($14 | 0) == ($13 | 0)) $$345 = $0; else {
   $16 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($14, $1, $2) | 0;
   if (($16 | 0) == ($14 | 0)) $$345 = $0; else {
    $18 = $2 + 4 | 0;
    $19 = HEAP32[$18 >> 2] | 0;
    if ((($19 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$345 = $0; else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($4, $19 + -24 | 0);
     $26 = HEAP32[$18 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($26 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$18 >> 2] = $26 + -24;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($5, $26 + -48 | 0);
     $30 = $4 + 12 | 0;
     L11 : do if ((HEAP8[((HEAP8[$30 + 11 >> 0] | 0) < 0 ? HEAP32[$30 >> 2] | 0 : $30) >> 0] | 0) == 40) {
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($4, 22277) | 0;
      HEAP32[$8 >> 2] = HEAP32[$4 >> 2];
      HEAP32[$8 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
      HEAP32[$8 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
      $$0$i$i$i = 0;
      while (1) {
       if (($$0$i$i$i | 0) == 3) break;
       HEAP32[$4 + ($$0$i$i$i << 2) >> 2] = 0;
       $$0$i$i$i = $$0$i$i$i + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($9, $5);
      $42 = HEAP8[$9 + 11 >> 0] | 0;
      $43 = $42 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($8, $43 ? HEAP32[$9 >> 2] | 0 : $9, $43 ? HEAP32[$9 + 4 >> 2] | 0 : $42 & 255) | 0;
      HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
      HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
      HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
      $$0$i$i$i51 = 0;
      while (1) {
       if (($$0$i$i$i51 | 0) == 3) break;
       HEAP32[$8 + ($$0$i$i$i51 << 2) >> 2] = 0;
       $$0$i$i$i51 = $$0$i$i$i51 + 1 | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($7, 23699) | 0;
      HEAP32[$6 >> 2] = HEAP32[$7 >> 2];
      HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
      HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
      $$0$i$i$i54 = 0;
      while (1) {
       if (($$0$i$i$i54 | 0) == 3) break;
       HEAP32[$7 + ($$0$i$i$i54 << 2) >> 2] = 0;
       $$0$i$i$i54 = $$0$i$i$i54 + 1 | 0;
      }
      $56 = HEAP32[$18 >> 2] | 0;
      $57 = $56 + -24 | 0;
      $58 = $57 + 11 | 0;
      if ((HEAP8[$58 >> 0] | 0) < 0) {
       $61 = HEAP32[$57 >> 2] | 0;
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($61, $3);
       HEAP32[$56 + -20 >> 2] = 0;
      } else {
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($57, $3);
       HEAP8[$58 >> 0] = 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEj($57);
      HEAP32[$57 >> 2] = HEAP32[$6 >> 2];
      HEAP32[$57 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
      HEAP32[$57 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
      $$0$i$i$i$i = 0;
      while (1) {
       if (($$0$i$i$i$i | 0) == 3) break;
       HEAP32[$6 + ($$0$i$i$i$i << 2) >> 2] = 0;
       $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($30, 0, 22275) | 0;
      HEAP32[$6 >> 2] = HEAP32[$30 >> 2];
      HEAP32[$6 + 4 >> 2] = HEAP32[$30 + 4 >> 2];
      HEAP32[$6 + 8 >> 2] = HEAP32[$30 + 8 >> 2];
      $$0$i$i$i58 = 0;
      while (1) {
       if (($$0$i$i$i58 | 0) == 3) break;
       HEAP32[$30 + ($$0$i$i$i58 << 2) >> 2] = 0;
       $$0$i$i$i58 = $$0$i$i$i58 + 1 | 0;
      }
      $68 = HEAP32[$18 >> 2] | 0;
      $69 = $68 + -12 | 0;
      $70 = $69 + 11 | 0;
      if ((HEAP8[$70 >> 0] | 0) < 0) {
       $73 = HEAP32[$69 >> 2] | 0;
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($73, $3);
       HEAP32[$68 + -8 >> 2] = 0;
      } else {
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($69, $3);
       HEAP8[$70 >> 0] = 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEj($69);
      HEAP32[$69 >> 2] = HEAP32[$6 >> 2];
      HEAP32[$69 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
      HEAP32[$69 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
      $$0$i$i$i$i63 = 0;
      while (1) {
       if (($$0$i$i$i$i63 | 0) == 3) break;
       HEAP32[$6 + ($$0$i$i$i$i63 << 2) >> 2] = 0;
       $$0$i$i$i$i63 = $$0$i$i$i$i63 + 1 | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
     } else {
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($4, 22309) | 0;
      HEAP32[$8 >> 2] = HEAP32[$4 >> 2];
      HEAP32[$8 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
      HEAP32[$8 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
      $$0$i$i$i66 = 0;
      while (1) {
       if (($$0$i$i$i66 | 0) == 3) break;
       HEAP32[$4 + ($$0$i$i$i66 << 2) >> 2] = 0;
       $$0$i$i$i66 = $$0$i$i$i66 + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($9, $5);
      $81 = HEAP8[$9 + 11 >> 0] | 0;
      $82 = $81 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($8, $82 ? HEAP32[$9 >> 2] | 0 : $9, $82 ? HEAP32[$9 + 4 >> 2] | 0 : $81 & 255) | 0;
      HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
      HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
      HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
      $$0$i$i$i70 = 0;
      while (1) {
       if (($$0$i$i$i70 | 0) == 3) break;
       HEAP32[$8 + ($$0$i$i$i70 << 2) >> 2] = 0;
       $$0$i$i$i70 = $$0$i$i$i70 + 1 | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($7, 23699) | 0;
      HEAP32[$6 >> 2] = HEAP32[$7 >> 2];
      HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
      HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
      $$0$i$i$i74 = 0;
      while (1) {
       if (($$0$i$i$i74 | 0) == 3) break;
       HEAP32[$7 + ($$0$i$i$i74 << 2) >> 2] = 0;
       $$0$i$i$i74 = $$0$i$i$i74 + 1 | 0;
      }
      $95 = HEAP32[$18 >> 2] | 0;
      $96 = $95 + -24 | 0;
      $97 = $96 + 11 | 0;
      if ((HEAP8[$97 >> 0] | 0) < 0) {
       $100 = HEAP32[$96 >> 2] | 0;
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($100, $3);
       HEAP32[$95 + -20 >> 2] = 0;
      } else {
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($96, $3);
       HEAP8[$97 >> 0] = 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEj($96);
      HEAP32[$96 >> 2] = HEAP32[$6 >> 2];
      HEAP32[$96 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
      HEAP32[$96 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
      $$0$i$i$i$i80 = 0;
      while (1) {
       if (($$0$i$i$i$i80 | 0) == 3) break;
       HEAP32[$6 + ($$0$i$i$i$i80 << 2) >> 2] = 0;
       $$0$i$i$i$i80 = $$0$i$i$i$i80 + 1 | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
      $104 = HEAP32[$18 >> 2] | 0;
      $105 = $104 + -12 | 0;
      $106 = $105 + 11 | 0;
      if ((HEAP8[$106 >> 0] | 0) < 0) {
       $109 = HEAP32[$105 >> 2] | 0;
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($109, $3);
       HEAP32[$104 + -8 >> 2] = 0;
      } else {
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($105, $3);
       HEAP8[$106 >> 0] = 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEj($105);
      HEAP32[$105 >> 2] = HEAP32[$30 >> 2];
      HEAP32[$105 + 4 >> 2] = HEAP32[$30 + 4 >> 2];
      HEAP32[$105 + 8 >> 2] = HEAP32[$30 + 8 >> 2];
      $$0$i$i$i$i85 = 0;
      while (1) {
       if (($$0$i$i$i$i85 | 0) == 3) break L11;
       HEAP32[$30 + ($$0$i$i$i$i85 << 2) >> 2] = 0;
       $$0$i$i$i$i85 = $$0$i$i$i$i85 + 1 | 0;
      }
     } while (0);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
     $$345 = $16;
    }
   }
  }
 } else $$345 = $0;
 STACKTOP = sp;
 return $$345 | 0;
}

function __ZN2ut10Serializer6toJSONERNS_12ManagerWorldE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i12 = 0, $$0$i$i$i$i$i4 = 0, $$0$i$i$i10 = 0, $$0$i$i$i2 = 0, $$0$i3$i$i = 0, $$0308$i$i = 0, $$pre$phi$i14Z2D = 0, $$pre$phi$i7Z2D = 0, $$pre$phi$iZ2D = 0, $$sroa$0$37$i$i = 0, $10 = 0, $102 = 0, $103 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $115 = 0, $12 = 0, $124 = 0, $130 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $145 = 0, $148 = 0, $150 = 0, $154 = 0, $155 = 0, $159 = 0, $160 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $168 = 0, $173 = 0, $177 = 0, $18 = 0, $181 = 0, $184 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $33 = 0, $35 = 0, $39 = 0, $4 = 0, $40 = 0, $44 = 0, $45 = 0, $47 = 0, $48 = 0, $5 = 0, $52 = 0, $53 = 0, $54 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $61 = 0, $64 = 0, $66 = 0, $7 = 0, $70 = 0, $71 = 0, $75 = 0, $76 = 0, $78 = 0, $79 = 0, $8 = 0, $88 = 0, $89 = 0, $9 = 0, $93 = 0, $94 = 0, $98 = 0, $spec$select$i$i$i = 0, $spec$select$i$i$i11 = 0, $spec$select$i$i$i3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $vararg_buffer = sp;
 $2 = sp + 120 | 0;
 $3 = sp + 112 | 0;
 $4 = sp + 108 | 0;
 $5 = sp + 72 | 0;
 $6 = sp + 48 | 0;
 $7 = sp + 4 | 0;
 $8 = $6 + 4 | 0;
 $9 = $6 + 20 | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 HEAP32[$6 + 12 >> 2] = 0;
 HEAP32[$6 + 16 >> 2] = 0;
 HEAP32[$9 >> 2] = 256;
 HEAP32[$7 >> 2] = $6;
 $10 = $7 + 4 | 0;
 $11 = $7 + 8 | 0;
 $12 = $7 + 24 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$10 + 16 >> 2] = 0;
 HEAP32[$12 >> 2] = 256;
 HEAP32[$7 + 28 >> 2] = 324;
 HEAP8[$7 + 32 >> 0] = 0;
 HEAP8[$7 + 33 >> 0] = 32;
 HEAP32[$7 + 36 >> 2] = 4;
 HEAP32[$7 + 40 >> 2] = 1;
 __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($7, 3);
 $18 = $7 + 4 | 0;
 $19 = $7 + 16 | 0;
 $20 = HEAP32[$19 >> 2] | 0;
 $21 = $20 + 8 | 0;
 $22 = $7 + 20 | 0;
 $23 = HEAP32[$22 >> 2] | 0;
 $25 = $23;
 $26 = $20;
 if ($21 >>> 0 > $23 >>> 0) {
  $27 = $7 + 12 | 0;
  $28 = HEAP32[$27 >> 2] | 0;
  $30 = $28;
  if (!$28) {
   if (!(HEAP32[$18 >> 2] | 0)) {
    $33 = __Znwj(1) | 0;
    HEAP32[$18 >> 2] = $33;
    HEAP32[$11 >> 2] = $33;
   }
   $$0$i$i$i = HEAP32[$12 >> 2] | 0;
  } else {
   $35 = $25 - $30 | 0;
   $$0$i$i$i = (($35 + 1 | 0) >>> 1) + $35 | 0;
  }
  $39 = $26 - $30 | 0;
  $40 = $39 + 8 | 0;
  $spec$select$i$i$i = $$0$i$i$i >>> 0 < $40 >>> 0 ? $40 : $$0$i$i$i;
  if (!$spec$select$i$i$i) {
   _free($28);
   $$0$i$i$i$i$i = 0;
  } else $$0$i$i$i$i$i = _realloc($28, $spec$select$i$i$i) | 0;
  HEAP32[$27 >> 2] = $$0$i$i$i$i$i;
  $44 = $$0$i$i$i$i$i + $39 | 0;
  HEAP32[$19 >> 2] = $44;
  $45 = $$0$i$i$i$i$i + $spec$select$i$i$i | 0;
  HEAP32[$22 >> 2] = $45;
  $$pre$phi$iZ2D = $44 + 8 | 0;
  $47 = $45;
  $48 = $44;
 } else {
  $$pre$phi$iZ2D = $21;
  $47 = $23;
  $48 = $20;
 }
 if ($$pre$phi$iZ2D >>> 0 > $47 >>> 0) ___assert_fail(5614, 5657, 129, 5717);
 HEAP32[$19 >> 2] = $$pre$phi$iZ2D;
 HEAP32[$48 >> 2] = 0;
 HEAP8[$48 + 4 >> 0] = 0;
 HEAP8[(__ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$7 >> 2] | 0, 1) | 0) >> 0] = 123;
 __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($7, 5);
 __ZN9rapidjson6WriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE11WriteStringEPKcj($7, 5728, 8) | 0;
 __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($7, 4);
 $52 = HEAP32[$19 >> 2] | 0;
 $53 = $52 + 8 | 0;
 $54 = HEAP32[$22 >> 2] | 0;
 $56 = $54;
 $57 = $52;
 if ($53 >>> 0 > $54 >>> 0) {
  $58 = $7 + 12 | 0;
  $59 = HEAP32[$58 >> 2] | 0;
  $61 = $59;
  if (!$59) {
   if (!(HEAP32[$18 >> 2] | 0)) {
    $64 = __Znwj(1) | 0;
    HEAP32[$18 >> 2] = $64;
    HEAP32[$11 >> 2] = $64;
   }
   $$0$i$i$i2 = HEAP32[$12 >> 2] | 0;
  } else {
   $66 = $56 - $61 | 0;
   $$0$i$i$i2 = (($66 + 1 | 0) >>> 1) + $66 | 0;
  }
  $70 = $57 - $61 | 0;
  $71 = $70 + 8 | 0;
  $spec$select$i$i$i3 = $$0$i$i$i2 >>> 0 < $71 >>> 0 ? $71 : $$0$i$i$i2;
  if (!$spec$select$i$i$i3) {
   _free($59);
   $$0$i$i$i$i$i4 = 0;
  } else $$0$i$i$i$i$i4 = _realloc($59, $spec$select$i$i$i3) | 0;
  HEAP32[$58 >> 2] = $$0$i$i$i$i$i4;
  $75 = $$0$i$i$i$i$i4 + $70 | 0;
  HEAP32[$19 >> 2] = $75;
  $76 = $$0$i$i$i$i$i4 + $spec$select$i$i$i3 | 0;
  HEAP32[$22 >> 2] = $76;
  $$pre$phi$i7Z2D = $75 + 8 | 0;
  $78 = $76;
  $79 = $75;
 } else {
  $$pre$phi$i7Z2D = $53;
  $78 = $54;
  $79 = $52;
 }
 if ($$pre$phi$i7Z2D >>> 0 > $78 >>> 0) ___assert_fail(5614, 5657, 129, 5717);
 HEAP32[$19 >> 2] = $$pre$phi$i7Z2D;
 HEAP32[$79 >> 2] = 0;
 HEAP8[$79 + 4 >> 0] = 1;
 HEAP8[(__ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$7 >> 2] | 0, 1) | 0) >> 0] = 91;
 if (!(HEAP8[24208] | 0)) {
  if (!(HEAP8[24216] | 0)) {
   $88 = HEAP32[(__ZN2ut20InitComponentInfoForINS_6EntityEEERNS_13ComponentInfoEv() | 0) >> 2] | 0;
   HEAP32[6115] = $88;
   $89 = 24216;
   HEAP32[$89 >> 2] = 1;
   HEAP32[$89 + 4 >> 2] = 0;
   $93 = $88;
  } else $93 = HEAP32[6115] | 0;
  HEAP32[6114] = $93;
  $94 = 24208;
  HEAP32[$94 >> 2] = 1;
  HEAP32[$94 + 4 >> 2] = 0;
  $98 = $93;
 } else $98 = HEAP32[6114] | 0;
 HEAP32[$2 >> 2] = $98;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZN2ut4arch13EntityManager35assertInvalidForIterationComponentsEPKNS0_13ComponentSpecEj($1, 0, 0);
 __ZN2ut4arch13EntityManager35assertInvalidForIterationComponentsEPKNS0_13ComponentSpecEj($1, $2, 1);
 HEAP32[$5 >> 2] = HEAP32[$1 + 4 >> 2];
 $102 = $5 + 4 | 0;
 $103 = $5 + 24 | 0;
 HEAP32[$102 >> 2] = 0;
 HEAP32[$102 + 4 >> 2] = 0;
 HEAP32[$102 + 8 >> 2] = 0;
 HEAP32[$102 + 12 >> 2] = 0;
 HEAP32[$102 + 16 >> 2] = 0;
 HEAP32[$103 >> 2] = -1;
 HEAP8[$5 + 28 >> 0] = 0;
 HEAP8[$5 + 29 >> 0] = 0;
 HEAP8[$5 + 30 >> 0] = 0;
 HEAP32[$5 + 32 >> 2] = 0;
 __ZN2ut4arch22ArchetypeChunkIterator9addFilterEPKNS0_13ComponentSpecEj($5, $2, 1);
 __ZN2ut4arch22ArchetypeChunkIterator9addFilterEPKNS0_13ComponentSpecEj($5, 0, 0);
 __ZN2ut4arch13EntityManager14startBufferingENS0_13BufferingModeE($1, 0);
 L43 : do if (__ZN2ut4arch22ArchetypeChunkIterator4nextEv($5) | 0) {
  $109 = $5 + 16 | 0;
  $110 = $5 + 20 | 0;
  while (1) {
   __ZN2ut4arch22ArchetypeChunkIterator46getTypeOrSharedComponentIndicesAndSizesInOrderEPNS0_13ComponentSpecEPiS4_j($5, $2, $3, $4, 1);
   $111 = HEAP32[$3 >> 2] | 0;
   if (($111 | 0) == -1) $$0$i3$i$i = 0; else {
    $115 = HEAP32[(HEAP32[$109 >> 2] | 0) + 32 >> 2] | 0;
    if (HEAP32[$115 + ($111 << 4) + 4 >> 2] & 2 | 0) break;
    $$0$i3$i$i = (HEAP32[$115 + ($111 << 4) + 8 >> 2] | 0) + ((HEAP32[$110 >> 2] | 0) + 48) | 0;
   }
   $124 = HEAP32[$103 >> 2] | 0;
   if (($124 | 0) > 0) {
    $$0308$i$i = 0;
    $$sroa$0$37$i$i = $$0$i3$i$i;
    while (1) {
     __ZN2ut10saveEntityIN9rapidjson12PrettyWriterINS1_19GenericStringBufferINS1_4UTF8IcEENS1_12CrtAllocatorEEES5_S5_S6_Lj0EEEEEvRT_RNS_12ManagerWorldERNS_6EntityE($7, $1, $$sroa$0$37$i$i);
     $$0308$i$i = $$0308$i$i + 1 | 0;
     if (($$0308$i$i | 0) == ($124 | 0)) break; else $$sroa$0$37$i$i = $$sroa$0$37$i$i + (HEAP32[$4 >> 2] | 0) | 0;
    }
   }
   if (!(__ZN2ut4arch22ArchetypeChunkIterator4nextEv($5) | 0)) break L43;
  }
  _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 19190, 19240, 108);
 } while (0);
 __ZN2ut4arch13EntityManager13stopBufferingENS0_13BufferingModeE($1, 0);
 __ZN2ut4arch22ArchetypeChunkIterator6finishEv($5);
 $130 = HEAP32[$102 >> 2] | 0;
 if ($130 | 0) {
  HEAP32[$5 + 8 >> 2] = $130;
  __ZdlPv($130);
 }
 __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE8EndArrayEj($7, 0) | 0;
 __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE9EndObjectEj($7, 0) | 0;
 $134 = $6 + 12 | 0;
 $135 = HEAP32[$134 >> 2] | 0;
 $136 = $135 + 1 | 0;
 $137 = $6 + 16 | 0;
 $138 = HEAP32[$137 >> 2] | 0;
 $140 = $138;
 $141 = $135;
 if ($136 >>> 0 > $138 >>> 0) {
  $142 = $6 + 8 | 0;
  $143 = HEAP32[$142 >> 2] | 0;
  $145 = $143;
  if (!$143) {
   if (!(HEAP32[$6 >> 2] | 0)) {
    $148 = __Znwj(1) | 0;
    HEAP32[$6 >> 2] = $148;
    HEAP32[$8 >> 2] = $148;
   }
   $$0$i$i$i10 = HEAP32[$9 >> 2] | 0;
  } else {
   $150 = $140 - $145 | 0;
   $$0$i$i$i10 = (($150 + 1 | 0) >>> 1) + $150 | 0;
  }
  $154 = $141 - $145 | 0;
  $155 = $154 + 1 | 0;
  $spec$select$i$i$i11 = $$0$i$i$i10 >>> 0 < $155 >>> 0 ? $155 : $$0$i$i$i10;
  if (!$spec$select$i$i$i11) {
   _free($143);
   $$0$i$i$i$i$i12 = 0;
  } else $$0$i$i$i$i$i12 = _realloc($143, $spec$select$i$i$i11) | 0;
  HEAP32[$142 >> 2] = $$0$i$i$i$i$i12;
  $159 = $$0$i$i$i$i$i12 + $154 | 0;
  HEAP32[$134 >> 2] = $159;
  $160 = $$0$i$i$i$i$i12 + $spec$select$i$i$i11 | 0;
  HEAP32[$137 >> 2] = $160;
  $$pre$phi$i14Z2D = $159 + 1 | 0;
  $162 = $160;
  $163 = $159;
 } else {
  $$pre$phi$i14Z2D = $136;
  $162 = $138;
  $163 = $135;
 }
 if ($$pre$phi$i14Z2D >>> 0 > $162 >>> 0) ___assert_fail(5614, 5657, 129, 5717);
 HEAP32[$134 >> 2] = $$pre$phi$i14Z2D;
 HEAP8[$163 >> 0] = 0;
 $164 = HEAP32[$134 >> 2] | 0;
 $165 = $6 + 8 | 0;
 $166 = HEAP32[$165 >> 2] | 0;
 if (($164 | 0) == ($166 | 0)) ___assert_fail(5737, 5657, 137, 5768);
 $168 = $166;
 HEAP32[$134 >> 2] = $164 + -1;
 if (!$166) {
  HEAP32[$0 + 4 >> 2] = 0;
  label = 61;
 } else {
  $173 = _strlen($168) | 0;
  HEAP32[$0 + 4 >> 2] = $173;
  if (!$173) label = 61; else {
   $177 = _malloc($173 + 1 | 0) | 0;
   HEAP32[$0 >> 2] = $177;
   _memcpy($177 | 0, $168 | 0, $173 | 0) | 0;
   HEAP8[$177 + $173 >> 0] = 0;
  }
 }
 if ((label | 0) == 61) HEAP32[$0 >> 2] = 0;
 _free(HEAP32[$7 + 12 >> 2] | 0);
 $181 = HEAP32[$11 >> 2] | 0;
 if ($181 | 0) __ZdlPv($181);
 _free(HEAP32[$165 >> 2] | 0);
 $184 = HEAP32[$8 >> 2] | 0;
 if (!$184) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv($184);
 STACKTOP = sp;
 return;
}

function __ZN2ut4arch13EntityManager27addComponentDataRawWithMoveENS_6EntityEjPvjb($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0$i$i$i = 0, $$02832$i$i = 0, $$02833$i$i = 0, $$02833$us$i$i = 0, $$04575$i$i$i = 0, $$04576$i$i$i = 0, $$04576$us$i$i$i = 0, $$047$i$i$i = 0, $$1$i$i$i = 0, $$sink = 0, $$sink56 = 0, $10 = 0, $101 = 0, $107 = 0, $108 = 0, $112 = 0, $12 = 0, $122 = 0, $127 = 0, $131 = 0, $134 = 0, $137 = 0.0, $140 = 0.0, $150 = 0, $153 = 0, $155 = 0, $156 = 0, $163 = 0, $164 = 0, $166 = 0, $168 = 0, $171 = 0, $172 = 0, $180 = 0, $184 = 0, $189 = 0, $190 = 0, $195 = 0, $196 = 0, $200 = 0, $201 = 0, $202 = 0, $207 = 0, $208 = 0, $212 = 0, $213 = 0, $214 = 0, $216 = 0, $224 = 0, $23 = 0, $28 = 0, $29 = 0, $33 = 0, $38 = 0, $40 = 0, $45 = 0, $46 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $55 = 0, $57 = 0, $59 = 0, $6 = 0, $65 = 0, $66 = 0, $7 = 0, $70 = 0, $71 = 0, $79 = 0, $8 = 0, $84 = 0, $9 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $tmpcast27$byval_copy = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $tmpcast27$byval_copy = sp + 72 | 0;
 $vararg_buffer7 = sp + 64 | 0;
 $vararg_buffer5 = sp + 56 | 0;
 $6 = sp + 68 | 0;
 $7 = sp + 32 | 0;
 $8 = sp + 16 | 0;
 $9 = sp + 8 | 0;
 $10 = sp;
 HEAP32[$6 >> 2] = $2;
 $12 = HEAP32[6067] | 0;
 if ((HEAP32[6068] | 0) - $12 >> 2 >>> 0 <= $2 >>> 0) {
  _snprintf(25060, 1024, 27124, sp + 24 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
 if (!(HEAP32[(HEAP32[$12 + ($2 << 2) >> 2] | 0) + 4 >> 2] & 4)) {
  _snprintf(25060, 1024, 8720, sp + 40 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8228, 6920, 472);
 }
 __ZN2ut4arch13EntityManager19assertEntitiesExistEPKNS_6EntityEiPKc($0, $1, 1, 8772);
 $23 = $1;
 $28 = HEAP32[$23 + 4 >> 2] | 0;
 $29 = $7;
 HEAP32[$29 >> 2] = HEAP32[$23 >> 2];
 HEAP32[$29 + 4 >> 2] = $28;
 $33 = HEAP32[$6 >> 2] | 0;
 HEAP32[$tmpcast27$byval_copy >> 2] = HEAP32[$7 >> 2];
 HEAP32[$tmpcast27$byval_copy + 4 >> 2] = HEAP32[$7 + 4 >> 2];
 if (__ZN2ut4arch13EntityManager15hasComponentRawENS_6EntityEj($0, $tmpcast27$byval_copy, $33) | 0) {
  _snprintf(25060, 1024, 8815, sp + 48 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 12069, 6920, 474);
 }
 if ((HEAP32[$0 + 36 >> 2] | 0) <= 0) {
  $184 = $0 + 8 | 0;
  if ((HEAP32[(HEAP32[$184 >> 2] | 0) + 44 >> 2] | 0) > 0) {
   _snprintf(25060, 1024, 8878, $vararg_buffer5) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8949, 6920, 35);
  }
  $189 = HEAP32[$184 >> 2] | 0;
  $190 = $1;
  $195 = HEAP32[$190 + 4 >> 2] | 0;
  $196 = $9;
  HEAP32[$196 >> 2] = HEAP32[$190 >> 2];
  HEAP32[$196 + 4 >> 2] = $195;
  $200 = HEAP32[$6 >> 2] | 0;
  HEAP32[$tmpcast27$byval_copy >> 2] = HEAP32[$9 >> 2];
  HEAP32[$tmpcast27$byval_copy + 4 >> 2] = HEAP32[$9 + 4 >> 2];
  __ZN2ut4arch17EntityDataManager12addComponentENS_6EntityEj($189, $tmpcast27$byval_copy, $200);
  $201 = HEAP32[$184 >> 2] | 0;
  $202 = $1;
  $207 = HEAP32[$202 + 4 >> 2] | 0;
  $208 = $10;
  HEAP32[$208 >> 2] = HEAP32[$202 >> 2];
  HEAP32[$208 + 4 >> 2] = $207;
  $212 = HEAP32[$6 >> 2] | 0;
  HEAP32[$tmpcast27$byval_copy >> 2] = HEAP32[$10 >> 2];
  HEAP32[$tmpcast27$byval_copy + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  $213 = __ZN2ut4arch17EntityDataManager24getComponentDataWithTypeENS_6EntityEj($201, $tmpcast27$byval_copy, $212) | 0;
  $214 = HEAP32[$6 >> 2] | 0;
  $216 = HEAP32[6067] | 0;
  if ((HEAP32[6068] | 0) - $216 >> 2 >>> 0 <= $214 >>> 0) {
   _snprintf(25060, 1024, 27124, $vararg_buffer7) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
  }
  if (!$5) {
   $224 = HEAP32[(HEAP32[$216 + ($214 << 2) >> 2] | 0) + 40 >> 2] | 0;
   if ($224 | 0) {
    FUNCTION_TABLE_vii[$224 & 15]($3, $213);
    STACKTOP = sp;
    return;
   }
  }
  _memcpy($213 | 0, $3 | 0, $4 | 0) | 0;
  STACKTOP = sp;
  return;
 }
 $38 = __ZN2ut4arch13EntityManager23findOrCreateFreshEntityERKNS_6EntityE($0, $1) | 0;
 $40 = $1;
 $45 = HEAP32[$40 + 4 >> 2] | 0;
 $46 = $8;
 HEAP32[$46 >> 2] = HEAP32[$40 >> 2];
 HEAP32[$46 + 4 >> 2] = $45;
 $50 = HEAP32[$6 >> 2] | 0;
 HEAP32[$tmpcast27$byval_copy >> 2] = HEAP32[$8 >> 2];
 HEAP32[$tmpcast27$byval_copy + 4 >> 2] = HEAP32[$8 + 4 >> 2];
 $51 = __ZN2ut4arch19EntityCommandBuffer27addComponentDataRawWithMoveENS_6EntityEjPvi($0 + 40 | 0, $tmpcast27$byval_copy, $50, $3, $4) | 0;
 $52 = $38 + 16 | 0;
 $53 = HEAP32[$6 >> 2] | 0;
 $55 = HEAP32[$38 + 20 >> 2] | 0;
 L25 : do if (!$55) label = 29; else {
  $57 = $55 + -1 | 0;
  $59 = ($57 & $55 | 0) == 0;
  if ($59) $65 = $57 & $53; else if ($53 >>> 0 < $55 >>> 0) $65 = $53; else $65 = ($53 >>> 0) % ($55 >>> 0) | 0;
  $66 = HEAP32[(HEAP32[$52 >> 2] | 0) + ($65 << 2) >> 2] | 0;
  if (!$66) label = 29; else {
   $$02832$i$i = HEAP32[$66 >> 2] | 0;
   if (!$$02832$i$i) label = 29; else {
    L34 : do if ($59) {
     $$02833$us$i$i = $$02832$i$i;
     while (1) {
      $70 = HEAP32[$$02833$us$i$i + 4 >> 2] | 0;
      $71 = ($70 | 0) == ($53 | 0);
      if (!($71 | ($70 & $57 | 0) == ($65 | 0))) {
       label = 29;
       break L25;
      }
      if ($71) if ((HEAP32[$$02833$us$i$i + 8 >> 2] | 0) == ($53 | 0)) break L34;
      $$02833$us$i$i = HEAP32[$$02833$us$i$i >> 2] | 0;
      if (!$$02833$us$i$i) {
       label = 29;
       break L25;
      }
     }
    } else {
     $$02833$i$i = $$02832$i$i;
     while (1) {
      $79 = HEAP32[$$02833$i$i + 4 >> 2] | 0;
      if (($79 | 0) == ($53 | 0)) {
       if ((HEAP32[$$02833$i$i + 8 >> 2] | 0) == ($53 | 0)) break L34;
      } else {
       if ($79 >>> 0 < $55 >>> 0) $84 = $79; else $84 = ($79 >>> 0) % ($55 >>> 0) | 0;
       if (($84 | 0) != ($65 | 0)) {
        label = 29;
        break L25;
       }
      }
      $$02833$i$i = HEAP32[$$02833$i$i >> 2] | 0;
      if (!$$02833$i$i) {
       label = 29;
       break L25;
      }
     }
    } while (0);
    if (!(HEAP32[(__ZNSt3__213unordered_mapIjN2ut4arch13EntityManager11FreshEntity13ComponentEditENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjS5_EEEEEixERSC_($52, $6) | 0) + 4 >> 2] | 0)) $$sink = 2; else label = 29;
   }
  }
 } while (0);
 if ((label | 0) == 29) $$sink = 1;
 $93 = __ZNSt3__213unordered_mapIjN2ut4arch13EntityManager11FreshEntity13ComponentEditENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjS5_EEEEEixERSC_($52, $6) | 0;
 HEAP32[$93 >> 2] = $51;
 HEAP32[$93 + 4 >> 2] = $$sink;
 $94 = $0 + 108 | 0;
 $95 = HEAP32[$6 >> 2] | 0;
 $96 = $0 + 112 | 0;
 $97 = HEAP32[$96 >> 2] | 0;
 $98 = ($97 | 0) == 0;
 L56 : do if ($98) $$0$i$i$i = 0; else {
  $99 = $97 + -1 | 0;
  $101 = ($99 & $97 | 0) == 0;
  if ($101) $107 = $99 & $95; else if ($95 >>> 0 < $97 >>> 0) $107 = $95; else $107 = ($95 >>> 0) % ($97 >>> 0) | 0;
  $108 = HEAP32[(HEAP32[$94 >> 2] | 0) + ($107 << 2) >> 2] | 0;
  if (!$108) $$0$i$i$i = $107; else {
   $$04575$i$i$i = HEAP32[$108 >> 2] | 0;
   if (!$$04575$i$i$i) $$0$i$i$i = $107; else {
    if ($101) {
     $$04576$us$i$i$i = $$04575$i$i$i;
     while (1) {
      $112 = HEAP32[$$04576$us$i$i$i + 4 >> 2] | 0;
      if (!(($112 | 0) == ($95 | 0) | ($112 & $99 | 0) == ($107 | 0))) {
       $$0$i$i$i = $107;
       break L56;
      }
      if ((HEAP32[$$04576$us$i$i$i + 8 >> 2] | 0) == ($95 | 0)) break;
      $$04576$us$i$i$i = HEAP32[$$04576$us$i$i$i >> 2] | 0;
      if (!$$04576$us$i$i$i) {
       $$0$i$i$i = $107;
       break L56;
      }
     }
     STACKTOP = sp;
     return;
    }
    $$04576$i$i$i = $$04575$i$i$i;
    while (1) {
     $122 = HEAP32[$$04576$i$i$i + 4 >> 2] | 0;
     if (($122 | 0) != ($95 | 0)) {
      if ($122 >>> 0 < $97 >>> 0) $127 = $122; else $127 = ($122 >>> 0) % ($97 >>> 0) | 0;
      if (($127 | 0) != ($107 | 0)) {
       $$0$i$i$i = $107;
       break L56;
      }
     }
     if ((HEAP32[$$04576$i$i$i + 8 >> 2] | 0) == ($95 | 0)) break;
     $$04576$i$i$i = HEAP32[$$04576$i$i$i >> 2] | 0;
     if (!$$04576$i$i$i) {
      $$0$i$i$i = $107;
      break L56;
     }
    }
    STACKTOP = sp;
    return;
   }
  }
 } while (0);
 $131 = __Znwj(12) | 0;
 HEAP32[$131 + 8 >> 2] = $95;
 HEAP32[$131 + 4 >> 2] = $95;
 HEAP32[$131 >> 2] = 0;
 $134 = $0 + 120 | 0;
 $137 = +(((HEAP32[$134 >> 2] | 0) + 1 | 0) >>> 0);
 $140 = +HEAPF32[$0 + 124 >> 2];
 do if ($98 | $140 * +($97 >>> 0) < $137) {
  $150 = $97 << 1 | ($97 >>> 0 < 3 | ($97 + -1 & $97 | 0) != 0) & 1;
  $153 = ~~+Math_ceil(+($137 / $140)) >>> 0;
  __ZNSt3__212__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE6rehashEj($94, $150 >>> 0 < $153 >>> 0 ? $153 : $150);
  $155 = HEAP32[$96 >> 2] | 0;
  $156 = $155 + -1 | 0;
  if (!($156 & $155)) {
   $$047$i$i$i = $155;
   $$1$i$i$i = $156 & $95;
   break;
  }
  if ($95 >>> 0 < $155 >>> 0) {
   $$047$i$i$i = $155;
   $$1$i$i$i = $95;
  } else {
   $$047$i$i$i = $155;
   $$1$i$i$i = ($95 >>> 0) % ($155 >>> 0) | 0;
  }
 } else {
  $$047$i$i$i = $97;
  $$1$i$i$i = $$0$i$i$i;
 } while (0);
 $163 = (HEAP32[$94 >> 2] | 0) + ($$1$i$i$i << 2) | 0;
 $164 = HEAP32[$163 >> 2] | 0;
 if (!$164) {
  $166 = $0 + 116 | 0;
  HEAP32[$131 >> 2] = HEAP32[$166 >> 2];
  HEAP32[$166 >> 2] = $131;
  HEAP32[$163 >> 2] = $166;
  $168 = HEAP32[$131 >> 2] | 0;
  if ($168 | 0) {
   $171 = HEAP32[$168 + 4 >> 2] | 0;
   $172 = $$047$i$i$i + -1 | 0;
   if (!($172 & $$047$i$i$i)) $180 = $171 & $172; else if ($171 >>> 0 < $$047$i$i$i >>> 0) $180 = $171; else $180 = ($171 >>> 0) % ($$047$i$i$i >>> 0) | 0;
   $$sink56 = (HEAP32[$94 >> 2] | 0) + ($180 << 2) | 0;
   label = 62;
  }
 } else {
  HEAP32[$131 >> 2] = HEAP32[$164 >> 2];
  $$sink56 = $164;
  label = 62;
 }
 if ((label | 0) == 62) HEAP32[$$sink56 >> 2] = $131;
 HEAP32[$134 >> 2] = (HEAP32[$134 >> 2] | 0) + 1;
 STACKTOP = sp;
 return;
}

function __ZN2ut4arch13EntityManager15hasComponentRawENS_6EntityEj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$020$i$i$i = 0, $$020$i$i$i71 = 0, $$02832$i$i$i = 0, $$02832$i$i$i31 = 0, $$02832$i$i$i49 = 0, $$02833$i$i$i = 0, $$02833$i$i$i40 = 0, $$02833$i$i$i58 = 0, $$02833$us$i$i$i = 0, $$02833$us$i$i$i34 = 0, $$02833$us$i$i$i52 = 0, $$5 = 0, $$sroa$0$0$i$i$i = 0, $$sroa$0$0$i$i$i$pn = 0, $$sroa$0$0$i$i$i$pn$be = 0, $$sroa$0$0$i$i$i45 = 0, $10 = 0, $100 = 0, $101 = 0, $105 = 0, $106 = 0, $114 = 0, $119 = 0, $12 = 0, $125 = 0, $126 = 0, $128 = 0, $131 = 0, $132 = 0, $139 = 0, $142 = 0, $143 = 0, $144 = 0, $153 = 0, $156 = 0, $163 = 0, $165 = 0, $166 = 0, $168 = 0, $171 = 0, $172 = 0, $179 = 0, $182 = 0, $183 = 0, $184 = 0, $19 = 0, $193 = 0, $196 = 0, $20 = 0, $203 = 0, $24 = 0, $25 = 0, $33 = 0, $38 = 0, $43 = 0, $44 = 0, $46 = 0, $48 = 0, $50 = 0, $52 = 0, $59 = 0, $6 = 0, $60 = 0, $64 = 0, $65 = 0, $73 = 0, $78 = 0, $8 = 0, $89 = 0, $9 = 0, $90 = 0, $tmpcast3$i68 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer1 = sp + 16 | 0;
 $vararg_buffer = sp + 8 | 0;
 $tmpcast3$i68 = sp;
 __ZN2ut4arch13EntityManager18assertEntityExistsERKNS_6EntityEjPKcS6_($0, $1, $2, 12166, 12190);
 L1 : do if ((HEAP32[$0 + 36 >> 2] | 0) > 0) {
  $6 = HEAP32[$1 >> 2] | 0;
  $8 = HEAP32[$0 + 132 >> 2] | 0;
  $9 = ($8 | 0) == 0;
  if (!$9) {
   $10 = $8 + -1 | 0;
   $12 = ($10 & $8 | 0) == 0;
   if ($12) $19 = $10 & $6; else if ($6 >>> 0 < $8 >>> 0) $19 = $6; else $19 = ($6 >>> 0) % ($8 >>> 0) | 0;
   $20 = HEAP32[(HEAP32[$0 + 128 >> 2] | 0) + ($19 << 2) >> 2] | 0;
   if ($20 | 0) {
    $$02832$i$i$i = HEAP32[$20 >> 2] | 0;
    if ($$02832$i$i$i | 0) {
     L11 : do if ($12) {
      $$02833$us$i$i$i = $$02832$i$i$i;
      while (1) {
       $24 = HEAP32[$$02833$us$i$i$i + 4 >> 2] | 0;
       $25 = ($24 | 0) == ($6 | 0);
       if (!($25 | ($24 & $10 | 0) == ($19 | 0))) break L1;
       if ($25) if ((HEAP32[$$02833$us$i$i$i + 8 >> 2] | 0) == ($6 | 0)) {
        $$sroa$0$0$i$i$i = $$02833$us$i$i$i;
        break L11;
       }
       $$02833$us$i$i$i = HEAP32[$$02833$us$i$i$i >> 2] | 0;
       if (!$$02833$us$i$i$i) break L1;
      }
     } else {
      $$02833$i$i$i = $$02832$i$i$i;
      while (1) {
       $33 = HEAP32[$$02833$i$i$i + 4 >> 2] | 0;
       if (($33 | 0) == ($6 | 0)) {
        if ((HEAP32[$$02833$i$i$i + 8 >> 2] | 0) == ($6 | 0)) {
         $$sroa$0$0$i$i$i = $$02833$i$i$i;
         break L11;
        }
       } else {
        if ($33 >>> 0 < $8 >>> 0) $38 = $33; else $38 = ($33 >>> 0) % ($8 >>> 0) | 0;
        if (($38 | 0) != ($19 | 0)) break L1;
       }
       $$02833$i$i$i = HEAP32[$$02833$i$i$i >> 2] | 0;
       if (!$$02833$i$i$i) break L1;
      }
     } while (0);
     $43 = $0 + 128 | 0;
     $44 = $8 + -1 | 0;
     $46 = ($44 & $8 | 0) == 0;
     $$sroa$0$0$i$i$i$pn = $$sroa$0$0$i$i$i;
     L30 : while (1) {
      $48 = HEAP32[$$sroa$0$0$i$i$i$pn + 32 >> 2] | 0;
      L32 : do if ($48 | 0) {
       $50 = $48 + -1 | 0;
       $52 = ($50 & $48 | 0) == 0;
       if ($52) $59 = $50 & $2; else if ($48 >>> 0 > $2 >>> 0) $59 = $2; else $59 = ($2 >>> 0) % ($48 >>> 0) | 0;
       $60 = HEAP32[(HEAP32[$$sroa$0$0$i$i$i$pn + 28 >> 2] | 0) + ($59 << 2) >> 2] | 0;
       if ($60 | 0) {
        $$02832$i$i$i31 = HEAP32[$60 >> 2] | 0;
        if ($$02832$i$i$i31 | 0) {
         if ($52) {
          $$02833$us$i$i$i34 = $$02832$i$i$i31;
          while (1) {
           $64 = HEAP32[$$02833$us$i$i$i34 + 4 >> 2] | 0;
           $65 = ($64 | 0) == ($2 | 0);
           if (!($65 | ($64 & $50 | 0) == ($59 | 0))) break L32;
           if ($65) if ((HEAP32[$$02833$us$i$i$i34 + 8 >> 2] | 0) == ($2 | 0)) {
            $$sroa$0$0$i$i$i45 = $$02833$us$i$i$i34;
            label = 44;
            break L30;
           }
           $$02833$us$i$i$i34 = HEAP32[$$02833$us$i$i$i34 >> 2] | 0;
           if (!$$02833$us$i$i$i34) break L32;
          }
         }
         $$02833$i$i$i40 = $$02832$i$i$i31;
         do {
          $73 = HEAP32[$$02833$i$i$i40 + 4 >> 2] | 0;
          if (($73 | 0) == ($2 | 0)) {
           if ((HEAP32[$$02833$i$i$i40 + 8 >> 2] | 0) == ($2 | 0)) {
            $$sroa$0$0$i$i$i45 = $$02833$i$i$i40;
            label = 44;
            break L30;
           }
          } else {
           if ($73 >>> 0 < $48 >>> 0) $78 = $73; else $78 = ($73 >>> 0) % ($48 >>> 0) | 0;
           if (($78 | 0) != ($59 | 0)) break L32;
          }
          $$02833$i$i$i40 = HEAP32[$$02833$i$i$i40 >> 2] | 0;
         } while (($$02833$i$i$i40 | 0) != 0);
        }
       }
      } while (0);
      if (HEAP8[$$sroa$0$0$i$i$i$pn + 60 >> 0] | 0) {
       $$5 = 0;
       label = 86;
       break;
      }
      $89 = $$sroa$0$0$i$i$i$pn + 20 | 0;
      $90 = HEAP32[$89 >> 2] | 0;
      if (!$90) if (!(HEAP32[$$sroa$0$0$i$i$i$pn + 24 >> 2] | 0)) break L1;
      if ($9) {
       label = 68;
       break;
      }
      if ($46) $100 = $44 & $90; else if ($90 >>> 0 < $8 >>> 0) $100 = $90; else $100 = ($90 >>> 0) % ($8 >>> 0) | 0;
      $101 = HEAP32[(HEAP32[$43 >> 2] | 0) + ($100 << 2) >> 2] | 0;
      if (!$101) {
       label = 68;
       break;
      }
      $$02832$i$i$i49 = HEAP32[$101 >> 2] | 0;
      if (!$$02832$i$i$i49) {
       label = 68;
       break;
      }
      L72 : do if ($46) {
       $$02833$us$i$i$i52 = $$02832$i$i$i49;
       while (1) {
        $105 = HEAP32[$$02833$us$i$i$i52 + 4 >> 2] | 0;
        $106 = ($105 | 0) == ($90 | 0);
        if (!($106 | ($105 & $44 | 0) == ($100 | 0))) {
         label = 68;
         break L30;
        }
        if ($106) if ((HEAP32[$$02833$us$i$i$i52 + 8 >> 2] | 0) == ($90 | 0)) {
         $$sroa$0$0$i$i$i$pn$be = $$02833$us$i$i$i52;
         break L72;
        }
        $$02833$us$i$i$i52 = HEAP32[$$02833$us$i$i$i52 >> 2] | 0;
        if (!$$02833$us$i$i$i52) {
         label = 68;
         break L30;
        }
       }
      } else {
       $$02833$i$i$i58 = $$02832$i$i$i49;
       while (1) {
        $114 = HEAP32[$$02833$i$i$i58 + 4 >> 2] | 0;
        if (($114 | 0) == ($90 | 0)) {
         if ((HEAP32[$$02833$i$i$i58 + 8 >> 2] | 0) == ($90 | 0)) {
          $$sroa$0$0$i$i$i$pn$be = $$02833$i$i$i58;
          break L72;
         }
        } else {
         if ($114 >>> 0 < $8 >>> 0) $119 = $114; else $119 = ($114 >>> 0) % ($8 >>> 0) | 0;
         if (($119 | 0) != ($100 | 0)) {
          label = 68;
          break L30;
         }
        }
        $$02833$i$i$i58 = HEAP32[$$02833$i$i$i58 >> 2] | 0;
        if (!$$02833$i$i$i58) {
         label = 68;
         break L30;
        }
       }
      } while (0);
      $$sroa$0$0$i$i$i$pn = $$sroa$0$0$i$i$i$pn$be;
     }
     if ((label | 0) == 44) {
      $$5 = (HEAP32[$$sroa$0$0$i$i$i45 + 16 >> 2] | 0) != 0;
      STACKTOP = sp;
      return $$5 | 0;
     } else if ((label | 0) == 68) {
      $125 = HEAP32[$0 + 8 >> 2] | 0;
      $126 = $89;
      $128 = HEAP32[$126 >> 2] | 0;
      $131 = HEAP32[$126 + 4 >> 2] | 0;
      $132 = $tmpcast3$i68;
      HEAP32[$132 >> 2] = $128;
      HEAP32[$132 + 4 >> 2] = $131;
      __ZN2ut4arch17EntityDataManager19assertEntitiesExistEPKNS_6EntityEj($125, $tmpcast3$i68, 1);
      $139 = HEAP32[(HEAP32[$125 + 20 >> 2] | 0) + ($128 << 4) + 8 >> 2] | 0;
      $142 = HEAP8[($2 & 63) + ($139 + 36) >> 0] | 0;
      $143 = $142 & 255;
      $144 = $139 + 28 | 0;
      if ((HEAP32[$144 >> 2] | 0) <= ($143 | 0)) {
       _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
       HEAP8[26083] = 0;
       __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13990, 14007, 120);
      }
      if (!($142 << 24 >> 24)) label = 72; else if ((HEAP32[(HEAP32[$139 + 32 >> 2] | 0) + ($143 << 4) >> 2] | 0) == ($2 | 0)) $163 = $143; else label = 72;
      L98 : do if ((label | 0) == 72) {
       $153 = HEAP32[$144 >> 2] | 0;
       if (($153 | 0) > 0) {
        $156 = HEAP32[$139 + 32 >> 2] | 0;
        $$020$i$i$i71 = 0;
        while (1) {
         if ((HEAP32[$156 + ($$020$i$i$i71 << 4) >> 2] | 0) == ($2 | 0)) {
          $163 = $$020$i$i$i71;
          break L98;
         }
         $$020$i$i$i71 = $$020$i$i$i71 + 1 | 0;
         if (($$020$i$i$i71 | 0) >= ($153 | 0)) {
          $163 = -1;
          break;
         }
        }
       } else $163 = -1;
      } while (0);
      $$5 = ($163 | 0) != -1;
      STACKTOP = sp;
      return $$5 | 0;
     } else if ((label | 0) == 86) {
      STACKTOP = sp;
      return $$5 | 0;
     }
    }
   }
  }
 } while (0);
 $165 = HEAP32[$0 + 8 >> 2] | 0;
 $166 = $1;
 $168 = HEAP32[$166 >> 2] | 0;
 $171 = HEAP32[$166 + 4 >> 2] | 0;
 $172 = $tmpcast3$i68;
 HEAP32[$172 >> 2] = $168;
 HEAP32[$172 + 4 >> 2] = $171;
 __ZN2ut4arch17EntityDataManager19assertEntitiesExistEPKNS_6EntityEj($165, $tmpcast3$i68, 1);
 $179 = HEAP32[(HEAP32[$165 + 20 >> 2] | 0) + ($168 << 4) + 8 >> 2] | 0;
 $182 = HEAP8[($2 & 63) + ($179 + 36) >> 0] | 0;
 $183 = $182 & 255;
 $184 = $179 + 28 | 0;
 if ((HEAP32[$184 >> 2] | 0) <= ($183 | 0)) {
  _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13990, 14007, 120);
 }
 if (!($182 << 24 >> 24)) label = 81; else if ((HEAP32[(HEAP32[$179 + 32 >> 2] | 0) + ($183 << 4) >> 2] | 0) == ($2 | 0)) $203 = $183; else label = 81;
 L115 : do if ((label | 0) == 81) {
  $193 = HEAP32[$184 >> 2] | 0;
  if (($193 | 0) > 0) {
   $196 = HEAP32[$179 + 32 >> 2] | 0;
   $$020$i$i$i = 0;
   while (1) {
    if ((HEAP32[$196 + ($$020$i$i$i << 4) >> 2] | 0) == ($2 | 0)) {
     $203 = $$020$i$i$i;
     break L115;
    }
    $$020$i$i$i = $$020$i$i$i + 1 | 0;
    if (($$020$i$i$i | 0) >= ($193 | 0)) {
     $203 = -1;
     break;
    }
   }
  } else $203 = -1;
 } while (0);
 $$5 = ($203 | 0) != -1;
 STACKTOP = sp;
 return $$5 | 0;
}

function __ZNSt3__227__insertion_sort_incompleteIRNS_6__lessIN2ut4arch13ComponentSpecES4_EEPS4_EEbT0_S8_T_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i75 = 0, $$0$i$i31$i = 0, $$0$i$i31$i77 = 0, $$06295 = 0, $$06494 = 0, $$06992 = 0, $$06992$phi = 0, $$165 = 0, $$5 = 0, $$lcssa = 0, $$pre = 0, $101 = 0, $105 = 0, $107 = 0, $110 = 0, $111 = 0, $116 = 0, $117 = 0, $121 = 0, $125 = 0, $130 = 0, $131 = 0, $135 = 0, $139 = 0, $145 = 0, $150 = 0, $151 = 0, $155 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $177 = 0, $185 = 0, $187 = 0, $19 = 0, $190 = 0, $191 = 0, $193 = 0, $196 = 0, $197 = 0, $201 = 0, $210 = 0, $212 = 0, $215 = 0, $216 = 0, $22 = 0, $220 = 0, $224 = 0, $226 = 0, $229 = 0, $23 = 0, $230 = 0, $235 = 0, $236 = 0, $240 = 0, $244 = 0, $249 = 0, $250 = 0, $254 = 0, $263 = 0, $268 = 0, $269 = 0, $273 = 0, $277 = 0, $279 = 0, $28 = 0, $281 = 0, $288 = 0, $29 = 0, $290 = 0, $293 = 0, $294 = 0, $299 = 0, $300 = 0, $305 = 0, $306 = 0, $307 = 0, $313 = 0, $318 = 0, $319 = 0, $320 = 0, $325 = 0, $329 = 0, $33 = 0, $331 = 0, $335 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $48 = 0, $56 = 0, $58 = 0, $61 = 0, $62 = 0, $67 = 0, $68 = 0, $7 = 0, $72 = 0, $76 = 0, $77 = 0, $8 = 0, $85 = 0, $87 = 0, $9 = 0, $90 = 0, $91 = 0, $96 = 0, $97 = 0, label = 0, $306$looptemp = 0, $319$looptemp = 0;
 switch ($1 - $0 >> 3 | 0) {
 case 2:
  {
   $7 = $1 + -8 | 0;
   $8 = HEAP32[$7 >> 2] | 0;
   $9 = HEAP32[$0 >> 2] | 0;
   if (($8 | 0) == ($9 | 0)) {
    if ((HEAP32[$1 + -4 >> 2] | 0) >= (HEAP32[$0 + 4 >> 2] | 0)) {
     $$5 = 1;
     return $$5 | 0;
    }
   } else if ($8 >>> 0 >= $9 >>> 0) {
    $$5 = 1;
    return $$5 | 0;
   }
   $17 = $0;
   $19 = HEAP32[$17 >> 2] | 0;
   $22 = HEAP32[$17 + 4 >> 2] | 0;
   $23 = $7;
   $28 = HEAP32[$23 + 4 >> 2] | 0;
   $29 = $0;
   HEAP32[$29 >> 2] = HEAP32[$23 >> 2];
   HEAP32[$29 + 4 >> 2] = $28;
   $33 = $7;
   HEAP32[$33 >> 2] = $19;
   HEAP32[$33 + 4 >> 2] = $22;
   $$5 = 1;
   return $$5 | 0;
  }
 case 3:
  {
   $37 = $0 + 8 | 0;
   $38 = $1 + -8 | 0;
   $39 = HEAP32[$37 >> 2] | 0;
   $40 = HEAP32[$0 >> 2] | 0;
   if (($39 | 0) == ($40 | 0)) $$0$i$i$i75 = (HEAP32[$0 + 12 >> 2] | 0) < (HEAP32[$0 + 4 >> 2] | 0); else $$0$i$i$i75 = $39 >>> 0 < $40 >>> 0;
   $48 = HEAP32[$38 >> 2] | 0;
   if (($48 | 0) == ($39 | 0)) $$0$i$i31$i77 = (HEAP32[$1 + -4 >> 2] | 0) < (HEAP32[$0 + 12 >> 2] | 0); else $$0$i$i31$i77 = $48 >>> 0 < $39 >>> 0;
   if (!$$0$i$i$i75) {
    if (!$$0$i$i31$i77) {
     $$5 = 1;
     return $$5 | 0;
    }
    $56 = $37;
    $58 = HEAP32[$56 >> 2] | 0;
    $61 = HEAP32[$56 + 4 >> 2] | 0;
    $62 = $38;
    $67 = HEAP32[$62 + 4 >> 2] | 0;
    $68 = $37;
    HEAP32[$68 >> 2] = HEAP32[$62 >> 2];
    HEAP32[$68 + 4 >> 2] = $67;
    $72 = $38;
    HEAP32[$72 >> 2] = $58;
    HEAP32[$72 + 4 >> 2] = $61;
    $76 = HEAP32[$37 >> 2] | 0;
    $77 = HEAP32[$0 >> 2] | 0;
    if (($76 | 0) == ($77 | 0)) {
     if ((HEAP32[$0 + 12 >> 2] | 0) >= (HEAP32[$0 + 4 >> 2] | 0)) {
      $$5 = 1;
      return $$5 | 0;
     }
    } else if ($76 >>> 0 >= $77 >>> 0) {
     $$5 = 1;
     return $$5 | 0;
    }
    $85 = $0;
    $87 = HEAP32[$85 >> 2] | 0;
    $90 = HEAP32[$85 + 4 >> 2] | 0;
    $91 = $37;
    $96 = HEAP32[$91 + 4 >> 2] | 0;
    $97 = $0;
    HEAP32[$97 >> 2] = HEAP32[$91 >> 2];
    HEAP32[$97 + 4 >> 2] = $96;
    $101 = $37;
    HEAP32[$101 >> 2] = $87;
    HEAP32[$101 + 4 >> 2] = $90;
    $$5 = 1;
    return $$5 | 0;
   }
   $105 = $0;
   $107 = HEAP32[$105 >> 2] | 0;
   $110 = HEAP32[$105 + 4 >> 2] | 0;
   if ($$0$i$i31$i77) {
    $111 = $38;
    $116 = HEAP32[$111 + 4 >> 2] | 0;
    $117 = $0;
    HEAP32[$117 >> 2] = HEAP32[$111 >> 2];
    HEAP32[$117 + 4 >> 2] = $116;
    $121 = $38;
    HEAP32[$121 >> 2] = $107;
    HEAP32[$121 + 4 >> 2] = $110;
    $$5 = 1;
    return $$5 | 0;
   }
   $125 = $37;
   $130 = HEAP32[$125 + 4 >> 2] | 0;
   $131 = $0;
   HEAP32[$131 >> 2] = HEAP32[$125 >> 2];
   HEAP32[$131 + 4 >> 2] = $130;
   $135 = $37;
   HEAP32[$135 >> 2] = $107;
   HEAP32[$135 + 4 >> 2] = $110;
   $139 = HEAP32[$38 >> 2] | 0;
   if (($139 | 0) == ($107 | 0)) {
    if ((HEAP32[$1 + -4 >> 2] | 0) >= ($110 | 0)) {
     $$5 = 1;
     return $$5 | 0;
    }
   } else if ($139 >>> 0 >= $107 >>> 0) {
    $$5 = 1;
    return $$5 | 0;
   }
   $145 = $38;
   $150 = HEAP32[$145 + 4 >> 2] | 0;
   $151 = $37;
   HEAP32[$151 >> 2] = HEAP32[$145 >> 2];
   HEAP32[$151 + 4 >> 2] = $150;
   $155 = $38;
   HEAP32[$155 >> 2] = $107;
   HEAP32[$155 + 4 >> 2] = $110;
   $$5 = 1;
   return $$5 | 0;
  }
 case 4:
  {
   __ZNSt3__27__sort4IRNS_6__lessIN2ut4arch13ComponentSpecES4_EEPS4_EEjT0_S8_S8_S8_T_($0, $0 + 8 | 0, $0 + 16 | 0, $1 + -8 | 0, $2) | 0;
   $$5 = 1;
   return $$5 | 0;
  }
 case 5:
  {
   __ZNSt3__27__sort5IRNS_6__lessIN2ut4arch13ComponentSpecES4_EEPS4_EEjT0_S8_S8_S8_S8_T_($0, $0 + 8 | 0, $0 + 16 | 0, $0 + 24 | 0, $1 + -8 | 0, $2) | 0;
   $$5 = 1;
   return $$5 | 0;
  }
 case 1:
 case 0:
  {
   $$5 = 1;
   return $$5 | 0;
  }
 default:
  {
   $166 = $0 + 16 | 0;
   $167 = $0 + 8 | 0;
   $168 = HEAP32[$167 >> 2] | 0;
   $169 = HEAP32[$0 >> 2] | 0;
   if (($168 | 0) == ($169 | 0)) $$0$i$i$i = (HEAP32[$0 + 12 >> 2] | 0) < (HEAP32[$0 + 4 >> 2] | 0); else $$0$i$i$i = $168 >>> 0 < $169 >>> 0;
   $177 = HEAP32[$166 >> 2] | 0;
   if (($177 | 0) == ($168 | 0)) $$0$i$i31$i = (HEAP32[$0 + 20 >> 2] | 0) < (HEAP32[$0 + 12 >> 2] | 0); else $$0$i$i31$i = $177 >>> 0 < $168 >>> 0;
   do if ($$0$i$i$i) {
    $224 = $0;
    $226 = HEAP32[$224 >> 2] | 0;
    $229 = HEAP32[$224 + 4 >> 2] | 0;
    if ($$0$i$i31$i) {
     $230 = $166;
     $235 = HEAP32[$230 + 4 >> 2] | 0;
     $236 = $0;
     HEAP32[$236 >> 2] = HEAP32[$230 >> 2];
     HEAP32[$236 + 4 >> 2] = $235;
     $240 = $166;
     HEAP32[$240 >> 2] = $226;
     HEAP32[$240 + 4 >> 2] = $229;
     $335 = $226;
     break;
    }
    $244 = $167;
    $249 = HEAP32[$244 + 4 >> 2] | 0;
    $250 = $0;
    HEAP32[$250 >> 2] = HEAP32[$244 >> 2];
    HEAP32[$250 + 4 >> 2] = $249;
    $254 = $167;
    HEAP32[$254 >> 2] = $226;
    HEAP32[$254 + 4 >> 2] = $229;
    if (($177 | 0) == ($226 | 0)) {
     if ((HEAP32[$0 + 20 >> 2] | 0) >= ($229 | 0)) {
      $335 = $177;
      break;
     }
    } else if ($177 >>> 0 >= $226 >>> 0) {
     $335 = $177;
     break;
    }
    $263 = $166;
    $268 = HEAP32[$263 + 4 >> 2] | 0;
    $269 = $167;
    HEAP32[$269 >> 2] = HEAP32[$263 >> 2];
    HEAP32[$269 + 4 >> 2] = $268;
    $273 = $166;
    HEAP32[$273 >> 2] = $226;
    HEAP32[$273 + 4 >> 2] = $229;
    $335 = $226;
   } else if ($$0$i$i31$i) {
    $185 = $167;
    $187 = HEAP32[$185 >> 2] | 0;
    $190 = HEAP32[$185 + 4 >> 2] | 0;
    $191 = $166;
    $193 = HEAP32[$191 >> 2] | 0;
    $196 = HEAP32[$191 + 4 >> 2] | 0;
    $197 = $167;
    HEAP32[$197 >> 2] = $193;
    HEAP32[$197 + 4 >> 2] = $196;
    $201 = $166;
    HEAP32[$201 >> 2] = $187;
    HEAP32[$201 + 4 >> 2] = $190;
    if (($169 | 0) == ($193 | 0)) {
     if ((HEAP32[$0 + 4 >> 2] | 0) <= ($196 | 0)) {
      $335 = $187;
      break;
     }
    } else if ($169 >>> 0 <= $193 >>> 0) {
     $335 = $187;
     break;
    }
    $210 = $0;
    $212 = HEAP32[$210 >> 2] | 0;
    $215 = HEAP32[$210 + 4 >> 2] | 0;
    $216 = $0;
    HEAP32[$216 >> 2] = $193;
    HEAP32[$216 + 4 >> 2] = $196;
    $220 = $167;
    HEAP32[$220 >> 2] = $212;
    HEAP32[$220 + 4 >> 2] = $215;
    $335 = $187;
   } else $335 = $177; while (0);
   $277 = $0 + 24 | 0;
   if (($277 | 0) == ($1 | 0)) {
    $$5 = 1;
    return $$5 | 0;
   }
   $$06295 = $277;
   $$06494 = 0;
   $$06992 = $166;
   $281 = $335;
   while (1) {
    $279 = HEAP32[$$06295 >> 2] | 0;
    if (($279 | 0) == ($281 | 0)) if ((HEAP32[$$06295 + 4 >> 2] | 0) < (HEAP32[$$06992 + 4 >> 2] | 0)) label = 49; else $$165 = $$06494; else if ($279 >>> 0 < $281 >>> 0) label = 49; else $$165 = $$06494;
    if ((label | 0) == 49) {
     label = 0;
     $288 = $$06295;
     $290 = HEAP32[$288 >> 2] | 0;
     $293 = HEAP32[$288 + 4 >> 2] | 0;
     $294 = $$06992;
     $299 = HEAP32[$294 + 4 >> 2] | 0;
     $300 = $$06295;
     HEAP32[$300 >> 2] = HEAP32[$294 >> 2];
     HEAP32[$300 + 4 >> 2] = $299;
     L37 : do if (($$06992 | 0) == ($0 | 0)) $$lcssa = $$06992; else {
      $306 = $$06992;
      $319 = $$06992;
      while (1) {
       $306$looptemp = $306;
       $319$looptemp = $319;
       $305 = $306 + -8 | 0;
       $307 = HEAP32[$305 >> 2] | 0;
       if (($307 | 0) == ($290 | 0)) {
        if ((HEAP32[$306$looptemp + -4 >> 2] | 0) <= ($293 | 0)) {
         $$lcssa = $319$looptemp;
         break L37;
        }
       } else if ($307 >>> 0 <= $290 >>> 0) {
        $$lcssa = $319$looptemp;
        break L37;
       }
       $313 = $305;
       $318 = HEAP32[$313 + 4 >> 2] | 0;
       $320 = $319$looptemp;
       HEAP32[$320 >> 2] = HEAP32[$313 >> 2];
       HEAP32[$320 + 4 >> 2] = $318;
       if (($305 | 0) == ($0 | 0)) {
        $$lcssa = $0;
        break;
       } else {
        $306 = $305;
        $319 = $305;
       }
      }
     } while (0);
     $325 = $$lcssa;
     HEAP32[$325 >> 2] = $290;
     HEAP32[$325 + 4 >> 2] = $293;
     $329 = $$06494 + 1 | 0;
     if (($329 | 0) == 8) break; else $$165 = $329;
    }
    $331 = $$06295 + 8 | 0;
    if (($331 | 0) == ($1 | 0)) {
     $$5 = 1;
     label = 59;
     break;
    }
    $$pre = HEAP32[$$06295 >> 2] | 0;
    $$06992$phi = $$06295;
    $$06295 = $331;
    $$06494 = $$165;
    $281 = $$pre;
    $$06992 = $$06992$phi;
   }
   if ((label | 0) == 59) return $$5 | 0;
   $$5 = ($$06295 + 8 | 0) == ($1 | 0);
   return $$5 | 0;
  }
 }
 return 0;
}

function __ZN2ut4arch13EntityManager19addComponentDataRawENS_6EntityEjPKvj($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i$i = 0, $$02832$i$i = 0, $$02833$i$i = 0, $$02833$us$i$i = 0, $$04575$i$i$i = 0, $$04576$i$i$i = 0, $$04576$us$i$i$i = 0, $$047$i$i$i = 0, $$1$i$i$i = 0, $$sink = 0, $$sink54 = 0, $101 = 0, $105 = 0, $108 = 0, $111 = 0.0, $114 = 0.0, $12 = 0, $124 = 0, $127 = 0, $129 = 0, $130 = 0, $137 = 0, $138 = 0, $14 = 0, $140 = 0, $142 = 0, $145 = 0, $146 = 0, $154 = 0, $158 = 0, $163 = 0, $164 = 0, $169 = 0, $170 = 0, $174 = 0, $175 = 0, $176 = 0, $181 = 0, $182 = 0, $186 = 0, $187 = 0, $188 = 0, $19 = 0, $190 = 0, $196 = 0, $197 = 0, $198 = 0, $20 = 0, $201 = 0, $207 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $29 = 0, $31 = 0, $33 = 0, $39 = 0, $40 = 0, $44 = 0, $45 = 0, $5 = 0, $53 = 0, $58 = 0, $6 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $75 = 0, $8 = 0, $81 = 0, $82 = 0, $86 = 0, $96 = 0, $tmpcast25$byval_copy = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $tmpcast25$byval_copy = sp + 40 | 0;
 $vararg_buffer1 = sp + 32 | 0;
 $vararg_buffer = sp + 16 | 0;
 $5 = sp + 36 | 0;
 $6 = sp + 24 | 0;
 $7 = sp + 8 | 0;
 $8 = sp;
 HEAP32[$5 >> 2] = $2;
 __ZN2ut4arch13EntityManager18assertEntityExistsERKNS_6EntityEjPKcS6_($0, $1, $2, 11640, 11668);
 __ZN2ut4arch13EntityManager32assertEntityDoesNotHaveComponentERKNS_6EntityEjPKc($0, $1, $2, 11640);
 if ((HEAP32[$0 + 36 >> 2] | 0) <= 0) {
  $158 = $0 + 8 | 0;
  if ((HEAP32[(HEAP32[$158 >> 2] | 0) + 44 >> 2] | 0) > 0) {
   _snprintf(25060, 1024, 8878, $vararg_buffer) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8949, 6920, 35);
  }
  $163 = HEAP32[$158 >> 2] | 0;
  $164 = $1;
  $169 = HEAP32[$164 + 4 >> 2] | 0;
  $170 = $7;
  HEAP32[$170 >> 2] = HEAP32[$164 >> 2];
  HEAP32[$170 + 4 >> 2] = $169;
  $174 = HEAP32[$5 >> 2] | 0;
  HEAP32[$tmpcast25$byval_copy >> 2] = HEAP32[$7 >> 2];
  HEAP32[$tmpcast25$byval_copy + 4 >> 2] = HEAP32[$7 + 4 >> 2];
  __ZN2ut4arch17EntityDataManager12addComponentENS_6EntityEj($163, $tmpcast25$byval_copy, $174);
  $175 = HEAP32[$158 >> 2] | 0;
  $176 = $1;
  $181 = HEAP32[$176 + 4 >> 2] | 0;
  $182 = $8;
  HEAP32[$182 >> 2] = HEAP32[$176 >> 2];
  HEAP32[$182 + 4 >> 2] = $181;
  $186 = HEAP32[$5 >> 2] | 0;
  HEAP32[$tmpcast25$byval_copy >> 2] = HEAP32[$8 >> 2];
  HEAP32[$tmpcast25$byval_copy + 4 >> 2] = HEAP32[$8 + 4 >> 2];
  $187 = __ZN2ut4arch17EntityDataManager24getComponentDataWithTypeENS_6EntityEj($175, $tmpcast25$byval_copy, $186) | 0;
  $188 = HEAP32[$5 >> 2] | 0;
  $190 = HEAP32[6067] | 0;
  if ((HEAP32[6068] | 0) - $190 >> 2 >>> 0 <= $188 >>> 0) {
   _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
  }
  $196 = HEAP32[$190 + ($188 << 2) >> 2] | 0;
  $197 = $196 + 36 | 0;
  $198 = HEAP32[$197 >> 2] | 0;
  if (!$198) {
   _memcpy($187 | 0, $3 | 0, $4 | 0) | 0;
   STACKTOP = sp;
   return;
  }
  $201 = HEAP32[$196 + 32 >> 2] | 0;
  if (!$201) $207 = $198; else {
   FUNCTION_TABLE_vii[$201 & 15]($187, HEAP32[$196 + 48 >> 2] | 0);
   $207 = HEAP32[$197 >> 2] | 0;
  }
  FUNCTION_TABLE_viii[$207 & 31]($3, $187, HEAP32[$196 + 44 >> 2] | 0);
  STACKTOP = sp;
  return;
 }
 $12 = __ZN2ut4arch13EntityManager23findOrCreateFreshEntityERKNS_6EntityE($0, $1) | 0;
 $14 = $1;
 $19 = HEAP32[$14 + 4 >> 2] | 0;
 $20 = $6;
 HEAP32[$20 >> 2] = HEAP32[$14 >> 2];
 HEAP32[$20 + 4 >> 2] = $19;
 $24 = HEAP32[$5 >> 2] | 0;
 HEAP32[$tmpcast25$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$tmpcast25$byval_copy + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 $25 = __ZN2ut4arch19EntityCommandBuffer19addComponentDataRawENS_6EntityEjPKvi($0 + 40 | 0, $tmpcast25$byval_copy, $24, $3, $4) | 0;
 $26 = $12 + 16 | 0;
 $27 = HEAP32[$5 >> 2] | 0;
 $29 = HEAP32[$12 + 20 >> 2] | 0;
 L18 : do if (!$29) label = 23; else {
  $31 = $29 + -1 | 0;
  $33 = ($31 & $29 | 0) == 0;
  if ($33) $39 = $31 & $27; else if ($27 >>> 0 < $29 >>> 0) $39 = $27; else $39 = ($27 >>> 0) % ($29 >>> 0) | 0;
  $40 = HEAP32[(HEAP32[$26 >> 2] | 0) + ($39 << 2) >> 2] | 0;
  if (!$40) label = 23; else {
   $$02832$i$i = HEAP32[$40 >> 2] | 0;
   if (!$$02832$i$i) label = 23; else {
    L27 : do if ($33) {
     $$02833$us$i$i = $$02832$i$i;
     while (1) {
      $44 = HEAP32[$$02833$us$i$i + 4 >> 2] | 0;
      $45 = ($44 | 0) == ($27 | 0);
      if (!($45 | ($44 & $31 | 0) == ($39 | 0))) {
       label = 23;
       break L18;
      }
      if ($45) if ((HEAP32[$$02833$us$i$i + 8 >> 2] | 0) == ($27 | 0)) break L27;
      $$02833$us$i$i = HEAP32[$$02833$us$i$i >> 2] | 0;
      if (!$$02833$us$i$i) {
       label = 23;
       break L18;
      }
     }
    } else {
     $$02833$i$i = $$02832$i$i;
     while (1) {
      $53 = HEAP32[$$02833$i$i + 4 >> 2] | 0;
      if (($53 | 0) == ($27 | 0)) {
       if ((HEAP32[$$02833$i$i + 8 >> 2] | 0) == ($27 | 0)) break L27;
      } else {
       if ($53 >>> 0 < $29 >>> 0) $58 = $53; else $58 = ($53 >>> 0) % ($29 >>> 0) | 0;
       if (($58 | 0) != ($39 | 0)) {
        label = 23;
        break L18;
       }
      }
      $$02833$i$i = HEAP32[$$02833$i$i >> 2] | 0;
      if (!$$02833$i$i) {
       label = 23;
       break L18;
      }
     }
    } while (0);
    if (!(HEAP32[(__ZNSt3__213unordered_mapIjN2ut4arch13EntityManager11FreshEntity13ComponentEditENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjS5_EEEEEixERSC_($26, $5) | 0) + 4 >> 2] | 0)) $$sink = 2; else label = 23;
   }
  }
 } while (0);
 if ((label | 0) == 23) $$sink = 1;
 $67 = __ZNSt3__213unordered_mapIjN2ut4arch13EntityManager11FreshEntity13ComponentEditENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjS5_EEEEEixERSC_($26, $5) | 0;
 HEAP32[$67 >> 2] = $25;
 HEAP32[$67 + 4 >> 2] = $$sink;
 $68 = $0 + 108 | 0;
 $69 = HEAP32[$5 >> 2] | 0;
 $70 = $0 + 112 | 0;
 $71 = HEAP32[$70 >> 2] | 0;
 $72 = ($71 | 0) == 0;
 L49 : do if ($72) $$0$i$i$i = 0; else {
  $73 = $71 + -1 | 0;
  $75 = ($73 & $71 | 0) == 0;
  if ($75) $81 = $73 & $69; else if ($69 >>> 0 < $71 >>> 0) $81 = $69; else $81 = ($69 >>> 0) % ($71 >>> 0) | 0;
  $82 = HEAP32[(HEAP32[$68 >> 2] | 0) + ($81 << 2) >> 2] | 0;
  if (!$82) $$0$i$i$i = $81; else {
   $$04575$i$i$i = HEAP32[$82 >> 2] | 0;
   if (!$$04575$i$i$i) $$0$i$i$i = $81; else {
    if ($75) {
     $$04576$us$i$i$i = $$04575$i$i$i;
     while (1) {
      $86 = HEAP32[$$04576$us$i$i$i + 4 >> 2] | 0;
      if (!(($86 | 0) == ($69 | 0) | ($86 & $73 | 0) == ($81 | 0))) {
       $$0$i$i$i = $81;
       break L49;
      }
      if ((HEAP32[$$04576$us$i$i$i + 8 >> 2] | 0) == ($69 | 0)) break;
      $$04576$us$i$i$i = HEAP32[$$04576$us$i$i$i >> 2] | 0;
      if (!$$04576$us$i$i$i) {
       $$0$i$i$i = $81;
       break L49;
      }
     }
     STACKTOP = sp;
     return;
    }
    $$04576$i$i$i = $$04575$i$i$i;
    while (1) {
     $96 = HEAP32[$$04576$i$i$i + 4 >> 2] | 0;
     if (($96 | 0) != ($69 | 0)) {
      if ($96 >>> 0 < $71 >>> 0) $101 = $96; else $101 = ($96 >>> 0) % ($71 >>> 0) | 0;
      if (($101 | 0) != ($81 | 0)) {
       $$0$i$i$i = $81;
       break L49;
      }
     }
     if ((HEAP32[$$04576$i$i$i + 8 >> 2] | 0) == ($69 | 0)) break;
     $$04576$i$i$i = HEAP32[$$04576$i$i$i >> 2] | 0;
     if (!$$04576$i$i$i) {
      $$0$i$i$i = $81;
      break L49;
     }
    }
    STACKTOP = sp;
    return;
   }
  }
 } while (0);
 $105 = __Znwj(12) | 0;
 HEAP32[$105 + 8 >> 2] = $69;
 HEAP32[$105 + 4 >> 2] = $69;
 HEAP32[$105 >> 2] = 0;
 $108 = $0 + 120 | 0;
 $111 = +(((HEAP32[$108 >> 2] | 0) + 1 | 0) >>> 0);
 $114 = +HEAPF32[$0 + 124 >> 2];
 do if ($72 | $114 * +($71 >>> 0) < $111) {
  $124 = $71 << 1 | ($71 >>> 0 < 3 | ($71 + -1 & $71 | 0) != 0) & 1;
  $127 = ~~+Math_ceil(+($111 / $114)) >>> 0;
  __ZNSt3__212__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE6rehashEj($68, $124 >>> 0 < $127 >>> 0 ? $127 : $124);
  $129 = HEAP32[$70 >> 2] | 0;
  $130 = $129 + -1 | 0;
  if (!($130 & $129)) {
   $$047$i$i$i = $129;
   $$1$i$i$i = $130 & $69;
   break;
  }
  if ($69 >>> 0 < $129 >>> 0) {
   $$047$i$i$i = $129;
   $$1$i$i$i = $69;
  } else {
   $$047$i$i$i = $129;
   $$1$i$i$i = ($69 >>> 0) % ($129 >>> 0) | 0;
  }
 } else {
  $$047$i$i$i = $71;
  $$1$i$i$i = $$0$i$i$i;
 } while (0);
 $137 = (HEAP32[$68 >> 2] | 0) + ($$1$i$i$i << 2) | 0;
 $138 = HEAP32[$137 >> 2] | 0;
 if (!$138) {
  $140 = $0 + 116 | 0;
  HEAP32[$105 >> 2] = HEAP32[$140 >> 2];
  HEAP32[$140 >> 2] = $105;
  HEAP32[$137 >> 2] = $140;
  $142 = HEAP32[$105 >> 2] | 0;
  if ($142 | 0) {
   $145 = HEAP32[$142 + 4 >> 2] | 0;
   $146 = $$047$i$i$i + -1 | 0;
   if (!($146 & $$047$i$i$i)) $154 = $145 & $146; else if ($145 >>> 0 < $$047$i$i$i >>> 0) $154 = $145; else $154 = ($145 >>> 0) % ($$047$i$i$i >>> 0) | 0;
   $$sink54 = (HEAP32[$68 >> 2] | 0) + ($154 << 2) | 0;
   label = 56;
  }
 } else {
  HEAP32[$105 >> 2] = HEAP32[$138 >> 2];
  $$sink54 = $138;
  label = 56;
 }
 if ((label | 0) == 56) HEAP32[$$sink54 >> 2] = $105;
 HEAP32[$108 >> 2] = (HEAP32[$108 >> 2] | 0) + 1;
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_117parse_vector_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $$0$i$i$add$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i131 = 0, $$0$i$i$i135 = 0, $$0$i$i$i139 = 0, $$0$i$i$i144 = 0, $$0$i$i$idx$i = 0, $$2103 = 0, $$899$ph = 0, $$9 = 0, $104 = 0, $105 = 0, $16 = 0, $17 = 0, $19 = 0, $25 = 0, $26 = 0, $3 = 0, $30 = 0, $33 = 0, $4 = 0, $45 = 0, $46 = 0, $5 = 0, $53 = 0, $6 = 0, $60 = 0, $61 = 0, $70 = 0, $73 = 0, $74 = 0, $77 = 0, $80 = 0, $84 = 0, $90 = 0, $92 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $3 = sp + 40 | 0;
 $4 = sp + 12 | 0;
 $5 = sp;
 $6 = sp + 24 | 0;
 L1 : do if (($1 - $0 | 0) > 3) if ((HEAP8[$0 >> 0] | 0) == 68) if ((HEAP8[$0 + 1 >> 0] | 0) == 118) {
  $16 = $0 + 2 | 0;
  $17 = HEAP8[$16 >> 0] | 0;
  if (($17 + -49 & 255) < 9) {
   $19 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($16, $1) | 0;
   if (($19 | 0) == ($1 | 0)) {
    $$9 = $0;
    break;
   }
   if ((HEAP8[$19 >> 0] | 0) != 95) {
    $$9 = $0;
    break;
   }
   $25 = $19 - $16 | 0;
   $26 = $19 + 1 | 0;
   if (($26 | 0) == ($1 | 0)) {
    $$9 = $0;
    break;
   }
   if ((HEAP8[$26 >> 0] | 0) != 112) {
    $30 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($26, $1, $2) | 0;
    if (($30 | 0) == ($26 | 0)) {
     $$9 = $0;
     break;
    }
    $33 = $2 + 4 | 0;
    if ((HEAP32[$2 >> 2] | 0) == (HEAP32[$33 >> 2] | 0)) {
     $$9 = $0;
     break;
    };
    HEAP32[$5 >> 2] = 0;
    HEAP32[$5 + 4 >> 2] = 0;
    HEAP32[$5 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($5, $16, $25);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($5, 0, 22315) | 0;
    HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$5 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($4, 22324) | 0;
    HEAP32[$3 >> 2] = HEAP32[$4 >> 2];
    HEAP32[$3 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
    HEAP32[$3 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
    $$0$i$i$i131 = 0;
    while (1) {
     if (($$0$i$i$i131 | 0) == 3) break;
     HEAP32[$4 + ($$0$i$i$i131 << 2) >> 2] = 0;
     $$0$i$i$i131 = $$0$i$i$i131 + 1 | 0;
    }
    $45 = HEAP8[$3 + 11 >> 0] | 0;
    $46 = $45 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[$33 >> 2] | 0) + -24 | 0, $46 ? HEAP32[$3 >> 2] | 0 : $3, $46 ? HEAP32[$3 + 4 >> 2] | 0 : $45 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    $$9 = $30;
    break;
   }
   $53 = $19 + 2 | 0;
   HEAP32[$5 >> 2] = 0;
   HEAP32[$5 + 4 >> 2] = 0;
   HEAP32[$5 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($5, $16, $25);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($5, 0, 22326) | 0;
   HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
   HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
   HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
   $$0$i$i$i135 = 0;
   while (1) {
    if (($$0$i$i$i135 | 0) == 3) break;
    HEAP32[$5 + ($$0$i$i$i135 << 2) >> 2] = 0;
    $$0$i$i$i135 = $$0$i$i$i135 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($4, 22324) | 0;
   HEAP32[$6 >> 2] = HEAP32[$4 >> 2];
   HEAP32[$6 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
   HEAP32[$6 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
   $$0$i$i$i139 = 0;
   while (1) {
    if (($$0$i$i$i139 | 0) == 3) break;
    HEAP32[$4 + ($$0$i$i$i139 << 2) >> 2] = 0;
    $$0$i$i$i139 = $$0$i$i$i139 + 1 | 0;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $6);
   $60 = $2 + 4 | 0;
   $61 = HEAP32[$60 >> 2] | 0;
   if ($61 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($61, $3);
    HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
   $$9 = $53;
   break;
  };
  HEAP32[$4 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  $$0$i$i = 0;
  while (1) {
   if (($$0$i$i | 0) == 3) break;
   HEAP32[$4 + ($$0$i$i << 2) >> 2] = 0;
   $$0$i$i = $$0$i$i + 1 | 0;
  }
  if ($17 << 24 >> 24 == 95) {
   $$2103 = $16;
   label = 44;
  } else {
   $70 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($16, $1, $2) | 0;
   if (($70 | 0) == ($16 | 0)) {
    $$2103 = $16;
    label = 44;
   } else {
    $73 = $2 + 4 | 0;
    $74 = HEAP32[$73 >> 2] | 0;
    if ((HEAP32[$2 >> 2] | 0) != ($74 | 0)) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($5, $74 + -24 | 0);
     $77 = $4 + 11 | 0;
     if ((HEAP8[$77 >> 0] | 0) < 0) {
      $80 = HEAP32[$4 >> 2] | 0;
      HEAP8[$3 >> 0] = 0;
      __ZNSt3__211char_traitsIcE6assignERcRKc($80, $3);
      HEAP32[$4 + 4 >> 2] = 0;
     } else {
      HEAP8[$3 >> 0] = 0;
      __ZNSt3__211char_traitsIcE6assignERcRKc($4, $3);
      HEAP8[$77 >> 0] = 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEj($4);
     HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
     HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
     HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
     $$0$i$i$i$i = 0;
     while (1) {
      if (($$0$i$i$i$i | 0) == 3) break;
      HEAP32[$5 + ($$0$i$i$i$i << 2) >> 2] = 0;
      $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
     $84 = HEAP32[$73 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($84 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$73 >> 2] = $84 + -24;
     $$2103 = $70;
     label = 44;
    }
   }
  }
  do if ((label | 0) == 44) {
   if (($$2103 | 0) == ($1 | 0)) $$899$ph = $0; else if ((HEAP8[$$2103 >> 0] | 0) == 95) {
    $90 = $$2103 + 1 | 0;
    if (($90 | 0) == ($1 | 0)) $$899$ph = $0; else {
     $92 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($90, $1, $2) | 0;
     if (($92 | 0) == ($90 | 0)) $$899$ph = $0; else {
      $95 = $2 + 4 | 0;
      if ((HEAP32[$2 >> 2] | 0) == (HEAP32[$95 >> 2] | 0)) break;
      __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($5, 22315, $4);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($5, 22324) | 0;
      HEAP32[$3 >> 2] = HEAP32[$5 >> 2];
      HEAP32[$3 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
      HEAP32[$3 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
      $$0$i$i$i144 = 0;
      while (1) {
       if (($$0$i$i$i144 | 0) == 3) break;
       HEAP32[$5 + ($$0$i$i$i144 << 2) >> 2] = 0;
       $$0$i$i$i144 = $$0$i$i$i144 + 1 | 0;
      }
      $104 = HEAP8[$3 + 11 >> 0] | 0;
      $105 = $104 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[$95 >> 2] | 0) + -24 | 0, $105 ? HEAP32[$3 >> 2] | 0 : $3, $105 ? HEAP32[$3 + 4 >> 2] | 0 : $104 & 255) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
      $$899$ph = $92;
     }
    }
   } else $$899$ph = $0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
   $$9 = $$899$ph;
   break L1;
  } while (0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
  $$9 = $0;
 } else $$9 = $0; else $$9 = $0; else $$9 = $0; while (0);
 STACKTOP = sp;
 return $$9 | 0;
}

function __ZN9rapidjson8internal6u64toaEyPc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$13 = 0, $$15 = 0, $$16 = 0, $$2 = 0, $$2$sink = 0, $$5 = 0, $$pn = 0, $$pn344 = 0, $$pn345 = 0, $$pn347 = 0, $$pn348 = 0, $$pn350 = 0, $$pn352 = 0, $$pn353 = 0, $$pn355 = 0, $$pn356 = 0, $$sink = 0, $$sink$in = 0, $10 = 0, $100 = 0, $101 = 0, $104 = 0, $105 = 0, $107 = 0, $109 = 0, $111 = 0, $112 = 0, $113 = 0, $116 = 0, $13 = 0, $204 = 0, $206 = 0, $208 = 0, $209 = 0, $215 = 0, $224 = 0, $229 = 0, $237 = 0, $240 = 0, $255 = 0, $257 = 0, $259 = 0, $261 = 0, $263 = 0, $265 = 0, $267 = 0, $268 = 0, $269 = 0, $272 = 0, $273 = 0, $275 = 0, $277 = 0, $279 = 0, $280 = 0, $281 = 0, $284 = 0, $29 = 0, $31 = 0, $33 = 0, $35 = 0, $36 = 0, $37 = 0, $40 = 0, $87 = 0, $89 = 0, $9 = 0, $91 = 0, $93 = 0, $95 = 0, $97 = 0, $99 = 0, label = 0;
 if ($1 >>> 0 < 0 | ($1 | 0) == 0 & $0 >>> 0 < 1e8) if ($0 >>> 0 < 1e4) {
  $9 = ($0 >>> 0) / 100 | 0;
  $10 = $9 << 1;
  $13 = $0 - ($9 * 100 | 0) << 1;
  if ($0 >>> 0 > 999) {
   HEAP8[$2 >> 0] = HEAP8[13350 + $10 >> 0] | 0;
   $$pn356 = $2 + 1 | 0;
   label = 6;
  } else if ($0 >>> 0 > 99) {
   $$pn356 = $2;
   label = 6;
  } else if ($0 >>> 0 > 9) {
   $$pn355 = $2;
   label = 8;
  } else $$2 = $2;
  if ((label | 0) == 6) {
   HEAP8[$$pn356 >> 0] = HEAP8[13350 + ($10 | 1) >> 0] | 0;
   $$pn355 = $$pn356 + 1 | 0;
   label = 8;
  }
  if ((label | 0) == 8) {
   HEAP8[$$pn355 >> 0] = HEAP8[13350 + $13 >> 0] | 0;
   $$2 = $$pn355 + 1 | 0;
  }
  $$16 = $$2 + 1 | 0;
  $$2$sink = $$2;
  $$sink$in = 13350 + ($13 | 1) | 0;
  $$sink = HEAP8[$$sink$in >> 0] | 0;
  HEAP8[$$2$sink >> 0] = $$sink;
  return $$16 | 0;
 } else {
  $29 = ($0 >>> 0) / 1e4 | 0;
  $31 = $0 - ($29 * 1e4 | 0) | 0;
  $33 = (($0 >>> 0) / 1e6 | 0) << 1;
  $35 = (($29 >>> 0) % 100 | 0) << 1;
  $36 = ($31 >>> 0) / 100 | 0;
  $37 = $36 << 1;
  $40 = $31 - ($36 * 100 | 0) << 1;
  if ($1 >>> 0 > 0 | ($1 | 0) == 0 & $0 >>> 0 > 9999999) {
   HEAP8[$2 >> 0] = HEAP8[13350 + $33 >> 0] | 0;
   $$pn353 = $2 + 1 | 0;
   label = 13;
  } else if ($1 >>> 0 > 0 | ($1 | 0) == 0 & $0 >>> 0 > 999999) {
   $$pn353 = $2;
   label = 13;
  } else if ($1 >>> 0 > 0 | ($1 | 0) == 0 & $0 >>> 0 > 99999) {
   $$pn352 = $2;
   label = 15;
  } else $$5 = $2;
  if ((label | 0) == 13) {
   HEAP8[$$pn353 >> 0] = HEAP8[13350 + ($33 | 1) >> 0] | 0;
   $$pn352 = $$pn353 + 1 | 0;
   label = 15;
  }
  if ((label | 0) == 15) {
   HEAP8[$$pn352 >> 0] = HEAP8[13350 + $35 >> 0] | 0;
   $$5 = $$pn352 + 1 | 0;
  }
  HEAP8[$$5 >> 0] = HEAP8[13350 + ($35 | 1) >> 0] | 0;
  HEAP8[$$5 + 1 >> 0] = HEAP8[13350 + $37 >> 0] | 0;
  HEAP8[$$5 + 2 >> 0] = HEAP8[13350 + ($37 | 1) >> 0] | 0;
  HEAP8[$$5 + 3 >> 0] = HEAP8[13350 + $40 >> 0] | 0;
  $$16 = $$5 + 5 | 0;
  $$2$sink = $$5 + 4 | 0;
  $$sink$in = 13350 + ($40 | 1) | 0;
  $$sink = HEAP8[$$sink$in >> 0] | 0;
  HEAP8[$$2$sink >> 0] = $$sink;
  return $$16 | 0;
 }
 if (!($1 >>> 0 < 2328306 | ($1 | 0) == 2328306 & $0 >>> 0 < 1874919424)) {
  $204 = ___udivdi3($0 | 0, $1 | 0, 1874919424, 2328306) | 0;
  $206 = ___muldi3($204 | 0, tempRet0 | 0, 1874919424, 2328306) | 0;
  $208 = _i64Subtract($0 | 0, $1 | 0, $206 | 0, tempRet0 | 0) | 0;
  $209 = tempRet0;
  do if ($204 >>> 0 < 10) {
   HEAP8[$2 >> 0] = $204 + 48;
   $$15 = $2 + 1 | 0;
  } else {
   if ($204 >>> 0 < 100) {
    $215 = $204 << 1;
    HEAP8[$2 >> 0] = HEAP8[13350 + $215 >> 0] | 0;
    HEAP8[$2 + 1 >> 0] = HEAP8[13350 + ($215 | 1) >> 0] | 0;
    $$15 = $2 + 2 | 0;
    break;
   }
   $224 = ($204 >>> 0) / 100 | 0;
   if ($204 >>> 0 < 1e3) {
    HEAP8[$2 >> 0] = $224 + 48;
    $229 = (($204 >>> 0) % 100 | 0) << 1;
    HEAP8[$2 + 1 >> 0] = HEAP8[13350 + $229 >> 0] | 0;
    HEAP8[$2 + 2 >> 0] = HEAP8[13350 + ($229 | 1) >> 0] | 0;
    $$15 = $2 + 3 | 0;
    break;
   } else {
    $237 = $224 << 1;
    $240 = $204 - ($224 * 100 | 0) << 1;
    HEAP8[$2 >> 0] = HEAP8[13350 + $237 >> 0] | 0;
    HEAP8[$2 + 1 >> 0] = HEAP8[13350 + ($237 | 1) >> 0] | 0;
    HEAP8[$2 + 2 >> 0] = HEAP8[13350 + $240 >> 0] | 0;
    HEAP8[$2 + 3 >> 0] = HEAP8[13350 + ($240 | 1) >> 0] | 0;
    $$15 = $2 + 4 | 0;
    break;
   }
  } while (0);
  $255 = ___udivdi3($208 | 0, $209 | 0, 1e8, 0) | 0;
  $257 = ___muldi3($255 | 0, tempRet0 | 0, 1e8, 0) | 0;
  $259 = _i64Subtract($208 | 0, $209 | 0, $257 | 0, tempRet0 | 0) | 0;
  $261 = ($255 >>> 0) / 1e4 | 0;
  $263 = $255 - ($261 * 1e4 | 0) | 0;
  $265 = (($255 >>> 0) / 1e6 | 0) << 1;
  $267 = (($261 >>> 0) % 100 | 0) << 1;
  $268 = ($263 >>> 0) / 100 | 0;
  $269 = $268 << 1;
  $272 = $263 - ($268 * 100 | 0) << 1;
  $273 = ($259 >>> 0) / 1e4 | 0;
  $275 = $259 - ($273 * 1e4 | 0) | 0;
  $277 = (($259 >>> 0) / 1e6 | 0) << 1;
  $279 = (($273 >>> 0) % 100 | 0) << 1;
  $280 = ($275 >>> 0) / 100 | 0;
  $281 = $280 << 1;
  $284 = $275 - ($280 * 100 | 0) << 1;
  HEAP8[$$15 >> 0] = HEAP8[13350 + $265 >> 0] | 0;
  HEAP8[$$15 + 1 >> 0] = HEAP8[13350 + ($265 | 1) >> 0] | 0;
  HEAP8[$$15 + 2 >> 0] = HEAP8[13350 + $267 >> 0] | 0;
  HEAP8[$$15 + 3 >> 0] = HEAP8[13350 + ($267 | 1) >> 0] | 0;
  HEAP8[$$15 + 4 >> 0] = HEAP8[13350 + $269 >> 0] | 0;
  HEAP8[$$15 + 5 >> 0] = HEAP8[13350 + ($269 | 1) >> 0] | 0;
  HEAP8[$$15 + 6 >> 0] = HEAP8[13350 + $272 >> 0] | 0;
  HEAP8[$$15 + 7 >> 0] = HEAP8[13350 + ($272 | 1) >> 0] | 0;
  HEAP8[$$15 + 8 >> 0] = HEAP8[13350 + $277 >> 0] | 0;
  HEAP8[$$15 + 9 >> 0] = HEAP8[13350 + ($277 | 1) >> 0] | 0;
  HEAP8[$$15 + 10 >> 0] = HEAP8[13350 + $279 >> 0] | 0;
  HEAP8[$$15 + 11 >> 0] = HEAP8[13350 + ($279 | 1) >> 0] | 0;
  HEAP8[$$15 + 12 >> 0] = HEAP8[13350 + $281 >> 0] | 0;
  HEAP8[$$15 + 13 >> 0] = HEAP8[13350 + ($281 | 1) >> 0] | 0;
  HEAP8[$$15 + 14 >> 0] = HEAP8[13350 + $284 >> 0] | 0;
  $$16 = $$15 + 16 | 0;
  $$2$sink = $$15 + 15 | 0;
  $$sink$in = 13350 + ($284 | 1) | 0;
  $$sink = HEAP8[$$sink$in >> 0] | 0;
  HEAP8[$$2$sink >> 0] = $$sink;
  return $$16 | 0;
 }
 $87 = ___udivdi3($0 | 0, $1 | 0, 1e8, 0) | 0;
 $89 = ___muldi3($87 | 0, tempRet0 | 0, 1e8, 0) | 0;
 $91 = _i64Subtract($0 | 0, $1 | 0, $89 | 0, tempRet0 | 0) | 0;
 $93 = ($87 >>> 0) / 1e4 | 0;
 $95 = $87 - ($93 * 1e4 | 0) | 0;
 $97 = (($87 >>> 0) / 1e6 | 0) << 1;
 $99 = (($93 >>> 0) % 100 | 0) << 1;
 $100 = ($95 >>> 0) / 100 | 0;
 $101 = $100 << 1;
 $104 = $95 - ($100 * 100 | 0) << 1;
 $105 = ($91 >>> 0) / 1e4 | 0;
 $107 = $91 - ($105 * 1e4 | 0) | 0;
 $109 = (($91 >>> 0) / 1e6 | 0) << 1;
 $111 = (($105 >>> 0) % 100 | 0) << 1;
 $112 = ($107 >>> 0) / 100 | 0;
 $113 = $112 << 1;
 $116 = $107 - ($112 * 100 | 0) << 1;
 if ($1 >>> 0 > 232830 | ($1 | 0) == 232830 & $0 >>> 0 > 2764472319) {
  HEAP8[$2 >> 0] = HEAP8[13350 + $97 >> 0] | 0;
  $$pn350 = $2 + 1 | 0;
  label = 21;
 } else if ($1 >>> 0 > 23283 | ($1 | 0) == 23283 & $0 >>> 0 > 276447231) {
  $$pn350 = $2;
  label = 21;
 } else if ($1 >>> 0 > 2328 | ($1 | 0) == 2328 & $0 >>> 0 > 1316134911) {
  $$pn348 = $2;
  label = 23;
 } else if ($1 >>> 0 > 232 | ($1 | 0) == 232 & $0 >>> 0 > 3567587327) {
  $$pn347 = $2;
  label = 25;
 } else if ($1 >>> 0 > 23 | ($1 | 0) == 23 & $0 >>> 0 > 1215752191) {
  $$pn345 = $2;
  label = 27;
 } else if ($1 >>> 0 > 2 | ($1 | 0) == 2 & $0 >>> 0 > 1410065407) {
  $$pn344 = $2;
  label = 29;
 } else if ($1 >>> 0 > 0 | ($1 | 0) == 0 & $0 >>> 0 > 999999999) {
  $$pn = $2;
  label = 31;
 } else $$13 = $2;
 if ((label | 0) == 21) {
  HEAP8[$$pn350 >> 0] = HEAP8[13350 + ($97 | 1) >> 0] | 0;
  $$pn348 = $$pn350 + 1 | 0;
  label = 23;
 }
 if ((label | 0) == 23) {
  HEAP8[$$pn348 >> 0] = HEAP8[13350 + $99 >> 0] | 0;
  $$pn347 = $$pn348 + 1 | 0;
  label = 25;
 }
 if ((label | 0) == 25) {
  HEAP8[$$pn347 >> 0] = HEAP8[13350 + ($99 | 1) >> 0] | 0;
  $$pn345 = $$pn347 + 1 | 0;
  label = 27;
 }
 if ((label | 0) == 27) {
  HEAP8[$$pn345 >> 0] = HEAP8[13350 + $101 >> 0] | 0;
  $$pn344 = $$pn345 + 1 | 0;
  label = 29;
 }
 if ((label | 0) == 29) {
  HEAP8[$$pn344 >> 0] = HEAP8[13350 + ($101 | 1) >> 0] | 0;
  $$pn = $$pn344 + 1 | 0;
  label = 31;
 }
 if ((label | 0) == 31) {
  HEAP8[$$pn >> 0] = HEAP8[13350 + $104 >> 0] | 0;
  $$13 = $$pn + 1 | 0;
 }
 HEAP8[$$13 >> 0] = HEAP8[13350 + ($104 | 1) >> 0] | 0;
 HEAP8[$$13 + 1 >> 0] = HEAP8[13350 + $109 >> 0] | 0;
 HEAP8[$$13 + 2 >> 0] = HEAP8[13350 + ($109 | 1) >> 0] | 0;
 HEAP8[$$13 + 3 >> 0] = HEAP8[13350 + $111 >> 0] | 0;
 HEAP8[$$13 + 4 >> 0] = HEAP8[13350 + ($111 | 1) >> 0] | 0;
 HEAP8[$$13 + 5 >> 0] = HEAP8[13350 + $113 >> 0] | 0;
 HEAP8[$$13 + 6 >> 0] = HEAP8[13350 + ($113 | 1) >> 0] | 0;
 HEAP8[$$13 + 7 >> 0] = HEAP8[13350 + $116 >> 0] | 0;
 $$16 = $$13 + 9 | 0;
 $$2$sink = $$13 + 8 | 0;
 $$sink$in = 13350 + ($116 | 1) | 0;
 $$sink = HEAP8[$$sink$in >> 0] | 0;
 HEAP8[$$2$sink >> 0] = $$sink;
 return $$16 | 0;
}

function __ZN2ut4arch13EntityManager21setEntityNameInternalENS_6EntityERKNS_12NativeStringE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$021$i$i1$i = 0, $$023$i$i$i = 0, $$04575$i$i$i = 0, $$04576$i$i$i = 0, $$04576$us$i$i$i = 0, $$047$i$i$i = 0, $$1$i$i$i = 0, $$1$lcssa$i$i$i = 0, $$122$i$i$i = 0, $$pre$phi$i$iZ2D = 0, $$sink = 0, $103 = 0, $106 = 0, $108 = 0, $109 = 0, $11 = 0, $116 = 0, $117 = 0, $119 = 0, $12 = 0, $121 = 0, $124 = 0, $125 = 0, $133 = 0, $137 = 0, $142 = 0, $143 = 0, $147 = 0, $149 = 0, $151 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $160 = 0, $165 = 0, $166 = 0, $17 = 0, $170 = 0, $171 = 0, $173 = 0, $175 = 0, $180 = 0, $28 = 0, $29 = 0, $3 = 0, $36 = 0, $41 = 0, $42 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $54 = 0, $60 = 0, $61 = 0, $65 = 0, $7 = 0, $75 = 0, $8 = 0, $80 = 0, $84 = 0, $87 = 0, $90 = 0.0, $93 = 0.0, $tmpcast$i18$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast$i18$byval_copy = sp + 8 | 0;
 $3 = sp;
 if ((HEAP32[$0 + 36 >> 2] | 0) <= 0) {
  $137 = $1;
  $142 = HEAP32[$137 + 4 >> 2] | 0;
  $143 = $3;
  HEAP32[$143 >> 2] = HEAP32[$137 >> 2];
  HEAP32[$143 + 4 >> 2] = $142;
  $147 = HEAP32[810] | 0;
  HEAP32[$tmpcast$i18$byval_copy >> 2] = HEAP32[$3 >> 2];
  HEAP32[$tmpcast$i18$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  if (!(__ZN2ut4arch13EntityManager15hasComponentRawENS_6EntityEj($0, $tmpcast$i18$byval_copy, $147) | 0)) {
   $149 = $1;
   $151 = HEAP32[$149 >> 2] | 0;
   $154 = HEAP32[$149 + 4 >> 2] | 0;
   $155 = __ZN2ut15InitComponentIdINS_17EntityInformationEEEjv() | 0;
   $156 = $3;
   HEAP32[$156 >> 2] = $151;
   HEAP32[$156 + 4 >> 2] = $154;
   HEAP32[$tmpcast$i18$byval_copy >> 2] = HEAP32[$3 >> 2];
   HEAP32[$tmpcast$i18$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
   __ZN2ut4arch13EntityManager15addComponentRawENS_6EntityEj($0, $tmpcast$i18$byval_copy, $155);
  }
  $160 = $1;
  $165 = HEAP32[$160 + 4 >> 2] | 0;
  $166 = $3;
  HEAP32[$166 >> 2] = HEAP32[$160 >> 2];
  HEAP32[$166 + 4 >> 2] = $165;
  $170 = HEAP32[810] | 0;
  HEAP32[$tmpcast$i18$byval_copy >> 2] = HEAP32[$3 >> 2];
  HEAP32[$tmpcast$i18$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  $171 = __ZN2ut4arch13EntityManager25getComponentDataRawUnsafeENS_6EntityEj($0, $tmpcast$i18$byval_copy, $170) | 0;
  if (($171 | 0) == ($2 | 0)) {
   STACKTOP = sp;
   return;
  }
  $173 = HEAP32[$2 >> 2] | 0;
  $175 = HEAP32[$2 + 4 >> 2] | 0;
  _free(HEAP32[$171 >> 2] | 0);
  HEAP32[$171 >> 2] = 0;
  HEAP32[$171 + 4 >> 2] = $175;
  if (!$175) {
   STACKTOP = sp;
   return;
  }
  $180 = _malloc($175 + 1 | 0) | 0;
  HEAP32[$171 >> 2] = $180;
  _memcpy($180 | 0, $173 | 0, $175 | 0) | 0;
  HEAP8[$180 + $175 >> 0] = 0;
  STACKTOP = sp;
  return;
 }
 $7 = __ZN2ut4arch13EntityManager23findOrCreateFreshEntityERKNS_6EntityE($0, $1) | 0;
 $8 = HEAP32[$2 >> 2] | 0;
 if (!$8) {
  HEAP32[$tmpcast$i18$byval_copy >> 2] = 0;
  HEAP32[$tmpcast$i18$byval_copy + 4 >> 2] = 0;
  HEAP32[$tmpcast$i18$byval_copy + 8 >> 2] = 0;
 } else {
  $11 = HEAP32[$2 + 4 >> 2] | 0;
  $12 = $8 + $11 | 0;
  HEAP32[$tmpcast$i18$byval_copy >> 2] = 0;
  HEAP32[$tmpcast$i18$byval_copy + 4 >> 2] = 0;
  HEAP32[$tmpcast$i18$byval_copy + 8 >> 2] = 0;
  if ($11 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($tmpcast$i18$byval_copy);
  if ($11 >>> 0 < 11) {
   HEAP8[$tmpcast$i18$byval_copy + 11 >> 0] = $11;
   if (!$11) $$1$lcssa$i$i$i = $tmpcast$i18$byval_copy; else {
    $$021$i$i1$i = $tmpcast$i18$byval_copy;
    label = 8;
   }
  } else {
   $16 = $11 + 16 & -16;
   $17 = __Znwj($16) | 0;
   HEAP32[$tmpcast$i18$byval_copy >> 2] = $17;
   HEAP32[$tmpcast$i18$byval_copy + 8 >> 2] = $16 | -2147483648;
   HEAP32[$tmpcast$i18$byval_copy + 4 >> 2] = $11;
   $$021$i$i1$i = $17;
   label = 8;
  }
  if ((label | 0) == 8) {
   $$023$i$i$i = $8;
   $$122$i$i$i = $$021$i$i1$i;
   while (1) {
    HEAP8[$$122$i$i$i >> 0] = HEAP8[$$023$i$i$i >> 0] | 0;
    $$023$i$i$i = $$023$i$i$i + 1 | 0;
    if (($$023$i$i$i | 0) == ($12 | 0)) break; else $$122$i$i$i = $$122$i$i$i + 1 | 0;
   }
   $$1$lcssa$i$i$i = $$021$i$i1$i + $11 | 0;
  }
  HEAP8[$$1$lcssa$i$i$i >> 0] = 0;
 }
 $28 = $7 + 36 | 0;
 $29 = $28 + 11 | 0;
 if ((HEAP8[$29 >> 0] | 0) < 0) {
  HEAP8[HEAP32[$28 >> 2] >> 0] = 0;
  HEAP32[$7 + 40 >> 2] = 0;
  $$pre$phi$i$iZ2D = $28;
 } else {
  HEAP8[$28 >> 0] = 0;
  HEAP8[$29 >> 0] = 0;
  $$pre$phi$i$iZ2D = $28;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($28, 0);
 HEAP32[$$pre$phi$i$iZ2D >> 2] = HEAP32[$tmpcast$i18$byval_copy >> 2];
 HEAP32[$$pre$phi$i$iZ2D + 4 >> 2] = HEAP32[$tmpcast$i18$byval_copy + 4 >> 2];
 HEAP32[$$pre$phi$i$iZ2D + 8 >> 2] = HEAP32[$tmpcast$i18$byval_copy + 8 >> 2];
 HEAP8[$0 + 148 >> 0] = 1;
 $36 = $1;
 $41 = HEAP32[$36 + 4 >> 2] | 0;
 $42 = $3;
 HEAP32[$42 >> 2] = HEAP32[$36 >> 2];
 HEAP32[$42 + 4 >> 2] = $41;
 $46 = HEAP32[$2 >> 2] | 0;
 HEAP32[$tmpcast$i18$byval_copy >> 2] = HEAP32[$3 >> 2];
 HEAP32[$tmpcast$i18$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZN2ut4arch19EntityCommandBuffer13setEntityNameENS_6EntityEPKc($0 + 40 | 0, $tmpcast$i18$byval_copy, $46);
 $47 = $0 + 108 | 0;
 $48 = HEAP32[810] | 0;
 $49 = $0 + 112 | 0;
 $50 = HEAP32[$49 >> 2] | 0;
 $51 = ($50 | 0) == 0;
 L34 : do if ($51) $$0$i$i$i = 0; else {
  $52 = $50 + -1 | 0;
  $54 = ($52 & $50 | 0) == 0;
  if ($54) $60 = $52 & $48; else if ($48 >>> 0 < $50 >>> 0) $60 = $48; else $60 = ($48 >>> 0) % ($50 >>> 0) | 0;
  $61 = HEAP32[(HEAP32[$47 >> 2] | 0) + ($60 << 2) >> 2] | 0;
  if (!$61) $$0$i$i$i = $60; else {
   $$04575$i$i$i = HEAP32[$61 >> 2] | 0;
   if (!$$04575$i$i$i) $$0$i$i$i = $60; else {
    if ($54) {
     $$04576$us$i$i$i = $$04575$i$i$i;
     while (1) {
      $65 = HEAP32[$$04576$us$i$i$i + 4 >> 2] | 0;
      if (!(($65 | 0) == ($48 | 0) | ($65 & $52 | 0) == ($60 | 0))) {
       $$0$i$i$i = $60;
       break L34;
      }
      if ((HEAP32[$$04576$us$i$i$i + 8 >> 2] | 0) == ($48 | 0)) break;
      $$04576$us$i$i$i = HEAP32[$$04576$us$i$i$i >> 2] | 0;
      if (!$$04576$us$i$i$i) {
       $$0$i$i$i = $60;
       break L34;
      }
     }
     STACKTOP = sp;
     return;
    }
    $$04576$i$i$i = $$04575$i$i$i;
    while (1) {
     $75 = HEAP32[$$04576$i$i$i + 4 >> 2] | 0;
     if (($75 | 0) != ($48 | 0)) {
      if ($75 >>> 0 < $50 >>> 0) $80 = $75; else $80 = ($75 >>> 0) % ($50 >>> 0) | 0;
      if (($80 | 0) != ($60 | 0)) {
       $$0$i$i$i = $60;
       break L34;
      }
     }
     if ((HEAP32[$$04576$i$i$i + 8 >> 2] | 0) == ($48 | 0)) break;
     $$04576$i$i$i = HEAP32[$$04576$i$i$i >> 2] | 0;
     if (!$$04576$i$i$i) {
      $$0$i$i$i = $60;
      break L34;
     }
    }
    STACKTOP = sp;
    return;
   }
  }
 } while (0);
 $84 = __Znwj(12) | 0;
 HEAP32[$84 + 8 >> 2] = $48;
 HEAP32[$84 + 4 >> 2] = $48;
 HEAP32[$84 >> 2] = 0;
 $87 = $0 + 120 | 0;
 $90 = +(((HEAP32[$87 >> 2] | 0) + 1 | 0) >>> 0);
 $93 = +HEAPF32[$0 + 124 >> 2];
 do if ($51 | $93 * +($50 >>> 0) < $90) {
  $103 = $50 << 1 | ($50 >>> 0 < 3 | ($50 + -1 & $50 | 0) != 0) & 1;
  $106 = ~~+Math_ceil(+($90 / $93)) >>> 0;
  __ZNSt3__212__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE6rehashEj($47, $103 >>> 0 < $106 >>> 0 ? $106 : $103);
  $108 = HEAP32[$49 >> 2] | 0;
  $109 = $108 + -1 | 0;
  if (!($109 & $108)) {
   $$047$i$i$i = $108;
   $$1$i$i$i = $109 & $48;
   break;
  }
  if ($48 >>> 0 < $108 >>> 0) {
   $$047$i$i$i = $108;
   $$1$i$i$i = $48;
  } else {
   $$047$i$i$i = $108;
   $$1$i$i$i = ($48 >>> 0) % ($108 >>> 0) | 0;
  }
 } else {
  $$047$i$i$i = $50;
  $$1$i$i$i = $$0$i$i$i;
 } while (0);
 $116 = (HEAP32[$47 >> 2] | 0) + ($$1$i$i$i << 2) | 0;
 $117 = HEAP32[$116 >> 2] | 0;
 if (!$117) {
  $119 = $0 + 116 | 0;
  HEAP32[$84 >> 2] = HEAP32[$119 >> 2];
  HEAP32[$119 >> 2] = $84;
  HEAP32[$116 >> 2] = $119;
  $121 = HEAP32[$84 >> 2] | 0;
  if ($121 | 0) {
   $124 = HEAP32[$121 + 4 >> 2] | 0;
   $125 = $$047$i$i$i + -1 | 0;
   if (!($125 & $$047$i$i$i)) $133 = $124 & $125; else if ($124 >>> 0 < $$047$i$i$i >>> 0) $133 = $124; else $133 = ($124 >>> 0) % ($$047$i$i$i >>> 0) | 0;
   $$sink = (HEAP32[$47 >> 2] | 0) + ($133 << 2) | 0;
   label = 48;
  }
 } else {
  HEAP32[$84 >> 2] = HEAP32[$117 >> 2];
  $$sink = $117;
  label = 48;
 }
 if ((label | 0) == 48) HEAP32[$$sink >> 2] = $84;
 HEAP32[$87 >> 2] = (HEAP32[$87 >> 2] | 0) + 1;
 STACKTOP = sp;
 return;
}

function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 $rem = $rem | 0;
 var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $_0$0 = 0, $_0$1 = 0, $q_sroa_1_1198$looptemp = 0;
 $n_sroa_0_0_extract_trunc = $a$0;
 $n_sroa_1_4_extract_shift$0 = $a$1;
 $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
 $d_sroa_0_0_extract_trunc = $b$0;
 $d_sroa_1_4_extract_shift$0 = $b$1;
 $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
 if (!$n_sroa_1_4_extract_trunc) {
  $4 = ($rem | 0) != 0;
  if (!$d_sroa_1_4_extract_trunc) {
   if ($4) {
    HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
    HEAP32[$rem + 4 >> 2] = 0;
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  } else {
   if (!$4) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 | 0;
   HEAP32[$rem + 4 >> 2] = $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
 }
 $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
 do if (!$d_sroa_0_0_extract_trunc) {
  if ($17) {
   if ($rem | 0) {
    HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
    HEAP32[$rem + 4 >> 2] = 0;
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  if (!$n_sroa_0_0_extract_trunc) {
   if ($rem | 0) {
    HEAP32[$rem >> 2] = 0;
    HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
  if (!($37 & $d_sroa_1_4_extract_trunc)) {
   if ($rem | 0) {
    HEAP32[$rem >> 2] = $a$0 | 0;
    HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
   }
   $_0$1 = 0;
   $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  $51 = (Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0) - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
  if ($51 >>> 0 <= 30) {
   $57 = $51 + 1 | 0;
   $58 = 31 - $51 | 0;
   $sr_1_ph = $57;
   $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
   $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
   $q_sroa_0_1_ph = 0;
   $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
   break;
  }
  if (!$rem) {
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  HEAP32[$rem >> 2] = $a$0 | 0;
  HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
  $_0$1 = 0;
  $_0$0 = 0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
 } else {
  if (!$17) {
   $119 = (Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0) - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
   if ($119 >>> 0 <= 31) {
    $125 = $119 + 1 | 0;
    $126 = 31 - $119 | 0;
    $130 = $119 - 31 >> 31;
    $sr_1_ph = $125;
    $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
    $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
    $q_sroa_0_1_ph = 0;
    $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
    break;
   }
   if (!$rem) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 | 0;
   HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
  if ($66 & $d_sroa_0_0_extract_trunc | 0) {
   $88 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
   $89 = 64 - $88 | 0;
   $91 = 32 - $88 | 0;
   $92 = $91 >> 31;
   $95 = $88 - 32 | 0;
   $105 = $95 >> 31;
   $sr_1_ph = $88;
   $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
   $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
   $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
   $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
   break;
  }
  if ($rem | 0) {
   HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
   HEAP32[$rem + 4 >> 2] = 0;
  }
  if (($d_sroa_0_0_extract_trunc | 0) == 1) {
   $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
   $_0$0 = $a$0 | 0 | 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  } else {
   $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
   $_0$1 = $n_sroa_1_4_extract_trunc >>> ($78 >>> 0) | 0;
   $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
 } while (0);
 if (!$sr_1_ph) {
  $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
  $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
  $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
  $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = 0;
 } else {
  $d_sroa_0_0_insert_insert99$0 = $b$0 | 0 | 0;
  $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
  $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
  $137$1 = tempRet0;
  $q_sroa_1_1198 = $q_sroa_1_1_ph;
  $q_sroa_0_1199 = $q_sroa_0_1_ph;
  $r_sroa_1_1200 = $r_sroa_1_1_ph;
  $r_sroa_0_1201 = $r_sroa_0_1_ph;
  $sr_1202 = $sr_1_ph;
  $carry_0203 = 0;
  do {
   $q_sroa_1_1198$looptemp = $q_sroa_1_1198;
   $q_sroa_1_1198 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
   $q_sroa_0_1199 = $carry_0203 | $q_sroa_0_1199 << 1;
   $r_sroa_0_0_insert_insert42$0 = $r_sroa_0_1201 << 1 | $q_sroa_1_1198$looptemp >>> 31 | 0;
   $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
   _i64Subtract($137$0 | 0, $137$1 | 0, $r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0) | 0;
   $150$1 = tempRet0;
   $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
   $carry_0203 = $151$0 & 1;
   $r_sroa_0_1201 = _i64Subtract($r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0, $151$0 & $d_sroa_0_0_insert_insert99$0 | 0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1 | 0) | 0;
   $r_sroa_1_1200 = tempRet0;
   $sr_1202 = $sr_1202 - 1 | 0;
  } while (($sr_1202 | 0) != 0);
  $q_sroa_1_1_lcssa = $q_sroa_1_1198;
  $q_sroa_0_1_lcssa = $q_sroa_0_1199;
  $r_sroa_1_1_lcssa = $r_sroa_1_1200;
  $r_sroa_0_1_lcssa = $r_sroa_0_1201;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = $carry_0203;
 }
 $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
 $q_sroa_0_0_insert_ext75$1 = 0;
 if ($rem | 0) {
  HEAP32[$rem >> 2] = $r_sroa_0_1_lcssa;
  HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa;
 }
 $_0$1 = ($q_sroa_0_0_insert_ext75$0 | 0) >>> 31 | ($q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1) << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
 $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
 return (tempRet0 = $_0$1, $_0$0) | 0;
}

function __ZN2ut4arch13EntityManager18removeComponentRawENS_6EntityEj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$02832$i$i = 0, $$02833$i$i = 0, $$02833$us$i$i = 0, $$04575$i$i$i = 0, $$04576$i$i$i = 0, $$04576$us$i$i$i = 0, $$047$i$i$i = 0, $$1$i$i$i = 0, $$sink = 0, $101 = 0, $104 = 0, $107 = 0.0, $11 = 0, $110 = 0.0, $120 = 0, $123 = 0, $125 = 0, $126 = 0, $133 = 0, $134 = 0, $136 = 0, $138 = 0, $141 = 0, $142 = 0, $150 = 0, $154 = 0, $159 = 0, $16 = 0, $160 = 0, $165 = 0, $166 = 0, $17 = 0, $170 = 0, $171 = 0, $18 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $29 = 0, $3 = 0, $35 = 0, $36 = 0, $4 = 0, $40 = 0, $41 = 0, $49 = 0, $5 = 0, $54 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $71 = 0, $77 = 0, $78 = 0, $82 = 0, $9 = 0, $92 = 0, $97 = 0, $tmpcast$byval_copy = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast$byval_copy = sp + 24 | 0;
 $vararg_buffer = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 20 | 0;
 $5 = sp;
 HEAP32[$4 >> 2] = $2;
 __ZN2ut4arch13EntityManager18assertEntityExistsERKNS_6EntityEjPKcS6_($0, $1, $2, 12209, 12236);
 __ZN2ut4arch13EntityManager24assertEntityHasComponentERKNS_6EntityEjPKc($0, $1, $2, 12209);
 if ((HEAP32[$0 + 36 >> 2] | 0) <= 0) {
  $154 = $0 + 8 | 0;
  if ((HEAP32[(HEAP32[$154 >> 2] | 0) + 44 >> 2] | 0) > 0) {
   _snprintf(25060, 1024, 8878, $vararg_buffer) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8949, 6920, 35);
  }
  $159 = HEAP32[$154 >> 2] | 0;
  $160 = $1;
  $165 = HEAP32[$160 + 4 >> 2] | 0;
  $166 = $5;
  HEAP32[$166 >> 2] = HEAP32[$160 >> 2];
  HEAP32[$166 + 4 >> 2] = $165;
  $170 = HEAP32[$4 >> 2] | 0;
  HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$5 >> 2];
  HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  __ZN2ut4arch17EntityDataManager15removeComponentENS_6EntityEj($159, $tmpcast$byval_copy, $170);
  $171 = HEAP32[$154 >> 2] | 0;
  if (!(HEAP8[(HEAP32[(HEAP32[$171 + 20 >> 2] | 0) + (HEAP32[$1 >> 2] << 4) + 8 >> 2] | 0) + 112 >> 0] | 0)) {
   STACKTOP = sp;
   return;
  }
  __ZN2ut4arch17EntityDataManager21tryDeallocateEntitiesEPKNS_6EntityEi($171, $1, 1);
  STACKTOP = sp;
  return;
 }
 $9 = __ZN2ut4arch13EntityManager23findOrCreateFreshEntityERKNS_6EntityE($0, $1) | 0;
 $11 = $1;
 $16 = HEAP32[$11 + 4 >> 2] | 0;
 $17 = HEAP32[$4 >> 2] | 0;
 $18 = $3;
 HEAP32[$18 >> 2] = HEAP32[$11 >> 2];
 HEAP32[$18 + 4 >> 2] = $16;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$3 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZN2ut4arch19EntityCommandBuffer18removeComponentRawENS_6EntityEj($0 + 40 | 0, $tmpcast$byval_copy, $17);
 $22 = $9 + 16 | 0;
 $23 = HEAP32[$4 >> 2] | 0;
 $25 = HEAP32[$9 + 20 >> 2] | 0;
 L11 : do if (!$25) label = 24; else {
  $27 = $25 + -1 | 0;
  $29 = ($27 & $25 | 0) == 0;
  if ($29) $35 = $27 & $23; else if ($23 >>> 0 < $25 >>> 0) $35 = $23; else $35 = ($23 >>> 0) % ($25 >>> 0) | 0;
  $36 = HEAP32[(HEAP32[$22 >> 2] | 0) + ($35 << 2) >> 2] | 0;
  if (!$36) label = 24; else {
   $$02832$i$i = HEAP32[$36 >> 2] | 0;
   if (!$$02832$i$i) label = 24; else {
    L20 : do if ($29) {
     $$02833$us$i$i = $$02832$i$i;
     while (1) {
      $40 = HEAP32[$$02833$us$i$i + 4 >> 2] | 0;
      $41 = ($40 | 0) == ($23 | 0);
      if (!($41 | ($40 & $27 | 0) == ($35 | 0))) {
       label = 24;
       break L11;
      }
      if ($41) if ((HEAP32[$$02833$us$i$i + 8 >> 2] | 0) == ($23 | 0)) break L20;
      $$02833$us$i$i = HEAP32[$$02833$us$i$i >> 2] | 0;
      if (!$$02833$us$i$i) {
       label = 24;
       break L11;
      }
     }
    } else {
     $$02833$i$i = $$02832$i$i;
     while (1) {
      $49 = HEAP32[$$02833$i$i + 4 >> 2] | 0;
      if (($49 | 0) == ($23 | 0)) {
       if ((HEAP32[$$02833$i$i + 8 >> 2] | 0) == ($23 | 0)) break L20;
      } else {
       if ($49 >>> 0 < $25 >>> 0) $54 = $49; else $54 = ($49 >>> 0) % ($25 >>> 0) | 0;
       if (($54 | 0) != ($35 | 0)) {
        label = 24;
        break L11;
       }
      }
      $$02833$i$i = HEAP32[$$02833$i$i >> 2] | 0;
      if (!$$02833$i$i) {
       label = 24;
       break L11;
      }
     }
    } while (0);
    if ((HEAP32[(__ZNSt3__213unordered_mapIjN2ut4arch13EntityManager11FreshEntity13ComponentEditENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjS5_EEEEEixERSC_($22, $4) | 0) + 4 >> 2] | 0) == 1) __ZNSt3__212__hash_tableINS_17__hash_value_typeIjN2ut4arch13EntityManager11FreshEntity13ComponentEditEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS7_NS_8equal_toIjEELb1EEENS_9allocatorIS7_EEE14__erase_uniqueIjEEjRKT_($22, $4) | 0; else label = 24;
   }
  }
 } while (0);
 if ((label | 0) == 24) {
  $63 = __ZNSt3__213unordered_mapIjN2ut4arch13EntityManager11FreshEntity13ComponentEditENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjS5_EEEEEixERSC_($22, $4) | 0;
  HEAP32[$63 >> 2] = 0;
  HEAP32[$63 + 4 >> 2] = 0;
 }
 $64 = $0 + 108 | 0;
 $65 = HEAP32[$4 >> 2] | 0;
 $66 = $0 + 112 | 0;
 $67 = HEAP32[$66 >> 2] | 0;
 $68 = ($67 | 0) == 0;
 L43 : do if ($68) $$0$i$i$i = 0; else {
  $69 = $67 + -1 | 0;
  $71 = ($69 & $67 | 0) == 0;
  if ($71) $77 = $69 & $65; else if ($65 >>> 0 < $67 >>> 0) $77 = $65; else $77 = ($65 >>> 0) % ($67 >>> 0) | 0;
  $78 = HEAP32[(HEAP32[$64 >> 2] | 0) + ($77 << 2) >> 2] | 0;
  if (!$78) $$0$i$i$i = $77; else {
   $$04575$i$i$i = HEAP32[$78 >> 2] | 0;
   if (!$$04575$i$i$i) $$0$i$i$i = $77; else {
    if ($71) {
     $$04576$us$i$i$i = $$04575$i$i$i;
     while (1) {
      $82 = HEAP32[$$04576$us$i$i$i + 4 >> 2] | 0;
      if (!(($82 | 0) == ($65 | 0) | ($82 & $69 | 0) == ($77 | 0))) {
       $$0$i$i$i = $77;
       break L43;
      }
      if ((HEAP32[$$04576$us$i$i$i + 8 >> 2] | 0) == ($65 | 0)) break;
      $$04576$us$i$i$i = HEAP32[$$04576$us$i$i$i >> 2] | 0;
      if (!$$04576$us$i$i$i) {
       $$0$i$i$i = $77;
       break L43;
      }
     }
     STACKTOP = sp;
     return;
    }
    $$04576$i$i$i = $$04575$i$i$i;
    while (1) {
     $92 = HEAP32[$$04576$i$i$i + 4 >> 2] | 0;
     if (($92 | 0) != ($65 | 0)) {
      if ($92 >>> 0 < $67 >>> 0) $97 = $92; else $97 = ($92 >>> 0) % ($67 >>> 0) | 0;
      if (($97 | 0) != ($77 | 0)) {
       $$0$i$i$i = $77;
       break L43;
      }
     }
     if ((HEAP32[$$04576$i$i$i + 8 >> 2] | 0) == ($65 | 0)) break;
     $$04576$i$i$i = HEAP32[$$04576$i$i$i >> 2] | 0;
     if (!$$04576$i$i$i) {
      $$0$i$i$i = $77;
      break L43;
     }
    }
    STACKTOP = sp;
    return;
   }
  }
 } while (0);
 $101 = __Znwj(12) | 0;
 HEAP32[$101 + 8 >> 2] = $65;
 HEAP32[$101 + 4 >> 2] = $65;
 HEAP32[$101 >> 2] = 0;
 $104 = $0 + 120 | 0;
 $107 = +(((HEAP32[$104 >> 2] | 0) + 1 | 0) >>> 0);
 $110 = +HEAPF32[$0 + 124 >> 2];
 do if ($68 | $110 * +($67 >>> 0) < $107) {
  $120 = $67 << 1 | ($67 >>> 0 < 3 | ($67 + -1 & $67 | 0) != 0) & 1;
  $123 = ~~+Math_ceil(+($107 / $110)) >>> 0;
  __ZNSt3__212__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE6rehashEj($64, $120 >>> 0 < $123 >>> 0 ? $123 : $120);
  $125 = HEAP32[$66 >> 2] | 0;
  $126 = $125 + -1 | 0;
  if (!($126 & $125)) {
   $$047$i$i$i = $125;
   $$1$i$i$i = $126 & $65;
   break;
  }
  if ($65 >>> 0 < $125 >>> 0) {
   $$047$i$i$i = $125;
   $$1$i$i$i = $65;
  } else {
   $$047$i$i$i = $125;
   $$1$i$i$i = ($65 >>> 0) % ($125 >>> 0) | 0;
  }
 } else {
  $$047$i$i$i = $67;
  $$1$i$i$i = $$0$i$i$i;
 } while (0);
 $133 = (HEAP32[$64 >> 2] | 0) + ($$1$i$i$i << 2) | 0;
 $134 = HEAP32[$133 >> 2] | 0;
 if (!$134) {
  $136 = $0 + 116 | 0;
  HEAP32[$101 >> 2] = HEAP32[$136 >> 2];
  HEAP32[$136 >> 2] = $101;
  HEAP32[$133 >> 2] = $136;
  $138 = HEAP32[$101 >> 2] | 0;
  if ($138 | 0) {
   $141 = HEAP32[$138 + 4 >> 2] | 0;
   $142 = $$047$i$i$i + -1 | 0;
   if (!($142 & $$047$i$i$i)) $150 = $141 & $142; else if ($141 >>> 0 < $$047$i$i$i >>> 0) $150 = $141; else $150 = ($141 >>> 0) % ($$047$i$i$i >>> 0) | 0;
   $$sink = (HEAP32[$64 >> 2] | 0) + ($150 << 2) | 0;
   label = 57;
  }
 } else {
  HEAP32[$101 >> 2] = HEAP32[$134 >> 2];
  $$sink = $134;
  label = 57;
 }
 if ((label | 0) == 57) HEAP32[$$sink >> 2] = $101;
 HEAP32[$104 >> 2] = (HEAP32[$104 >> 2] | 0) + 1;
 STACKTOP = sp;
 return;
}

function __ZN2ut4arch13EntityManager15addComponentRawENS_6EntityEj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$02832$i$i = 0, $$02833$i$i = 0, $$02833$us$i$i = 0, $$04575$i$i$i = 0, $$04576$i$i$i = 0, $$04576$us$i$i$i = 0, $$047$i$i$i = 0, $$1$i$i$i = 0, $$sink = 0, $$sink51 = 0, $10 = 0, $104 = 0, $109 = 0, $113 = 0, $116 = 0, $119 = 0.0, $122 = 0.0, $132 = 0, $135 = 0, $137 = 0, $138 = 0, $145 = 0, $146 = 0, $148 = 0, $150 = 0, $153 = 0, $154 = 0, $16 = 0, $162 = 0, $166 = 0, $171 = 0, $172 = 0, $177 = 0, $178 = 0, $18 = 0, $182 = 0, $23 = 0, $24 = 0, $29 = 0, $3 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $37 = 0, $39 = 0, $4 = 0, $41 = 0, $47 = 0, $48 = 0, $5 = 0, $52 = 0, $53 = 0, $61 = 0, $66 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $83 = 0, $89 = 0, $90 = 0, $94 = 0, $tmpcast$byval_copy = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $tmpcast$byval_copy = sp + 32 | 0;
 $vararg_buffer1 = sp + 24 | 0;
 $vararg_buffer = sp + 16 | 0;
 $3 = sp + 28 | 0;
 $4 = sp + 8 | 0;
 $5 = sp;
 HEAP32[$3 >> 2] = $2;
 __ZN2ut4arch13EntityManager18assertEntityExistsERKNS_6EntityEjPKcS6_($0, $1, $2, 12479, 11668);
 __ZN2ut4arch13EntityManager32assertEntityDoesNotHaveComponentERKNS_6EntityEjPKc($0, $1, $2, 12479);
 if ((HEAP32[$0 + 36 >> 2] | 0) <= 0) {
  $166 = $0 + 8 | 0;
  if ((HEAP32[(HEAP32[$166 >> 2] | 0) + 44 >> 2] | 0) > 0) {
   _snprintf(25060, 1024, 8878, $vararg_buffer1) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8949, 6920, 35);
  }
  $171 = HEAP32[$166 >> 2] | 0;
  $172 = $1;
  $177 = HEAP32[$172 + 4 >> 2] | 0;
  $178 = $5;
  HEAP32[$178 >> 2] = HEAP32[$172 >> 2];
  HEAP32[$178 + 4 >> 2] = $177;
  $182 = HEAP32[$3 >> 2] | 0;
  HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$5 >> 2];
  HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  __ZN2ut4arch17EntityDataManager12addComponentENS_6EntityEj($171, $tmpcast$byval_copy, $182);
  STACKTOP = sp;
  return;
 }
 $10 = HEAP32[6067] | 0;
 if ((HEAP32[6068] | 0) - $10 >> 2 >>> 0 <= $2 >>> 0) {
  _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
 $16 = HEAP32[$10 + ($2 << 2) >> 2] | 0;
 $18 = $1;
 $23 = HEAP32[$18 + 4 >> 2] | 0;
 $24 = $4;
 HEAP32[$24 >> 2] = HEAP32[$18 >> 2];
 HEAP32[$24 + 4 >> 2] = $23;
 $29 = HEAP32[$16 + 24 >> 2] | 0;
 $31 = HEAP32[$16 + 16 >> 2] | 0;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$4 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 $32 = __ZN2ut4arch19EntityCommandBuffer19addComponentDataRawENS_6EntityEjPKvi($0 + 40 | 0, $tmpcast$byval_copy, $2, $29, $31) | 0;
 $33 = __ZN2ut4arch13EntityManager23findOrCreateFreshEntityERKNS_6EntityE($0, $1) | 0;
 $34 = $33 + 16 | 0;
 $35 = HEAP32[$3 >> 2] | 0;
 $37 = HEAP32[$33 + 20 >> 2] | 0;
 L11 : do if (!$37) label = 25; else {
  $39 = $37 + -1 | 0;
  $41 = ($39 & $37 | 0) == 0;
  if ($41) $47 = $39 & $35; else if ($35 >>> 0 < $37 >>> 0) $47 = $35; else $47 = ($35 >>> 0) % ($37 >>> 0) | 0;
  $48 = HEAP32[(HEAP32[$34 >> 2] | 0) + ($47 << 2) >> 2] | 0;
  if (!$48) label = 25; else {
   $$02832$i$i = HEAP32[$48 >> 2] | 0;
   if (!$$02832$i$i) label = 25; else {
    L20 : do if ($41) {
     $$02833$us$i$i = $$02832$i$i;
     while (1) {
      $52 = HEAP32[$$02833$us$i$i + 4 >> 2] | 0;
      $53 = ($52 | 0) == ($35 | 0);
      if (!($53 | ($52 & $39 | 0) == ($47 | 0))) {
       label = 25;
       break L11;
      }
      if ($53) if ((HEAP32[$$02833$us$i$i + 8 >> 2] | 0) == ($35 | 0)) break L20;
      $$02833$us$i$i = HEAP32[$$02833$us$i$i >> 2] | 0;
      if (!$$02833$us$i$i) {
       label = 25;
       break L11;
      }
     }
    } else {
     $$02833$i$i = $$02832$i$i;
     while (1) {
      $61 = HEAP32[$$02833$i$i + 4 >> 2] | 0;
      if (($61 | 0) == ($35 | 0)) {
       if ((HEAP32[$$02833$i$i + 8 >> 2] | 0) == ($35 | 0)) break L20;
      } else {
       if ($61 >>> 0 < $37 >>> 0) $66 = $61; else $66 = ($61 >>> 0) % ($37 >>> 0) | 0;
       if (($66 | 0) != ($47 | 0)) {
        label = 25;
        break L11;
       }
      }
      $$02833$i$i = HEAP32[$$02833$i$i >> 2] | 0;
      if (!$$02833$i$i) {
       label = 25;
       break L11;
      }
     }
    } while (0);
    if (!(HEAP32[(__ZNSt3__213unordered_mapIjN2ut4arch13EntityManager11FreshEntity13ComponentEditENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjS5_EEEEEixERSC_($34, $3) | 0) + 4 >> 2] | 0)) $$sink = 2; else label = 25;
   }
  }
 } while (0);
 if ((label | 0) == 25) $$sink = 1;
 $75 = __ZNSt3__213unordered_mapIjN2ut4arch13EntityManager11FreshEntity13ComponentEditENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjS5_EEEEEixERSC_($34, $3) | 0;
 HEAP32[$75 >> 2] = $32;
 HEAP32[$75 + 4 >> 2] = $$sink;
 $76 = $0 + 108 | 0;
 $77 = HEAP32[$3 >> 2] | 0;
 $78 = $0 + 112 | 0;
 $79 = HEAP32[$78 >> 2] | 0;
 $80 = ($79 | 0) == 0;
 L42 : do if ($80) $$0$i$i$i = 0; else {
  $81 = $79 + -1 | 0;
  $83 = ($81 & $79 | 0) == 0;
  if ($83) $89 = $81 & $77; else if ($77 >>> 0 < $79 >>> 0) $89 = $77; else $89 = ($77 >>> 0) % ($79 >>> 0) | 0;
  $90 = HEAP32[(HEAP32[$76 >> 2] | 0) + ($89 << 2) >> 2] | 0;
  if (!$90) $$0$i$i$i = $89; else {
   $$04575$i$i$i = HEAP32[$90 >> 2] | 0;
   if (!$$04575$i$i$i) $$0$i$i$i = $89; else {
    if ($83) {
     $$04576$us$i$i$i = $$04575$i$i$i;
     while (1) {
      $94 = HEAP32[$$04576$us$i$i$i + 4 >> 2] | 0;
      if (!(($94 | 0) == ($77 | 0) | ($94 & $81 | 0) == ($89 | 0))) {
       $$0$i$i$i = $89;
       break L42;
      }
      if ((HEAP32[$$04576$us$i$i$i + 8 >> 2] | 0) == ($77 | 0)) break;
      $$04576$us$i$i$i = HEAP32[$$04576$us$i$i$i >> 2] | 0;
      if (!$$04576$us$i$i$i) {
       $$0$i$i$i = $89;
       break L42;
      }
     }
     STACKTOP = sp;
     return;
    }
    $$04576$i$i$i = $$04575$i$i$i;
    while (1) {
     $104 = HEAP32[$$04576$i$i$i + 4 >> 2] | 0;
     if (($104 | 0) != ($77 | 0)) {
      if ($104 >>> 0 < $79 >>> 0) $109 = $104; else $109 = ($104 >>> 0) % ($79 >>> 0) | 0;
      if (($109 | 0) != ($89 | 0)) {
       $$0$i$i$i = $89;
       break L42;
      }
     }
     if ((HEAP32[$$04576$i$i$i + 8 >> 2] | 0) == ($77 | 0)) break;
     $$04576$i$i$i = HEAP32[$$04576$i$i$i >> 2] | 0;
     if (!$$04576$i$i$i) {
      $$0$i$i$i = $89;
      break L42;
     }
    }
    STACKTOP = sp;
    return;
   }
  }
 } while (0);
 $113 = __Znwj(12) | 0;
 HEAP32[$113 + 8 >> 2] = $77;
 HEAP32[$113 + 4 >> 2] = $77;
 HEAP32[$113 >> 2] = 0;
 $116 = $0 + 120 | 0;
 $119 = +(((HEAP32[$116 >> 2] | 0) + 1 | 0) >>> 0);
 $122 = +HEAPF32[$0 + 124 >> 2];
 do if ($80 | $122 * +($79 >>> 0) < $119) {
  $132 = $79 << 1 | ($79 >>> 0 < 3 | ($79 + -1 & $79 | 0) != 0) & 1;
  $135 = ~~+Math_ceil(+($119 / $122)) >>> 0;
  __ZNSt3__212__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE6rehashEj($76, $132 >>> 0 < $135 >>> 0 ? $135 : $132);
  $137 = HEAP32[$78 >> 2] | 0;
  $138 = $137 + -1 | 0;
  if (!($138 & $137)) {
   $$047$i$i$i = $137;
   $$1$i$i$i = $138 & $77;
   break;
  }
  if ($77 >>> 0 < $137 >>> 0) {
   $$047$i$i$i = $137;
   $$1$i$i$i = $77;
  } else {
   $$047$i$i$i = $137;
   $$1$i$i$i = ($77 >>> 0) % ($137 >>> 0) | 0;
  }
 } else {
  $$047$i$i$i = $79;
  $$1$i$i$i = $$0$i$i$i;
 } while (0);
 $145 = (HEAP32[$76 >> 2] | 0) + ($$1$i$i$i << 2) | 0;
 $146 = HEAP32[$145 >> 2] | 0;
 if (!$146) {
  $148 = $0 + 116 | 0;
  HEAP32[$113 >> 2] = HEAP32[$148 >> 2];
  HEAP32[$148 >> 2] = $113;
  HEAP32[$145 >> 2] = $148;
  $150 = HEAP32[$113 >> 2] | 0;
  if ($150 | 0) {
   $153 = HEAP32[$150 + 4 >> 2] | 0;
   $154 = $$047$i$i$i + -1 | 0;
   if (!($154 & $$047$i$i$i)) $162 = $153 & $154; else if ($153 >>> 0 < $$047$i$i$i >>> 0) $162 = $153; else $162 = ($153 >>> 0) % ($$047$i$i$i >>> 0) | 0;
   $$sink51 = (HEAP32[$76 >> 2] | 0) + ($162 << 2) | 0;
   label = 58;
  }
 } else {
  HEAP32[$113 >> 2] = HEAP32[$146 >> 2];
  $$sink51 = $146;
  label = 58;
 }
 if ((label | 0) == 58) HEAP32[$$sink51 >> 2] = $113;
 HEAP32[$116 >> 2] = (HEAP32[$116 >> 2] | 0) + 1;
 STACKTOP = sp;
 return;
}

function __ZN2ut4arch13EntityManager26getFreshComponentDataRawROERKNS_6EntityEj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$02832$i$i = 0, $$02832$i$i$i = 0, $$02832$i$i$i25 = 0, $$02833$i$i = 0, $$02833$i$i$i = 0, $$02833$i$i$i34 = 0, $$02833$us$i$i = 0, $$02833$us$i$i$i = 0, $$02833$us$i$i$i28 = 0, $$3 = 0, $$sroa$0$0$i$i = 0, $$sroa$0$0$i$i$i = 0, $$sroa$0$0$i$i$i$pn = 0, $$sroa$0$0$i$i$i39 = 0, $10 = 0, $100 = 0, $102 = 0, $104 = 0, $110 = 0, $111 = 0, $115 = 0, $116 = 0, $124 = 0, $129 = 0, $136 = 0, $137 = 0, $142 = 0, $143 = 0, $17 = 0, $18 = 0, $22 = 0, $23 = 0, $3 = 0, $31 = 0, $36 = 0, $4 = 0, $41 = 0, $42 = 0, $45 = 0, $5 = 0, $51 = 0, $53 = 0, $55 = 0, $6 = 0, $62 = 0, $63 = 0, $67 = 0, $68 = 0, $76 = 0, $8 = 0, $81 = 0, $94 = 0, $95 = 0, $tmpcast$byval_copy = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $tmpcast$byval_copy = sp + 40 | 0;
 $vararg_buffer5 = sp + 32 | 0;
 $vararg_buffer3 = sp + 24 | 0;
 $vararg_buffer1 = sp + 16 | 0;
 $vararg_buffer = sp + 8 | 0;
 $3 = sp;
 $4 = HEAP32[$1 >> 2] | 0;
 $5 = $0 + 132 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (!$6) {
  $$3 = 0;
  STACKTOP = sp;
  return $$3 | 0;
 }
 $8 = $6 + -1 | 0;
 $10 = ($8 & $6 | 0) == 0;
 if ($10) $17 = $8 & $4; else if ($4 >>> 0 < $6 >>> 0) $17 = $4; else $17 = ($4 >>> 0) % ($6 >>> 0) | 0;
 $18 = HEAP32[(HEAP32[$0 + 128 >> 2] | 0) + ($17 << 2) >> 2] | 0;
 if (!$18) {
  $$3 = 0;
  STACKTOP = sp;
  return $$3 | 0;
 }
 $$02832$i$i$i = HEAP32[$18 >> 2] | 0;
 if (!$$02832$i$i$i) {
  $$3 = 0;
  STACKTOP = sp;
  return $$3 | 0;
 }
 L15 : do if ($10) {
  $$02833$us$i$i$i = $$02832$i$i$i;
  while (1) {
   $22 = HEAP32[$$02833$us$i$i$i + 4 >> 2] | 0;
   $23 = ($22 | 0) == ($4 | 0);
   if (!($23 | ($22 & $8 | 0) == ($17 | 0))) {
    $$3 = 0;
    label = 76;
    break;
   }
   if ($23) if ((HEAP32[$$02833$us$i$i$i + 8 >> 2] | 0) == ($4 | 0)) {
    $$sroa$0$0$i$i$i = $$02833$us$i$i$i;
    break L15;
   }
   $$02833$us$i$i$i = HEAP32[$$02833$us$i$i$i >> 2] | 0;
   if (!$$02833$us$i$i$i) {
    $$3 = 0;
    label = 76;
    break;
   }
  }
  if ((label | 0) == 76) {
   STACKTOP = sp;
   return $$3 | 0;
  }
 } else {
  $$02833$i$i$i = $$02832$i$i$i;
  while (1) {
   $31 = HEAP32[$$02833$i$i$i + 4 >> 2] | 0;
   if (($31 | 0) == ($4 | 0)) {
    if ((HEAP32[$$02833$i$i$i + 8 >> 2] | 0) == ($4 | 0)) {
     $$sroa$0$0$i$i$i = $$02833$i$i$i;
     break L15;
    }
   } else {
    if ($31 >>> 0 < $6 >>> 0) $36 = $31; else $36 = ($31 >>> 0) % ($6 >>> 0) | 0;
    if (($36 | 0) != ($17 | 0)) {
     $$3 = 0;
     label = 76;
     break;
    }
   }
   $$02833$i$i$i = HEAP32[$$02833$i$i$i >> 2] | 0;
   if (!$$02833$i$i$i) {
    $$3 = 0;
    label = 76;
    break;
   }
  }
  if ((label | 0) == 76) {
   STACKTOP = sp;
   return $$3 | 0;
  }
 } while (0);
 $41 = $1 + 4 | 0;
 $42 = $0 + 128 | 0;
 $$sroa$0$0$i$i$i$pn = $$sroa$0$0$i$i$i;
 $45 = $4;
 L40 : while (1) {
  if ((HEAP32[$$sroa$0$0$i$i$i$pn + 12 >> 2] | 0) != ($45 | 0)) {
   label = 24;
   break;
  }
  if ((HEAP32[$$sroa$0$0$i$i$i$pn + 16 >> 2] | 0) != (HEAP32[$41 >> 2] | 0)) {
   label = 24;
   break;
  }
  $51 = HEAP32[$$sroa$0$0$i$i$i$pn + 32 >> 2] | 0;
  L44 : do if ($51 | 0) {
   $53 = $51 + -1 | 0;
   $55 = ($53 & $51 | 0) == 0;
   if ($55) $62 = $53 & $2; else if ($51 >>> 0 > $2 >>> 0) $62 = $2; else $62 = ($2 >>> 0) % ($51 >>> 0) | 0;
   $63 = HEAP32[(HEAP32[$$sroa$0$0$i$i$i$pn + 28 >> 2] | 0) + ($62 << 2) >> 2] | 0;
   if ($63 | 0) {
    $$02832$i$i = HEAP32[$63 >> 2] | 0;
    if ($$02832$i$i | 0) {
     if ($55) {
      $$02833$us$i$i = $$02832$i$i;
      while (1) {
       $67 = HEAP32[$$02833$us$i$i + 4 >> 2] | 0;
       $68 = ($67 | 0) == ($2 | 0);
       if (!($68 | ($67 & $53 | 0) == ($62 | 0))) break L44;
       if ($68) if ((HEAP32[$$02833$us$i$i + 8 >> 2] | 0) == ($2 | 0)) {
        $$sroa$0$0$i$i = $$02833$us$i$i;
        label = 45;
        break L40;
       }
       $$02833$us$i$i = HEAP32[$$02833$us$i$i >> 2] | 0;
       if (!$$02833$us$i$i) break L44;
      }
     }
     $$02833$i$i = $$02832$i$i;
     do {
      $76 = HEAP32[$$02833$i$i + 4 >> 2] | 0;
      if (($76 | 0) == ($2 | 0)) {
       if ((HEAP32[$$02833$i$i + 8 >> 2] | 0) == ($2 | 0)) {
        $$sroa$0$0$i$i = $$02833$i$i;
        label = 45;
        break L40;
       }
      } else {
       if ($76 >>> 0 < $51 >>> 0) $81 = $76; else $81 = ($76 >>> 0) % ($51 >>> 0) | 0;
       if (($81 | 0) != ($62 | 0)) break L44;
      }
      $$02833$i$i = HEAP32[$$02833$i$i >> 2] | 0;
     } while (($$02833$i$i | 0) != 0);
    }
   }
  } while (0);
  if (HEAP8[$$sroa$0$0$i$i$i$pn + 60 >> 0] | 0) {
   label = 49;
   break;
  }
  $94 = $$sroa$0$0$i$i$i$pn + 20 | 0;
  $95 = HEAP32[$94 >> 2] | 0;
  if (!$95) if (!(HEAP32[$$sroa$0$0$i$i$i$pn + 24 >> 2] | 0)) {
   $$3 = 0;
   label = 76;
   break;
  }
  $100 = HEAP32[$5 >> 2] | 0;
  if (!$100) {
   label = 72;
   break;
  }
  $102 = $100 + -1 | 0;
  $104 = ($102 & $100 | 0) == 0;
  if ($104) $110 = $102 & $95; else if ($95 >>> 0 < $100 >>> 0) $110 = $95; else $110 = ($95 >>> 0) % ($100 >>> 0) | 0;
  $111 = HEAP32[(HEAP32[$42 >> 2] | 0) + ($110 << 2) >> 2] | 0;
  if (!$111) {
   label = 72;
   break;
  }
  $$02832$i$i$i25 = HEAP32[$111 >> 2] | 0;
  if (!$$02832$i$i$i25) {
   label = 72;
   break;
  }
  L84 : do if ($104) {
   $$02833$us$i$i$i28 = $$02832$i$i$i25;
   while (1) {
    $115 = HEAP32[$$02833$us$i$i$i28 + 4 >> 2] | 0;
    $116 = ($115 | 0) == ($95 | 0);
    if (!($116 | ($115 & $102 | 0) == ($110 | 0))) {
     label = 72;
     break L40;
    }
    if ($116) if ((HEAP32[$$02833$us$i$i$i28 + 8 >> 2] | 0) == ($95 | 0)) {
     $$sroa$0$0$i$i$i39 = $$02833$us$i$i$i28;
     break L84;
    }
    $$02833$us$i$i$i28 = HEAP32[$$02833$us$i$i$i28 >> 2] | 0;
    if (!$$02833$us$i$i$i28) {
     label = 72;
     break L40;
    }
   }
  } else {
   $$02833$i$i$i34 = $$02832$i$i$i25;
   while (1) {
    $124 = HEAP32[$$02833$i$i$i34 + 4 >> 2] | 0;
    if (($124 | 0) == ($95 | 0)) {
     if ((HEAP32[$$02833$i$i$i34 + 8 >> 2] | 0) == ($95 | 0)) {
      $$sroa$0$0$i$i$i39 = $$02833$i$i$i34;
      break L84;
     }
    } else {
     if ($124 >>> 0 < $100 >>> 0) $129 = $124; else $129 = ($124 >>> 0) % ($100 >>> 0) | 0;
     if (($129 | 0) != ($110 | 0)) {
      label = 72;
      break L40;
     }
    }
    $$02833$i$i$i34 = HEAP32[$$02833$i$i$i34 >> 2] | 0;
    if (!$$02833$i$i$i34) {
     label = 72;
     break L40;
    }
   }
  } while (0);
  $$sroa$0$0$i$i$i$pn = $$sroa$0$0$i$i$i39;
  $45 = HEAP32[$1 >> 2] | 0;
 }
 if ((label | 0) == 24) {
  _snprintf(25060, 1024, 7169, $vararg_buffer) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 7188, 6920, 310);
 } else if ((label | 0) == 45) {
  if (!(HEAP32[$$sroa$0$0$i$i + 16 >> 2] | 0)) {
   _snprintf(25060, 1024, 13550, $vararg_buffer1) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 7208, 6920, 314);
  }
  $$3 = HEAP32[$$sroa$0$0$i$i + 12 >> 2] | 0;
  STACKTOP = sp;
  return $$3 | 0;
 } else if ((label | 0) == 49) {
  _snprintf(25060, 1024, 7276, $vararg_buffer3) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 7402, 6920, 319);
 } else if ((label | 0) == 72) {
  if (($95 | 0) <= -1) {
   _snprintf(25060, 1024, 13630, $vararg_buffer5) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13693, 6920, 324);
  }
  $136 = HEAP32[$0 + 8 >> 2] | 0;
  $137 = $94;
  $142 = HEAP32[$137 + 4 >> 2] | 0;
  $143 = $3;
  HEAP32[$143 >> 2] = HEAP32[$137 >> 2];
  HEAP32[$143 + 4 >> 2] = $142;
  HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$3 >> 2];
  HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  $$3 = __ZN2ut4arch17EntityDataManager24getComponentDataWithTypeENS_6EntityEj($136, $tmpcast$byval_copy, $2) | 0;
  STACKTOP = sp;
  return $$3 | 0;
 } else if ((label | 0) == 76) {
  STACKTOP = sp;
  return $$3 | 0;
 }
 return 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$add$i = 0, $$0$i$i$add$i93 = 0, $$0$i$i$i = 0, $$0$i$i$idx$i = 0, $$0$i$i$idx$i92 = 0, $$067 = 0, $$069 = 0, $$083 = 0, $$3 = 0, $$pre = 0, $$sroa$0$0$$sroa_idx$i = 0, $$sroa$0$0$copyload$i86103 = 0, $100 = 0, $101 = 0, $109 = 0, $113 = 0, $114 = 0, $115 = 0, $127 = 0, $13 = 0, $16 = 0, $18 = 0, $19 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $36 = 0, $4 = 0, $48 = 0, $49 = 0, $5 = 0, $53 = 0, $56 = 0, $6 = 0, $64 = 0, $65 = 0, $66 = 0, $79 = 0, $81 = 0, $82 = 0, $83 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $3 = sp + 32 | 0;
 $4 = sp + 16 | 0;
 $5 = sp + 12 | 0;
 $6 = sp;
 do if (($1 - $0 | 0) > 1) if ((HEAP8[$0 >> 0] | 0) == 73) {
  $13 = $2 + 61 | 0;
  $$pre = $2 + 36 | 0;
  if (HEAP8[$13 >> 0] | 0) {
   $16 = HEAP32[$$pre >> 2] | 0;
   $18 = HEAP32[$16 + -16 >> 2] | 0;
   $19 = $16 + -12 | 0;
   $$0$i$i$i = HEAP32[$19 >> 2] | 0;
   while (1) {
    if (($$0$i$i$i | 0) == ($18 | 0)) break;
    $22 = $$0$i$i$i + -16 | 0;
    __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($22);
    $$0$i$i$i = $22;
   }
   HEAP32[$19 >> 2] = $18;
  }
  HEAP32[$4 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($4, 22311, __ZNSt3__211char_traitsIcE6lengthEPKc(22311) | 0);
  $25 = $2 + 4 | 0;
  $$sroa$0$0$$sroa_idx$i = $2 + 12 | 0;
  $26 = $2 + 40 | 0;
  $27 = $2 + 32 | 0;
  $28 = $4 + 11 | 0;
  $29 = $4 + 4 | 0;
  $30 = $3 + 11 | 0;
  $31 = $3 + 4 | 0;
  $$083 = $0 + 1 | 0;
  while (1) {
   if ((HEAP8[$$083 >> 0] | 0) == 69) break;
   if (HEAP8[$13 >> 0] | 0) {
    HEAP32[$5 >> 2] = HEAP32[$$sroa$0$0$$sroa_idx$i >> 2];
    $36 = HEAP32[$$pre >> 2] | 0;
    if ($36 >>> 0 < (HEAP32[$26 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lj4096EEEEELj4096EEC2IS4_EERKNS1_IT_Lj4096EEE($3, $5);
     HEAP32[$36 >> 2] = 0;
     HEAP32[$36 + 4 >> 2] = 0;
     HEAP32[$36 + 8 >> 2] = 0;
     HEAP32[$36 + 12 >> 2] = HEAP32[$3 >> 2];
     HEAP32[$$pre >> 2] = (HEAP32[$$pre >> 2] | 0) + 16;
    } else __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($27, $5);
   }
   $48 = ((HEAP32[$25 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
   $49 = __ZN10__cxxabiv112_GLOBAL__N_118parse_template_argINS0_2DbEEEPKcS4_S4_RT_($$083, $1, $2) | 0;
   $53 = ((HEAP32[$25 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
   if (HEAP8[$13 >> 0] | 0) {
    $56 = HEAP32[$$pre >> 2] | 0;
    $$0$i$i$idx$i = 0;
    while (1) {
     if (($$0$i$i$idx$i | 0) == -1) break;
     $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
     __ZNSt3__213__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev($56 + ($$0$i$i$add$i << 4) | 0);
     $$0$i$i$idx$i = $$0$i$i$add$i;
    }
    HEAP32[$$pre >> 2] = $56 + -16;
   }
   if (($49 | 0) == ($$083 | 0) | ($49 | 0) == ($1 | 0)) {
    label = 53;
    break;
   }
   L29 : do if (HEAP8[$13 >> 0] | 0) {
    $64 = HEAP32[$$pre >> 2] | 0;
    $$sroa$0$0$copyload$i86103 = HEAP32[$$sroa$0$0$$sroa_idx$i >> 2] | 0;
    HEAP32[$3 >> 2] = $$sroa$0$0$copyload$i86103;
    $65 = $64 + -12 | 0;
    $66 = HEAP32[$65 >> 2] | 0;
    if ($66 >>> 0 < (HEAP32[$64 + -8 >> 2] | 0) >>> 0) {
     HEAP32[$66 >> 2] = 0;
     HEAP32[$66 + 4 >> 2] = 0;
     HEAP32[$66 + 8 >> 2] = 0;
     HEAP32[$66 + 12 >> 2] = $$sroa$0$0$copyload$i86103;
     HEAP32[$65 >> 2] = (HEAP32[$65 >> 2] | 0) + 16;
    } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($64 + -16 | 0, $3);
    $$067 = $48;
    while (1) {
     if ($$067 >>> 0 >= $53 >>> 0) break L29;
     $79 = HEAP32[(HEAP32[$$pre >> 2] | 0) + -12 >> 2] | 0;
     $81 = (HEAP32[$2 >> 2] | 0) + ($$067 * 24 | 0) | 0;
     $82 = $79 + -12 | 0;
     $83 = HEAP32[$82 >> 2] | 0;
     if (($83 | 0) == (HEAP32[$79 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($79 + -16 | 0, $81); else {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($83, $81);
      HEAP32[$82 >> 2] = (HEAP32[$82 >> 2] | 0) + 24;
     }
     $$067 = $$067 + 1 | 0;
    }
   } while (0);
   $$0 = $48;
   while (1) {
    if ($$0 >>> 0 >= $53 >>> 0) break;
    $92 = HEAP8[$28 >> 0] | 0;
    if (($92 << 24 >> 24 < 0 ? HEAP32[$29 >> 2] | 0 : $92 & 255) >>> 0 > 1) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($4, 22499) | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, (HEAP32[$2 >> 2] | 0) + ($$0 * 24 | 0) | 0);
    $100 = HEAP8[$30 >> 0] | 0;
    $101 = $100 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($4, $101 ? HEAP32[$3 >> 2] | 0 : $3, $101 ? HEAP32[$31 >> 2] | 0 : $100 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$0 = $$0 + 1 | 0;
   }
   $$069 = $53;
   while (1) {
    if (($$069 | 0) == ($48 | 0)) break;
    $109 = HEAP32[$25 >> 2] | 0;
    $$0$i$i$idx$i92 = 0;
    while (1) {
     if (($$0$i$i$idx$i92 | 0) == -1) break;
     $$0$i$i$add$i93 = $$0$i$i$idx$i92 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($109 + ($$0$i$i$add$i93 * 24 | 0) | 0);
     $$0$i$i$idx$i92 = $$0$i$i$add$i93;
    }
    HEAP32[$25 >> 2] = $109 + -24;
    $$069 = $$069 + -1 | 0;
   }
   $$083 = $49;
  }
  if ((label | 0) == 53) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
   $$3 = $0;
   break;
  }
  $113 = $$083 + 1 | 0;
  $114 = HEAP8[$28 >> 0] | 0;
  $115 = $114 << 24 >> 24 < 0;
  if ((HEAP8[($115 ? HEAP32[$4 >> 2] | 0 : $4) + ($115 ? HEAP32[$29 >> 2] | 0 : $114 & 255) + -1 >> 0] | 0) == 62) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($4, 23690) | 0; else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($4, 22313) | 0;
  HEAP32[$6 >> 2] = HEAP32[$4 >> 2];
  HEAP32[$6 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  HEAP32[$6 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
  $$0$i$i = 0;
  while (1) {
   if (($$0$i$i | 0) == 3) break;
   HEAP32[$4 + ($$0$i$i << 2) >> 2] = 0;
   $$0$i$i = $$0$i$i + 1 | 0;
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $6);
  $127 = HEAP32[$25 >> 2] | 0;
  if ($127 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($127, $3);
   HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 24;
  } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
  $$3 = $113;
 } else $$3 = $0; else $$3 = $0; while (0);
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZN2ut9Scheduler6removeEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$02832$i$i = 0, $$02832$i$i16 = 0, $$02833$i$i = 0, $$02833$i$i25 = 0, $$02833$i$i42 = 0, $$02833$us$i$i = 0, $$02833$us$i$i19 = 0, $$02833$us$i$i36 = 0, $$byval_copy = 0, $$in = 0, $$ph = 0, $$pn = 0, $$pn120 = 0, $$sroa$0$0$i$i30 = 0, $$sroa$0$0$i$i47 = 0, $$sroa$03$0$copyload$i = 0, $$sroa$059$094 = 0, $$sroa$059$095 = 0, $102 = 0, $107 = 0, $114 = 0, $115 = 0, $121 = 0, $123 = 0, $124 = 0, $125 = 0, $128 = 0, $133 = 0, $134 = 0, $136 = 0, $137 = 0, $139 = 0, $146 = 0, $15 = 0, $16 = 0, $2 = 0, $20 = 0, $21 = 0, $29 = 0, $3 = 0, $34 = 0, $4 = 0, $5 = 0, $63 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $77 = 0, $79 = 0, $81 = 0, $86 = 0, $88 = 0, $89 = 0, $9 = 0, $93 = 0, $94 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $vararg_buffer = sp;
 $2 = sp + 4 | 0;
 $3 = $0 + 40 | 0;
 $4 = $0 + 44 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (!$5) {
  _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 18656, 17842, 125);
 }
 $7 = $5 + -1 | 0;
 $9 = ($7 & $5 | 0) == 0;
 if ($9) $15 = $7 & $1; else if ($5 >>> 0 > $1 >>> 0) $15 = $1; else $15 = ($1 >>> 0) % ($5 >>> 0) | 0;
 $16 = HEAP32[(HEAP32[$3 >> 2] | 0) + ($15 << 2) >> 2] | 0;
 if (!$16) {
  _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 18656, 17842, 125);
 }
 $$02832$i$i = HEAP32[$16 >> 2] | 0;
 if (!$$02832$i$i) {
  _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 18656, 17842, 125);
 }
 L15 : do if ($9) {
  $$02833$us$i$i = $$02832$i$i;
  while (1) {
   $20 = HEAP32[$$02833$us$i$i + 4 >> 2] | 0;
   $21 = ($20 | 0) == ($1 | 0);
   if (!($21 | ($20 & $7 | 0) == ($15 | 0))) {
    label = 21;
    break;
   }
   if ($21) if ((HEAP32[$$02833$us$i$i + 8 >> 2] | 0) == ($1 | 0)) break L15;
   $$02833$us$i$i = HEAP32[$$02833$us$i$i >> 2] | 0;
   if (!$$02833$us$i$i) {
    label = 21;
    break;
   }
  }
  if ((label | 0) == 21) {
   _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 18656, 17842, 125);
  }
 } else {
  $$02833$i$i = $$02832$i$i;
  while (1) {
   $29 = HEAP32[$$02833$i$i + 4 >> 2] | 0;
   if (($29 | 0) == ($1 | 0)) {
    if ((HEAP32[$$02833$i$i + 8 >> 2] | 0) == ($1 | 0)) break L15;
   } else {
    if ($29 >>> 0 < $5 >>> 0) $34 = $29; else $34 = ($29 >>> 0) % ($5 >>> 0) | 0;
    if (($34 | 0) != ($15 | 0)) {
     label = 21;
     break;
    }
   }
   $$02833$i$i = HEAP32[$$02833$i$i >> 2] | 0;
   if (!$$02833$i$i) {
    label = 21;
    break;
   }
  }
  if ((label | 0) == 21) {
   _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 18656, 17842, 125);
  }
 } while (0);
 L40 : do if (!($7 & $5)) {
  $$pn120 = HEAP32[(HEAP32[$3 >> 2] | 0) + (($7 & $1) << 2) >> 2] | 0;
  while (1) {
   $$02833$us$i$i36 = HEAP32[$$pn120 >> 2] | 0;
   if ((HEAP32[$$02833$us$i$i36 + 4 >> 2] | 0) == ($1 | 0)) if ((HEAP32[$$02833$us$i$i36 + 8 >> 2] | 0) == ($1 | 0)) {
    $$sroa$0$0$i$i47 = $$02833$us$i$i36;
    $86 = $3;
    break L40;
   }
   $$pn120 = $$02833$us$i$i36;
  }
 } else {
  if ($5 >>> 0 > $1 >>> 0) $$ph = $1; else $$ph = ($1 >>> 0) % ($5 >>> 0) | 0;
  $$pn = HEAP32[(HEAP32[$3 >> 2] | 0) + ($$ph << 2) >> 2] | 0;
  while (1) {
   $$02833$i$i42 = HEAP32[$$pn >> 2] | 0;
   if ((HEAP32[$$02833$i$i42 + 4 >> 2] | 0) == ($1 | 0)) if ((HEAP32[$$02833$i$i42 + 8 >> 2] | 0) == ($1 | 0)) {
    $$sroa$0$0$i$i47 = $$02833$i$i42;
    $86 = $3;
    break L40;
   }
   $$pn = $$02833$i$i42;
  }
 } while (0);
 $63 = HEAP32[$$sroa$0$0$i$i47 + 28 >> 2] | 0;
 $65 = HEAP32[$$sroa$0$0$i$i47 + 32 >> 2] | 0;
 $66 = ($65 | 0) == 0;
 if (!$66) {
  $67 = $65 + 4 | 0;
  HEAP32[$67 >> 2] = (HEAP32[$67 >> 2] | 0) + 1;
 }
 if ($63 | 0) FUNCTION_TABLE_viii[HEAP32[(HEAP32[$63 >> 2] | 0) + 16 >> 2] & 31]($63, $0, HEAP32[$0 >> 2] | 0);
 $$sroa$059$094 = HEAP32[$0 + 48 >> 2] | 0;
 if ($$sroa$059$094 | 0) {
  $$sroa$059$095 = $$sroa$059$094;
  do {
   $121 = $$sroa$059$095;
   $123 = HEAP32[$121 + 36 >> 2] | 0;
   $124 = $121 + 40 | 0;
   $125 = HEAP32[$124 >> 2] | 0;
   L67 : do if (($123 | 0) == ($125 | 0)) {
    $133 = $123;
    label = 68;
   } else {
    $128 = $123;
    do {
     if ((HEAP32[$128 >> 2] | 0) == ($1 | 0)) {
      $133 = $128;
      label = 68;
      break L67;
     }
     $128 = $128 + 4 | 0;
    } while (($128 | 0) != ($125 | 0));
   } while (0);
   if ((label | 0) == 68) {
    label = 0;
    if (($133 | 0) != ($125 | 0)) {
     $134 = $133 + 4 | 0;
     if (($134 | 0) == ($125 | 0)) {
      $$in = $125;
      $$sroa$03$0$copyload$i = $133;
     } else {
      $137 = $134;
      $139 = $133;
      while (1) {
       $136 = HEAP32[$137 >> 2] | 0;
       if (($136 | 0) == ($1 | 0)) $146 = $139; else {
        HEAP32[$139 >> 2] = $136;
        $146 = $139 + 4 | 0;
       }
       $137 = $137 + 4 | 0;
       if (($137 | 0) == ($125 | 0)) break; else $139 = $146;
      }
      $$in = HEAP32[$124 >> 2] | 0;
      $$sroa$03$0$copyload$i = $146;
     }
     if (($$in | 0) != ($$sroa$03$0$copyload$i | 0)) HEAP32[$124 >> 2] = $$sroa$03$0$copyload$i;
    }
   }
   $$sroa$059$095 = HEAP32[$$sroa$059$095 >> 2] | 0;
  } while (($$sroa$059$095 | 0) != 0);
 }
 $77 = HEAP32[$4 >> 2] | 0;
 L87 : do if ($77 | 0) {
  $79 = $77 + -1 | 0;
  $81 = ($79 & $77 | 0) == 0;
  if ($81) $88 = $79 & $1; else if ($77 >>> 0 > $1 >>> 0) $88 = $1; else $88 = ($1 >>> 0) % ($77 >>> 0) | 0;
  $89 = HEAP32[(HEAP32[$86 >> 2] | 0) + ($88 << 2) >> 2] | 0;
  if ($89 | 0) {
   $$02832$i$i16 = HEAP32[$89 >> 2] | 0;
   if ($$02832$i$i16 | 0) {
    L96 : do if ($81) {
     $$02833$us$i$i19 = $$02832$i$i16;
     while (1) {
      $93 = HEAP32[$$02833$us$i$i19 + 4 >> 2] | 0;
      $94 = ($93 | 0) == ($1 | 0);
      if (!($94 | ($93 & $79 | 0) == ($88 | 0))) break L87;
      if ($94) if ((HEAP32[$$02833$us$i$i19 + 8 >> 2] | 0) == ($1 | 0)) {
       $$sroa$0$0$i$i30 = $$02833$us$i$i19;
       break L96;
      }
      $$02833$us$i$i19 = HEAP32[$$02833$us$i$i19 >> 2] | 0;
      if (!$$02833$us$i$i19) break L87;
     }
    } else {
     $$02833$i$i25 = $$02832$i$i16;
     while (1) {
      $102 = HEAP32[$$02833$i$i25 + 4 >> 2] | 0;
      if (($102 | 0) == ($1 | 0)) {
       if ((HEAP32[$$02833$i$i25 + 8 >> 2] | 0) == ($1 | 0)) {
        $$sroa$0$0$i$i30 = $$02833$i$i25;
        break L96;
       }
      } else {
       if ($102 >>> 0 < $77 >>> 0) $107 = $102; else $107 = ($102 >>> 0) % ($77 >>> 0) | 0;
       if (($107 | 0) != ($88 | 0)) break L87;
      }
      $$02833$i$i25 = HEAP32[$$02833$i$i25 >> 2] | 0;
      if (!$$02833$i$i25) break L87;
     }
    } while (0);
    HEAP32[$2 >> 2] = $$sroa$0$0$i$i30;
    HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
    __ZNSt3__212__hash_tableINS_17__hash_value_typeIiN2ut9Scheduler15ScheduledSystemEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS5_NS_8equal_toIiEELb1EEENS_9allocatorIS5_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeIS5_PvEEEE($3, $$byval_copy) | 0;
   }
  }
 } while (0);
 HEAP8[$0 + 72 >> 0] = 1;
 if ($66) {
  STACKTOP = sp;
  return;
 }
 $114 = $65 + 4 | 0;
 $115 = HEAP32[$114 >> 2] | 0;
 HEAP32[$114 >> 2] = $115 + -1;
 if ($115 | 0) {
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$65 >> 2] | 0) + 8 >> 2] & 63]($65);
 __ZNSt3__219__shared_weak_count14__release_weakEv($65);
 STACKTOP = sp;
 return;
}

function __ZN9rapidjson8internal8DigitGenERKNS0_5DiyFpES3_yPcPiS5_($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$078 = 0, $$082 = 0, $$082106 = 0, $$083 = 0, $$1 = 0, $$1108 = 0, $$1109 = 0, $$1110 = 0, $$184 = 0, $10 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $12 = 0, $128 = 0, $129 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $143 = 0, $147 = 0, $155 = 0, $163 = 0, $164 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $177 = 0, $178 = 0, $18 = 0, $185 = 0, $186 = 0, $187 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $211 = 0, $212 = 0, $218 = 0, $24 = 0, $25 = 0, $26 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $40 = 0, $43 = 0, $46 = 0, $49 = 0, $52 = 0, $55 = 0, $58 = 0, $61 = 0, $65 = 0, $70 = 0, $72 = 0, $73 = 0, $75 = 0, $76 = 0, $86 = 0, $87 = 0, $9 = 0, $93 = 0, $94 = 0, label = 0, $103$looptemp = 0, $104$looptemp = 0, $186$looptemp = 0, $187$looptemp = 0;
 $9 = 0 - (HEAP32[$1 + 8 >> 2] | 0) | 0;
 $10 = _bitshift64Shl(1, 0, $9 | 0) | 0;
 $11 = tempRet0;
 $12 = $1;
 $14 = HEAP32[$12 >> 2] | 0;
 $17 = HEAP32[$12 + 4 >> 2] | 0;
 $18 = $0;
 $24 = _i64Subtract($14 | 0, $17 | 0, HEAP32[$18 >> 2] | 0, HEAP32[$18 + 4 >> 2] | 0) | 0;
 $25 = tempRet0;
 $26 = _bitshift64Lshr($14 | 0, $17 | 0, $9 | 0) | 0;
 $28 = _i64Add($10 | 0, $11 | 0, -1, -1) | 0;
 $29 = tempRet0;
 $30 = $28 & $14;
 $31 = $29 & $17;
 if ($26 >>> 0 < 10) $218 = 1; else if ($26 >>> 0 < 100) $218 = 2; else if ($26 >>> 0 < 1e3) $218 = 3; else if ($26 >>> 0 < 1e4) $218 = 4; else if ($26 >>> 0 < 1e5) $218 = 5; else if ($26 >>> 0 < 1e6) $218 = 6; else $218 = $26 >>> 0 < 1e7 ? 7 : $26 >>> 0 < 1e8 ? 8 : 9;
 HEAP32[$5 >> 2] = 0;
 $$078 = $26;
 $$083 = $218;
 L9 : while (1) {
  switch ($$083 | 0) {
  case 0:
   {
    break L9;
    break;
   }
  case 9:
   {
    $40 = ($$078 >>> 0) / 1e8 | 0;
    $$082 = $40;
    $$1 = $$078 - (Math_imul($40, 1e8) | 0) | 0;
    label = 19;
    break;
   }
  case 8:
   {
    $43 = ($$078 >>> 0) / 1e7 | 0;
    $$082 = $43;
    $$1 = $$078 - (Math_imul($43, 1e7) | 0) | 0;
    label = 19;
    break;
   }
  case 7:
   {
    $46 = ($$078 >>> 0) / 1e6 | 0;
    $$082 = $46;
    $$1 = $$078 - ($46 * 1e6 | 0) | 0;
    label = 19;
    break;
   }
  case 6:
   {
    $49 = ($$078 >>> 0) / 1e5 | 0;
    $$082 = $49;
    $$1 = $$078 - ($49 * 1e5 | 0) | 0;
    label = 19;
    break;
   }
  case 5:
   {
    $52 = ($$078 >>> 0) / 1e4 | 0;
    $$082 = $52;
    $$1 = $$078 - ($52 * 1e4 | 0) | 0;
    label = 19;
    break;
   }
  case 4:
   {
    $55 = ($$078 >>> 0) / 1e3 | 0;
    $$082 = $55;
    $$1 = $$078 - ($55 * 1e3 | 0) | 0;
    label = 19;
    break;
   }
  case 3:
   {
    $58 = ($$078 >>> 0) / 100 | 0;
    $$082 = $58;
    $$1 = $$078 - ($58 * 100 | 0) | 0;
    label = 19;
    break;
   }
  case 2:
   {
    $61 = ($$078 >>> 0) / 10 | 0;
    $$082 = $61;
    $$1 = $$078 - ($61 * 10 | 0) | 0;
    label = 19;
    break;
   }
  case 1:
   {
    $$082 = $$078;
    $$1 = 0;
    label = 19;
    break;
   }
  default:
   {
    $$1110 = $$078;
    label = 21;
   }
  }
  if ((label | 0) == 19) {
   label = 0;
   if (!$$082) {
    $$1110 = $$1;
    label = 21;
   } else {
    $$082106 = $$082;
    $$1109 = $$1;
    $70 = HEAP32[$5 >> 2] | 0;
    label = 22;
   }
  }
  if ((label | 0) == 21) {
   label = 0;
   $65 = HEAP32[$5 >> 2] | 0;
   if (!$65) $$1108 = $$1110; else {
    $$082106 = 0;
    $$1109 = $$1110;
    $70 = $65;
    label = 22;
   }
  }
  if ((label | 0) == 22) {
   label = 0;
   HEAP32[$5 >> 2] = $70 + 1;
   HEAP8[$4 + $70 >> 0] = $$082106 + 48;
   $$1108 = $$1109;
  }
  $72 = $$083 + -1 | 0;
  $73 = _bitshift64Shl($$1108 | 0, 0, $9 | 0) | 0;
  $75 = _i64Add($73 | 0, tempRet0 | 0, $30 | 0, $31 | 0) | 0;
  $76 = tempRet0;
  if ($76 >>> 0 > $3 >>> 0 | ($76 | 0) == ($3 | 0) & $75 >>> 0 > $2 >>> 0) {
   $$078 = $$1108;
   $$083 = $72;
  } else {
   label = 24;
   break;
  }
 }
 if ((label | 0) == 24) {
  HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + $72;
  $86 = _bitshift64Shl(HEAP32[3720 + ($72 << 2) >> 2] | 0, 0, $9 | 0) | 0;
  $87 = tempRet0;
  $93 = _i64Subtract($2 | 0, $3 | 0, $75 | 0, $76 | 0) | 0;
  $94 = tempRet0;
  if ($76 >>> 0 > $25 >>> 0 | ($76 | 0) == ($25 | 0) & $75 >>> 0 >= $24 >>> 0 | ($94 >>> 0 < $87 >>> 0 | ($94 | 0) == ($87 | 0) & $93 >>> 0 < $86 >>> 0)) return;
  $102 = $4 + ((HEAP32[$5 >> 2] | 0) + -1) | 0;
  $103 = $75;
  $104 = $76;
  while (1) {
   $103$looptemp = $103;
   $103 = _i64Add($103 | 0, $104 | 0, $86 | 0, $87 | 0) | 0;
   $104$looptemp = $104;
   $104 = tempRet0;
   if (!($104 >>> 0 < $25 >>> 0 | ($104 | 0) == ($25 | 0) & $103 >>> 0 < $24 >>> 0)) {
    $112 = _i64Subtract($24 | 0, $25 | 0, $103$looptemp | 0, $104$looptemp | 0) | 0;
    $113 = tempRet0;
    $114 = _i64Subtract($103 | 0, $104 | 0, $24 | 0, $25 | 0) | 0;
    $115 = tempRet0;
    if (!($113 >>> 0 > $115 >>> 0 | ($113 | 0) == ($115 | 0) & $112 >>> 0 > $114 >>> 0)) {
     label = 39;
     break;
    }
   }
   HEAP8[$102 >> 0] = (HEAP8[$102 >> 0] | 0) + -1 << 24 >> 24;
   $128 = _i64Subtract($2 | 0, $3 | 0, $103 | 0, $104 | 0) | 0;
   $129 = tempRet0;
   if ($104 >>> 0 > $25 >>> 0 | ($104 | 0) == ($25 | 0) & $103 >>> 0 >= $24 >>> 0 | ($129 >>> 0 < $87 >>> 0 | ($129 | 0) == ($87 | 0) & $128 >>> 0 < $86 >>> 0)) {
    label = 39;
    break;
   }
  }
  if ((label | 0) == 39) return;
 }
 $$184 = $$083;
 $135 = $30;
 $136 = $31;
 $139 = $2;
 $140 = $3;
 while (1) {
  $137 = ___muldi3($135 | 0, $136 | 0, 10, 0) | 0;
  $138 = tempRet0;
  $139 = ___muldi3($139 | 0, $140 | 0, 10, 0) | 0;
  $140 = tempRet0;
  $143 = _bitshift64Lshr($137 | 0, $138 | 0, $9 | 0) | 0;
  $147 = HEAP32[$5 >> 2] | 0;
  if (!(($143 & 255) << 24 >> 24 == 0 & ($147 | 0) == 0)) {
   HEAP32[$5 >> 2] = $147 + 1;
   HEAP8[$4 + $147 >> 0] = $143 + 48;
  }
  $135 = $137 & $28;
  $136 = $138 & $29;
  $155 = $$184 + -1 | 0;
  if ($140 >>> 0 > $136 >>> 0 | ($140 | 0) == ($136 | 0) & $139 >>> 0 > $135 >>> 0) break; else $$184 = $155;
 }
 HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + $155;
 $163 = 1 - $$184 | 0;
 $164 = HEAP32[$5 >> 2] | 0;
 if (($163 | 0) < 9) {
  $168 = HEAP32[3720 + ($163 << 2) >> 2] | 0;
  $169 = 0;
 } else {
  $168 = 0;
  $169 = 0;
 }
 $170 = ___muldi3($168 | 0, $169 | 0, $24 | 0, $25 | 0) | 0;
 $171 = tempRet0;
 $177 = _i64Subtract($139 | 0, $140 | 0, $135 | 0, $136 | 0) | 0;
 $178 = tempRet0;
 if ($178 >>> 0 < $11 >>> 0 | ($178 | 0) == ($11 | 0) & $177 >>> 0 < $10 >>> 0 | ($136 >>> 0 > $171 >>> 0 | ($136 | 0) == ($171 | 0) & $135 >>> 0 >= $170 >>> 0)) return;
 $185 = $4 + ($164 + -1) | 0;
 $186 = $135;
 $187 = $136;
 while (1) {
  $186$looptemp = $186;
  $186 = _i64Add($186 | 0, $187 | 0, $10 | 0, $11 | 0) | 0;
  $187$looptemp = $187;
  $187 = tempRet0;
  if (!($187 >>> 0 < $171 >>> 0 | ($187 | 0) == ($171 | 0) & $186 >>> 0 < $170 >>> 0)) {
   $195 = _i64Subtract($170 | 0, $171 | 0, $186$looptemp | 0, $187$looptemp | 0) | 0;
   $196 = tempRet0;
   $197 = _i64Subtract($186 | 0, $187 | 0, $170 | 0, $171 | 0) | 0;
   $198 = tempRet0;
   if (!($196 >>> 0 > $198 >>> 0 | ($196 | 0) == ($198 | 0) & $195 >>> 0 > $197 >>> 0)) {
    label = 39;
    break;
   }
  }
  HEAP8[$185 >> 0] = (HEAP8[$185 >> 0] | 0) + -1 << 24 >> 24;
  $211 = _i64Subtract($139 | 0, $140 | 0, $186 | 0, $187 | 0) | 0;
  $212 = tempRet0;
  if ($187 >>> 0 > $171 >>> 0 | ($187 | 0) == ($171 | 0) & $186 >>> 0 >= $170 >>> 0 | ($212 >>> 0 < $11 >>> 0 | ($212 | 0) == ($11 | 0) & $211 >>> 0 < $10 >>> 0)) {
   label = 39;
   break;
  }
 }
 if ((label | 0) == 39) return;
}

function __ZN2ut4arch5Chunk18moveAndConvertDataEPS1_iS2_i($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$lcssa = 0, $$0143$lcssa = 0, $$0143159 = 0, $$0160 = 0, $$1 = 0, $$1144 = 0, $$2145155 = 0, $$2156 = 0, $107 = 0, $11 = 0, $110 = 0, $111 = 0, $113 = 0, $12 = 0, $122 = 0, $123 = 0, $125 = 0, $13 = 0, $131 = 0, $133 = 0, $14 = 0, $145 = 0, $146 = 0, $148 = 0, $164 = 0, $166 = 0, $172 = 0, $174 = 0, $180 = 0, $188 = 0, $19 = 0, $21 = 0, $24 = 0, $33 = 0, $35 = 0, $41 = 0, $43 = 0, $5 = 0, $55 = 0, $57 = 0, $7 = 0, $70 = 0, $72 = 0, $78 = 0, $84 = 0, $9 = 0, $91 = 0, $99 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $vararg_buffer11 = sp + 48 | 0;
 $vararg_buffer9 = sp + 40 | 0;
 $vararg_buffer7 = sp + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $5 = HEAP32[$0 + 16 >> 2] | 0;
 $7 = HEAP32[$2 + 16 >> 2] | 0;
 $9 = HEAP32[$5 + 32 >> 2] | 0;
 $11 = HEAP32[$7 + 32 >> 2] | 0;
 $12 = $7 + 28 | 0;
 $13 = $5 + 28 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 L1 : do if (($14 | 0) > 0) {
  $$0143159 = 0;
  $$0160 = 0;
  $188 = $14;
  L3 : while (1) {
   if (($$0143159 | 0) >= (HEAP32[$12 >> 2] | 0)) {
    $$0$lcssa = $$0160;
    $$0143$lcssa = $$0143159;
    $110 = $188;
    break L1;
   }
   $19 = HEAP32[$9 + ($$0160 << 4) >> 2] | 0;
   $21 = HEAP32[$11 + ($$0143159 << 4) >> 2] | 0;
   do if ($19 >>> 0 < $21 >>> 0) {
    $24 = HEAP32[$9 + ($$0160 << 4) + 4 >> 2] | 0;
    if (!($24 & 4)) {
     if ($24 & 16 | 0) {
      $55 = (HEAP32[$9 + ($$0160 << 4) + 8 >> 2] | 0) + ($0 + 48) + (Math_imul(HEAP32[$9 + ($$0160 << 4) + 12 >> 2] | 0, $1) | 0) | 0;
      $57 = HEAP32[6067] | 0;
      if ((HEAP32[6068] | 0) - $57 >> 2 >>> 0 <= $19 >>> 0) {
       label = 12;
       break L3;
      }
      __ZN2ut25ComponentNativeBufferBase33freeNativeBufferWithComponentInfoEPNS_16NativeBufferBaseERKNS_13ComponentInfoE($55, HEAP32[$57 + ($19 << 2) >> 2] | 0);
     }
    } else {
     $33 = (HEAP32[$9 + ($$0160 << 4) + 8 >> 2] | 0) + ($0 + 48) + (Math_imul(HEAP32[$9 + ($$0160 << 4) + 12 >> 2] | 0, $1) | 0) | 0;
     $35 = HEAP32[6067] | 0;
     if ((HEAP32[6068] | 0) - $35 >> 2 >>> 0 <= $19 >>> 0) {
      label = 7;
      break L3;
     }
     $41 = HEAP32[$35 + ($19 << 2) >> 2] | 0;
     $43 = HEAP32[$41 + 32 >> 2] | 0;
     if ($43 | 0) FUNCTION_TABLE_vii[$43 & 15]($33, HEAP32[$41 + 48 >> 2] | 0);
    }
    $$1 = $$0160 + 1 | 0;
    $$1144 = $$0143159;
   } else {
    if ($19 >>> 0 <= $21 >>> 0) {
     $91 = HEAP32[$9 + ($$0160 << 4) + 12 >> 2] | 0;
     if (($91 | 0) != (HEAP32[$11 + ($$0143159 << 4) + 12 >> 2] | 0)) {
      label = 23;
      break L3;
     }
     $99 = (HEAP32[$9 + ($$0160 << 4) + 8 >> 2] | 0) + ($0 + 48) + (Math_imul($91, $1) | 0) | 0;
     _memcpy((HEAP32[$11 + ($$0143159 << 4) + 8 >> 2] | 0) + ($2 + 48) + (Math_imul($91, $3) | 0) | 0, $99 | 0, $91 | 0) | 0;
     $$1 = $$0160 + 1 | 0;
     $$1144 = $$0143159 + 1 | 0;
     break;
    }
    $70 = HEAP32[$11 + ($$0143159 << 4) + 12 >> 2] | 0;
    $72 = (HEAP32[$11 + ($$0143159 << 4) + 8 >> 2] | 0) + ($2 + 48) + (Math_imul($70, $3) | 0) | 0;
    if (!(HEAP32[$11 + ($$0143159 << 4) + 4 >> 2] & 4)) _memset($72 | 0, 0, $70 | 0) | 0; else {
     $78 = HEAP32[6067] | 0;
     if ((HEAP32[6068] | 0) - $78 >> 2 >>> 0 <= $21 >>> 0) {
      label = 18;
      break L3;
     }
     $84 = HEAP32[$78 + ($21 << 2) >> 2] | 0;
     FUNCTION_TABLE_vii[HEAP32[$84 + 28 >> 2] & 15]($72, HEAP32[$84 + 12 >> 2] | 0);
    }
    $$1 = $$0160;
    $$1144 = $$0143159 + 1 | 0;
   } while (0);
   $107 = HEAP32[$13 >> 2] | 0;
   if (($$1 | 0) < ($107 | 0)) {
    $$0143159 = $$1144;
    $$0160 = $$1;
    $188 = $107;
   } else {
    $$0$lcssa = $$1;
    $$0143$lcssa = $$1144;
    $110 = $107;
    break L1;
   }
  }
  if ((label | 0) == 7) {
   _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
  } else if ((label | 0) == 12) {
   _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
  } else if ((label | 0) == 18) {
   _snprintf(25060, 1024, 27124, $vararg_buffer3) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
  } else if ((label | 0) == 23) {
   _snprintf(25060, 1024, 27124, $vararg_buffer5) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9834, 9568, 129);
  }
 } else {
  $$0$lcssa = 0;
  $$0143$lcssa = 0;
  $110 = $14;
 } while (0);
 L33 : do if (($$0$lcssa | 0) < ($110 | 0)) {
  $$2156 = $$0$lcssa;
  while (1) {
   $111 = $9 + ($$2156 << 4) | 0;
   $113 = HEAP32[$9 + ($$2156 << 4) + 4 >> 2] | 0;
   if (!($113 & 4)) {
    if ($113 & 16 | 0) {
     $145 = (HEAP32[$9 + ($$2156 << 4) + 8 >> 2] | 0) + ($0 + 48) + (Math_imul(HEAP32[$9 + ($$2156 << 4) + 12 >> 2] | 0, $1) | 0) | 0;
     $146 = HEAP32[$111 >> 2] | 0;
     $148 = HEAP32[6067] | 0;
     if ((HEAP32[6068] | 0) - $148 >> 2 >>> 0 <= $146 >>> 0) {
      label = 35;
      break;
     }
     __ZN2ut25ComponentNativeBufferBase33freeNativeBufferWithComponentInfoEPNS_16NativeBufferBaseERKNS_13ComponentInfoE($145, HEAP32[$148 + ($146 << 2) >> 2] | 0);
    }
   } else {
    $122 = (HEAP32[$9 + ($$2156 << 4) + 8 >> 2] | 0) + ($0 + 48) + (Math_imul(HEAP32[$9 + ($$2156 << 4) + 12 >> 2] | 0, $1) | 0) | 0;
    $123 = HEAP32[$111 >> 2] | 0;
    $125 = HEAP32[6067] | 0;
    if ((HEAP32[6068] | 0) - $125 >> 2 >>> 0 <= $123 >>> 0) {
     label = 30;
     break;
    }
    $131 = HEAP32[$125 + ($123 << 2) >> 2] | 0;
    $133 = HEAP32[$131 + 32 >> 2] | 0;
    if ($133 | 0) FUNCTION_TABLE_vii[$133 & 15]($122, HEAP32[$131 + 48 >> 2] | 0);
   }
   $$2156 = $$2156 + 1 | 0;
   if (($$2156 | 0) >= (HEAP32[$13 >> 2] | 0)) break L33;
  }
  if ((label | 0) == 30) {
   _snprintf(25060, 1024, 27124, $vararg_buffer7) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
  } else if ((label | 0) == 35) {
   _snprintf(25060, 1024, 27124, $vararg_buffer9) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
  }
 } while (0);
 if (($$0143$lcssa | 0) >= (HEAP32[$12 >> 2] | 0)) {
  STACKTOP = sp;
  return;
 }
 $$2145155 = $$0143$lcssa;
 while (1) {
  $164 = HEAP32[$11 + ($$2145155 << 4) + 12 >> 2] | 0;
  $166 = (HEAP32[$11 + ($$2145155 << 4) + 8 >> 2] | 0) + ($2 + 48) + (Math_imul($164, $3) | 0) | 0;
  if (!(HEAP32[$11 + ($$2145155 << 4) + 4 >> 2] & 4)) _memset($166 | 0, 0, $164 | 0) | 0; else {
   $172 = HEAP32[$11 + ($$2145155 << 4) >> 2] | 0;
   $174 = HEAP32[6067] | 0;
   if ((HEAP32[6068] | 0) - $174 >> 2 >>> 0 <= $172 >>> 0) {
    label = 42;
    break;
   }
   $180 = HEAP32[$174 + ($172 << 2) >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[$180 + 28 >> 2] & 15]($166, HEAP32[$180 + 12 >> 2] | 0);
  }
  $$2145155 = $$2145155 + 1 | 0;
  if (($$2145155 | 0) >= (HEAP32[$12 >> 2] | 0)) {
   label = 46;
   break;
  }
 }
 if ((label | 0) == 42) {
  _snprintf(25060, 1024, 27124, $vararg_buffer11) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 } else if ((label | 0) == 46) {
  STACKTOP = sp;
  return;
 }
}

function __ZN2ut4arch13EntityManager24setComponentDataWithMoveENS_6EntityEjPvjb($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0$i$i$i = 0, $$04575$i$i$i = 0, $$04576$i$i$i = 0, $$04576$us$i$i$i = 0, $$047$i$i$i = 0, $$1$i$i$i = 0, $$sink = 0, $10 = 0, $109 = 0, $112 = 0, $114 = 0, $115 = 0, $122 = 0, $123 = 0, $125 = 0, $127 = 0, $130 = 0, $131 = 0, $139 = 0, $144 = 0, $145 = 0, $150 = 0, $151 = 0, $155 = 0, $156 = 0, $157 = 0, $159 = 0, $167 = 0, $22 = 0, $24 = 0, $38 = 0, $43 = 0, $44 = 0, $48 = 0, $49 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $60 = 0, $66 = 0, $67 = 0, $7 = 0, $71 = 0, $8 = 0, $81 = 0, $86 = 0, $90 = 0, $93 = 0, $96 = 0.0, $99 = 0.0, $tmpcast$byval_copy = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $tmpcast$byval_copy = sp + 56 | 0;
 $vararg_buffer7 = sp + 48 | 0;
 $6 = sp + 52 | 0;
 $7 = sp + 8 | 0;
 $8 = sp;
 HEAP32[$6 >> 2] = $2;
 $10 = HEAP32[6067] | 0;
 if ((HEAP32[6068] | 0) - $10 >> 2 >>> 0 <= $2 >>> 0) {
  _snprintf(25060, 1024, 27124, sp + 16 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
 if (!(HEAP32[(HEAP32[$10 + ($2 << 2) >> 2] | 0) + 4 >> 2] & 4)) {
  _snprintf(25060, 1024, 8180, sp + 24 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8228, 6920, 547);
 }
 __ZN2ut4arch13EntityManager19assertEntitiesExistEPKNS_6EntityEiPKc($0, $1, 1, 8269);
 __ZN2ut4arch13EntityManager24assertEntityHasComponentERKNS_6EntityEjPKc($0, $1, HEAP32[$6 >> 2] | 0, 8269);
 $22 = HEAP32[$6 >> 2] | 0;
 $24 = HEAP32[6067] | 0;
 if ((HEAP32[6068] | 0) - $24 >> 2 >>> 0 <= $22 >>> 0) {
  _snprintf(25060, 1024, 27124, sp + 32 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
 if ((HEAP32[(HEAP32[$24 + ($22 << 2) >> 2] | 0) + 16 >> 2] | 0) != ($4 | 0)) {
  _snprintf(25060, 1024, 27124, sp + 40 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8309, 6920, 550);
 }
 if ((HEAP32[$0 + 36 >> 2] | 0) <= 0) {
  $144 = HEAP32[$0 + 8 >> 2] | 0;
  $145 = $1;
  $150 = HEAP32[$145 + 4 >> 2] | 0;
  $151 = $8;
  HEAP32[$151 >> 2] = HEAP32[$145 >> 2];
  HEAP32[$151 + 4 >> 2] = $150;
  $155 = HEAP32[$6 >> 2] | 0;
  HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$8 >> 2];
  HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$8 + 4 >> 2];
  $156 = __ZN2ut4arch17EntityDataManager24getComponentDataWithTypeENS_6EntityEj($144, $tmpcast$byval_copy, $155) | 0;
  $157 = HEAP32[$6 >> 2] | 0;
  $159 = HEAP32[6067] | 0;
  if ((HEAP32[6068] | 0) - $159 >> 2 >>> 0 <= $157 >>> 0) {
   _snprintf(25060, 1024, 27124, $vararg_buffer7) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
  }
  if (!$5) {
   $167 = HEAP32[(HEAP32[$159 + ($157 << 2) >> 2] | 0) + 40 >> 2] | 0;
   if ($167 | 0) {
    FUNCTION_TABLE_vii[$167 & 15]($3, $156);
    STACKTOP = sp;
    return;
   }
  }
  _memcpy($156 | 0, $3 | 0, $4 | 0) | 0;
  STACKTOP = sp;
  return;
 }
 $38 = $1;
 $43 = HEAP32[$38 + 4 >> 2] | 0;
 $44 = $7;
 HEAP32[$44 >> 2] = HEAP32[$38 >> 2];
 HEAP32[$44 + 4 >> 2] = $43;
 $48 = HEAP32[$6 >> 2] | 0;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$7 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$7 + 4 >> 2];
 $49 = __ZN2ut4arch19EntityCommandBuffer24setComponentDataWithMoveENS_6EntityEjPvi($0 + 40 | 0, $tmpcast$byval_copy, $48, $3, $4) | 0;
 $52 = __ZNSt3__213unordered_mapIjN2ut4arch13EntityManager11FreshEntity13ComponentEditENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjS5_EEEEEixERSC_((__ZN2ut4arch13EntityManager23findOrCreateFreshEntityERKNS_6EntityE($0, $1) | 0) + 16 | 0, $6) | 0;
 HEAP32[$52 >> 2] = $49;
 HEAP32[$52 + 4 >> 2] = 2;
 $53 = $0 + 108 | 0;
 $54 = HEAP32[$6 >> 2] | 0;
 $55 = $0 + 112 | 0;
 $56 = HEAP32[$55 >> 2] | 0;
 $57 = ($56 | 0) == 0;
 L25 : do if ($57) $$0$i$i$i = 0; else {
  $58 = $56 + -1 | 0;
  $60 = ($58 & $56 | 0) == 0;
  if ($60) $66 = $58 & $54; else if ($54 >>> 0 < $56 >>> 0) $66 = $54; else $66 = ($54 >>> 0) % ($56 >>> 0) | 0;
  $67 = HEAP32[(HEAP32[$53 >> 2] | 0) + ($66 << 2) >> 2] | 0;
  if (!$67) $$0$i$i$i = $66; else {
   $$04575$i$i$i = HEAP32[$67 >> 2] | 0;
   if (!$$04575$i$i$i) $$0$i$i$i = $66; else {
    if ($60) {
     $$04576$us$i$i$i = $$04575$i$i$i;
     while (1) {
      $71 = HEAP32[$$04576$us$i$i$i + 4 >> 2] | 0;
      if (!(($71 | 0) == ($54 | 0) | ($71 & $58 | 0) == ($66 | 0))) {
       $$0$i$i$i = $66;
       break L25;
      }
      if ((HEAP32[$$04576$us$i$i$i + 8 >> 2] | 0) == ($54 | 0)) break;
      $$04576$us$i$i$i = HEAP32[$$04576$us$i$i$i >> 2] | 0;
      if (!$$04576$us$i$i$i) {
       $$0$i$i$i = $66;
       break L25;
      }
     }
     STACKTOP = sp;
     return;
    }
    $$04576$i$i$i = $$04575$i$i$i;
    while (1) {
     $81 = HEAP32[$$04576$i$i$i + 4 >> 2] | 0;
     if (($81 | 0) != ($54 | 0)) {
      if ($81 >>> 0 < $56 >>> 0) $86 = $81; else $86 = ($81 >>> 0) % ($56 >>> 0) | 0;
      if (($86 | 0) != ($66 | 0)) {
       $$0$i$i$i = $66;
       break L25;
      }
     }
     if ((HEAP32[$$04576$i$i$i + 8 >> 2] | 0) == ($54 | 0)) break;
     $$04576$i$i$i = HEAP32[$$04576$i$i$i >> 2] | 0;
     if (!$$04576$i$i$i) {
      $$0$i$i$i = $66;
      break L25;
     }
    }
    STACKTOP = sp;
    return;
   }
  }
 } while (0);
 $90 = __Znwj(12) | 0;
 HEAP32[$90 + 8 >> 2] = $54;
 HEAP32[$90 + 4 >> 2] = $54;
 HEAP32[$90 >> 2] = 0;
 $93 = $0 + 120 | 0;
 $96 = +(((HEAP32[$93 >> 2] | 0) + 1 | 0) >>> 0);
 $99 = +HEAPF32[$0 + 124 >> 2];
 do if ($57 | $99 * +($56 >>> 0) < $96) {
  $109 = $56 << 1 | ($56 >>> 0 < 3 | ($56 + -1 & $56 | 0) != 0) & 1;
  $112 = ~~+Math_ceil(+($96 / $99)) >>> 0;
  __ZNSt3__212__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE6rehashEj($53, $109 >>> 0 < $112 >>> 0 ? $112 : $109);
  $114 = HEAP32[$55 >> 2] | 0;
  $115 = $114 + -1 | 0;
  if (!($115 & $114)) {
   $$047$i$i$i = $114;
   $$1$i$i$i = $115 & $54;
   break;
  }
  if ($54 >>> 0 < $114 >>> 0) {
   $$047$i$i$i = $114;
   $$1$i$i$i = $54;
  } else {
   $$047$i$i$i = $114;
   $$1$i$i$i = ($54 >>> 0) % ($114 >>> 0) | 0;
  }
 } else {
  $$047$i$i$i = $56;
  $$1$i$i$i = $$0$i$i$i;
 } while (0);
 $122 = (HEAP32[$53 >> 2] | 0) + ($$1$i$i$i << 2) | 0;
 $123 = HEAP32[$122 >> 2] | 0;
 if (!$123) {
  $125 = $0 + 116 | 0;
  HEAP32[$90 >> 2] = HEAP32[$125 >> 2];
  HEAP32[$125 >> 2] = $90;
  HEAP32[$122 >> 2] = $125;
  $127 = HEAP32[$90 >> 2] | 0;
  if ($127 | 0) {
   $130 = HEAP32[$127 + 4 >> 2] | 0;
   $131 = $$047$i$i$i + -1 | 0;
   if (!($131 & $$047$i$i$i)) $139 = $130 & $131; else if ($130 >>> 0 < $$047$i$i$i >>> 0) $139 = $130; else $139 = ($130 >>> 0) % ($$047$i$i$i >>> 0) | 0;
   $$sink = (HEAP32[$53 >> 2] | 0) + ($139 << 2) | 0;
   label = 42;
  }
 } else {
  HEAP32[$90 >> 2] = HEAP32[$123 >> 2];
  $$sink = $123;
  label = 42;
 }
 if ((label | 0) == 42) HEAP32[$$sink >> 2] = $90;
 HEAP32[$93 >> 2] = (HEAP32[$93 >> 2] | 0) + 1;
 STACKTOP = sp;
 return;
}

function __ZN2ut8loadDataERNS_12ManagerWorldERKN9rapidjson12GenericValueINS2_4UTF8IcEENS2_19MemoryPoolAllocatorINS2_12CrtAllocatorEEEEERKNS_4meta10MemberDescEPv($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$pre$phi93Z2D = 0, $$pre$phiZ2D = 0, $$pre92$pre$phiZZ2D = 0, $100 = 0, $111 = 0, $116 = 0, $121 = 0, $125 = 0, $133 = 0, $141 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $149 = 0, $153 = 0, $156 = 0, $159 = 0, $160 = 0, $21 = 0, $33 = 0, $4 = 0, $45 = 0, $56 = 0, $6 = 0, $61 = 0, $66 = 0, $70 = 0, $76 = 0, $88 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer13 = 0, $vararg_buffer15 = 0, $vararg_buffer17 = 0, $vararg_buffer19 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $vararg_buffer19 = sp + 80 | 0;
 $vararg_buffer17 = sp + 72 | 0;
 $vararg_buffer15 = sp + 64 | 0;
 $vararg_buffer13 = sp + 56 | 0;
 $vararg_buffer11 = sp + 48 | 0;
 $vararg_buffer9 = sp + 40 | 0;
 $vararg_buffer7 = sp + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $4 = sp + 88 | 0;
 $6 = HEAP32[$2 + 8 >> 2] | 0;
 if (($6 | 0) == 3700) {
  $9 = HEAP16[$1 + 18 >> 1] | 0;
  if (!($9 & 8)) {
   _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 16533, 12969, 281);
  }
  if (!($9 & 8)) ___assert_fail(16548, 15939, 1001, 16557);
  HEAP8[$3 + (HEAP32[$2 + 4 >> 2] | 0) >> 0] = $9 << 16 >> 16 == 10 & 1;
  STACKTOP = sp;
  return;
 }
 if (($6 | 0) == 3600) {
  $21 = HEAP16[$1 + 18 >> 1] | 0;
  if (!($21 & 32)) {
   _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 16565, 12969, 284);
  }
  if (!($21 & 32)) ___assert_fail(16055, 15939, 1645, 16080);
  HEAP8[$3 + (HEAP32[$2 + 4 >> 2] | 0) >> 0] = HEAP32[$1 >> 2];
  STACKTOP = sp;
  return;
 }
 if (($6 | 0) == 3640) {
  $33 = HEAP16[$1 + 18 >> 1] | 0;
  if (!($33 & 32)) {
   _snprintf(25060, 1024, 27124, $vararg_buffer3) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 16565, 12969, 287);
  }
  if (!($33 & 32)) ___assert_fail(16055, 15939, 1645, 16080);
  HEAP16[$3 + (HEAP32[$2 + 4 >> 2] | 0) >> 1] = HEAP32[$1 >> 2];
  STACKTOP = sp;
  return;
 }
 if (($6 | 0) == 3500) {
  $45 = HEAP16[$1 + 18 >> 1] | 0;
  if (!($45 & 32)) {
   _snprintf(25060, 1024, 27124, $vararg_buffer5) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 16565, 12969, 290);
  }
  if (!($45 & 32)) ___assert_fail(16055, 15939, 1645, 16080);
  HEAP32[$3 + (HEAP32[$2 + 4 >> 2] | 0) >> 2] = HEAP32[$1 >> 2];
  STACKTOP = sp;
  return;
 }
 if (($6 | 0) == 3620) {
  $56 = HEAP16[$1 + 18 >> 1] | 0;
  if (!($56 & 128)) {
   _snprintf(25060, 1024, 27124, $vararg_buffer7) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 16579, 12969, 293);
  }
  if (!($56 & 128)) ___assert_fail(16595, 15939, 1647, 16622);
  $61 = $1;
  $66 = HEAP32[$61 + 4 >> 2] | 0;
  $70 = $3 + (HEAP32[$2 + 4 >> 2] | 0) | 0;
  HEAP32[$70 >> 2] = HEAP32[$61 >> 2];
  HEAP32[$70 + 4 >> 2] = $66;
  STACKTOP = sp;
  return;
 }
 if (($6 | 0) == 3520) {
  $76 = HEAP16[$1 + 18 >> 1] | 0;
  if (!($76 & 64)) {
   _snprintf(25060, 1024, 27124, $vararg_buffer9) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 16631, 12969, 296);
  }
  if (!($76 & 64)) ___assert_fail(16646, 15939, 1646, 16672);
  HEAP8[$3 + (HEAP32[$2 + 4 >> 2] | 0) >> 0] = HEAP32[$1 >> 2];
  STACKTOP = sp;
  return;
 }
 if (($6 | 0) == 3580) {
  $88 = HEAP16[$1 + 18 >> 1] | 0;
  if (!($88 & 64)) {
   _snprintf(25060, 1024, 27124, $vararg_buffer11) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 16631, 12969, 299);
  }
  if (!($88 & 64)) ___assert_fail(16646, 15939, 1646, 16672);
  HEAP16[$3 + (HEAP32[$2 + 4 >> 2] | 0) >> 1] = HEAP32[$1 >> 2];
  STACKTOP = sp;
  return;
 }
 if (($6 | 0) == 3560) {
  $100 = HEAP16[$1 + 18 >> 1] | 0;
  if (!($100 & 64)) {
   _snprintf(25060, 1024, 27124, $vararg_buffer13) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 16631, 12969, 302);
  }
  if (!($100 & 64)) ___assert_fail(16646, 15939, 1646, 16672);
  HEAP32[$3 + (HEAP32[$2 + 4 >> 2] | 0) >> 2] = HEAP32[$1 >> 2];
  STACKTOP = sp;
  return;
 }
 if (($6 | 0) == 3540) {
  $111 = HEAP16[$1 + 18 >> 1] | 0;
  if (!($111 & 256)) {
   _snprintf(25060, 1024, 27124, $vararg_buffer15) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 16680, 12969, 305);
  }
  if (!($111 & 256)) ___assert_fail(16697, 15939, 1648, 16725);
  $116 = $1;
  $121 = HEAP32[$116 + 4 >> 2] | 0;
  $125 = $3 + (HEAP32[$2 + 4 >> 2] | 0) | 0;
  HEAP32[$125 >> 2] = HEAP32[$116 >> 2];
  HEAP32[$125 + 4 >> 2] = $121;
  STACKTOP = sp;
  return;
 }
 if (($6 | 0) == 3660) {
  __ZN2ut10loadNumberIfEEvRNS_12ManagerWorldERKN9rapidjson12GenericValueINS3_4UTF8IcEENS3_19MemoryPoolAllocatorINS3_12CrtAllocatorEEEEERKNS_4meta10MemberDescEPv($0, $1, $2, $3);
  STACKTOP = sp;
  return;
 }
 if (($6 | 0) == 3680) {
  __ZN2ut10loadNumberIdEEvRNS_12ManagerWorldERKN9rapidjson12GenericValueINS3_4UTF8IcEENS3_19MemoryPoolAllocatorINS3_12CrtAllocatorEEEEERKNS_4meta10MemberDescEPv($0, $1, $2, $3);
  STACKTOP = sp;
  return;
 }
 if (($6 | 0) != 3480) {
  _snprintf(25060, 1024, 13244, $vararg_buffer19) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 23477, 12969, 315);
 }
 $133 = HEAP16[$1 + 18 >> 1] | 0;
 if (!($133 & 1024)) {
  _snprintf(25060, 1024, 27124, $vararg_buffer17) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 16735, 12969, 312);
 }
 if (!($133 & 1024)) ___assert_fail(16231, 15939, 1681, 16242);
 if (!($133 & 4096)) {
  $141 = HEAP32[$1 + 8 >> 2] | 0;
  if (!$141) {
   $143 = $4 + 4 | 0;
   HEAP32[$143 >> 2] = 0;
   $$pre92$pre$phiZZ2D = $143;
   label = 70;
  } else {
   $144 = $141;
   label = 68;
  }
 } else {
  $144 = $1;
  label = 68;
 }
 if ((label | 0) == 68) {
  $145 = _strlen($144) | 0;
  $146 = $4 + 4 | 0;
  HEAP32[$146 >> 2] = $145;
  if (!$145) {
   $$pre92$pre$phiZZ2D = $146;
   label = 70;
  } else {
   $149 = _malloc($145 + 1 | 0) | 0;
   HEAP32[$4 >> 2] = $149;
   _memcpy($149 | 0, $144 | 0, $145 | 0) | 0;
   HEAP8[$149 + $145 >> 0] = 0;
   $$pre$phi93Z2D = $146;
   $$pre$phiZ2D = $4;
   $156 = $145;
   $160 = $149;
  }
 }
 if ((label | 0) == 70) {
  HEAP32[$4 >> 2] = 0;
  $$pre$phi93Z2D = $$pre92$pre$phiZZ2D;
  $$pre$phiZ2D = $4;
  $156 = 0;
  $160 = 0;
 }
 $153 = $3 + (HEAP32[$2 + 4 >> 2] | 0) | 0;
 _free(HEAP32[$153 >> 2] | 0);
 HEAP32[$153 >> 2] = 0;
 HEAP32[$153 + 4 >> 2] = $156;
 if ($156 | 0) {
  $159 = _malloc($156 + 1 | 0) | 0;
  HEAP32[$153 >> 2] = $159;
  _memcpy($159 | 0, $160 | 0, $156 | 0) | 0;
  HEAP8[$159 + $156 >> 0] = 0;
 }
 _free($160);
 HEAP32[$$pre$phiZ2D >> 2] = 0;
 HEAP32[$$pre$phi93Z2D >> 2] = 0;
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$add$i71 = 0, $$0$i$i$i = 0, $$0$i$i$i50 = 0, $$0$i$i$i53 = 0, $$0$i$i$i57 = 0, $$0$i$i$i61 = 0, $$0$i$i$idx$i = 0, $$0$i$i$idx$i70 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $16 = 0, $17 = 0, $24 = 0, $28 = 0, $29 = 0, $30 = 0, $33 = 0, $35 = 0, $36 = 0, $37 = 0, $39 = 0, $4 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $63 = 0, $64 = 0, $7 = 0, $78 = 0, $79 = 0, $8 = 0, $86 = 0, $87 = 0, $9 = 0, $95 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $4 = sp + 84 | 0;
 $5 = sp + 72 | 0;
 $6 = sp + 60 | 0;
 $7 = sp + 48 | 0;
 $8 = sp + 36 | 0;
 $9 = sp + 24 | 0;
 $10 = sp + 12 | 0;
 $11 = sp;
 $12 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($0, $1, $3) | 0;
 do if (($12 | 0) == ($0 | 0)) $$1 = $0; else {
  $14 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($12, $1, $3) | 0;
  $16 = $3 + 4 | 0;
  if (($14 | 0) == ($12 | 0)) {
   $95 = HEAP32[$16 >> 2] | 0;
   $$0$i$i$idx$i70 = 0;
   while (1) {
    if (($$0$i$i$idx$i70 | 0) == -1) break;
    $$0$i$i$add$i71 = $$0$i$i$idx$i70 + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($95 + ($$0$i$i$add$i71 * 24 | 0) | 0);
    $$0$i$i$idx$i70 = $$0$i$i$add$i71;
   }
   HEAP32[$16 >> 2] = $95 + -24;
   $$1 = $0;
   break;
  }
  $17 = HEAP32[$16 >> 2] | 0;
  if ((($17 - (HEAP32[$3 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$1 = $0; else {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($5, $17 + -24 | 0);
   $24 = HEAP32[$16 >> 2] | 0;
   $$0$i$i$idx$i = 0;
   while (1) {
    if (($$0$i$i$idx$i | 0) == -1) break;
    $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($24 + ($$0$i$i$add$i * 24 | 0) | 0);
    $$0$i$i$idx$i = $$0$i$i$add$i;
   }
   HEAP32[$16 >> 2] = $24 + -24;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($6, $24 + -48 | 0);
   $28 = HEAP32[$16 >> 2] | 0;
   $29 = $28 + -24 | 0;
   $30 = $29 + 11 | 0;
   if ((HEAP8[$30 >> 0] | 0) < 0) {
    $33 = HEAP32[$29 >> 2] | 0;
    HEAP8[$4 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($33, $4);
    HEAP32[$28 + -20 >> 2] = 0;
   } else {
    HEAP8[$4 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($29, $4);
    HEAP8[$30 >> 0] = 0;
   }
   $35 = __ZNSt3__211char_traitsIcE6lengthEPKc(22313) | 0;
   $36 = $2 + 11 | 0;
   $37 = HEAP8[$36 >> 0] | 0;
   $39 = $2 + 4 | 0;
   if (($35 | 0) == (($37 << 24 >> 24 < 0 ? HEAP32[$39 >> 2] | 0 : $37 & 255) | 0)) if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEjjPKcj($2, 22313, $35) | 0)) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($29, 40);
   __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($11, 22277, $6);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($11, 22563) | 0;
   HEAP32[$10 >> 2] = HEAP32[$11 >> 2];
   HEAP32[$10 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$10 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   $$0$i$i$i = 0;
   while (1) {
    if (($$0$i$i$i | 0) == 3) break;
    HEAP32[$11 + ($$0$i$i$i << 2) >> 2] = 0;
    $$0$i$i$i = $$0$i$i$i + 1 | 0;
   }
   $49 = HEAP8[$36 >> 0] | 0;
   $50 = $49 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($10, $50 ? HEAP32[$2 >> 2] | 0 : $2, $50 ? HEAP32[$39 >> 2] | 0 : $49 & 255) | 0;
   HEAP32[$9 >> 2] = HEAP32[$10 >> 2];
   HEAP32[$9 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
   HEAP32[$9 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
   $$0$i$i$i50 = 0;
   while (1) {
    if (($$0$i$i$i50 | 0) == 3) break;
    HEAP32[$10 + ($$0$i$i$i50 << 2) >> 2] = 0;
    $$0$i$i$i50 = $$0$i$i$i50 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($9, 22272) | 0;
   HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
   HEAP32[$8 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
   HEAP32[$8 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
   $$0$i$i$i53 = 0;
   while (1) {
    if (($$0$i$i$i53 | 0) == 3) break;
    HEAP32[$9 + ($$0$i$i$i53 << 2) >> 2] = 0;
    $$0$i$i$i53 = $$0$i$i$i53 + 1 | 0;
   }
   $63 = HEAP8[$5 + 11 >> 0] | 0;
   $64 = $63 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($8, $64 ? HEAP32[$5 >> 2] | 0 : $5, $64 ? HEAP32[$5 + 4 >> 2] | 0 : $63 & 255) | 0;
   HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
   HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
   HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
   $$0$i$i$i57 = 0;
   while (1) {
    if (($$0$i$i$i57 | 0) == 3) break;
    HEAP32[$8 + ($$0$i$i$i57 << 2) >> 2] = 0;
    $$0$i$i$i57 = $$0$i$i$i57 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($7, 22275) | 0;
   HEAP32[$4 >> 2] = HEAP32[$7 >> 2];
   HEAP32[$4 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
   HEAP32[$4 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
   $$0$i$i$i61 = 0;
   while (1) {
    if (($$0$i$i$i61 | 0) == 3) break;
    HEAP32[$7 + ($$0$i$i$i61 << 2) >> 2] = 0;
    $$0$i$i$i61 = $$0$i$i$i61 + 1 | 0;
   }
   $78 = HEAP8[$4 + 11 >> 0] | 0;
   $79 = $78 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($29, $79 ? HEAP32[$4 >> 2] | 0 : $4, $79 ? HEAP32[$4 + 4 >> 2] | 0 : $78 & 255) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($10);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($11);
   $86 = __ZNSt3__211char_traitsIcE6lengthEPKc(22313) | 0;
   $87 = HEAP8[$36 >> 0] | 0;
   if (($86 | 0) == (($87 << 24 >> 24 < 0 ? HEAP32[$39 >> 2] | 0 : $87 & 255) | 0)) if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEjjPKcj($2, 22313, $86) | 0)) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($29, 41);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
   $$1 = $14;
  }
 } while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZN2ut4arch13EntityManager25findFreshComponentDataRawERKNS_6EntityEjRb($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$02832$i$i = 0, $$02832$i$i$i = 0, $$02832$i$i$i19 = 0, $$02833$i$i = 0, $$02833$i$i$i = 0, $$02833$i$i$i28 = 0, $$02833$us$i$i = 0, $$02833$us$i$i$i = 0, $$02833$us$i$i$i22 = 0, $$2 = 0, $$sroa$0$0$i$i = 0, $$sroa$0$0$i$i$i = 0, $$sroa$0$0$i$i$i$pn = 0, $$sroa$0$0$i$i$i33 = 0, $10 = 0, $100 = 0, $102 = 0, $104 = 0, $110 = 0, $111 = 0, $115 = 0, $116 = 0, $124 = 0, $129 = 0, $17 = 0, $18 = 0, $22 = 0, $23 = 0, $31 = 0, $36 = 0, $4 = 0, $41 = 0, $42 = 0, $45 = 0, $5 = 0, $51 = 0, $53 = 0, $55 = 0, $6 = 0, $62 = 0, $63 = 0, $67 = 0, $68 = 0, $76 = 0, $8 = 0, $81 = 0, $95 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $4 = HEAP32[$1 >> 2] | 0;
 $5 = $0 + 132 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 L1 : do if ($6 | 0) {
  $8 = $6 + -1 | 0;
  $10 = ($8 & $6 | 0) == 0;
  if ($10) $17 = $8 & $4; else if ($4 >>> 0 < $6 >>> 0) $17 = $4; else $17 = ($4 >>> 0) % ($6 >>> 0) | 0;
  $18 = HEAP32[(HEAP32[$0 + 128 >> 2] | 0) + ($17 << 2) >> 2] | 0;
  if ($18 | 0) {
   $$02832$i$i$i = HEAP32[$18 >> 2] | 0;
   if ($$02832$i$i$i | 0) {
    L10 : do if ($10) {
     $$02833$us$i$i$i = $$02832$i$i$i;
     while (1) {
      $22 = HEAP32[$$02833$us$i$i$i + 4 >> 2] | 0;
      $23 = ($22 | 0) == ($4 | 0);
      if (!($23 | ($22 & $8 | 0) == ($17 | 0))) break L1;
      if ($23) if ((HEAP32[$$02833$us$i$i$i + 8 >> 2] | 0) == ($4 | 0)) {
       $$sroa$0$0$i$i$i = $$02833$us$i$i$i;
       break L10;
      }
      $$02833$us$i$i$i = HEAP32[$$02833$us$i$i$i >> 2] | 0;
      if (!$$02833$us$i$i$i) break L1;
     }
    } else {
     $$02833$i$i$i = $$02832$i$i$i;
     while (1) {
      $31 = HEAP32[$$02833$i$i$i + 4 >> 2] | 0;
      if (($31 | 0) == ($4 | 0)) {
       if ((HEAP32[$$02833$i$i$i + 8 >> 2] | 0) == ($4 | 0)) {
        $$sroa$0$0$i$i$i = $$02833$i$i$i;
        break L10;
       }
      } else {
       if ($31 >>> 0 < $6 >>> 0) $36 = $31; else $36 = ($31 >>> 0) % ($6 >>> 0) | 0;
       if (($36 | 0) != ($17 | 0)) break L1;
      }
      $$02833$i$i$i = HEAP32[$$02833$i$i$i >> 2] | 0;
      if (!$$02833$i$i$i) break L1;
     }
    } while (0);
    $41 = $1 + 4 | 0;
    $42 = $0 + 128 | 0;
    $$sroa$0$0$i$i$i$pn = $$sroa$0$0$i$i$i;
    $45 = $4;
    L29 : while (1) {
     if ((HEAP32[$$sroa$0$0$i$i$i$pn + 12 >> 2] | 0) != ($45 | 0)) {
      label = 24;
      break;
     }
     if ((HEAP32[$$sroa$0$0$i$i$i$pn + 16 >> 2] | 0) != (HEAP32[$41 >> 2] | 0)) {
      label = 24;
      break;
     }
     $51 = HEAP32[$$sroa$0$0$i$i$i$pn + 32 >> 2] | 0;
     L33 : do if ($51 | 0) {
      $53 = $51 + -1 | 0;
      $55 = ($53 & $51 | 0) == 0;
      if ($55) $62 = $53 & $2; else if ($51 >>> 0 > $2 >>> 0) $62 = $2; else $62 = ($2 >>> 0) % ($51 >>> 0) | 0;
      $63 = HEAP32[(HEAP32[$$sroa$0$0$i$i$i$pn + 28 >> 2] | 0) + ($62 << 2) >> 2] | 0;
      if ($63 | 0) {
       $$02832$i$i = HEAP32[$63 >> 2] | 0;
       if ($$02832$i$i | 0) {
        if ($55) {
         $$02833$us$i$i = $$02832$i$i;
         while (1) {
          $67 = HEAP32[$$02833$us$i$i + 4 >> 2] | 0;
          $68 = ($67 | 0) == ($2 | 0);
          if (!($68 | ($67 & $53 | 0) == ($62 | 0))) break L33;
          if ($68) if ((HEAP32[$$02833$us$i$i + 8 >> 2] | 0) == ($2 | 0)) {
           $$sroa$0$0$i$i = $$02833$us$i$i;
           label = 45;
           break L29;
          }
          $$02833$us$i$i = HEAP32[$$02833$us$i$i >> 2] | 0;
          if (!$$02833$us$i$i) break L33;
         }
        }
        $$02833$i$i = $$02832$i$i;
        do {
         $76 = HEAP32[$$02833$i$i + 4 >> 2] | 0;
         if (($76 | 0) == ($2 | 0)) {
          if ((HEAP32[$$02833$i$i + 8 >> 2] | 0) == ($2 | 0)) {
           $$sroa$0$0$i$i = $$02833$i$i;
           label = 45;
           break L29;
          }
         } else {
          if ($76 >>> 0 < $51 >>> 0) $81 = $76; else $81 = ($76 >>> 0) % ($51 >>> 0) | 0;
          if (($81 | 0) != ($62 | 0)) break L33;
         }
         $$02833$i$i = HEAP32[$$02833$i$i >> 2] | 0;
        } while (($$02833$i$i | 0) != 0);
       }
      }
     } while (0);
     if (HEAP8[$$sroa$0$0$i$i$i$pn + 60 >> 0] | 0) {
      label = 49;
      break;
     }
     $95 = HEAP32[$$sroa$0$0$i$i$i$pn + 20 >> 2] | 0;
     if (!$95) if (!(HEAP32[$$sroa$0$0$i$i$i$pn + 24 >> 2] | 0)) break L1;
     $100 = HEAP32[$5 >> 2] | 0;
     if (!$100) break L1;
     $102 = $100 + -1 | 0;
     $104 = ($102 & $100 | 0) == 0;
     if ($104) $110 = $102 & $95; else if ($95 >>> 0 < $100 >>> 0) $110 = $95; else $110 = ($95 >>> 0) % ($100 >>> 0) | 0;
     $111 = HEAP32[(HEAP32[$42 >> 2] | 0) + ($110 << 2) >> 2] | 0;
     if (!$111) break L1;
     $$02832$i$i$i19 = HEAP32[$111 >> 2] | 0;
     if (!$$02832$i$i$i19) break L1;
     L73 : do if ($104) {
      $$02833$us$i$i$i22 = $$02832$i$i$i19;
      while (1) {
       $115 = HEAP32[$$02833$us$i$i$i22 + 4 >> 2] | 0;
       $116 = ($115 | 0) == ($95 | 0);
       if (!($116 | ($115 & $102 | 0) == ($110 | 0))) break L1;
       if ($116) if ((HEAP32[$$02833$us$i$i$i22 + 8 >> 2] | 0) == ($95 | 0)) {
        $$sroa$0$0$i$i$i33 = $$02833$us$i$i$i22;
        break L73;
       }
       $$02833$us$i$i$i22 = HEAP32[$$02833$us$i$i$i22 >> 2] | 0;
       if (!$$02833$us$i$i$i22) break L1;
      }
     } else {
      $$02833$i$i$i28 = $$02832$i$i$i19;
      while (1) {
       $124 = HEAP32[$$02833$i$i$i28 + 4 >> 2] | 0;
       if (($124 | 0) == ($95 | 0)) {
        if ((HEAP32[$$02833$i$i$i28 + 8 >> 2] | 0) == ($95 | 0)) {
         $$sroa$0$0$i$i$i33 = $$02833$i$i$i28;
         break L73;
        }
       } else {
        if ($124 >>> 0 < $100 >>> 0) $129 = $124; else $129 = ($124 >>> 0) % ($100 >>> 0) | 0;
        if (($129 | 0) != ($110 | 0)) break L1;
       }
       $$02833$i$i$i28 = HEAP32[$$02833$i$i$i28 >> 2] | 0;
       if (!$$02833$i$i$i28) break L1;
      }
     } while (0);
     $$sroa$0$0$i$i$i$pn = $$sroa$0$0$i$i$i33;
     $45 = HEAP32[$1 >> 2] | 0;
    }
    if ((label | 0) == 24) {
     _snprintf(25060, 1024, 7169, $vararg_buffer) | 0;
     HEAP8[26083] = 0;
     __ZN2ut12assertFailedEPKcS1_S1_j(25060, 7188, 6920, 286);
    } else if ((label | 0) == 45) {
     HEAP8[$3 >> 0] = 1;
     if (!(HEAP32[$$sroa$0$0$i$i + 16 >> 2] | 0)) {
      _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
      HEAP8[26083] = 0;
      __ZN2ut12assertFailedEPKcS1_S1_j(25060, 7208, 6920, 290);
     }
     $$2 = HEAP32[$$sroa$0$0$i$i + 12 >> 2] | 0;
     STACKTOP = sp;
     return $$2 | 0;
    } else if ((label | 0) == 49) {
     _snprintf(25060, 1024, 7276, $vararg_buffer3) | 0;
     HEAP8[26083] = 0;
     __ZN2ut12assertFailedEPKcS1_S1_j(25060, 7402, 6920, 295);
    }
   }
  }
 } while (0);
 HEAP8[$3 >> 0] = 0;
 $$2 = 0;
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZN2ut4arch17EntityDataManager12addComponentENS_6EntityEj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$lcssa = 0, $$020$i$i = 0, $$020$i$i$i = 0, $$04354 = 0, $$055 = 0, $$06$i = 0, $$1 = 0, $$145 = 0, $$pre$phi67Z2D = 0, $$pre$phiZ2D = 0, $$pre63 = 0, $$sroa$0$0$copyload22$i$i$i = 0, $103 = 0, $104 = 0, $11 = 0, $120 = 0, $124 = 0, $129 = 0, $134 = 0, $135 = 0, $14 = 0, $142 = 0, $145 = 0, $146 = 0, $147 = 0, $15 = 0, $16 = 0, $25 = 0, $28 = 0, $3 = 0, $34 = 0, $35 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $45 = 0, $47 = 0, $49 = 0, $5 = 0, $50 = 0, $54 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $69 = 0, $7 = 0, $71 = 0, $74 = 0, $75 = 0, $82 = 0, $83 = 0, $85 = 0, $9 = 0, $96 = 0, $98 = 0, $99 = 0, $tmpcast$byval_copy = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $tmpcast$byval_copy = sp + 56 | 0;
 $vararg_buffer5 = sp + 32 | 0;
 $vararg_buffer3 = sp + 24 | 0;
 $vararg_buffer1 = sp + 16 | 0;
 $3 = sp + 52 | 0;
 $4 = sp + 40 | 0;
 $5 = sp + 36 | 0;
 $6 = sp;
 HEAP32[$3 >> 2] = $2;
 $7 = $0 + 20 | 0;
 $9 = HEAP32[$1 >> 2] | 0;
 $11 = HEAP32[(HEAP32[$7 >> 2] | 0) + ($9 << 4) + 8 >> 2] | 0;
 $14 = HEAP8[($2 & 63) + ($11 + 36) >> 0] | 0;
 $15 = $14 & 255;
 $16 = $11 + 28 | 0;
 if ((HEAP32[$16 >> 2] | 0) <= ($15 | 0)) {
  _snprintf(25060, 1024, 27124, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13990, 14007, 120);
 }
 if ($14 << 24 >> 24) if ((HEAP32[(HEAP32[$11 + 32 >> 2] | 0) + ($15 << 4) >> 2] | 0) == ($2 | 0)) {
  _snprintf(25060, 1024, 8984, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9025, 9049, 141);
 }
 $25 = HEAP32[$16 >> 2] | 0;
 L8 : do if (($25 | 0) > 0) {
  $28 = HEAP32[$11 + 32 >> 2] | 0;
  $$020$i$i = 0;
  while (1) {
   if ((HEAP32[$28 + ($$020$i$i << 4) >> 2] | 0) == ($2 | 0)) break;
   $$020$i$i = $$020$i$i + 1 | 0;
   if (($$020$i$i | 0) >= ($25 | 0)) break L8;
  }
  _snprintf(25060, 1024, 8984, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9025, 9049, 141);
 } while (0);
 HEAP32[$4 >> 2] = 0;
 $34 = $4 + 4 | 0;
 HEAP32[$34 >> 2] = 0;
 $35 = $4 + 8 | 0;
 HEAP32[$35 >> 2] = 0;
 if (!$25) {
  $145 = 0;
  $146 = 0;
  label = 14;
 } else {
  if ($25 >>> 0 > 1073741823) _abort();
  $39 = __Znwj($25 << 2) | 0;
  $40 = $39;
  $41 = $39 + ($25 << 2) | 0;
  HEAP32[$4 >> 2] = $39;
  HEAP32[$34 >> 2] = $40;
  HEAP32[$35 >> 2] = $41;
  if ((HEAP32[$16 >> 2] | 0) > 0) {
   $45 = $11 + 32 | 0;
   $$06$i = 0;
   $49 = $39;
   $50 = $41;
   while (1) {
    $47 = (HEAP32[$45 >> 2] | 0) + ($$06$i << 4) | 0;
    if (($49 | 0) == ($50 | 0)) __ZNSt3__26vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIRKjEEvOT_($4, $47); else {
     HEAP32[$49 >> 2] = HEAP32[$47 >> 2];
     HEAP32[$34 >> 2] = (HEAP32[$34 >> 2] | 0) + 4;
    }
    $54 = $$06$i + 1 | 0;
    if (($54 | 0) >= (HEAP32[$16 >> 2] | 0)) break;
    $$06$i = $54;
    $49 = HEAP32[$34 >> 2] | 0;
    $50 = HEAP32[$35 >> 2] | 0;
   }
   $$pre$phi67Z2D = $34;
   $58 = HEAP32[$4 >> 2] | 0;
   $61 = HEAP32[$34 >> 2] | 0;
  } else {
   $145 = $39;
   $146 = $40;
   label = 14;
  }
 }
 if ((label | 0) == 14) {
  $$pre$phi67Z2D = $34;
  $58 = $145;
  $61 = $146;
 }
 $57 = $58 + 4 | 0;
 $59 = $57;
 $60 = $61 - $59 | 0;
 if (!$60) $$pre$phiZ2D = $59; else {
  $64 = HEAP32[$3 >> 2] | 0;
  $$020$i$i$i = $60 >> 2;
  $$sroa$0$0$copyload22$i$i$i = $57;
  $67 = $57;
  while (1) {
   $65 = ($$020$i$i$i | 0) / 2 | 0;
   $66 = $67 + ($65 << 2) | 0;
   $69 = (HEAP32[$66 >> 2] | 0) >>> 0 < $64 >>> 0;
   $71 = $66 + 4 | 0;
   $$sroa$0$0$copyload22$i$i$i = $69 ? $71 : $$sroa$0$0$copyload22$i$i$i;
   $$020$i$i$i = $69 ? $$020$i$i$i + -1 - $65 | 0 : $65;
   if (!$$020$i$i$i) break; else $67 = $69 ? $71 : $67;
  }
  $$pre$phiZ2D = $$sroa$0$0$copyload22$i$i$i;
 }
 HEAP32[$5 >> 2] = $$pre$phiZ2D;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$5 >> 2];
 __ZNSt3__26vectorIjNS_9allocatorIjEEE6insertENS_11__wrap_iterIPKjEERS5_($4, $tmpcast$byval_copy, $3) | 0;
 $74 = __ZN2ut4arch16ArchetypeManager20getOrCreateArchetypeERKNSt3__26vectorIjNS2_9allocatorIjEEEE(HEAP32[$0 >> 2] | 0, $4) | 0;
 $75 = $74 + 104 | 0;
 do if ((HEAP32[$75 >> 2] | 0) > 0) {
  $82 = HEAP32[(HEAP32[(HEAP32[$7 >> 2] | 0) + ($9 << 4) + 12 >> 2] | 0) + 20 >> 2] | 0;
  $83 = HEAP32[$3 >> 2] | 0;
  $85 = HEAP32[6067] | 0;
  if ((HEAP32[6068] | 0) - $85 >> 2 >>> 0 <= $83 >>> 0) {
   _snprintf(25060, 1024, 27124, $vararg_buffer3) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
  }
  if (!(HEAP32[(HEAP32[$85 + ($83 << 2) >> 2] | 0) + 4 >> 2] & 2)) $$145 = $82; else {
   $96 = HEAP32[$75 >> 2] | 0;
   $98 = STACKTOP;
   STACKTOP = STACKTOP + ((1 * ($96 << 2) | 0) + 15 & -16) | 0;
   $99 = $11 + 100 | 0;
   if (!(HEAP32[$99 >> 2] | 0)) if (($96 | 0) == 1) {
    HEAP32[$98 >> 2] = 0;
    $$145 = $98;
    break;
   } else {
    _snprintf(25060, 1024, 27124, $vararg_buffer5) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9131, 9049, 183);
   }
   $103 = $11 + 32 | 0;
   $104 = HEAP32[$16 >> 2] | 0;
   L50 : do if (($104 | 0) > 0) {
    $$pre63 = HEAP32[$3 >> 2] | 0;
    $$04354 = 0;
    $$055 = 0;
    $147 = $104;
    while (1) {
     if ((HEAP32[(HEAP32[$103 >> 2] | 0) + ($$04354 << 4) >> 2] | 0) >>> 0 >= $$pre63 >>> 0) {
      $$0$lcssa = $$055;
      break L50;
     }
     if ((HEAP32[(HEAP32[$99 >> 2] | 0) + ($$04354 << 2) >> 2] | 0) == -1) {
      $$1 = $$055;
      $120 = $147;
     } else {
      HEAP32[$98 + ($$055 << 2) >> 2] = HEAP32[$82 + ($$055 << 2) >> 2];
      $$1 = $$055 + 1 | 0;
      $120 = HEAP32[$16 >> 2] | 0;
     }
     $$04354 = $$04354 + 1 | 0;
     if (($$04354 | 0) >= ($120 | 0)) {
      $$0$lcssa = $$1;
      break;
     } else {
      $$055 = $$1;
      $147 = $120;
     }
    }
   } else $$0$lcssa = 0; while (0);
   HEAP32[$98 + ($$0$lcssa << 2) >> 2] = 0;
   $124 = (HEAP32[$75 >> 2] | 0) - $$0$lcssa + -1 | 0;
   if (!$124) $$145 = $98; else {
    _memmove($98 + ($$0$lcssa + 1 << 2) | 0, $82 + ($$0$lcssa << 2) | 0, $124 << 2 | 0) | 0;
    $$145 = $98;
   }
  }
 } else $$145 = 0; while (0);
 $129 = $1;
 $134 = HEAP32[$129 + 4 >> 2] | 0;
 $135 = $6;
 HEAP32[$135 >> 2] = HEAP32[$129 >> 2];
 HEAP32[$135 + 4 >> 2] = $134;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 __ZN2ut4arch17EntityDataManager12setArchetypeENS_6EntityEPNS0_9ArchetypeEPi($0, $tmpcast$byval_copy, $74, $$145);
 __ZN2ut4arch17EntityDataManager30incrementComponentOrderVersionEPNS0_9ArchetypeEPNS0_5ChunkE($0, $74, HEAP32[(HEAP32[$7 >> 2] | 0) + ($9 << 4) + 12 >> 2] | 0);
 $142 = HEAP32[$4 >> 2] | 0;
 if (!$142) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$$pre$phi67Z2D >> 2] = $142;
 __ZdlPv($142);
 STACKTOP = sp;
 return;
}

function __ZN2ut10saveEntityIN9rapidjson12PrettyWriterINS1_19GenericStringBufferINS1_4UTF8IcEENS1_12CrtAllocatorEEES5_S5_S6_Lj0EEEEEvRT_RNS_12ManagerWorldERNS_6EntityE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i39 = 0, $$0$i$i$i44 = 0, $$045 = 0, $$06$i$i$i = 0, $$06$i$i$i38 = 0, $10 = 0, $102 = 0, $12 = 0, $16 = 0, $17 = 0, $20 = 0, $22 = 0, $23 = 0, $3 = 0, $32 = 0, $34 = 0, $38 = 0, $39 = 0, $4 = 0, $42 = 0, $44 = 0, $45 = 0, $5 = 0, $53 = 0, $57 = 0, $6 = 0, $62 = 0, $63 = 0, $67 = 0, $68 = 0, $71 = 0, $72 = 0, $78 = 0, $80 = 0, $86 = 0, $87 = 0, $92 = 0, $93 = 0, $97 = 0, $99 = 0, $tmpcast35$byval_copy = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $tmpcast35$byval_copy = sp + 32 | 0;
 $vararg_buffer1 = sp + 24 | 0;
 $vararg_buffer = sp + 8 | 0;
 $3 = sp + 16 | 0;
 $4 = sp;
 __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, 3);
 $5 = $0 + 4 | 0;
 $6 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushINS_6WriterINS_19GenericStringBufferINS_4UTF8IcEES2_EES8_S8_S2_Lj0EE5LevelEEEPT_j($5, 1) | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP8[$6 + 4 >> 0] = 0;
 HEAP8[(__ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, 1) | 0) >> 0] = 123;
 __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, 5);
 __ZN9rapidjson6WriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE11WriteStringEPKcj($0, 12871, 5) | 0;
 $10 = HEAP32[$2 >> 2] | 0;
 __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, 6);
 $12 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, 11) | 0;
 if (($10 | 0) < 0) {
  HEAP8[$12 >> 0] = 45;
  $$0$i$i$i = 0 - $10 | 0;
  $$06$i$i$i = $12 + 1 | 0;
 } else {
  $$0$i$i$i = $10;
  $$06$i$i$i = $12;
 }
 $16 = __ZN9rapidjson8internal6u32toaEjPc($$0$i$i$i, $$06$i$i$i) | 0;
 $17 = HEAP32[$0 >> 2] | 0;
 $20 = $12 - $16 | 0;
 $22 = $17 + 12 | 0;
 $23 = HEAP32[$22 >> 2] | 0;
 if (($23 - (HEAP32[$17 + 8 >> 2] | 0) | 0) >>> 0 < ($20 + 11 | 0) >>> 0) ___assert_fail(5737, 5657, 137, 5768);
 HEAP32[$22 >> 2] = $23 + (-11 - $20);
 __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, 5);
 __ZN9rapidjson6WriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE11WriteStringEPKcj($0, 12877, 7) | 0;
 $32 = HEAP32[$2 + 4 >> 2] | 0;
 __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, 6);
 $34 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, 11) | 0;
 if (($32 | 0) < 0) {
  HEAP8[$34 >> 0] = 45;
  $$0$i$i$i39 = 0 - $32 | 0;
  $$06$i$i$i38 = $34 + 1 | 0;
 } else {
  $$0$i$i$i39 = $32;
  $$06$i$i$i38 = $34;
 }
 $38 = __ZN9rapidjson8internal6u32toaEjPc($$0$i$i$i39, $$06$i$i$i38) | 0;
 $39 = HEAP32[$0 >> 2] | 0;
 $42 = $34 - $38 | 0;
 $44 = $39 + 12 | 0;
 $45 = HEAP32[$44 >> 2] | 0;
 if (($45 - (HEAP32[$39 + 8 >> 2] | 0) | 0) >>> 0 < ($42 + 11 | 0) >>> 0) ___assert_fail(5737, 5657, 137, 5768);
 HEAP32[$44 >> 2] = $45 + (-11 - $42);
 __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, 5);
 __ZN9rapidjson6WriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE11WriteStringEPKcj($0, 12885, 10) | 0;
 __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, 3);
 $53 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushINS_6WriterINS_19GenericStringBufferINS_4UTF8IcEES2_EES8_S8_S2_Lj0EE5LevelEEEPT_j($5, 1) | 0;
 HEAP32[$53 >> 2] = 0;
 HEAP8[$53 + 4 >> 0] = 0;
 HEAP8[(__ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, 1) | 0) >> 0] = 123;
 $57 = $2;
 $62 = HEAP32[$57 + 4 >> 2] | 0;
 $63 = $3;
 HEAP32[$63 >> 2] = HEAP32[$57 >> 2];
 HEAP32[$63 + 4 >> 2] = $62;
 HEAP32[$tmpcast35$byval_copy >> 2] = HEAP32[$3 >> 2];
 HEAP32[$tmpcast35$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 $67 = __ZN2ut4arch13EntityManager12getArchetypeENS_6EntityE($1, $tmpcast35$byval_copy) | 0;
 $68 = $67 + 28 | 0;
 if ((HEAP32[$68 >> 2] | 0) <= 1) {
  __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE9EndObjectEj($0, 0) | 0;
  __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE9EndObjectEj($0, 0) | 0;
  STACKTOP = sp;
  return;
 }
 $71 = $67 + 32 | 0;
 $$045 = 1;
 while (1) {
  $72 = HEAP32[$71 >> 2] | 0;
  if (HEAP32[$72 + ($$045 << 4) + 4 >> 2] & 2 | 0) {
   label = 13;
   break;
  }
  $78 = HEAP32[$72 + ($$045 << 4) >> 2] | 0;
  $80 = HEAP32[6067] | 0;
  if ((HEAP32[6068] | 0) - $80 >> 2 >>> 0 <= $78 >>> 0) {
   label = 15;
   break;
  }
  $86 = HEAP32[$80 + ($78 << 2) >> 2] | 0;
  $87 = $2;
  $92 = HEAP32[$87 + 4 >> 2] | 0;
  $93 = $4;
  HEAP32[$93 >> 2] = HEAP32[$87 >> 2];
  HEAP32[$93 + 4 >> 2] = $92;
  HEAP32[$tmpcast35$byval_copy >> 2] = HEAP32[$4 >> 2];
  HEAP32[$tmpcast35$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  $97 = __ZN2ut4arch13EntityManager27getComponentDataRawUnsafeROENS_6EntityEj($1, $tmpcast35$byval_copy, $78) | 0;
  $99 = HEAP32[$86 + 68 >> 2] | 0;
  if ($99 | 0) {
   $102 = HEAP32[$99 + 4 >> 2] | 0;
   $$0$i$i$i44 = $102;
   while (1) if (!(HEAP8[$$0$i$i$i44 >> 0] | 0)) break; else $$0$i$i$i44 = $$0$i$i$i44 + 1 | 0;
   __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, 5);
   __ZN9rapidjson6WriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE11WriteStringEPKcj($0, $102, $$0$i$i$i44 - $102 | 0) | 0;
   __ZN2ut8saveTypeIN9rapidjson12PrettyWriterINS1_19GenericStringBufferINS1_4UTF8IcEENS1_12CrtAllocatorEEES5_S5_S6_Lj0EEEEEvRT_PKNS_4meta8TypeDescEPKv($0, $99, $97);
  }
  $$045 = $$045 + 1 | 0;
  if (($$045 | 0) >= (HEAP32[$68 >> 2] | 0)) {
   label = 11;
   break;
  }
 }
 if ((label | 0) == 11) {
  __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE9EndObjectEj($0, 0) | 0;
  __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE9EndObjectEj($0, 0) | 0;
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 13) {
  _snprintf(25060, 1024, 12896, $vararg_buffer) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 12932, 12969, 211);
 } else if ((label | 0) == 15) {
  _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
}

function __ZN2ut4arch13EntityManager19instantiateEntitiesENS_6EntityEPS2_i($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i$i$i = 0, $$02231 = 0, $$030 = 0, $$04575$i$i$i = 0, $$04576$i$i$i = 0, $$04576$us$i$i$i = 0, $$047$i$i$i = 0, $$1$i$i$i = 0, $$sink = 0, $100 = 0.0, $11 = 0, $110 = 0, $113 = 0, $115 = 0, $116 = 0, $123 = 0, $124 = 0, $127 = 0, $130 = 0, $131 = 0, $139 = 0, $145 = 0, $146 = 0, $151 = 0, $152 = 0, $157 = 0, $158 = 0, $16 = 0, $162 = 0, $17 = 0, $22 = 0, $27 = 0, $28 = 0, $32 = 0, $33 = 0, $34 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $44 = 0, $45 = 0, $5 = 0, $50 = 0, $51 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $63 = 0, $69 = 0, $70 = 0, $74 = 0, $84 = 0, $89 = 0, $93 = 0, $98 = 0.0, $tmpcast$byval_copy = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $tmpcast$byval_copy = sp + 32 | 0;
 $vararg_buffer = sp + 16 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 8 | 0;
 $6 = sp;
 __ZN2ut4arch13EntityManager19assertEntitiesExistEPKNS_6EntityEiPKc($0, $1, 1, 12530);
 if ((HEAP32[$0 + 36 >> 2] | 0) <= 0) {
  $146 = $0 + 8 | 0;
  if ((HEAP32[(HEAP32[$146 >> 2] | 0) + 44 >> 2] | 0) > 0) {
   _snprintf(25060, 1024, 8878, $vararg_buffer) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8949, 6920, 35);
  }
  $151 = HEAP32[$146 >> 2] | 0;
  $152 = $1;
  $157 = HEAP32[$152 + 4 >> 2] | 0;
  $158 = $6;
  HEAP32[$158 >> 2] = HEAP32[$152 >> 2];
  HEAP32[$158 + 4 >> 2] = $157;
  HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$6 >> 2];
  HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  __ZN2ut4arch17EntityDataManager19instantiateEntitiesENS_6EntityEPS2_i($151, $tmpcast$byval_copy, $2, $3);
  STACKTOP = sp;
  return;
 }
 $11 = $1;
 $16 = HEAP32[$11 + 4 >> 2] | 0;
 $17 = $4;
 HEAP32[$17 >> 2] = HEAP32[$11 >> 2];
 HEAP32[$17 + 4 >> 2] = $16;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$4 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 __ZN2ut4arch19EntityCommandBuffer27instantiateDeferredEntitiesENS_6EntityEPS2_j($0 + 40 | 0, $tmpcast$byval_copy, $2, $3);
 if (($3 | 0) > 0) {
  $$02231 = 0;
  do {
   $44 = (__ZN2ut4arch13EntityManager17createFreshEntityERKNS_6EntityEb($0, $2 + ($$02231 << 3) | 0, 0) | 0) + 8 | 0;
   $45 = $1;
   $50 = HEAP32[$45 + 4 >> 2] | 0;
   $51 = $44;
   HEAP32[$51 >> 2] = HEAP32[$45 >> 2];
   HEAP32[$51 + 4 >> 2] = $50;
   $$02231 = $$02231 + 1 | 0;
  } while (($$02231 | 0) != ($3 | 0));
 }
 $22 = $1;
 $27 = HEAP32[$22 + 4 >> 2] | 0;
 $28 = $5;
 HEAP32[$28 >> 2] = HEAP32[$22 >> 2];
 HEAP32[$28 + 4 >> 2] = $27;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$5 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 $32 = __ZN2ut4arch13EntityManager12getArchetypeENS_6EntityE($0, $tmpcast$byval_copy) | 0;
 $33 = $32 + 28 | 0;
 $34 = HEAP32[$33 >> 2] | 0;
 if (($34 | 0) <= 1) {
  STACKTOP = sp;
  return;
 }
 $36 = $0 + 108 | 0;
 $37 = $32 + 32 | 0;
 $38 = $0 + 112 | 0;
 $39 = $0 + 120 | 0;
 $40 = $0 + 124 | 0;
 $41 = $0 + 116 | 0;
 $$030 = 1;
 $162 = $34;
 while (1) {
  $58 = HEAP32[(HEAP32[$37 >> 2] | 0) + ($$030 << 4) >> 2] | 0;
  $59 = HEAP32[$38 >> 2] | 0;
  $60 = ($59 | 0) == 0;
  L18 : do if ($60) {
   $$0$i$i$i = 0;
   label = 26;
  } else {
   $61 = $59 + -1 | 0;
   $63 = ($61 & $59 | 0) == 0;
   if ($63) $69 = $61 & $58; else if ($58 >>> 0 < $59 >>> 0) $69 = $58; else $69 = ($58 >>> 0) % ($59 >>> 0) | 0;
   $70 = HEAP32[(HEAP32[$36 >> 2] | 0) + ($69 << 2) >> 2] | 0;
   if (!$70) {
    $$0$i$i$i = $69;
    label = 26;
   } else {
    $$04575$i$i$i = HEAP32[$70 >> 2] | 0;
    if (!$$04575$i$i$i) {
     $$0$i$i$i = $69;
     label = 26;
    } else {
     if ($63) {
      $$04576$us$i$i$i = $$04575$i$i$i;
      while (1) {
       $74 = HEAP32[$$04576$us$i$i$i + 4 >> 2] | 0;
       if (!(($74 | 0) == ($58 | 0) | ($74 & $61 | 0) == ($69 | 0))) {
        $$0$i$i$i = $69;
        label = 26;
        break L18;
       }
       if ((HEAP32[$$04576$us$i$i$i + 8 >> 2] | 0) == ($58 | 0)) {
        $145 = $162;
        break L18;
       }
       $$04576$us$i$i$i = HEAP32[$$04576$us$i$i$i >> 2] | 0;
       if (!$$04576$us$i$i$i) {
        $$0$i$i$i = $69;
        label = 26;
        break L18;
       }
      }
     }
     $$04576$i$i$i = $$04575$i$i$i;
     while (1) {
      $84 = HEAP32[$$04576$i$i$i + 4 >> 2] | 0;
      if (($84 | 0) != ($58 | 0)) {
       if ($84 >>> 0 < $59 >>> 0) $89 = $84; else $89 = ($84 >>> 0) % ($59 >>> 0) | 0;
       if (($89 | 0) != ($69 | 0)) {
        $$0$i$i$i = $69;
        label = 26;
        break L18;
       }
      }
      if ((HEAP32[$$04576$i$i$i + 8 >> 2] | 0) == ($58 | 0)) {
       $145 = $162;
       break L18;
      }
      $$04576$i$i$i = HEAP32[$$04576$i$i$i >> 2] | 0;
      if (!$$04576$i$i$i) {
       $$0$i$i$i = $69;
       label = 26;
       break;
      }
     }
    }
   }
  } while (0);
  if ((label | 0) == 26) {
   label = 0;
   $93 = __Znwj(12) | 0;
   HEAP32[$93 + 8 >> 2] = $58;
   HEAP32[$93 + 4 >> 2] = $58;
   HEAP32[$93 >> 2] = 0;
   $98 = +(((HEAP32[$39 >> 2] | 0) + 1 | 0) >>> 0);
   $100 = +HEAPF32[$40 >> 2];
   do if ($60 | $100 * +($59 >>> 0) < $98) {
    $110 = $59 << 1 | ($59 >>> 0 < 3 | ($59 + -1 & $59 | 0) != 0) & 1;
    $113 = ~~+Math_ceil(+($98 / $100)) >>> 0;
    __ZNSt3__212__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE6rehashEj($36, $110 >>> 0 < $113 >>> 0 ? $113 : $110);
    $115 = HEAP32[$38 >> 2] | 0;
    $116 = $115 + -1 | 0;
    if (!($116 & $115)) {
     $$047$i$i$i = $115;
     $$1$i$i$i = $116 & $58;
     break;
    }
    if ($58 >>> 0 < $115 >>> 0) {
     $$047$i$i$i = $115;
     $$1$i$i$i = $58;
    } else {
     $$047$i$i$i = $115;
     $$1$i$i$i = ($58 >>> 0) % ($115 >>> 0) | 0;
    }
   } else {
    $$047$i$i$i = $59;
    $$1$i$i$i = $$0$i$i$i;
   } while (0);
   $123 = (HEAP32[$36 >> 2] | 0) + ($$1$i$i$i << 2) | 0;
   $124 = HEAP32[$123 >> 2] | 0;
   if (!$124) {
    HEAP32[$93 >> 2] = HEAP32[$41 >> 2];
    HEAP32[$41 >> 2] = $93;
    HEAP32[$123 >> 2] = $41;
    $127 = HEAP32[$93 >> 2] | 0;
    if ($127 | 0) {
     $130 = HEAP32[$127 + 4 >> 2] | 0;
     $131 = $$047$i$i$i + -1 | 0;
     if (!($131 & $$047$i$i$i)) $139 = $130 & $131; else if ($130 >>> 0 < $$047$i$i$i >>> 0) $139 = $130; else $139 = ($130 >>> 0) % ($$047$i$i$i >>> 0) | 0;
     $$sink = (HEAP32[$36 >> 2] | 0) + ($139 << 2) | 0;
     label = 39;
    }
   } else {
    HEAP32[$93 >> 2] = HEAP32[$124 >> 2];
    $$sink = $124;
    label = 39;
   }
   if ((label | 0) == 39) {
    label = 0;
    HEAP32[$$sink >> 2] = $93;
   }
   HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 1;
   $145 = HEAP32[$33 >> 2] | 0;
  }
  $$030 = $$030 + 1 | 0;
  if (($$030 | 0) >= ($145 | 0)) break; else $162 = $145;
 }
 STACKTOP = sp;
 return;
}

function __ZN2ut4arch13EntityManager19setComponentDataRawENS_6EntityEjPKvj($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i$i = 0, $$04575$i$i$i = 0, $$04576$i$i$i = 0, $$04576$us$i$i$i = 0, $$047$i$i$i = 0, $$1$i$i$i = 0, $$sink = 0, $100 = 0, $107 = 0, $108 = 0, $110 = 0, $112 = 0, $115 = 0, $116 = 0, $124 = 0, $129 = 0, $130 = 0, $135 = 0, $136 = 0, $140 = 0, $141 = 0, $142 = 0, $144 = 0, $150 = 0, $151 = 0, $152 = 0, $155 = 0, $161 = 0, $23 = 0, $28 = 0, $29 = 0, $33 = 0, $34 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $45 = 0, $5 = 0, $51 = 0, $52 = 0, $56 = 0, $6 = 0, $66 = 0, $7 = 0, $71 = 0, $75 = 0, $78 = 0, $81 = 0.0, $84 = 0.0, $9 = 0, $94 = 0, $97 = 0, $99 = 0, $tmpcast$byval_copy = 0, $vararg_buffer3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $tmpcast$byval_copy = sp + 40 | 0;
 $vararg_buffer3 = sp + 32 | 0;
 $5 = sp + 36 | 0;
 $6 = sp + 8 | 0;
 $7 = sp;
 HEAP32[$5 >> 2] = $2;
 __ZN2ut4arch13EntityManager18assertEntityExistsERKNS_6EntityEjPKcS6_($0, $1, $2, 10782, 10810);
 __ZN2ut4arch13EntityManager24assertEntityHasComponentERKNS_6EntityEjPKc($0, $1, $2, 10782);
 $9 = HEAP32[6067] | 0;
 if ((HEAP32[6068] | 0) - $9 >> 2 >>> 0 <= $2 >>> 0) {
  _snprintf(25060, 1024, 27124, sp + 16 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
 if ((HEAP32[(HEAP32[$9 + ($2 << 2) >> 2] | 0) + 16 >> 2] | 0) != ($4 | 0)) {
  _snprintf(25060, 1024, 27124, sp + 24 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8309, 6920, 530);
 }
 if ((HEAP32[$0 + 36 >> 2] | 0) <= 0) {
  $129 = HEAP32[$0 + 8 >> 2] | 0;
  $130 = $1;
  $135 = HEAP32[$130 + 4 >> 2] | 0;
  $136 = $7;
  HEAP32[$136 >> 2] = HEAP32[$130 >> 2];
  HEAP32[$136 + 4 >> 2] = $135;
  $140 = HEAP32[$5 >> 2] | 0;
  HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$7 >> 2];
  HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$7 + 4 >> 2];
  $141 = __ZN2ut4arch17EntityDataManager24getComponentDataWithTypeENS_6EntityEj($129, $tmpcast$byval_copy, $140) | 0;
  $142 = HEAP32[$5 >> 2] | 0;
  $144 = HEAP32[6067] | 0;
  if ((HEAP32[6068] | 0) - $144 >> 2 >>> 0 <= $142 >>> 0) {
   _snprintf(25060, 1024, 27124, $vararg_buffer3) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
  }
  $150 = HEAP32[$144 + ($142 << 2) >> 2] | 0;
  $151 = $150 + 36 | 0;
  $152 = HEAP32[$151 >> 2] | 0;
  if (!$152) {
   _memcpy($141 | 0, $3 | 0, $4 | 0) | 0;
   STACKTOP = sp;
   return;
  }
  $155 = HEAP32[$150 + 32 >> 2] | 0;
  if (!$155) $161 = $152; else {
   FUNCTION_TABLE_vii[$155 & 15]($141, HEAP32[$150 + 48 >> 2] | 0);
   $161 = HEAP32[$151 >> 2] | 0;
  }
  FUNCTION_TABLE_viii[$161 & 31]($3, $141, HEAP32[$150 + 44 >> 2] | 0);
  STACKTOP = sp;
  return;
 }
 $23 = $1;
 $28 = HEAP32[$23 + 4 >> 2] | 0;
 $29 = $6;
 HEAP32[$29 >> 2] = HEAP32[$23 >> 2];
 HEAP32[$29 + 4 >> 2] = $28;
 $33 = HEAP32[$5 >> 2] | 0;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 $34 = __ZN2ut4arch19EntityCommandBuffer19setComponentDataRawENS_6EntityEjPKvi($0 + 40 | 0, $tmpcast$byval_copy, $33, $3, $4) | 0;
 $37 = __ZNSt3__213unordered_mapIjN2ut4arch13EntityManager11FreshEntity13ComponentEditENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjS5_EEEEEixERSC_((__ZN2ut4arch13EntityManager23findOrCreateFreshEntityERKNS_6EntityE($0, $1) | 0) + 16 | 0, $5) | 0;
 HEAP32[$37 >> 2] = $34;
 HEAP32[$37 + 4 >> 2] = 2;
 $38 = $0 + 108 | 0;
 $39 = HEAP32[$5 >> 2] | 0;
 $40 = $0 + 112 | 0;
 $41 = HEAP32[$40 >> 2] | 0;
 $42 = ($41 | 0) == 0;
 L21 : do if ($42) $$0$i$i$i = 0; else {
  $43 = $41 + -1 | 0;
  $45 = ($43 & $41 | 0) == 0;
  if ($45) $51 = $43 & $39; else if ($39 >>> 0 < $41 >>> 0) $51 = $39; else $51 = ($39 >>> 0) % ($41 >>> 0) | 0;
  $52 = HEAP32[(HEAP32[$38 >> 2] | 0) + ($51 << 2) >> 2] | 0;
  if (!$52) $$0$i$i$i = $51; else {
   $$04575$i$i$i = HEAP32[$52 >> 2] | 0;
   if (!$$04575$i$i$i) $$0$i$i$i = $51; else {
    if ($45) {
     $$04576$us$i$i$i = $$04575$i$i$i;
     while (1) {
      $56 = HEAP32[$$04576$us$i$i$i + 4 >> 2] | 0;
      if (!(($56 | 0) == ($39 | 0) | ($56 & $43 | 0) == ($51 | 0))) {
       $$0$i$i$i = $51;
       break L21;
      }
      if ((HEAP32[$$04576$us$i$i$i + 8 >> 2] | 0) == ($39 | 0)) break;
      $$04576$us$i$i$i = HEAP32[$$04576$us$i$i$i >> 2] | 0;
      if (!$$04576$us$i$i$i) {
       $$0$i$i$i = $51;
       break L21;
      }
     }
     STACKTOP = sp;
     return;
    }
    $$04576$i$i$i = $$04575$i$i$i;
    while (1) {
     $66 = HEAP32[$$04576$i$i$i + 4 >> 2] | 0;
     if (($66 | 0) != ($39 | 0)) {
      if ($66 >>> 0 < $41 >>> 0) $71 = $66; else $71 = ($66 >>> 0) % ($41 >>> 0) | 0;
      if (($71 | 0) != ($51 | 0)) {
       $$0$i$i$i = $51;
       break L21;
      }
     }
     if ((HEAP32[$$04576$i$i$i + 8 >> 2] | 0) == ($39 | 0)) break;
     $$04576$i$i$i = HEAP32[$$04576$i$i$i >> 2] | 0;
     if (!$$04576$i$i$i) {
      $$0$i$i$i = $51;
      break L21;
     }
    }
    STACKTOP = sp;
    return;
   }
  }
 } while (0);
 $75 = __Znwj(12) | 0;
 HEAP32[$75 + 8 >> 2] = $39;
 HEAP32[$75 + 4 >> 2] = $39;
 HEAP32[$75 >> 2] = 0;
 $78 = $0 + 120 | 0;
 $81 = +(((HEAP32[$78 >> 2] | 0) + 1 | 0) >>> 0);
 $84 = +HEAPF32[$0 + 124 >> 2];
 do if ($42 | $84 * +($41 >>> 0) < $81) {
  $94 = $41 << 1 | ($41 >>> 0 < 3 | ($41 + -1 & $41 | 0) != 0) & 1;
  $97 = ~~+Math_ceil(+($81 / $84)) >>> 0;
  __ZNSt3__212__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE6rehashEj($38, $94 >>> 0 < $97 >>> 0 ? $97 : $94);
  $99 = HEAP32[$40 >> 2] | 0;
  $100 = $99 + -1 | 0;
  if (!($100 & $99)) {
   $$047$i$i$i = $99;
   $$1$i$i$i = $100 & $39;
   break;
  }
  if ($39 >>> 0 < $99 >>> 0) {
   $$047$i$i$i = $99;
   $$1$i$i$i = $39;
  } else {
   $$047$i$i$i = $99;
   $$1$i$i$i = ($39 >>> 0) % ($99 >>> 0) | 0;
  }
 } else {
  $$047$i$i$i = $41;
  $$1$i$i$i = $$0$i$i$i;
 } while (0);
 $107 = (HEAP32[$38 >> 2] | 0) + ($$1$i$i$i << 2) | 0;
 $108 = HEAP32[$107 >> 2] | 0;
 if (!$108) {
  $110 = $0 + 116 | 0;
  HEAP32[$75 >> 2] = HEAP32[$110 >> 2];
  HEAP32[$110 >> 2] = $75;
  HEAP32[$107 >> 2] = $110;
  $112 = HEAP32[$75 >> 2] | 0;
  if ($112 | 0) {
   $115 = HEAP32[$112 + 4 >> 2] | 0;
   $116 = $$047$i$i$i + -1 | 0;
   if (!($116 & $$047$i$i$i)) $124 = $115 & $116; else if ($115 >>> 0 < $$047$i$i$i >>> 0) $124 = $115; else $124 = ($115 >>> 0) % ($$047$i$i$i >>> 0) | 0;
   $$sink = (HEAP32[$38 >> 2] | 0) + ($124 << 2) | 0;
   label = 38;
  }
 } else {
  HEAP32[$75 >> 2] = HEAP32[$108 >> 2];
  $$sink = $108;
  label = 38;
 }
 if ((label | 0) == 38) HEAP32[$$sink >> 2] = $75;
 HEAP32[$78 >> 2] = (HEAP32[$78 >> 2] | 0) + 1;
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$072 = 0, $$1 = 0, $$174 = 0, $$sroa$0102$0 = 0, $$sroa$096$0 = 0, $100 = 0, $104 = 0, $105 = 0, $106 = 0, $109 = 0, $12 = 0, $13 = 0, $14 = 0, $21 = 0, $22 = 0, $29 = 0, $3 = 0, $30 = 0, $37 = 0, $38 = 0, $45 = 0, $46 = 0, $53 = 0, $54 = 0, $62 = 0, $68 = 0, $69 = 0, $70 = 0, $73 = 0, $84 = 0, $85 = 0, $92 = 0, $96 = 0, $isdigit = 0, $isdigit81 = 0, $isdigittmp = 0, $isdigittmp80 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $3 = sp;
 L1 : do if (($1 - $0 | 0) > 1) if ((HEAP8[$0 >> 0] | 0) == 83) {
  $12 = HEAP8[$0 + 1 >> 0] | 0;
  switch ($12 | 0) {
  case 97:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj15EEERAT__Kc($3, 23603);
    $13 = $2 + 4 | 0;
    $14 = HEAP32[$13 >> 2] | 0;
    if ($14 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($14, $3);
     HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    $$1 = $0 + 2 | 0;
    break L1;
    break;
   }
  case 98:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj18EEERAT__Kc($3, 23618);
    $21 = $2 + 4 | 0;
    $22 = HEAP32[$21 >> 2] | 0;
    if ($22 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($22, $3);
     HEAP32[$21 >> 2] = (HEAP32[$21 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    $$1 = $0 + 2 | 0;
    break L1;
    break;
   }
  case 115:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($3, 23097);
    $29 = $2 + 4 | 0;
    $30 = HEAP32[$29 >> 2] | 0;
    if ($30 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($30, $3);
     HEAP32[$29 >> 2] = (HEAP32[$29 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    $$1 = $0 + 2 | 0;
    break L1;
    break;
   }
  case 105:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj13EEERAT__Kc($3, 23193);
    $37 = $2 + 4 | 0;
    $38 = HEAP32[$37 >> 2] | 0;
    if ($38 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($38, $3);
     HEAP32[$37 >> 2] = (HEAP32[$37 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    $$1 = $0 + 2 | 0;
    break L1;
    break;
   }
  case 111:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj13EEERAT__Kc($3, 23270);
    $45 = $2 + 4 | 0;
    $46 = HEAP32[$45 >> 2] | 0;
    if ($46 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($46, $3);
     HEAP32[$45 >> 2] = (HEAP32[$45 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    $$1 = $0 + 2 | 0;
    break L1;
    break;
   }
  case 100:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj14EEERAT__Kc($3, 23347);
    $53 = $2 + 4 | 0;
    $54 = HEAP32[$53 >> 2] | 0;
    if ($54 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($54, $3);
     HEAP32[$53 >> 2] = (HEAP32[$53 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    $$1 = $0 + 2 | 0;
    break L1;
    break;
   }
  case 95:
   {
    $62 = HEAP32[$2 + 16 >> 2] | 0;
    if (($62 | 0) == (HEAP32[$2 + 20 >> 2] | 0)) {
     $$1 = $0;
     break L1;
    }
    $68 = HEAP32[$62 + 4 >> 2] | 0;
    $69 = $2 + 4 | 0;
    $70 = $2 + 8 | 0;
    $$sroa$0102$0 = HEAP32[$62 >> 2] | 0;
    while (1) {
     if (($$sroa$0102$0 | 0) == ($68 | 0)) break;
     $73 = HEAP32[$69 >> 2] | 0;
     if (($73 | 0) == (HEAP32[$70 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($2, $$sroa$0102$0); else {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($73, $$sroa$0102$0);
      HEAP32[$69 >> 2] = (HEAP32[$69 >> 2] | 0) + 24;
     }
     $$sroa$0102$0 = $$sroa$0102$0 + 24 | 0;
    }
    $$1 = $0 + 2 | 0;
    break L1;
    break;
   }
  default:
   {
    $isdigittmp = $12 + -48 | 0;
    $isdigit = $isdigittmp >>> 0 < 10;
    if (!$isdigit) if (!(_isupper($12) | 0)) {
     $$1 = $0;
     break L1;
    }
    $$072 = $0 + 2 | 0;
    $$174 = $isdigit ? $isdigittmp : $12 + -55 | 0;
    while (1) {
     if (($$072 | 0) == ($1 | 0)) {
      $$1 = $0;
      break L1;
     }
     $84 = HEAP8[$$072 >> 0] | 0;
     $85 = $84 << 24 >> 24;
     $isdigittmp80 = $85 + -48 | 0;
     $isdigit81 = $isdigittmp80 >>> 0 < 10;
     if (!$isdigit81) if (!(_isupper($85) | 0)) break;
     $$072 = $$072 + 1 | 0;
     $$174 = ($isdigit81 ? $isdigittmp80 : $85 + -55 | 0) + ($$174 * 36 | 0) | 0;
    }
    if ($84 << 24 >> 24 != 95) {
     $$1 = $0;
     break L1;
    }
    $92 = $$174 + 1 | 0;
    $96 = HEAP32[$2 + 16 >> 2] | 0;
    $100 = $96;
    if ($92 >>> 0 >= (HEAP32[$2 + 20 >> 2] | 0) - $96 >> 4 >>> 0) {
     $$1 = $0;
     break L1;
    }
    $104 = HEAP32[$100 + ($92 << 4) + 4 >> 2] | 0;
    $105 = $2 + 4 | 0;
    $106 = $2 + 8 | 0;
    $$sroa$096$0 = HEAP32[$100 + ($92 << 4) >> 2] | 0;
    while (1) {
     if (($$sroa$096$0 | 0) == ($104 | 0)) break;
     $109 = HEAP32[$105 >> 2] | 0;
     if (($109 | 0) == (HEAP32[$106 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($2, $$sroa$096$0); else {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($109, $$sroa$096$0);
      HEAP32[$105 >> 2] = (HEAP32[$105 >> 2] | 0) + 24;
     }
     $$sroa$096$0 = $$sroa$096$0 + 24 | 0;
    }
    $$1 = $$072 + 1 | 0;
    break L1;
   }
  }
 } else $$1 = $0; else $$1 = $0; while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZN9rapidjson13GenericReaderINS_4UTF8IcEES2_NS_12CrtAllocatorEE11ParseObjectILj1ENS_25GenericInsituStringStreamIS2_EENS_15GenericDocumentIS2_NS_19MemoryPoolAllocatorIS3_EES3_EEEEvRT0_RT1_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$053 = 0, $$in = 0, $$sroa$0$0$i$i31 = 0, $$sroa$0$0$i$i38 = 0, $$sroa$0$0$i$i43 = 0, $101 = 0, $12 = 0, $14 = 0, $19 = 0, $20 = 0, $22 = 0, $23 = 0, $3 = 0, $33 = 0, $34 = 0, $36 = 0, $4 = 0, $41 = 0, $43 = 0, $46 = 0, $50 = 0, $52 = 0, $53 = 0, $56 = 0, $68 = 0, $70 = 0, $8 = 0, $84 = 0, $9 = 0, $96 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 $4 = HEAP32[$1 >> 2] | 0;
 if ((HEAP8[$4 >> 0] | 0) != 123) ___assert_fail(17299, 16987, 590, 17316);
 HEAP32[$1 >> 2] = $4 + 1;
 $8 = $2 + 32 | 0;
 $9 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushINS_12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorIS2_EEEEEEPT_j($8, 1) | 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 HEAP32[$9 + 12 >> 2] = 0;
 HEAP32[$9 + 16 >> 2] = 0;
 HEAP32[$9 + 20 >> 2] = 0;
 HEAP16[$9 + 18 >> 1] = 3;
 $12 = HEAP32[$1 >> 2] | 0;
 L4 : while (1) {
  switch (HEAP8[$12 >> 0] | 0) {
  case 9:
  case 13:
  case 10:
  case 32:
   break;
  default:
   break L4;
  }
  $12 = $12 + 1 | 0;
 }
 HEAP32[$1 >> 2] = $12;
 $14 = $0 + 24 | 0;
 if (HEAP32[$14 >> 2] | 0) {
  STACKTOP = sp;
  return;
 }
 switch (HEAP8[$12 >> 0] | 0) {
 case 125:
  {
   HEAP32[$1 >> 2] = $12 + 1;
   $19 = $2 + 44 | 0;
   $20 = HEAP32[$19 >> 2] | 0;
   $22 = HEAP32[$2 + 40 >> 2] | 0;
   $23 = $20;
   HEAP32[$19 >> 2] = $23;
   if (($20 - $22 | 0) >>> 0 <= 23) ___assert_fail(15105, 5657, 144, 15128);
   if (!(HEAP32[$2 + 24 >> 2] | 0)) ___assert_fail(17275, 15939, 2309, 17286);
   HEAP16[$23 + -6 >> 1] = 3;
   HEAP32[$23 + -16 >> 2] = 0;
   HEAP32[$23 + -20 >> 2] = 0;
   HEAP32[$23 + -24 >> 2] = 0;
   STACKTOP = sp;
   return;
  }
 case 34:
  {
   label = 13;
   break;
  }
 default:
  $$in = $12;
 }
 L20 : do if ((label | 0) == 13) {
  $33 = $3 + 12 | 0;
  $34 = $3 + 4 | 0;
  $$053 = 0;
  L22 : while (1) {
   HEAP32[$3 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$3 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
   HEAP32[$3 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
   HEAP32[$33 >> 2] = $1;
   $43 = HEAP32[$3 >> 2] | 0;
   if ((HEAP8[$43 >> 0] | 0) != 34) {
    label = 17;
    break;
   }
   $46 = $43 + 1 | 0;
   HEAP32[$3 >> 2] = $46;
   HEAP32[$34 >> 2] = $46;
   __ZN9rapidjson13GenericReaderINS_4UTF8IcEES2_NS_12CrtAllocatorEE19ParseStringToStreamILj1ES2_S2_NS_25GenericInsituStringStreamIS2_EES7_EEvRT2_RT3_($0, $3, $3);
   if (!(HEAP32[$14 >> 2] | 0)) {
    $50 = $46;
    $52 = (HEAP32[$34 >> 2] | 0) + ~$50 | 0;
    $53 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushINS_12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorIS2_EEEEEEPT_j($8, 1) | 0;
    HEAP32[$53 >> 2] = 0;
    HEAP32[$53 + 4 >> 2] = 0;
    HEAP32[$53 + 8 >> 2] = 0;
    HEAP32[$53 + 12 >> 2] = 0;
    HEAP32[$53 + 16 >> 2] = 0;
    HEAP32[$53 + 20 >> 2] = 0;
    HEAP16[$53 + 18 >> 1] = 1029;
    HEAP32[$53 + 8 >> 2] = $50;
    HEAP32[$53 >> 2] = $52;
   }
   $56 = HEAP32[$33 >> 2] | 0;
   HEAP32[$56 >> 2] = HEAP32[$3 >> 2];
   HEAP32[$56 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
   HEAP32[$56 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
   if (HEAP32[$14 >> 2] | 0) {
    label = 46;
    break;
   }
   $$sroa$0$0$i$i31 = HEAP32[$1 >> 2] | 0;
   L29 : while (1) {
    switch (HEAP8[$$sroa$0$0$i$i31 >> 0] | 0) {
    case 9:
    case 13:
    case 10:
    case 32:
     break;
    default:
     break L29;
    }
    $$sroa$0$0$i$i31 = $$sroa$0$0$i$i31 + 1 | 0;
   }
   HEAP32[$1 >> 2] = $$sroa$0$0$i$i31;
   if (HEAP32[$14 >> 2] | 0) {
    label = 46;
    break;
   }
   if ((HEAP8[$$sroa$0$0$i$i31 >> 0] | 0) != 58) {
    label = 26;
    break;
   }
   $70 = $$sroa$0$0$i$i31 + 1 | 0;
   HEAP32[$1 >> 2] = $70;
   $$sroa$0$0$i$i38 = $70;
   L35 : while (1) {
    switch (HEAP8[$$sroa$0$0$i$i38 >> 0] | 0) {
    case 9:
    case 13:
    case 10:
    case 32:
     break;
    default:
     break L35;
    }
    $$sroa$0$0$i$i38 = $$sroa$0$0$i$i38 + 1 | 0;
   }
   HEAP32[$1 >> 2] = $$sroa$0$0$i$i38;
   if (HEAP32[$14 >> 2] | 0) {
    label = 46;
    break;
   }
   __ZN9rapidjson13GenericReaderINS_4UTF8IcEES2_NS_12CrtAllocatorEE10ParseValueILj1ENS_25GenericInsituStringStreamIS2_EENS_15GenericDocumentIS2_NS_19MemoryPoolAllocatorIS3_EES3_EEEEvRT0_RT1_($0, $1, $2);
   if (HEAP32[$14 >> 2] | 0) {
    label = 46;
    break;
   }
   $$sroa$0$0$i$i43 = HEAP32[$1 >> 2] | 0;
   L41 : while (1) {
    switch (HEAP8[$$sroa$0$0$i$i43 >> 0] | 0) {
    case 9:
    case 13:
    case 10:
    case 32:
     break;
    default:
     break L41;
    }
    $$sroa$0$0$i$i43 = $$sroa$0$0$i$i43 + 1 | 0;
   }
   HEAP32[$1 >> 2] = $$sroa$0$0$i$i43;
   if (HEAP32[$14 >> 2] | 0) {
    label = 46;
    break;
   }
   $$053 = $$053 + 1 | 0;
   switch (HEAP8[$$sroa$0$0$i$i43 >> 0] | 0) {
   case 125:
    {
     label = 41;
     break L22;
     break;
    }
   case 44:
    break;
   default:
    {
     label = 45;
     break L22;
    }
   }
   $84 = $$sroa$0$0$i$i43 + 1 | 0;
   HEAP32[$1 >> 2] = $84;
   $36 = $84;
   L47 : while (1) {
    switch (HEAP8[$36 >> 0] | 0) {
    case 9:
    case 13:
    case 10:
    case 32:
     break;
    default:
     break L47;
    }
    $36 = $36 + 1 | 0;
   }
   HEAP32[$1 >> 2] = $36;
   if (HEAP32[$14 >> 2] | 0) {
    label = 46;
    break;
   }
   if ((HEAP8[$36 >> 0] | 0) != 34) {
    $$in = $36;
    break L20;
   }
  }
  if ((label | 0) == 17) ___assert_fail(17121, 16987, 812, 17138); else if ((label | 0) == 26) {
   $68 = $$sroa$0$0$i$i31 - (HEAP32[$1 + 8 >> 2] | 0) | 0;
   HEAP32[$14 >> 2] = 5;
   HEAP32[$0 + 28 >> 2] = $68;
   STACKTOP = sp;
   return;
  } else if ((label | 0) == 41) {
   HEAP32[$1 >> 2] = $$sroa$0$0$i$i43 + 1;
   if (__ZN9rapidjson15GenericDocumentINS_4UTF8IcEENS_19MemoryPoolAllocatorINS_12CrtAllocatorEEES4_E9EndObjectEj($2, $$053) | 0) {
    STACKTOP = sp;
    return;
   }
   if (!(HEAP32[$14 >> 2] | 0)) {
    $96 = (HEAP32[$1 >> 2] | 0) - (HEAP32[$1 + 8 >> 2] | 0) | 0;
    HEAP32[$14 >> 2] = 16;
    HEAP32[$0 + 28 >> 2] = $96;
    STACKTOP = sp;
    return;
   } else ___assert_fail(17049, 16987, 638, 17316);
  } else if ((label | 0) == 45) {
   $101 = $$sroa$0$0$i$i43 - (HEAP32[$1 + 8 >> 2] | 0) | 0;
   HEAP32[$14 >> 2] = 6;
   HEAP32[$0 + 28 >> 2] = $101;
   STACKTOP = sp;
   return;
  } else if ((label | 0) == 46) {
   STACKTOP = sp;
   return;
  }
 } while (0);
 $41 = $$in - (HEAP32[$1 + 8 >> 2] | 0) | 0;
 HEAP32[$14 >> 2] = 4;
 HEAP32[$0 + 28 >> 2] = $41;
 STACKTOP = sp;
 return;
}

function __ZNSt3__26__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0154 = 0, $$0160 = 0, $$0167 = 0, $$0174 = 0, $$1 = 0, $$1$ph = 0, $$1$ph$be = 0, $$1155 = 0, $$1161 = 0, $$1181$ph = 0, $$1181$ph$be = 0, $$2156 = 0, $$2162 = 0, $$2176 = 0, $$2179 = 0, $$3157 = 0, $$3163 = 0, $$3170 = 0, $$4158 = 0, $$4164 = 0, $$4171 = 0, $$5159 = 0, $$5165 = 0, $$5172 = 0, $$6 = 0, $$6166 = 0, $$6173 = 0, $$6186 = 0, $10 = 0, $11 = 0, $25 = 0, $26 = 0, $3 = 0, $31 = 0, $32 = 0, $36 = 0, $37 = 0, $4 = 0, $40 = 0, $45 = 0, $46 = 0, $48 = 0, $5 = 0, $50 = 0, $53 = 0, $56 = 0, $58 = 0, $59 = 0, $61 = 0, $63 = 0, $69 = 0, $7 = 0, $70 = 0, $74 = 0, $75 = 0, $78 = 0, $8 = 0, $9 = 0, label = 0;
 $$1$ph = $0;
 $$1181$ph = $1;
 L1 : while (1) {
  $3 = $$1181$ph;
  $4 = $$1181$ph + -4 | 0;
  $5 = $$1181$ph;
  $$1 = $$1$ph;
  L3 : while (1) {
   $7 = $3 - $$1 | 0;
   $8 = $7 >> 2;
   switch ($8 | 0) {
   case 1:
   case 0:
    {
     break L1;
     break;
    }
   case 2:
    {
     label = 4;
     break L1;
     break;
    }
   case 3:
    {
     label = 6;
     break L1;
     break;
    }
   case 4:
    {
     label = 7;
     break L1;
     break;
    }
   case 5:
    {
     label = 8;
     break L1;
     break;
    }
   default:
    {}
   }
   if (($7 | 0) < 124) {
    label = 10;
    break L1;
   }
   $25 = $$1 + ((($8 | 0) / 2 | 0) << 2) | 0;
   if (($7 | 0) > 3996) {
    $26 = ($8 | 0) / 4 | 0;
    $$0167 = __ZNSt3__27__sort5IRNS_6__lessIjjEEPjEEjT0_S5_S5_S5_S5_T_($$1, $$1 + ($26 << 2) | 0, $25, $25 + ($26 << 2) | 0, $4, $2) | 0;
   } else $$0167 = __ZNSt3__27__sort3IRNS_6__lessIjjEEPjEEjT0_S5_S5_T_($$1, $25, $4, $2) | 0;
   $31 = HEAP32[$$1 >> 2] | 0;
   $32 = HEAP32[$25 >> 2] | 0;
   if ($31 >>> 0 < $32 >>> 0) {
    $$3157 = $4;
    $$3170 = $$0167;
   } else {
    $$0154 = $4;
    do {
     $$0154 = $$0154 + -4 | 0;
     if (($$1 | 0) == ($$0154 | 0)) {
      label = 17;
      break L3;
     }
     $53 = HEAP32[$$0154 >> 2] | 0;
    } while ($53 >>> 0 >= $32 >>> 0);
    HEAP32[$$1 >> 2] = $53;
    HEAP32[$$0154 >> 2] = $31;
    $$3157 = $$0154;
    $$3170 = $$0167 + 1 | 0;
   }
   $56 = $$1 + 4 | 0;
   L18 : do if ($56 >>> 0 < $$3157 >>> 0) {
    $$0174 = $25;
    $$4158 = $$3157;
    $$4164 = $56;
    $$4171 = $$3170;
    while (1) {
     $58 = HEAP32[$$0174 >> 2] | 0;
     $$5165 = $$4164;
     while (1) {
      $59 = HEAP32[$$5165 >> 2] | 0;
      $61 = $$5165 + 4 | 0;
      if ($59 >>> 0 < $58 >>> 0) $$5165 = $61; else break;
     }
     $$5159 = $$4158;
     do {
      $$5159 = $$5159 + -4 | 0;
      $63 = HEAP32[$$5159 >> 2] | 0;
     } while ($63 >>> 0 >= $58 >>> 0);
     if ($$5165 >>> 0 > $$5159 >>> 0) {
      $$2176 = $$0174;
      $$5172 = $$4171;
      $$6166 = $$5165;
      break L18;
     }
     HEAP32[$$5165 >> 2] = $63;
     HEAP32[$$5159 >> 2] = $59;
     $$0174 = ($$0174 | 0) == ($$5165 | 0) ? $$5159 : $$0174;
     $$4158 = $$5159;
     $$4164 = $61;
     $$4171 = $$4171 + 1 | 0;
    }
   } else {
    $$2176 = $25;
    $$5172 = $$3170;
    $$6166 = $56;
   } while (0);
   if (($$6166 | 0) == ($$2176 | 0)) $$6173 = $$5172; else {
    $69 = HEAP32[$$2176 >> 2] | 0;
    $70 = HEAP32[$$6166 >> 2] | 0;
    if ($69 >>> 0 < $70 >>> 0) {
     HEAP32[$$6166 >> 2] = $69;
     HEAP32[$$2176 >> 2] = $70;
     $$6173 = $$5172 + 1 | 0;
    } else $$6173 = $$5172;
   }
   if (!$$6173) {
    $74 = __ZNSt3__227__insertion_sort_incompleteIRNS_6__lessIjjEEPjEEbT0_S5_T_($$1, $$6166, $2) | 0;
    $75 = $$6166 + 4 | 0;
    if (__ZNSt3__227__insertion_sort_incompleteIRNS_6__lessIjjEEPjEEbT0_S5_T_($75, $$1181$ph, $2) | 0) {
     label = 46;
     break;
    }
    if ($74) {
     $$2179 = 2;
     $$6 = $75;
     $$6186 = $$1181$ph;
     label = 51;
     break;
    }
   }
   $78 = $$6166;
   if (($78 - $$1 | 0) >= ($5 - $78 | 0)) {
    label = 50;
    break;
   }
   __ZNSt3__26__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_($$1, $$6166, $2);
   $$1 = $$6166 + 4 | 0;
  }
  L39 : do if ((label | 0) == 17) {
   label = 0;
   $36 = $$1 + 4 | 0;
   $37 = HEAP32[$4 >> 2] | 0;
   if ($31 >>> 0 < $37 >>> 0) $$1161 = $36; else {
    $$0160 = $36;
    while (1) {
     if (($$0160 | 0) == ($4 | 0)) break L1;
     $40 = HEAP32[$$0160 >> 2] | 0;
     if ($31 >>> 0 < $40 >>> 0) break;
     $$0160 = $$0160 + 4 | 0;
    }
    HEAP32[$$0160 >> 2] = $37;
    HEAP32[$4 >> 2] = $40;
    $$1161 = $$0160 + 4 | 0;
   }
   if (($$1161 | 0) == ($4 | 0)) break L1;
   $$1155 = $4;
   $$2162 = $$1161;
   while (1) {
    $45 = HEAP32[$$1 >> 2] | 0;
    $$3163 = $$2162;
    while (1) {
     $46 = HEAP32[$$3163 >> 2] | 0;
     $48 = $$3163 + 4 | 0;
     if ($45 >>> 0 < $46 >>> 0) break; else $$3163 = $48;
    }
    $$2156 = $$1155;
    do {
     $$2156 = $$2156 + -4 | 0;
     $50 = HEAP32[$$2156 >> 2] | 0;
    } while ($45 >>> 0 < $50 >>> 0);
    if ($$3163 >>> 0 >= $$2156 >>> 0) {
     $$2179 = 4;
     $$6 = $$3163;
     $$6186 = $$1181$ph;
     label = 51;
     break L39;
    }
    HEAP32[$$3163 >> 2] = $50;
    HEAP32[$$2156 >> 2] = $46;
    $$1155 = $$2156;
    $$2162 = $48;
   }
  } else if ((label | 0) == 46) {
   label = 0;
   $$2179 = $74 ? 1 : 2;
   $$6 = $$1;
   $$6186 = $74 ? $$1181$ph : $$6166;
   label = 51;
  } else if ((label | 0) == 50) {
   label = 0;
   __ZNSt3__26__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_($$6166 + 4 | 0, $$1181$ph, $2);
   $$1$ph$be = $$1;
   $$1181$ph$be = $$6166;
  } while (0);
  if ((label | 0) == 51) {
   label = 0;
   switch ($$2179 & 7) {
   case 2:
   case 4:
   case 0:
    {
     $$1$ph$be = $$6;
     $$1181$ph$be = $$6186;
     break;
    }
   default:
    break L1;
   }
  }
  $$1$ph = $$1$ph$be;
  $$1181$ph = $$1181$ph$be;
 }
 if ((label | 0) == 4) {
  $9 = $$1181$ph + -4 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  $11 = HEAP32[$$1 >> 2] | 0;
  if ($10 >>> 0 < $11 >>> 0) {
   HEAP32[$$1 >> 2] = $10;
   HEAP32[$9 >> 2] = $11;
  }
 } else if ((label | 0) == 6) __ZNSt3__27__sort3IRNS_6__lessIjjEEPjEEjT0_S5_S5_T_($$1, $$1 + 4 | 0, $$1181$ph + -4 | 0, $2) | 0; else if ((label | 0) == 7) __ZNSt3__27__sort4IRNS_6__lessIjjEEPjEEjT0_S5_S5_S5_T_($$1, $$1 + 4 | 0, $$1 + 8 | 0, $$1181$ph + -4 | 0, $2) | 0; else if ((label | 0) == 8) __ZNSt3__27__sort5IRNS_6__lessIjjEEPjEEjT0_S5_S5_S5_S5_T_($$1, $$1 + 4 | 0, $$1 + 8 | 0, $$1 + 12 | 0, $$1181$ph + -4 | 0, $2) | 0; else if ((label | 0) == 10) __ZNSt3__218__insertion_sort_3IRNS_6__lessIjjEEPjEEvT0_S5_T_($$1, $$1181$ph, $2);
 return;
}

function __ZN2ut4arch22ArchetypeChunkIterator4nextEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$011$i = 0, $$011$i5 = 0, $$pre$phi30Z2D = 0, $100 = 0, $103 = 0, $105 = 0, $111 = 0, $113 = 0, $116 = 0, $118 = 0, $121 = 0, $127 = 0, $128 = 0, $17 = 0, $20 = 0, $26 = 0, $27 = 0, $39 = 0, $45 = 0, $50 = 0, $52 = 0, $58 = 0, $62 = 0, $66 = 0, $71 = 0, $77 = 0, $78 = 0, $81 = 0, $82 = 0, $84 = 0, $90 = 0, $91 = 0, $95 = 0, $spec$select$i = 0, $spec$select$i$i = 0, $spec$select$i$i7 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $vararg_buffer11 = sp + 48 | 0;
 $vararg_buffer9 = sp + 40 | 0;
 $vararg_buffer7 = sp + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 if (!(HEAP8[$0 + 28 >> 0] | 0)) {
  HEAP32[$0 + 32 >> 2] = HEAP32[HEAP32[(HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + 32 >> 2] >> 2];
  __ZN2ut4arch22ArchetypeChunkIterator14finalizeFilterEv($0);
  if (HEAP8[$0 + 30 >> 0] | 0) {
   $17 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + 44 | 0;
   HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + 1;
   $20 = $0 + 29 | 0;
   if (HEAP8[$20 >> 0] | 0) {
    $$0 = 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $26 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + 44 | 0;
   $27 = HEAP32[$26 >> 2] | 0;
   HEAP32[$26 >> 2] = $27 - 1;
   if (($27 | 0) <= 0) {
    _snprintf(25060, 1024, 6041, $vararg_buffer) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 6096, 6111, 110);
   }
   HEAP8[$20 >> 0] = 1;
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else if ((HEAP32[$0 + 32 >> 2] | 0) != (HEAP32[HEAP32[(HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + 32 >> 2] >> 2] | 0)) {
  _snprintf(25060, 1024, 13906, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13942, 13749, 66);
 }
 $39 = $0 + 24 | 0;
 if ((HEAP32[$39 >> 2] | 0) == -1) {
  $45 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + 44 | 0;
  HEAP32[$45 >> 2] = (HEAP32[$45 >> 2] | 0) + 1;
  $50 = HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0;
  L16 : do if (!$50) label = 15; else {
   $52 = $0 + 4 | 0;
   $$011$i5 = $50;
   while (1) {
    if ((HEAP32[$$011$i5 + 4 >> 2] | 0) != ($$011$i5 | 0)) if (__ZN2ut4arch9Archetype18containsComponentsERKNSt3__26vectorINS0_13ComponentSpecENS2_9allocatorIS4_EEEE($$011$i5, $52) | 0) break;
    $58 = HEAP32[$$011$i5 + 108 >> 2] | 0;
    if (!$58) {
     label = 15;
     break L16;
    } else $$011$i5 = $58;
   }
   $62 = $$011$i5 + 4 | 0;
   if ((HEAP32[$62 >> 2] | 0) == ($$011$i5 | 0)) {
    _snprintf(25060, 1024, 27124, $vararg_buffer3) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14149, 13749, 126);
   }
   HEAP32[$0 + 16 >> 2] = $$011$i5;
   $66 = HEAP32[$62 >> 2] | 0;
   $spec$select$i$i7 = ($66 | 0) == ($$011$i5 | 0) ? 0 : $66;
   HEAP32[$0 + 20 >> 2] = $spec$select$i$i7;
   HEAP32[$39 >> 2] = HEAP32[$spec$select$i$i7 + 24 >> 2];
   if ($spec$select$i$i7 | 0) {
    $$0 = 1;
    STACKTOP = sp;
    return $$0 | 0;
   }
  } while (0);
  if ((label | 0) == 15) {
   HEAP32[$0 + 16 >> 2] = 0;
   HEAP32[$0 + 20 >> 2] = 0;
   HEAP32[$39 >> 2] = 0;
  }
  $71 = $0 + 29 | 0;
  if (HEAP8[$71 >> 0] | 0) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $77 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + 44 | 0;
  $78 = HEAP32[$77 >> 2] | 0;
  HEAP32[$77 >> 2] = $78 - 1;
  if (($78 | 0) <= 0) {
   _snprintf(25060, 1024, 6041, $vararg_buffer5) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 6096, 6111, 110);
  }
  HEAP8[$71 >> 0] = 1;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $81 = $0 + 20 | 0;
 $82 = HEAP32[$81 >> 2] | 0;
 if (!$82) {
  $84 = $0 + 29 | 0;
  if (HEAP8[$84 >> 0] | 0) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $90 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + 44 | 0;
  $91 = HEAP32[$90 >> 2] | 0;
  HEAP32[$90 >> 2] = $91 - 1;
  if (($91 | 0) <= 0) {
   _snprintf(25060, 1024, 6041, $vararg_buffer7) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 6096, 6111, 110);
  }
  HEAP8[$84 >> 0] = 1;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $95 = HEAP32[$82 + 4 >> 2] | 0;
 $spec$select$i = ($95 | 0) == (HEAP32[$82 + 16 >> 2] | 0) ? 0 : $95;
 HEAP32[$81 >> 2] = $spec$select$i;
 L49 : do if (!$spec$select$i) {
  $100 = $0 + 16 | 0;
  $103 = HEAP32[(HEAP32[$100 >> 2] | 0) + 108 >> 2] | 0;
  L51 : do if (!$103) label = 35; else {
   $105 = $0 + 4 | 0;
   $$011$i = $103;
   while (1) {
    if ((HEAP32[$$011$i + 4 >> 2] | 0) != ($$011$i | 0)) if (__ZN2ut4arch9Archetype18containsComponentsERKNSt3__26vectorINS0_13ComponentSpecENS2_9allocatorIS4_EEEE($$011$i, $105) | 0) break;
    $111 = HEAP32[$$011$i + 108 >> 2] | 0;
    if (!$111) {
     label = 35;
     break L51;
    } else $$011$i = $111;
   }
   $113 = $$011$i + 4 | 0;
   if ((HEAP32[$113 >> 2] | 0) == ($$011$i | 0)) {
    _snprintf(25060, 1024, 27124, $vararg_buffer9) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14149, 13749, 126);
   } else {
    HEAP32[$100 >> 2] = $$011$i;
    $116 = HEAP32[$113 >> 2] | 0;
    $spec$select$i$i = ($116 | 0) == ($$011$i | 0) ? 0 : $116;
    HEAP32[$81 >> 2] = $spec$select$i$i;
    $118 = $spec$select$i$i + 24 | 0;
    HEAP32[$39 >> 2] = HEAP32[$118 >> 2];
    if (!$spec$select$i$i) break; else {
     $$pre$phi30Z2D = $118;
     break L49;
    }
   }
  } while (0);
  if ((label | 0) == 35) {
   HEAP32[$100 >> 2] = 0;
   HEAP32[$81 >> 2] = 0;
   HEAP32[$39 >> 2] = 0;
  }
  $121 = $0 + 29 | 0;
  if (HEAP8[$121 >> 0] | 0) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $127 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + 44 | 0;
  $128 = HEAP32[$127 >> 2] | 0;
  HEAP32[$127 >> 2] = $128 - 1;
  if (($128 | 0) <= 0) {
   _snprintf(25060, 1024, 6041, $vararg_buffer11) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 6096, 6111, 110);
  }
  HEAP8[$121 >> 0] = 1;
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else $$pre$phi30Z2D = $spec$select$i + 24 | 0; while (0);
 HEAP32[$39 >> 2] = HEAP32[$$pre$phi30Z2D >> 2];
 $$0 = 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN2ut4arch17EntityDataManager15removeComponentENS_6EntityEj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$03562 = 0, $$03661 = 0, $$06$i = 0, $$063 = 0, $$1 = 0, $$137 = 0, $$139 = 0, $$2 = 0, $$pre67 = 0, $$pre68 = 0, $$pre71 = 0, $10 = 0, $11 = 0, $114 = 0, $118 = 0, $123 = 0, $124 = 0, $128 = 0, $131 = 0, $15 = 0, $16 = 0, $21 = 0, $22 = 0, $24 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $34 = 0, $36 = 0, $4 = 0, $40 = 0, $42 = 0, $44 = 0, $45 = 0, $49 = 0, $52 = 0, $55 = 0, $57 = 0, $60 = 0, $62 = 0, $67 = 0, $68 = 0, $75 = 0, $77 = 0, $88 = 0, $94 = 0, $95 = 0, $97 = 0, $98 = 0, $tmpcast$byval_copy = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $tmpcast$byval_copy = sp + 48 | 0;
 $vararg_buffer5 = sp + 32 | 0;
 $vararg_buffer3 = sp + 24 | 0;
 $vararg_buffer1 = sp + 16 | 0;
 $vararg_buffer = sp + 8 | 0;
 $3 = sp + 36 | 0;
 $4 = sp;
 if (!(HEAP8[24208] | 0)) {
  if (!(HEAP8[24216] | 0)) {
   $10 = HEAP32[(__ZN2ut20InitComponentInfoForINS_6EntityEEERNS_13ComponentInfoEv() | 0) >> 2] | 0;
   HEAP32[6115] = $10;
   $11 = 24216;
   HEAP32[$11 >> 2] = 1;
   HEAP32[$11 + 4 >> 2] = 0;
   $15 = $10;
  } else $15 = HEAP32[6115] | 0;
  HEAP32[6114] = $15;
  $16 = 24208;
  HEAP32[$16 >> 2] = 1;
  HEAP32[$16 + 4 >> 2] = 0;
  $21 = $15;
 } else $21 = HEAP32[6114] | 0;
 if (($21 | 0) == ($2 | 0)) {
  _snprintf(25060, 1024, 12243, $vararg_buffer) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 12277, 9049, 226);
 }
 $22 = $0 + 20 | 0;
 $24 = HEAP32[$1 >> 2] | 0;
 $26 = HEAP32[(HEAP32[$22 >> 2] | 0) + ($24 << 4) + 8 >> 2] | 0;
 HEAP32[$3 >> 2] = 0;
 $27 = $3 + 4 | 0;
 HEAP32[$27 >> 2] = 0;
 $28 = $3 + 8 | 0;
 HEAP32[$28 >> 2] = 0;
 $29 = $26 + 28 | 0;
 $30 = HEAP32[$29 >> 2] | 0;
 if (!$30) {
  _snprintf(25060, 1024, 12306, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 12350, 9049, 234);
 }
 if ($30 >>> 0 > 1073741823) _abort();
 $34 = __Znwj($30 << 2) | 0;
 $36 = $34 + ($30 << 2) | 0;
 HEAP32[$3 >> 2] = $34;
 HEAP32[$27 >> 2] = $34;
 HEAP32[$28 >> 2] = $36;
 if ((HEAP32[$29 >> 2] | 0) <= 0) {
  _snprintf(25060, 1024, 12306, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 12350, 9049, 234);
 }
 $40 = $26 + 32 | 0;
 $$06$i = 0;
 $44 = $34;
 $45 = $36;
 while (1) {
  $42 = (HEAP32[$40 >> 2] | 0) + ($$06$i << 4) | 0;
  if (($44 | 0) == ($45 | 0)) __ZNSt3__26vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIRKjEEvOT_($3, $42); else {
   HEAP32[$44 >> 2] = HEAP32[$42 >> 2];
   HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) + 4;
  }
  $49 = $$06$i + 1 | 0;
  if (($49 | 0) >= (HEAP32[$29 >> 2] | 0)) break;
  $$06$i = $49;
  $44 = HEAP32[$27 >> 2] | 0;
  $45 = HEAP32[$28 >> 2] | 0;
 }
 $$pre67 = HEAP32[$3 >> 2] | 0;
 $$pre68 = HEAP32[$27 >> 2] | 0;
 $52 = $$pre68;
 if (($$pre67 | 0) == ($$pre68 | 0)) {
  _snprintf(25060, 1024, 12306, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 12350, 9049, 234);
 }
 $55 = $$pre67;
 while (1) {
  if ((HEAP32[$55 >> 2] | 0) == ($2 | 0)) break;
  $57 = $55 + 4 | 0;
  if (($57 | 0) == ($$pre68 | 0)) {
   label = 25;
   break;
  } else $55 = $57;
 }
 if ((label | 0) == 25) {
  _snprintf(25060, 1024, 12306, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 12350, 9049, 234);
 }
 if (($55 | 0) == ($$pre68 | 0)) {
  _snprintf(25060, 1024, 12306, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 12350, 9049, 234);
 }
 $60 = $55 + 4 | 0;
 $62 = $52 - $60 | 0;
 if ($62 | 0) _memmove($55 | 0, $60 | 0, $62 | 0) | 0;
 HEAP32[$27 >> 2] = $55 + ($62 >> 2 << 2);
 $67 = __ZN2ut4arch16ArchetypeManager20getOrCreateArchetypeERKNSt3__26vectorIjNS2_9allocatorIjEEEE(HEAP32[$0 >> 2] | 0, $3) | 0;
 $68 = $67 + 104 | 0;
 if ((HEAP32[$68 >> 2] | 0) > 0) {
  $75 = HEAP32[(HEAP32[(HEAP32[$22 >> 2] | 0) + ($24 << 4) + 12 >> 2] | 0) + 20 >> 2] | 0;
  $77 = HEAP32[6067] | 0;
  if ((HEAP32[6068] | 0) - $77 >> 2 >>> 0 <= $2 >>> 0) {
   _snprintf(25060, 1024, 27124, $vararg_buffer3) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
  }
  if (!(HEAP32[(HEAP32[$77 + ($2 << 2) >> 2] | 0) + 4 >> 2] & 2)) $$139 = $75; else {
   $88 = HEAP32[$68 >> 2] | 0;
   if (($88 | 0) != ((HEAP32[$26 + 104 >> 2] | 0) + -1 | 0)) {
    _snprintf(25060, 1024, 12377, $vararg_buffer5) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 12415, 9049, 245);
   }
   $94 = STACKTOP;
   STACKTOP = STACKTOP + ((1 * ($88 << 2) | 0) + 15 & -16) | 0;
   $95 = HEAP32[$29 >> 2] | 0;
   if (($95 | 0) > 0) {
    $97 = $26 + 100 | 0;
    $98 = $26 + 32 | 0;
    $$03562 = 0;
    $$03661 = 0;
    $$063 = 0;
    $131 = $95;
    while (1) {
     if ((HEAP32[(HEAP32[$97 >> 2] | 0) + ($$063 << 2) >> 2] | 0) == -1) {
      $$137 = $$03661;
      $$2 = $$03562;
      $114 = $131;
     } else {
      if ((HEAP32[(HEAP32[$98 >> 2] | 0) + ($$063 << 4) >> 2] | 0) == ($2 | 0)) {
       $$1 = $$03562;
       $$pre71 = $131;
      } else {
       HEAP32[$94 + ($$03562 << 2) >> 2] = HEAP32[$75 + ($$03661 << 2) >> 2];
       $$1 = $$03562 + 1 | 0;
       $$pre71 = HEAP32[$29 >> 2] | 0;
      }
      $$137 = $$03661 + 1 | 0;
      $$2 = $$1;
      $114 = $$pre71;
     }
     $$063 = $$063 + 1 | 0;
     if (($$063 | 0) >= ($114 | 0)) {
      $$139 = $94;
      break;
     } else {
      $$03562 = $$2;
      $$03661 = $$137;
      $131 = $114;
     }
    }
   } else $$139 = $94;
  }
 } else $$139 = 0;
 __ZN2ut4arch17EntityDataManager30incrementComponentOrderVersionEPNS0_9ArchetypeEPNS0_5ChunkE($0, $26, HEAP32[(HEAP32[$22 >> 2] | 0) + ($24 << 4) + 12 >> 2] | 0);
 $118 = $1;
 $123 = HEAP32[$118 + 4 >> 2] | 0;
 $124 = $4;
 HEAP32[$124 >> 2] = HEAP32[$118 >> 2];
 HEAP32[$124 + 4 >> 2] = $123;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$4 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 __ZN2ut4arch17EntityDataManager12setArchetypeENS_6EntityEPNS0_9ArchetypeEPi($0, $tmpcast$byval_copy, $67, $$139);
 $128 = HEAP32[$3 >> 2] | 0;
 if (!$128) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$27 >> 2] = $128;
 __ZdlPv($128);
 STACKTOP = sp;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeINS_6vectorIjNS_9allocatorIjEEEEPN2ut4arch9ArchetypeEEENS_22__unordered_map_hasherIS5_SA_NS_4hashIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_NS_8equal_toIS5_EELb1EEENS3_ISA_EEE8__rehashEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$05472 = 0, $$05472$us = 0, $$05570 = 0, $$05573 = 0, $$05573$us = 0, $$05671 = 0, $$05671$us = 0, $$05885 = 0, $$065 = 0, $$065$us = 0, $$066 = 0, $$066$phi = 0, $$066$us = 0, $$066$us$phi = 0, $$066$us$us = 0, $$066$us$us$phi = 0, $$066$us75 = 0, $$066$us75$phi = 0, $$1 = 0, $$1$us = 0, $$157 = 0, $$157$us = 0, $10 = 0, $102 = 0, $108 = 0, $111 = 0, $114 = 0, $119 = 0, $121 = 0, $126 = 0, $137 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $25 = 0, $29 = 0, $32 = 0, $35 = 0, $38 = 0, $41 = 0, $44 = 0, $47 = 0, $49 = 0, $54 = 0, $6 = 0, $64 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $73 = 0, $79 = 0, $82 = 0, $86 = 0, $88 = 0, $9 = 0, $91 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 $2 = $0 + 4 | 0;
 if (!$1) {
  $137 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = 0;
  if ($137 | 0) __ZdlPv($137);
  HEAP32[$2 >> 2] = 0;
  return;
 }
 if ($1 >>> 0 > 1073741823) _abort();
 $6 = __Znwj($1 << 2) | 0;
 $7 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $6;
 if ($7 | 0) __ZdlPv($7);
 HEAP32[$2 >> 2] = $1;
 $$05885 = 0;
 do {
  HEAP32[(HEAP32[$0 >> 2] | 0) + ($$05885 << 2) >> 2] = 0;
  $$05885 = $$05885 + 1 | 0;
 } while (($$05885 | 0) != ($1 | 0));
 $9 = $0 + 8 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if (!$10) return;
 $16 = HEAP32[$10 + 4 >> 2] | 0;
 $17 = $1 + -1 | 0;
 $19 = ($17 & $1 | 0) == 0;
 if ($19) $25 = $16 & $17; else if ($16 >>> 0 < $1 >>> 0) $25 = $16; else $25 = ($16 >>> 0) % ($1 >>> 0) | 0;
 HEAP32[(HEAP32[$0 >> 2] | 0) + ($25 << 2) >> 2] = $9;
 $$05570 = HEAP32[$10 >> 2] | 0;
 if (!$$05570) return;
 if ($19) {
  $$05472$us = $25;
  $$05573$us = $$05570;
  $$05671$us = $10;
  while (1) {
   $29 = HEAP32[$$05573$us + 4 >> 2] & $17;
   do if (($29 | 0) == ($$05472$us | 0)) {
    $$1$us = $$05472$us;
    $$157$us = $$05573$us;
   } else {
    $32 = (HEAP32[$0 >> 2] | 0) + ($29 << 2) | 0;
    if (!(HEAP32[$32 >> 2] | 0)) {
     HEAP32[$32 >> 2] = $$05671$us;
     $$1$us = $29;
     $$157$us = $$05573$us;
     break;
    }
    $35 = HEAP32[$$05573$us >> 2] | 0;
    L37 : do if (!$35) $$065$us = $$05573$us; else {
     $68 = HEAP32[$$05573$us + 12 >> 2] | 0;
     $69 = HEAP32[$$05573$us + 8 >> 2] | 0;
     $44 = $68 - $69 | 0;
     $70 = $69;
     $54 = $68;
     if (($70 | 0) == ($54 | 0)) {
      $$066$us$us = $$05573$us;
      $73 = $35;
      while (1) {
       if (($44 | 0) != ((HEAP32[$73 + 12 >> 2] | 0) - (HEAP32[$73 + 8 >> 2] | 0) | 0)) {
        $$065$us = $$066$us$us;
        break L37;
       }
       $79 = HEAP32[$73 >> 2] | 0;
       if (!$79) {
        $$065$us = $73;
        break L37;
       } else {
        $$066$us$us$phi = $73;
        $73 = $79;
        $$066$us$us = $$066$us$us$phi;
       }
      }
     }
     $$066$us75 = $$05573$us;
     $38 = $35;
     while (1) {
      $41 = HEAP32[$38 + 8 >> 2] | 0;
      if (($44 | 0) != ((HEAP32[$38 + 12 >> 2] | 0) - $41 | 0)) {
       $$065$us = $$066$us75;
       break L37;
      }
      $47 = $70;
      $49 = $41;
      while (1) {
       if ((HEAP32[$47 >> 2] | 0) != (HEAP32[$49 >> 2] | 0)) {
        $$065$us = $$066$us75;
        break L37;
       }
       $47 = $47 + 4 | 0;
       if (($47 | 0) == ($54 | 0)) break; else $49 = $49 + 4 | 0;
      }
      $64 = HEAP32[$38 >> 2] | 0;
      if (!$64) {
       $$065$us = $38;
       break;
      } else {
       $$066$us75$phi = $38;
       $38 = $64;
       $$066$us75 = $$066$us75$phi;
      }
     }
    } while (0);
    HEAP32[$$05671$us >> 2] = HEAP32[$$065$us >> 2];
    HEAP32[$$065$us >> 2] = HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($29 << 2) >> 2] >> 2];
    HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($29 << 2) >> 2] >> 2] = $$05573$us;
    $$1$us = $$05472$us;
    $$157$us = $$05671$us;
   } while (0);
   $$05573$us = HEAP32[$$157$us >> 2] | 0;
   if (!$$05573$us) break; else {
    $$05472$us = $$1$us;
    $$05671$us = $$157$us;
   }
  }
  return;
 }
 $$05472 = $25;
 $$05573 = $$05570;
 $$05671 = $10;
 while (1) {
  $82 = HEAP32[$$05573 + 4 >> 2] | 0;
  if ($82 >>> 0 < $1 >>> 0) $86 = $82; else $86 = ($82 >>> 0) % ($1 >>> 0) | 0;
  do if (($86 | 0) == ($$05472 | 0)) {
   $$1 = $$05472;
   $$157 = $$05573;
  } else {
   $88 = (HEAP32[$0 >> 2] | 0) + ($86 << 2) | 0;
   if (!(HEAP32[$88 >> 2] | 0)) {
    HEAP32[$88 >> 2] = $$05671;
    $$1 = $86;
    $$157 = $$05573;
    break;
   }
   $91 = HEAP32[$$05573 >> 2] | 0;
   L66 : do if (!$91) $$065 = $$05573; else {
    $95 = HEAP32[$$05573 + 12 >> 2] | 0;
    $96 = HEAP32[$$05573 + 8 >> 2] | 0;
    $97 = $95 - $96 | 0;
    $98 = $96;
    $99 = $95;
    if (($98 | 0) == ($99 | 0)) {
     $$066$us = $$05573;
     $102 = $91;
     while (1) {
      if (($97 | 0) != ((HEAP32[$102 + 12 >> 2] | 0) - (HEAP32[$102 + 8 >> 2] | 0) | 0)) {
       $$065 = $$066$us;
       break L66;
      }
      $108 = HEAP32[$102 >> 2] | 0;
      if (!$108) {
       $$065 = $102;
       break L66;
      } else {
       $$066$us$phi = $102;
       $102 = $108;
       $$066$us = $$066$us$phi;
      }
     }
    }
    $$066 = $$05573;
    $111 = $91;
    while (1) {
     $114 = HEAP32[$111 + 8 >> 2] | 0;
     if (($97 | 0) != ((HEAP32[$111 + 12 >> 2] | 0) - $114 | 0)) {
      $$065 = $$066;
      break L66;
     }
     $119 = $98;
     $121 = $114;
     while (1) {
      if ((HEAP32[$119 >> 2] | 0) != (HEAP32[$121 >> 2] | 0)) {
       $$065 = $$066;
       break L66;
      }
      $119 = $119 + 4 | 0;
      if (($119 | 0) == ($99 | 0)) break; else $121 = $121 + 4 | 0;
     }
     $126 = HEAP32[$111 >> 2] | 0;
     if (!$126) {
      $$065 = $111;
      break;
     } else {
      $$066$phi = $111;
      $111 = $126;
      $$066 = $$066$phi;
     }
    }
   } while (0);
   HEAP32[$$05671 >> 2] = HEAP32[$$065 >> 2];
   HEAP32[$$065 >> 2] = HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($86 << 2) >> 2] >> 2];
   HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($86 << 2) >> 2] >> 2] = $$05573;
   $$1 = $$05472;
   $$157 = $$05671;
  } while (0);
  $$05573 = HEAP32[$$157 >> 2] | 0;
  if (!$$05573) break; else {
   $$05472 = $$1;
   $$05671 = $$157;
  }
 }
 return;
}

function __ZN2ut4arch13EntityManager14createEntitiesEPNS0_9ArchetypeEPNS_6EntityEj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i$i$i = 0, $$03444 = 0, $$03542 = 0, $$041 = 0, $$04575$i$i$i = 0, $$04576$i$i$i = 0, $$04576$us$i$i$i = 0, $$047$i$i$i = 0, $$1$i$i$i = 0, $$phi$trans$insert = 0, $$sink = 0, $103 = 0, $104 = 0, $107 = 0, $110 = 0, $111 = 0, $119 = 0, $12 = 0, $125 = 0, $126 = 0, $132 = 0, $133 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $24 = 0, $25 = 0, $27 = 0, $32 = 0, $34 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $43 = 0, $49 = 0, $50 = 0, $54 = 0, $64 = 0, $69 = 0, $73 = 0, $78 = 0.0, $80 = 0.0, $90 = 0, $93 = 0, $95 = 0, $96 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $4 = sp + 4 | 0;
 if (!$1) $12 = HEAP32[$0 + 16 >> 2] | 0; else $12 = $1;
 if ((HEAP32[$0 + 36 >> 2] | 0) <= 0) {
  $126 = $0 + 8 | 0;
  if ((HEAP32[(HEAP32[$126 >> 2] | 0) + 44 >> 2] | 0) > 0) {
   _snprintf(25060, 1024, 8878, $vararg_buffer) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8949, 6920, 35);
  }
  __ZN2ut4arch17EntityDataManager14createEntitiesEPNS0_9ArchetypeEPNS_6EntityEj(HEAP32[$126 >> 2] | 0, $12, $2, $3);
  STACKTOP = sp;
  return;
 }
 __ZN2ut4arch19EntityCommandBuffer22createDeferredEntitiesEPNS0_9ArchetypeEPNS_6EntityEj($0 + 40 | 0, $12, $2, $3);
 $$phi$trans$insert = $12 + 28 | 0;
 if (!$3) $16 = HEAP32[$$phi$trans$insert >> 2] | 0; else {
  $14 = $12 + 32 | 0;
  $$03444 = 0;
  do {
   $24 = __ZN2ut4arch13EntityManager17createFreshEntityERKNS_6EntityEb($0, $2 + ($$03444 << 3) | 0, 1) | 0;
   $25 = HEAP32[$$phi$trans$insert >> 2] | 0;
   if (($25 | 0) > 1) {
    $27 = $24 + 16 | 0;
    $$03542 = 1;
    do {
     HEAP32[$4 >> 2] = HEAP32[(HEAP32[$14 >> 2] | 0) + ($$03542 << 4) >> 2];
     $32 = __ZNSt3__213unordered_mapIjN2ut4arch13EntityManager11FreshEntity13ComponentEditENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjS5_EEEEEixERSC_($27, $4) | 0;
     HEAP32[$32 >> 2] = 0;
     HEAP32[$32 + 4 >> 2] = 1;
     $$03542 = $$03542 + 1 | 0;
     $34 = HEAP32[$$phi$trans$insert >> 2] | 0;
    } while (($$03542 | 0) < ($34 | 0));
    $133 = $34;
   } else $133 = $25;
   $$03444 = $$03444 + 1 | 0;
  } while (($$03444 | 0) != ($3 | 0));
  $16 = $133;
 }
 if (($16 | 0) <= 1) {
  STACKTOP = sp;
  return;
 }
 $17 = $0 + 108 | 0;
 $18 = $12 + 32 | 0;
 $19 = $0 + 112 | 0;
 $20 = $0 + 120 | 0;
 $21 = $0 + 124 | 0;
 $22 = $0 + 116 | 0;
 $$041 = 1;
 $132 = $16;
 while (1) {
  $38 = HEAP32[(HEAP32[$18 >> 2] | 0) + ($$041 << 4) >> 2] | 0;
  $39 = HEAP32[$19 >> 2] | 0;
  $40 = ($39 | 0) == 0;
  L27 : do if ($40) {
   $$0$i$i$i = 0;
   label = 32;
  } else {
   $41 = $39 + -1 | 0;
   $43 = ($41 & $39 | 0) == 0;
   if ($43) $49 = $41 & $38; else if ($38 >>> 0 < $39 >>> 0) $49 = $38; else $49 = ($38 >>> 0) % ($39 >>> 0) | 0;
   $50 = HEAP32[(HEAP32[$17 >> 2] | 0) + ($49 << 2) >> 2] | 0;
   if (!$50) {
    $$0$i$i$i = $49;
    label = 32;
   } else {
    $$04575$i$i$i = HEAP32[$50 >> 2] | 0;
    if (!$$04575$i$i$i) {
     $$0$i$i$i = $49;
     label = 32;
    } else {
     if ($43) {
      $$04576$us$i$i$i = $$04575$i$i$i;
      while (1) {
       $54 = HEAP32[$$04576$us$i$i$i + 4 >> 2] | 0;
       if (!(($54 | 0) == ($38 | 0) | ($54 & $41 | 0) == ($49 | 0))) {
        $$0$i$i$i = $49;
        label = 32;
        break L27;
       }
       if ((HEAP32[$$04576$us$i$i$i + 8 >> 2] | 0) == ($38 | 0)) {
        $125 = $132;
        break L27;
       }
       $$04576$us$i$i$i = HEAP32[$$04576$us$i$i$i >> 2] | 0;
       if (!$$04576$us$i$i$i) {
        $$0$i$i$i = $49;
        label = 32;
        break L27;
       }
      }
     }
     $$04576$i$i$i = $$04575$i$i$i;
     while (1) {
      $64 = HEAP32[$$04576$i$i$i + 4 >> 2] | 0;
      if (($64 | 0) != ($38 | 0)) {
       if ($64 >>> 0 < $39 >>> 0) $69 = $64; else $69 = ($64 >>> 0) % ($39 >>> 0) | 0;
       if (($69 | 0) != ($49 | 0)) {
        $$0$i$i$i = $49;
        label = 32;
        break L27;
       }
      }
      if ((HEAP32[$$04576$i$i$i + 8 >> 2] | 0) == ($38 | 0)) {
       $125 = $132;
       break L27;
      }
      $$04576$i$i$i = HEAP32[$$04576$i$i$i >> 2] | 0;
      if (!$$04576$i$i$i) {
       $$0$i$i$i = $49;
       label = 32;
       break;
      }
     }
    }
   }
  } while (0);
  if ((label | 0) == 32) {
   label = 0;
   $73 = __Znwj(12) | 0;
   HEAP32[$73 + 8 >> 2] = $38;
   HEAP32[$73 + 4 >> 2] = $38;
   HEAP32[$73 >> 2] = 0;
   $78 = +(((HEAP32[$20 >> 2] | 0) + 1 | 0) >>> 0);
   $80 = +HEAPF32[$21 >> 2];
   do if ($40 | $80 * +($39 >>> 0) < $78) {
    $90 = $39 << 1 | ($39 >>> 0 < 3 | ($39 + -1 & $39 | 0) != 0) & 1;
    $93 = ~~+Math_ceil(+($78 / $80)) >>> 0;
    __ZNSt3__212__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE6rehashEj($17, $90 >>> 0 < $93 >>> 0 ? $93 : $90);
    $95 = HEAP32[$19 >> 2] | 0;
    $96 = $95 + -1 | 0;
    if (!($96 & $95)) {
     $$047$i$i$i = $95;
     $$1$i$i$i = $96 & $38;
     break;
    }
    if ($38 >>> 0 < $95 >>> 0) {
     $$047$i$i$i = $95;
     $$1$i$i$i = $38;
    } else {
     $$047$i$i$i = $95;
     $$1$i$i$i = ($38 >>> 0) % ($95 >>> 0) | 0;
    }
   } else {
    $$047$i$i$i = $39;
    $$1$i$i$i = $$0$i$i$i;
   } while (0);
   $103 = (HEAP32[$17 >> 2] | 0) + ($$1$i$i$i << 2) | 0;
   $104 = HEAP32[$103 >> 2] | 0;
   if (!$104) {
    HEAP32[$73 >> 2] = HEAP32[$22 >> 2];
    HEAP32[$22 >> 2] = $73;
    HEAP32[$103 >> 2] = $22;
    $107 = HEAP32[$73 >> 2] | 0;
    if ($107 | 0) {
     $110 = HEAP32[$107 + 4 >> 2] | 0;
     $111 = $$047$i$i$i + -1 | 0;
     if (!($111 & $$047$i$i$i)) $119 = $110 & $111; else if ($110 >>> 0 < $$047$i$i$i >>> 0) $119 = $110; else $119 = ($110 >>> 0) % ($$047$i$i$i >>> 0) | 0;
     $$sink = (HEAP32[$17 >> 2] | 0) + ($119 << 2) | 0;
     label = 45;
    }
   } else {
    HEAP32[$73 >> 2] = HEAP32[$104 >> 2];
    $$sink = $104;
    label = 45;
   }
   if ((label | 0) == 45) {
    label = 0;
    HEAP32[$$sink >> 2] = $73;
   }
   HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 1;
   $125 = HEAP32[$$phi$trans$insert >> 2] | 0;
  }
  $$041 = $$041 + 1 | 0;
  if (($$041 | 0) >= ($125 | 0)) break; else $132 = $125;
 }
 STACKTOP = sp;
 return;
}

function __ZN2ut4arch13EntityManager12formatEntityENS_6EntityE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$021$i$i1$i = 0, $$023$i$i$i = 0, $$122$i$i$i = 0, $$phi$trans$insert7 = 0, $$pre$phi16Z2D = 0, $$pre$phi18Z2D = 0, $$pre$phi22Z2D = 0, $$pre12 = 0, $14 = 0, $16 = 0, $19 = 0, $20 = 0, $24 = 0, $25 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $38 = 0, $39 = 0, $4 = 0, $49 = 0, $5 = 0, $50 = 0, $52 = 0, $54 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $75 = 0, $76 = 0, $77 = 0, $87 = 0, $89 = 0, $92 = 0, $93 = 0, $99 = 0, $tmpcast$i$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $tmpcast$i$byval_copy = sp + 36 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 16 | 0;
 $5 = sp + 24 | 0;
 $6 = sp;
 if (!(HEAP32[$2 >> 2] | 0)) if (!(HEAP32[$2 + 4 >> 2] | 0)) {
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  HEAP8[$0 + 11 >> 0] = 4;
  HEAP32[$0 >> 2] = 1162760014;
  HEAP8[$0 + 4 >> 0] = 0;
  STACKTOP = sp;
  return;
 }
 $14 = $2;
 $16 = HEAP32[$14 >> 2] | 0;
 $19 = HEAP32[$14 + 4 >> 2] | 0;
 $20 = $4;
 HEAP32[$20 >> 2] = $16;
 HEAP32[$20 + 4 >> 2] = $19;
 HEAP32[$tmpcast$i$byval_copy >> 2] = HEAP32[$4 >> 2];
 HEAP32[$tmpcast$i$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 $24 = __ZN2ut4arch13EntityManager6existsENS_6EntityE($1, $tmpcast$i$byval_copy) | 0;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 if ($24) {
  $25 = $6;
  HEAP32[$25 >> 2] = $16;
  HEAP32[$25 + 4 >> 2] = $19;
  HEAP32[$tmpcast$i$byval_copy >> 2] = HEAP32[$6 >> 2];
  HEAP32[$tmpcast$i$byval_copy + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  __ZN2ut4arch13EntityManager13getEntityNameENS_6EntityE($3, $1, $tmpcast$i$byval_copy);
  $30 = HEAP32[$3 + 4 >> 2] | 0;
  if (!$30) {
   $$pre$phi22Z2D = $3;
   $$pre12 = $16;
  } else {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($5, 34);
   $32 = HEAP32[$3 >> 2] | 0;
   if (!$32) {
    HEAP32[$tmpcast$i$byval_copy >> 2] = 0;
    HEAP32[$tmpcast$i$byval_copy + 4 >> 2] = 0;
    HEAP32[$tmpcast$i$byval_copy + 8 >> 2] = 0;
    $$pre$phi16Z2D = $tmpcast$i$byval_copy + 11 | 0;
    $$pre$phi18Z2D = $tmpcast$i$byval_copy;
    $50 = 0;
    $52 = 0;
    $54 = 0;
   } else {
    $34 = $32 + $30 | 0;
    HEAP32[$tmpcast$i$byval_copy >> 2] = 0;
    HEAP32[$tmpcast$i$byval_copy + 4 >> 2] = 0;
    HEAP32[$tmpcast$i$byval_copy + 8 >> 2] = 0;
    if ($30 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($tmpcast$i$byval_copy);
    if ($30 >>> 0 < 11) {
     HEAP8[$tmpcast$i$byval_copy + 11 >> 0] = $30;
     $$021$i$i1$i = $tmpcast$i$byval_copy;
    } else {
     $38 = $30 + 16 & -16;
     $39 = __Znwj($38) | 0;
     HEAP32[$tmpcast$i$byval_copy >> 2] = $39;
     HEAP32[$tmpcast$i$byval_copy + 8 >> 2] = $38 | -2147483648;
     HEAP32[$tmpcast$i$byval_copy + 4 >> 2] = $30;
     $$021$i$i1$i = $39;
    }
    $$023$i$i$i = $32;
    $$122$i$i$i = $$021$i$i1$i;
    while (1) {
     HEAP8[$$122$i$i$i >> 0] = HEAP8[$$023$i$i$i >> 0] | 0;
     $$023$i$i$i = $$023$i$i$i + 1 | 0;
     if (($$023$i$i$i | 0) == ($34 | 0)) break; else $$122$i$i$i = $$122$i$i$i + 1 | 0;
    }
    HEAP8[$$021$i$i1$i + $30 >> 0] = 0;
    $$phi$trans$insert7 = $tmpcast$i$byval_copy + 11 | 0;
    $$pre$phi16Z2D = $$phi$trans$insert7;
    $$pre$phi18Z2D = $tmpcast$i$byval_copy;
    $50 = HEAP8[$$phi$trans$insert7 >> 0] | 0;
    $52 = HEAP32[$tmpcast$i$byval_copy >> 2] | 0;
    $54 = HEAP32[$tmpcast$i$byval_copy + 4 >> 2] | 0;
   }
   $49 = $50 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($5, $49 ? $52 : $tmpcast$i$byval_copy, $49 ? $54 : $50 & 255) | 0;
   if ((HEAP8[$$pre$phi16Z2D >> 0] | 0) < 0) __ZdlPv(HEAP32[$$pre$phi18Z2D >> 2] | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($5, 34);
   $$pre$phi22Z2D = $3;
   $$pre12 = HEAP32[$2 >> 2] | 0;
  }
  _free(HEAP32[$$pre$phi22Z2D >> 2] | 0);
  HEAP32[$$pre$phi22Z2D >> 2] = 0;
  $60 = $$pre12;
 } else $60 = $16;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($5, 91);
 __ZNSt3__29to_stringEi($tmpcast$i$byval_copy, $60);
 $61 = $tmpcast$i$byval_copy + 11 | 0;
 $62 = HEAP8[$61 >> 0] | 0;
 $63 = $62 << 24 >> 24 < 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($5, $63 ? HEAP32[$tmpcast$i$byval_copy >> 2] | 0 : $tmpcast$i$byval_copy, $63 ? HEAP32[$tmpcast$i$byval_copy + 4 >> 2] | 0 : $62 & 255) | 0;
 if ((HEAP8[$61 >> 0] | 0) < 0) __ZdlPv(HEAP32[$tmpcast$i$byval_copy >> 2] | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($5, 58);
 __ZNSt3__29to_stringEi($tmpcast$i$byval_copy, HEAP32[$2 + 4 >> 2] | 0);
 $75 = $tmpcast$i$byval_copy + 11 | 0;
 $76 = HEAP8[$75 >> 0] | 0;
 $77 = $76 << 24 >> 24 < 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($5, $77 ? HEAP32[$tmpcast$i$byval_copy >> 2] | 0 : $tmpcast$i$byval_copy, $77 ? HEAP32[$tmpcast$i$byval_copy + 4 >> 2] | 0 : $76 & 255) | 0;
 if ((HEAP8[$75 >> 0] | 0) < 0) __ZdlPv(HEAP32[$tmpcast$i$byval_copy >> 2] | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($5, 93);
 do if (!$24) {
  $87 = $2;
  $89 = HEAP32[$87 >> 2] | 0;
  $92 = HEAP32[$87 + 4 >> 2] | 0;
  $93 = $3;
  HEAP32[$93 >> 2] = $89;
  HEAP32[$93 + 4 >> 2] = $92;
  HEAP32[$tmpcast$i$byval_copy >> 2] = HEAP32[$3 >> 2];
  HEAP32[$tmpcast$i$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  if (__ZN2ut4arch13EntityManager6existsENS_6EntityE($1, $tmpcast$i$byval_copy) | 0) label = 29; else {
   $99 = HEAP32[$1 + 8 >> 2] | 0;
   if (($89 | 0) > -1) if ((HEAP32[$99 + 24 >> 2] | 0) > ($89 | 0)) {
    if ((HEAP32[(HEAP32[$99 + 20 >> 2] | 0) + ($89 << 4) >> 2] | 0) > ($92 | 0)) {
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($5, 7756) | 0;
     break;
    }
   } else label = 29; else label = 29;
  }
  if ((label | 0) == 29) {}
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($5, 7767) | 0;
 } while (0);
 HEAP32[$0 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
 STACKTOP = sp;
 return;
}

function __ZN9rapidjson13GenericReaderINS_4UTF8IcEES2_NS_12CrtAllocatorEE10ParseValueILj1ENS_25GenericInsituStringStreamIS2_EENS_15GenericDocumentIS2_NS_19MemoryPoolAllocatorIS3_EES3_EEEEvRT0_RT1_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$in$i = 0, $$in$i16 = 0, $$in$i18 = 0, $11 = 0, $14 = 0, $19 = 0, $20 = 0, $26 = 0, $29 = 0, $3 = 0, $32 = 0, $35 = 0, $4 = 0, $40 = 0, $42 = 0, $48 = 0, $5 = 0, $51 = 0, $54 = 0, $57 = 0, $60 = 0, $65 = 0, $67 = 0, $73 = 0, $75 = 0, $76 = 0, $79 = 0, $8 = 0, $80 = 0, $85 = 0, $87 = 0, $89 = 0, $92 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 $4 = HEAP32[$1 >> 2] | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 switch ($5 << 24 >> 24 | 0) {
 case 110:
  {
   if ($5 << 24 >> 24 != 110) ___assert_fail(16970, 16987, 706, 17039);
   $8 = $4 + 1 | 0;
   HEAP32[$1 >> 2] = $8;
   if ((HEAP8[$8 >> 0] | 0) == 117) {
    $11 = $4 + 2 | 0;
    HEAP32[$1 >> 2] = $11;
    if ((HEAP8[$11 >> 0] | 0) == 108) {
     $14 = $4 + 3 | 0;
     HEAP32[$1 >> 2] = $14;
     if ((HEAP8[$14 >> 0] | 0) == 108) {
      HEAP32[$1 >> 2] = $4 + 4;
      $19 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushINS_12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorIS2_EEEEEEPT_j($2 + 32 | 0, 1) | 0;
      HEAP32[$19 >> 2] = 0;
      HEAP32[$19 + 4 >> 2] = 0;
      HEAP32[$19 + 8 >> 2] = 0;
      HEAP32[$19 + 12 >> 2] = 0;
      HEAP32[$19 + 16 >> 2] = 0;
      HEAP32[$19 + 20 >> 2] = 0;
      STACKTOP = sp;
      return;
     } else $$in$i = $14;
    } else $$in$i = $11;
   } else $$in$i = $8;
   $20 = $0 + 24 | 0;
   if (HEAP32[$20 >> 2] | 0) ___assert_fail(17049, 16987, 714, 17039);
   $26 = $$in$i - (HEAP32[$1 + 8 >> 2] | 0) | 0;
   HEAP32[$20 >> 2] = 3;
   HEAP32[$0 + 28 >> 2] = $26;
   STACKTOP = sp;
   return;
  }
 case 116:
  {
   if ($5 << 24 >> 24 != 116) ___assert_fail(17066, 16987, 719, 17083);
   $29 = $4 + 1 | 0;
   HEAP32[$1 >> 2] = $29;
   if ((HEAP8[$29 >> 0] | 0) == 114) {
    $32 = $4 + 2 | 0;
    HEAP32[$1 >> 2] = $32;
    if ((HEAP8[$32 >> 0] | 0) == 117) {
     $35 = $4 + 3 | 0;
     HEAP32[$1 >> 2] = $35;
     if ((HEAP8[$35 >> 0] | 0) == 101) {
      HEAP32[$1 >> 2] = $4 + 4;
      $40 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushINS_12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorIS2_EEEEEEPT_j($2 + 32 | 0, 1) | 0;
      HEAP32[$40 >> 2] = 0;
      HEAP32[$40 + 4 >> 2] = 0;
      HEAP32[$40 + 8 >> 2] = 0;
      HEAP32[$40 + 12 >> 2] = 0;
      HEAP32[$40 + 16 >> 2] = 0;
      HEAP32[$40 + 20 >> 2] = 0;
      HEAP16[$40 + 18 >> 1] = 10;
      STACKTOP = sp;
      return;
     } else $$in$i16 = $35;
    } else $$in$i16 = $32;
   } else $$in$i16 = $29;
   $42 = $0 + 24 | 0;
   if (HEAP32[$42 >> 2] | 0) ___assert_fail(17049, 16987, 727, 17083);
   $48 = $$in$i16 - (HEAP32[$1 + 8 >> 2] | 0) | 0;
   HEAP32[$42 >> 2] = 3;
   HEAP32[$0 + 28 >> 2] = $48;
   STACKTOP = sp;
   return;
  }
 case 102:
  {
   if ($5 << 24 >> 24 != 102) ___assert_fail(17093, 16987, 732, 17110);
   $51 = $4 + 1 | 0;
   HEAP32[$1 >> 2] = $51;
   if ((HEAP8[$51 >> 0] | 0) == 97) {
    $54 = $4 + 2 | 0;
    HEAP32[$1 >> 2] = $54;
    if ((HEAP8[$54 >> 0] | 0) == 108) {
     $57 = $4 + 3 | 0;
     HEAP32[$1 >> 2] = $57;
     if ((HEAP8[$57 >> 0] | 0) == 115) {
      $60 = $4 + 4 | 0;
      HEAP32[$1 >> 2] = $60;
      if ((HEAP8[$60 >> 0] | 0) == 101) {
       HEAP32[$1 >> 2] = $4 + 5;
       $65 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushINS_12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorIS2_EEEEEEPT_j($2 + 32 | 0, 1) | 0;
       HEAP32[$65 >> 2] = 0;
       HEAP32[$65 + 4 >> 2] = 0;
       HEAP32[$65 + 8 >> 2] = 0;
       HEAP32[$65 + 12 >> 2] = 0;
       HEAP32[$65 + 16 >> 2] = 0;
       HEAP32[$65 + 20 >> 2] = 0;
       HEAP16[$65 + 18 >> 1] = 9;
       STACKTOP = sp;
       return;
      } else $$in$i18 = $60;
     } else $$in$i18 = $57;
    } else $$in$i18 = $54;
   } else $$in$i18 = $51;
   $67 = $0 + 24 | 0;
   if (HEAP32[$67 >> 2] | 0) ___assert_fail(17049, 16987, 740, 17110);
   $73 = $$in$i18 - (HEAP32[$1 + 8 >> 2] | 0) | 0;
   HEAP32[$67 >> 2] = 3;
   HEAP32[$0 + 28 >> 2] = $73;
   STACKTOP = sp;
   return;
  }
 case 34:
  {
   HEAP32[$3 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$3 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
   HEAP32[$3 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
   $75 = $3 + 12 | 0;
   HEAP32[$75 >> 2] = $1;
   $76 = HEAP32[$3 >> 2] | 0;
   if ((HEAP8[$76 >> 0] | 0) != 34) ___assert_fail(17121, 16987, 812, 17138);
   $79 = $76 + 1 | 0;
   HEAP32[$3 >> 2] = $79;
   $80 = $3 + 4 | 0;
   HEAP32[$80 >> 2] = $79;
   __ZN9rapidjson13GenericReaderINS_4UTF8IcEES2_NS_12CrtAllocatorEE19ParseStringToStreamILj1ES2_S2_NS_25GenericInsituStringStreamIS2_EES7_EEvRT2_RT3_($0, $3, $3);
   if (!(HEAP32[$0 + 24 >> 2] | 0)) {
    $85 = $79;
    $87 = (HEAP32[$80 >> 2] | 0) + ~$85 | 0;
    $89 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushINS_12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorIS2_EEEEEEPT_j($2 + 32 | 0, 1) | 0;
    HEAP32[$89 >> 2] = 0;
    HEAP32[$89 + 4 >> 2] = 0;
    HEAP32[$89 + 8 >> 2] = 0;
    HEAP32[$89 + 12 >> 2] = 0;
    HEAP32[$89 + 16 >> 2] = 0;
    HEAP32[$89 + 20 >> 2] = 0;
    HEAP16[$89 + 18 >> 1] = 1029;
    HEAP32[$89 + 8 >> 2] = $85;
    HEAP32[$89 >> 2] = $87;
   }
   $92 = HEAP32[$75 >> 2] | 0;
   HEAP32[$92 >> 2] = HEAP32[$3 >> 2];
   HEAP32[$92 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
   HEAP32[$92 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
   STACKTOP = sp;
   return;
  }
 case 123:
  {
   __ZN9rapidjson13GenericReaderINS_4UTF8IcEES2_NS_12CrtAllocatorEE11ParseObjectILj1ENS_25GenericInsituStringStreamIS2_EENS_15GenericDocumentIS2_NS_19MemoryPoolAllocatorIS3_EES3_EEEEvRT0_RT1_($0, $1, $2);
   STACKTOP = sp;
   return;
  }
 case 91:
  {
   __ZN9rapidjson13GenericReaderINS_4UTF8IcEES2_NS_12CrtAllocatorEE10ParseArrayILj1ENS_25GenericInsituStringStreamIS2_EENS_15GenericDocumentIS2_NS_19MemoryPoolAllocatorIS3_EES3_EEEEvRT0_RT1_($0, $1, $2);
   STACKTOP = sp;
   return;
  }
 default:
  {
   __ZN9rapidjson13GenericReaderINS_4UTF8IcEES2_NS_12CrtAllocatorEE11ParseNumberILj1ENS_25GenericInsituStringStreamIS2_EENS_15GenericDocumentIS2_NS_19MemoryPoolAllocatorIS3_EES3_EEEEvRT0_RT1_($0, $1, $2);
   STACKTOP = sp;
   return;
  }
 }
}
function __ZN10__cxxabiv112_GLOBAL__N_119parse_function_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$i$i$add$i = 0, $$0$i$i$add$i116 = 0, $$0$i$i$idx$i = 0, $$0$i$i$idx$i115 = 0, $$0105$ph = 0, $$0105$ph$ph = 0, $$0111 = 0, $$088 = 0, $$1112 = 0, $$1112$be = 0, $$1112$ph = 0, $$1112$ph$ph = 0, $$8 = 0, $12 = 0, $14 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $23 = 0, $27 = 0, $29 = 0, $3 = 0, $33 = 0, $4 = 0, $40 = 0, $41 = 0, $45 = 0, $49 = 0, $57 = 0, $58 = 0, $66 = 0, $71 = 0, $76 = 0, $77 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $3 = sp + 12 | 0;
 $4 = sp;
 do if (($0 | 0) == ($1 | 0)) $$8 = $0; else if ((HEAP8[$0 >> 0] | 0) == 70) {
  $8 = $0 + 1 | 0;
  if (($8 | 0) == ($1 | 0)) $$8 = $0; else {
   if ((HEAP8[$8 >> 0] | 0) == 89) {
    $12 = $0 + 2 | 0;
    if (($12 | 0) == ($1 | 0)) {
     $$8 = $0;
     break;
    } else $$0111 = $12;
   } else $$0111 = $8;
   $14 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($$0111, $1, $2) | 0;
   if (($14 | 0) == ($$0111 | 0)) $$8 = $0; else {
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22277, __ZNSt3__211char_traitsIcE6lengthEPKc(22277) | 0);
    $17 = $2 + 4 | 0;
    $18 = $3 + 11 | 0;
    $19 = $3 + 4 | 0;
    $20 = $4 + 11 | 0;
    $21 = $4 + 4 | 0;
    $$0105$ph = 0;
    $$1112$ph = $14;
    L9 : while (1) {
     $$1112 = $$1112$ph;
     L11 : while (1) {
      if (($$1112 | 0) == ($1 | 0)) {
       label = 11;
       break L9;
      }
      switch (HEAP8[$$1112 >> 0] | 0) {
      case 69:
       {
        label = 16;
        break L9;
        break;
       }
      case 118:
       {
        $$1112$be = $$1112 + 1 | 0;
        break;
       }
      case 82:
       {
        $29 = $$1112 + 1 | 0;
        if (($29 | 0) == ($1 | 0)) label = 23; else if ((HEAP8[$29 >> 0] | 0) == 69) {
         $$0105$ph$ph = 1;
         $$1112$ph$ph = $29;
         break L11;
        } else label = 23;
        break;
       }
      case 79:
       {
        $33 = $$1112 + 1 | 0;
        if (($33 | 0) == ($1 | 0)) label = 23; else if ((HEAP8[$33 >> 0] | 0) == 69) {
         $$0105$ph$ph = 2;
         $$1112$ph$ph = $33;
         break L11;
        } else label = 23;
        break;
       }
      default:
       label = 23;
      }
      L20 : do if ((label | 0) == 23) {
       label = 0;
       $40 = ((HEAP32[$17 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
       $41 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($$1112, $1, $2) | 0;
       $45 = ((HEAP32[$17 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
       if (($41 | 0) == ($$1112 | 0) | ($41 | 0) == ($1 | 0)) break L9;
       $$088 = $40;
       while (1) {
        if ($$088 >>> 0 >= $45 >>> 0) break;
        $49 = HEAP8[$18 >> 0] | 0;
        if (($49 << 24 >> 24 < 0 ? HEAP32[$19 >> 2] | 0 : $49 & 255) >>> 0 > 1) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($3, 22499) | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($4, (HEAP32[$2 >> 2] | 0) + ($$088 * 24 | 0) | 0);
        $57 = HEAP8[$20 >> 0] | 0;
        $58 = $57 << 24 >> 24 < 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($3, $58 ? HEAP32[$4 >> 2] | 0 : $4, $58 ? HEAP32[$21 >> 2] | 0 : $57 & 255) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
        $$088 = $$088 + 1 | 0;
       }
       $$0 = $40;
       while (1) {
        if ($$0 >>> 0 >= $45 >>> 0) {
         $$1112$be = $41;
         break L20;
        }
        $66 = HEAP32[$17 >> 2] | 0;
        $$0$i$i$idx$i115 = 0;
        while (1) {
         if (($$0$i$i$idx$i115 | 0) == -1) break;
         $$0$i$i$add$i116 = $$0$i$i$idx$i115 + -1 | 0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($66 + ($$0$i$i$add$i116 * 24 | 0) | 0);
         $$0$i$i$idx$i115 = $$0$i$i$add$i116;
        }
        HEAP32[$17 >> 2] = $66 + -24;
        $$0 = $$0 + 1 | 0;
       }
      } while (0);
      $$1112 = $$1112$be;
     }
     $$0105$ph = $$0105$ph$ph;
     $$1112$ph = $$1112$ph$ph;
    }
    if ((label | 0) == 11) {
     $23 = HEAP32[$17 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($23 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$17 >> 2] = $23 + -24;
    } else if ((label | 0) == 16) {
     $27 = $$1112 + 1 | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($3, 22275) | 0;
     switch ($$0105$ph & 3) {
     case 1:
      {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($3, 23703) | 0;
       break;
      }
     case 2:
      {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($3, 23706) | 0;
       break;
      }
     default:
      {}
     }
     $71 = HEAP32[$17 >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) != ($71 | 0)) {
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($71 + -24 | 0, 22309) | 0;
      $76 = HEAP8[$18 >> 0] | 0;
      $77 = $76 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj((HEAP32[$17 >> 2] | 0) + -12 | 0, 0, $77 ? HEAP32[$3 >> 2] | 0 : $3, $77 ? HEAP32[$19 >> 2] | 0 : $76 & 255) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$8 = $27;
      break;
     }
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$8 = $0;
   }
  }
 } else $$8 = $0; while (0);
 STACKTOP = sp;
 return $$8 | 0;
}

function __ZNSt3__213unordered_mapINS_6vectorIjNS_9allocatorIjEEEEPN2ut4arch9ArchetypeENS_4hashIS4_EENS_8equal_toIS4_EENS2_INS_4pairIKS4_S8_EEEEEixERSE_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $$04779$i = 0, $$04780$i = 0, $$04780$us$i = 0, $$049$i = 0, $$1$i = 0, $$148$i = 0, $$sink = 0, $10 = 0, $101 = 0, $104 = 0, $11 = 0, $110 = 0, $113 = 0.0, $116 = 0.0, $126 = 0, $129 = 0, $131 = 0, $132 = 0, $139 = 0, $14 = 0, $140 = 0, $142 = 0, $144 = 0, $147 = 0, $148 = 0, $156 = 0, $160 = 0, $17 = 0, $2 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $30 = 0, $36 = 0, $37 = 0, $4 = 0, $42 = 0, $44 = 0, $50 = 0, $51 = 0, $54 = 0, $55 = 0, $58 = 0, $60 = 0, $67 = 0, $72 = 0, $75 = 0, $76 = 0, $79 = 0, $80 = 0, $83 = 0, $85 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $96 = 0, $97 = 0, $98 = 0, label = 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $4 = HEAPU16[$2 >> 1] | 0;
 $10 = $4 + 255 + (HEAPU16[$2 + 2 >> 1] | 0) | 0;
 $11 = $4 + 510 + $10 | 0;
 $14 = ($10 & 65535) + ($10 >>> 16) | 0;
 $17 = ($11 & 65535) + ($11 >>> 16) | 0;
 $23 = $14 & 65535 | $14 >>> 16 | $17 & 65536 | $17 << 16;
 $24 = $0 + 4 | 0;
 $25 = HEAP32[$24 >> 2] | 0;
 $26 = ($25 | 0) == 0;
 $27 = $2;
 L1 : do if ($26) $$0$i = 0; else {
  $28 = $25 + -1 | 0;
  $30 = ($28 & $25 | 0) == 0;
  if ($30) $36 = $23 & $28; else if ($23 >>> 0 < $25 >>> 0) $36 = $23; else $36 = ($23 >>> 0) % ($25 >>> 0) | 0;
  $37 = HEAP32[(HEAP32[$0 >> 2] | 0) + ($36 << 2) >> 2] | 0;
  if (!$37) $$0$i = $36; else {
   $$04779$i = HEAP32[$37 >> 2] | 0;
   if (!$$04779$i) $$0$i = $36; else {
    $42 = (HEAP32[$1 + 4 >> 2] | 0) - $27 | 0;
    if ($30) {
     $$04780$us$i = $$04779$i;
     L12 : while (1) {
      $44 = HEAP32[$$04780$us$i + 4 >> 2] | 0;
      if (!(($44 | 0) == ($23 | 0) | ($44 & $28 | 0) == ($36 | 0))) {
       $$0$i = $36;
       break L1;
      }
      $50 = HEAP32[$$04780$us$i + 12 >> 2] | 0;
      $51 = HEAP32[$$04780$us$i + 8 >> 2] | 0;
      $54 = $51;
      $55 = $50;
      L15 : do if (($50 - $51 | 0) == ($42 | 0)) {
       if (($54 | 0) == ($55 | 0)) {
        $$148$i = $$04780$us$i;
        label = 48;
        break L12;
       }
       $58 = $54;
       $60 = $2;
       while (1) {
        if ((HEAP32[$58 >> 2] | 0) != (HEAP32[$60 >> 2] | 0)) break L15;
        $58 = $58 + 4 | 0;
        if (($58 | 0) == ($55 | 0)) {
         $$148$i = $$04780$us$i;
         label = 48;
         break L12;
        } else $60 = $60 + 4 | 0;
       }
      } while (0);
      $$04780$us$i = HEAP32[$$04780$us$i >> 2] | 0;
      if (!$$04780$us$i) {
       $$0$i = $36;
       break L1;
      }
     }
     if ((label | 0) == 48) {
      $160 = $$148$i + 20 | 0;
      return $160 | 0;
     }
    }
    $$04780$i = $$04779$i;
    L26 : while (1) {
     $67 = HEAP32[$$04780$i + 4 >> 2] | 0;
     if (($67 | 0) != ($23 | 0)) {
      if ($67 >>> 0 < $25 >>> 0) $72 = $67; else $72 = ($67 >>> 0) % ($25 >>> 0) | 0;
      if (($72 | 0) != ($36 | 0)) {
       $$0$i = $36;
       break L1;
      }
     }
     $75 = HEAP32[$$04780$i + 12 >> 2] | 0;
     $76 = HEAP32[$$04780$i + 8 >> 2] | 0;
     $79 = $76;
     $80 = $75;
     L34 : do if (($75 - $76 | 0) == ($42 | 0)) {
      if (($79 | 0) == ($80 | 0)) {
       $$148$i = $$04780$i;
       label = 48;
       break L26;
      }
      $83 = $79;
      $85 = $2;
      while (1) {
       if ((HEAP32[$83 >> 2] | 0) != (HEAP32[$85 >> 2] | 0)) break L34;
       $83 = $83 + 4 | 0;
       if (($83 | 0) == ($80 | 0)) {
        $$148$i = $$04780$i;
        label = 48;
        break L26;
       } else $85 = $85 + 4 | 0;
      }
     } while (0);
     $$04780$i = HEAP32[$$04780$i >> 2] | 0;
     if (!$$04780$i) {
      $$0$i = $36;
      break L1;
     }
    }
    if ((label | 0) == 48) {
     $160 = $$148$i + 20 | 0;
     return $160 | 0;
    }
   }
  }
 } while (0);
 $91 = __Znwj(24) | 0;
 $92 = $91 + 8 | 0;
 HEAP32[$92 >> 2] = 0;
 $93 = $91 + 12 | 0;
 HEAP32[$93 >> 2] = 0;
 $94 = $91 + 16 | 0;
 HEAP32[$94 >> 2] = 0;
 $96 = HEAP32[$1 + 4 >> 2] | 0;
 $97 = $96 - $27 | 0;
 $98 = $97 >> 2;
 if ($97 | 0) {
  if ($98 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($92);
  $101 = __Znwj($97) | 0;
  HEAP32[$93 >> 2] = $101;
  HEAP32[$92 >> 2] = $101;
  HEAP32[$94 >> 2] = $101 + ($98 << 2);
  $104 = $96 - $2 | 0;
  if (($104 | 0) > 0) {
   _memcpy($101 | 0, $2 | 0, $104 | 0) | 0;
   HEAP32[$93 >> 2] = $101 + ($104 >>> 2 << 2);
  }
 }
 HEAP32[$91 + 20 >> 2] = 0;
 HEAP32[$91 + 4 >> 2] = $23;
 HEAP32[$91 >> 2] = 0;
 $110 = $0 + 12 | 0;
 $113 = +(((HEAP32[$110 >> 2] | 0) + 1 | 0) >>> 0);
 $116 = +HEAPF32[$0 + 16 >> 2];
 do if ($26 | $116 * +($25 >>> 0) < $113) {
  $126 = $25 << 1 | ($25 >>> 0 < 3 | ($25 + -1 & $25 | 0) != 0) & 1;
  $129 = ~~+Math_ceil(+($113 / $116)) >>> 0;
  __ZNSt3__212__hash_tableINS_17__hash_value_typeINS_6vectorIjNS_9allocatorIjEEEEPN2ut4arch9ArchetypeEEENS_22__unordered_map_hasherIS5_SA_NS_4hashIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_NS_8equal_toIS5_EELb1EEENS3_ISA_EEE6rehashEj($0, $126 >>> 0 < $129 >>> 0 ? $129 : $126);
  $131 = HEAP32[$24 >> 2] | 0;
  $132 = $131 + -1 | 0;
  if (!($132 & $131)) {
   $$049$i = $131;
   $$1$i = $132 & $23;
   break;
  }
  if ($23 >>> 0 < $131 >>> 0) {
   $$049$i = $131;
   $$1$i = $23;
  } else {
   $$049$i = $131;
   $$1$i = ($23 >>> 0) % ($131 >>> 0) | 0;
  }
 } else {
  $$049$i = $25;
  $$1$i = $$0$i;
 } while (0);
 $139 = (HEAP32[$0 >> 2] | 0) + ($$1$i << 2) | 0;
 $140 = HEAP32[$139 >> 2] | 0;
 if (!$140) {
  $142 = $0 + 8 | 0;
  HEAP32[$91 >> 2] = HEAP32[$142 >> 2];
  HEAP32[$142 >> 2] = $91;
  HEAP32[$139 >> 2] = $142;
  $144 = HEAP32[$91 >> 2] | 0;
  if ($144 | 0) {
   $147 = HEAP32[$144 + 4 >> 2] | 0;
   $148 = $$049$i + -1 | 0;
   if (!($148 & $$049$i)) $156 = $147 & $148; else if ($147 >>> 0 < $$049$i >>> 0) $156 = $147; else $156 = ($147 >>> 0) % ($$049$i >>> 0) | 0;
   $$sink = (HEAP32[$0 >> 2] | 0) + ($156 << 2) | 0;
   label = 46;
  }
 } else {
  HEAP32[$91 >> 2] = HEAP32[$140 >> 2];
  $$sink = $140;
  label = 46;
 }
 if ((label | 0) == 46) HEAP32[$$sink >> 2] = $91;
 HEAP32[$110 >> 2] = (HEAP32[$110 >> 2] | 0) + 1;
 $$148$i = $91;
 $160 = $$148$i + 20 | 0;
 return $160 | 0;
}

function __ZN2ut20getUserCodeCallstackEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$016$i$i33 = 0, $$016$i$i38 = 0, $$017$i$i34 = 0, $$017$i$i39 = 0, $$028$off0 = 0, $$02947 = 0, $$1$off0 = 0, $$130$lcssa = 0, $$13046 = 0, $$3 = 0, $1 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $24 = 0, $25 = 0, $28 = 0, $3 = 0, $30 = 0, $34 = 0, $35 = 0, $38 = 0, $4 = 0, $42 = 0, $43 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $67 = 0, $71 = 0, $72 = 0, $77 = 0, $78 = 0, $79 = 0, $9 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16432 | 0;
 $1 = sp + 40 | 0;
 $2 = sp + 24 | 0;
 $3 = sp + 12 | 0;
 $4 = sp;
 $5 = _emscripten_get_callstack(0, $1 | 0, 16383) | 0;
 HEAP8[$1 + $5 >> 0] = 10;
 HEAP8[$1 + ($5 + 1) >> 0] = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $9 = HEAP8[$1 >> 0] | 0;
 if (!($9 << 24 >> 24)) {
  STACKTOP = sp;
  return;
 }
 $11 = $4 + 11 | 0;
 $12 = $2 + 11 | 0;
 $13 = $2 + 4 | 0;
 $14 = $4 + 8 | 0;
 $15 = $4 + 4 | 0;
 $16 = $4 + 11 | 0;
 $17 = $2 + 11 | 0;
 $18 = $2 + 4 | 0;
 $19 = $4 + 8 | 0;
 $20 = $4 + 4 | 0;
 $21 = $3 + 11 | 0;
 $22 = $3 + 11 | 0;
 $$02947 = $1;
 $24 = $9;
 L4 : while (1) {
  if ($24 << 24 >> 24 == 32) {
   $$13046 = $$02947;
   while (1) {
    $25 = $$13046 + 1 | 0;
    if ((HEAP8[$25 >> 0] | 0) == 32) $$13046 = $25; else {
     $$130$lcssa = $25;
     break;
    }
   }
  } else $$130$lcssa = $$02947;
  $28 = (_strncmp($$130$lcssa, 7593, 3) | 0) == 0;
  $$3 = $28 ? $$130$lcssa + 3 | 0 : $$130$lcssa;
  L11 : while (1) {
   $30 = HEAP8[$$3 >> 0] | 0;
   switch ($30 << 24 >> 24) {
   case 95:
    {
     $97 = 1;
     break L11;
     break;
    }
   case 32:
    break;
   default:
    {
     label = 9;
     break L11;
    }
   }
   $$3 = $$3 + 1 | 0;
  }
  if ((label | 0) == 9) {
   label = 0;
   $97 = (_strncmp($$3, 7597, 10) | 0) == 0;
  }
  $$0 = $$3;
  $$028$off0 = 1;
  $34 = $30;
  L17 : while (1) {
   switch ($34 << 24 >> 24) {
   case 10:
    {
     break L17;
     break;
    }
   case 32:
    {
     $$1$off0 = 0;
     break;
    }
   default:
    $$1$off0 = $$028$off0;
   }
   $35 = $$0 + 1 | 0;
   $$0 = $35;
   $$028$off0 = $$1$off0;
   $34 = HEAP8[$35 >> 0] | 0;
  }
  do if (!$97) if ($$028$off0) {
   $38 = $$0 - $$3 | 0;
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   if ($38 >>> 0 > 4294967279) {
    label = 17;
    break L4;
   }
   if ($38 >>> 0 < 11) {
    HEAP8[$11 >> 0] = $38;
    if (!$38) $$017$i$i34 = $4; else {
     $$016$i$i33 = $4;
     label = 21;
    }
   } else {
    $42 = $38 + 16 & -16;
    $43 = __Znwj($42) | 0;
    HEAP32[$4 >> 2] = $43;
    HEAP32[$14 >> 2] = $42 | -2147483648;
    HEAP32[$15 >> 2] = $38;
    $$016$i$i33 = $43;
    label = 21;
   }
   if ((label | 0) == 21) {
    label = 0;
    _memcpy($$016$i$i33 | 0, $$3 | 0, $38 | 0) | 0;
    $$017$i$i34 = $$016$i$i33;
   }
   HEAP8[$$017$i$i34 + $38 >> 0] = 0;
   $48 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc($4, 0, 7608) | 0;
   HEAP32[$3 >> 2] = HEAP32[$48 >> 2];
   HEAP32[$3 + 4 >> 2] = HEAP32[$48 + 4 >> 2];
   HEAP32[$3 + 8 >> 2] = HEAP32[$48 + 8 >> 2];
   HEAP32[$48 >> 2] = 0;
   HEAP32[$48 + 4 >> 2] = 0;
   HEAP32[$48 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($3, 10);
   HEAP32[$2 >> 2] = HEAP32[$3 >> 2];
   HEAP32[$2 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
   HEAP32[$2 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
   HEAP32[$3 >> 2] = 0;
   HEAP32[$3 + 4 >> 2] = 0;
   HEAP32[$3 + 8 >> 2] = 0;
   $49 = HEAP8[$12 >> 0] | 0;
   $50 = $49 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($0, $50 ? HEAP32[$2 >> 2] | 0 : $2, $50 ? HEAP32[$13 >> 2] | 0 : $49 & 255) | 0;
   if ((HEAP8[$12 >> 0] | 0) < 0) __ZdlPv(HEAP32[$2 >> 2] | 0);
   if ((HEAP8[$21 >> 0] | 0) < 0) __ZdlPv(HEAP32[$3 >> 2] | 0);
   if ((HEAP8[$11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$4 >> 2] | 0);
   break;
  } else {
   $67 = $$0 - $$3 | 0;
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   if ($67 >>> 0 > 4294967279) {
    label = 30;
    break L4;
   }
   if ($67 >>> 0 < 11) {
    HEAP8[$16 >> 0] = $67;
    if (!$67) $$017$i$i39 = $4; else {
     $$016$i$i38 = $4;
     label = 34;
    }
   } else {
    $71 = $67 + 16 & -16;
    $72 = __Znwj($71) | 0;
    HEAP32[$4 >> 2] = $72;
    HEAP32[$19 >> 2] = $71 | -2147483648;
    HEAP32[$20 >> 2] = $67;
    $$016$i$i38 = $72;
    label = 34;
   }
   if ((label | 0) == 34) {
    label = 0;
    _memcpy($$016$i$i38 | 0, $$3 | 0, $67 | 0) | 0;
    $$017$i$i39 = $$016$i$i38;
   }
   HEAP8[$$017$i$i39 + $67 >> 0] = 0;
   $77 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc($4, 0, 7623) | 0;
   HEAP32[$3 >> 2] = HEAP32[$77 >> 2];
   HEAP32[$3 + 4 >> 2] = HEAP32[$77 + 4 >> 2];
   HEAP32[$3 + 8 >> 2] = HEAP32[$77 + 8 >> 2];
   HEAP32[$77 >> 2] = 0;
   HEAP32[$77 + 4 >> 2] = 0;
   HEAP32[$77 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($3, 10);
   HEAP32[$2 >> 2] = HEAP32[$3 >> 2];
   HEAP32[$2 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
   HEAP32[$2 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
   HEAP32[$3 >> 2] = 0;
   HEAP32[$3 + 4 >> 2] = 0;
   HEAP32[$3 + 8 >> 2] = 0;
   $78 = HEAP8[$17 >> 0] | 0;
   $79 = $78 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($0, $79 ? HEAP32[$2 >> 2] | 0 : $2, $79 ? HEAP32[$18 >> 2] | 0 : $78 & 255) | 0;
   if ((HEAP8[$17 >> 0] | 0) < 0) __ZdlPv(HEAP32[$2 >> 2] | 0);
   if ((HEAP8[$22 >> 0] | 0) < 0) __ZdlPv(HEAP32[$3 >> 2] | 0);
   if ((HEAP8[$16 >> 0] | 0) < 0) __ZdlPv(HEAP32[$4 >> 2] | 0);
   break;
  } while (0);
  $$02947 = $$0 + 1 | 0;
  $24 = HEAP8[$$02947 >> 0] | 0;
  if (!($24 << 24 >> 24)) {
   label = 43;
   break;
  }
 }
 if ((label | 0) == 17) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($4); else if ((label | 0) == 30) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($4); else if ((label | 0) == 43) {
  STACKTOP = sp;
  return;
 }
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_conversion_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$i = 0, $$0$i$i$i107 = 0, $$0$i$i$i110 = 0, $$0$i$i$i113 = 0, $$0$i$i$idx$i = 0, $$10 = 0, $$1100 = 0, $$4103 = 0, $$5104 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $27 = 0, $29 = 0, $3 = 0, $31 = 0, $33 = 0, $34 = 0, $4 = 0, $41 = 0, $42 = 0, $46 = 0, $47 = 0, $5 = 0, $54 = 0, $6 = 0, $65 = 0, $66 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $3 = sp + 88 | 0;
 $4 = sp + 64 | 0;
 $5 = sp + 48 | 0;
 $6 = sp + 36 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 12 | 0;
 $9 = sp;
 L1 : do if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 99) if ((HEAP8[$0 + 1 >> 0] | 0) == 118) {
  $19 = $2 + 63 | 0;
  $20 = HEAP8[$19 >> 0] | 0;
  HEAP8[$19 >> 0] = 0;
  $21 = $0 + 2 | 0;
  $22 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($21, $1, $2) | 0;
  HEAP8[$19 >> 0] = $20;
  if (($22 | 0) == ($21 | 0) | ($22 | 0) == ($1 | 0)) $$10 = $0; else {
   if ((HEAP8[$22 >> 0] | 0) == 95) {
    $29 = $22 + 1 | 0;
    if (($29 | 0) == ($1 | 0)) {
     $$10 = $0;
     break;
    }
    $31 = HEAP8[$29 >> 0] | 0;
    L9 : do if ($31 << 24 >> 24 == 69) {
     $33 = $2 + 4 | 0;
     $34 = HEAP32[$33 >> 2] | 0;
     if ($34 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      HEAP32[$34 >> 2] = 0;
      HEAP32[$34 + 4 >> 2] = 0;
      HEAP32[$34 + 8 >> 2] = 0;
      HEAP32[$34 + 12 >> 2] = 0;
      HEAP32[$34 + 16 >> 2] = 0;
      HEAP32[$34 + 20 >> 2] = 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2Ev($34);
      HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 24;
      $$4103 = $29;
      break;
     } else {
      __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE24__emplace_back_slow_pathIJEEEvDpOT_($2);
      $$4103 = $29;
      break;
     }
    } else {
     $$1100 = $29;
     $41 = $31;
     while (1) {
      if ($41 << 24 >> 24 == 69) {
       $$4103 = $$1100;
       break L9;
      }
      $42 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($$1100, $1, $2) | 0;
      if (($42 | 0) == ($$1100 | 0) | ($42 | 0) == ($1 | 0)) {
       $$10 = $0;
       break L1;
      }
      $$1100 = $42;
      $41 = HEAP8[$42 >> 0] | 0;
     }
    } while (0);
    $$5104 = $$4103 + 1 | 0;
   } else {
    $27 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($22, $1, $2) | 0;
    if (($27 | 0) == ($22 | 0)) {
     $$10 = $0;
     break;
    } else $$5104 = $27;
   }
   $46 = $2 + 4 | 0;
   $47 = HEAP32[$46 >> 2] | 0;
   if ((($47 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$10 = $0; else {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $47 + -24 | 0);
    $54 = HEAP32[$46 >> 2] | 0;
    $$0$i$i$idx$i = 0;
    while (1) {
     if (($$0$i$i$idx$i | 0) == -1) break;
     $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($54 + ($$0$i$i$add$i * 24 | 0) | 0);
     $$0$i$i$idx$i = $$0$i$i$add$i;
    }
    HEAP32[$46 >> 2] = $54 + -24;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($9, $54 + -48 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($9, 0, 22277) | 0;
    HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
    HEAP32[$8 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
    HEAP32[$8 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$9 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($8, 23441) | 0;
    HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
    HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
    HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
    $$0$i$i$i107 = 0;
    while (1) {
     if (($$0$i$i$i107 | 0) == 3) break;
     HEAP32[$8 + ($$0$i$i$i107 << 2) >> 2] = 0;
     $$0$i$i$i107 = $$0$i$i$i107 + 1 | 0;
    }
    $65 = HEAP8[$3 + 11 >> 0] | 0;
    $66 = $65 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($7, $66 ? HEAP32[$3 >> 2] | 0 : $3, $66 ? HEAP32[$3 + 4 >> 2] | 0 : $65 & 255) | 0;
    HEAP32[$6 >> 2] = HEAP32[$7 >> 2];
    HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
    HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
    $$0$i$i$i110 = 0;
    while (1) {
     if (($$0$i$i$i110 | 0) == 3) break;
     HEAP32[$7 + ($$0$i$i$i110 << 2) >> 2] = 0;
     $$0$i$i$i110 = $$0$i$i$i110 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($6, 22275) | 0;
    HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
    HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
    HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
    $$0$i$i$i113 = 0;
    while (1) {
     if (($$0$i$i$i113 | 0) == 3) break;
     HEAP32[$6 + ($$0$i$i$i113 << 2) >> 2] = 0;
     $$0$i$i$i113 = $$0$i$i$i113 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($4, $5);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$46 >> 2] | 0) + -24 | 0, $4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$10 = $$5104;
   }
  }
 } else $$10 = $0; else $$10 = $0; else $$10 = $0; while (0);
 STACKTOP = sp;
 return $$10 | 0;
}

function _try_realloc_chunk($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1271 = 0, $$1271$be = 0, $$1271$ph = 0, $$1274 = 0, $$1274$be = 0, $$1274$ph = 0, $$2 = 0, $$3 = 0, $$pre$phiZ2D = 0, $101 = 0, $103 = 0, $106 = 0, $108 = 0, $11 = 0, $111 = 0, $114 = 0, $115 = 0, $116 = 0, $118 = 0, $12 = 0, $120 = 0, $121 = 0, $123 = 0, $124 = 0, $129 = 0, $130 = 0, $139 = 0, $144 = 0, $147 = 0, $148 = 0, $154 = 0, $165 = 0, $168 = 0, $175 = 0, $2 = 0, $24 = 0, $26 = 0, $3 = 0, $37 = 0, $39 = 0, $4 = 0, $40 = 0, $49 = 0, $5 = 0, $51 = 0, $53 = 0, $54 = 0, $6 = 0, $60 = 0, $67 = 0, $73 = 0, $75 = 0, $76 = 0, $79 = 0, $8 = 0, $81 = 0, $83 = 0, $96 = 0, $storemerge = 0, $storemerge3 = 0;
 $2 = $0 + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $3 & -8;
 $5 = $0 + $4 | 0;
 $6 = HEAP32[6125] | 0;
 $8 = $3 & 3;
 if (!(($8 | 0) != 1 & $6 >>> 0 <= $0 >>> 0 & $5 >>> 0 > $0 >>> 0)) _abort();
 $11 = $5 + 4 | 0;
 $12 = HEAP32[$11 >> 2] | 0;
 if (!($12 & 1)) _abort();
 if (!$8) {
  if ($1 >>> 0 < 256) {
   $$2 = 0;
   return $$2 | 0;
  }
  if ($4 >>> 0 >= ($1 + 4 | 0) >>> 0) if (($4 - $1 | 0) >>> 0 <= HEAP32[6241] << 1 >>> 0) {
   $$2 = $0;
   return $$2 | 0;
  }
  $$2 = 0;
  return $$2 | 0;
 }
 if ($4 >>> 0 >= $1 >>> 0) {
  $24 = $4 - $1 | 0;
  if ($24 >>> 0 <= 15) {
   $$2 = $0;
   return $$2 | 0;
  }
  $26 = $0 + $1 | 0;
  HEAP32[$2 >> 2] = $3 & 1 | $1 | 2;
  HEAP32[$26 + 4 >> 2] = $24 | 3;
  HEAP32[$11 >> 2] = HEAP32[$11 >> 2] | 1;
  _dispose_chunk($26, $24);
  $$2 = $0;
  return $$2 | 0;
 }
 if ((HEAP32[6127] | 0) == ($5 | 0)) {
  $37 = (HEAP32[6124] | 0) + $4 | 0;
  $39 = $37 - $1 | 0;
  $40 = $0 + $1 | 0;
  if ($37 >>> 0 <= $1 >>> 0) {
   $$2 = 0;
   return $$2 | 0;
  }
  HEAP32[$2 >> 2] = $3 & 1 | $1 | 2;
  HEAP32[$40 + 4 >> 2] = $39 | 1;
  HEAP32[6127] = $40;
  HEAP32[6124] = $39;
  $$2 = $0;
  return $$2 | 0;
 }
 if ((HEAP32[6126] | 0) == ($5 | 0)) {
  $49 = (HEAP32[6123] | 0) + $4 | 0;
  if ($49 >>> 0 < $1 >>> 0) {
   $$2 = 0;
   return $$2 | 0;
  }
  $51 = $49 - $1 | 0;
  if ($51 >>> 0 > 15) {
   $53 = $0 + $1 | 0;
   $54 = $0 + $49 | 0;
   HEAP32[$2 >> 2] = $3 & 1 | $1 | 2;
   HEAP32[$53 + 4 >> 2] = $51 | 1;
   HEAP32[$54 >> 2] = $51;
   $60 = $54 + 4 | 0;
   HEAP32[$60 >> 2] = HEAP32[$60 >> 2] & -2;
   $storemerge = $53;
   $storemerge3 = $51;
  } else {
   HEAP32[$2 >> 2] = $3 & 1 | $49 | 2;
   $67 = $0 + $49 + 4 | 0;
   HEAP32[$67 >> 2] = HEAP32[$67 >> 2] | 1;
   $storemerge = 0;
   $storemerge3 = 0;
  }
  HEAP32[6123] = $storemerge3;
  HEAP32[6126] = $storemerge;
  $$2 = $0;
  return $$2 | 0;
 }
 if ($12 & 2 | 0) {
  $$2 = 0;
  return $$2 | 0;
 }
 $73 = ($12 & -8) + $4 | 0;
 if ($73 >>> 0 < $1 >>> 0) {
  $$2 = 0;
  return $$2 | 0;
 }
 $75 = $73 - $1 | 0;
 $76 = $12 >>> 3;
 L49 : do if ($12 >>> 0 < 256) {
  $79 = HEAP32[$5 + 8 >> 2] | 0;
  $81 = HEAP32[$5 + 12 >> 2] | 0;
  $83 = 24524 + ($76 << 1 << 2) | 0;
  if (($79 | 0) != ($83 | 0)) {
   if ($6 >>> 0 > $79 >>> 0) _abort();
   if ((HEAP32[$79 + 12 >> 2] | 0) != ($5 | 0)) _abort();
  }
  if (($81 | 0) == ($79 | 0)) {
   HEAP32[6121] = HEAP32[6121] & ~(1 << $76);
   break;
  }
  if (($81 | 0) == ($83 | 0)) $$pre$phiZ2D = $81 + 8 | 0; else {
   if ($6 >>> 0 > $81 >>> 0) _abort();
   $96 = $81 + 8 | 0;
   if ((HEAP32[$96 >> 2] | 0) == ($5 | 0)) $$pre$phiZ2D = $96; else _abort();
  }
  HEAP32[$79 + 12 >> 2] = $81;
  HEAP32[$$pre$phiZ2D >> 2] = $79;
 } else {
  $101 = HEAP32[$5 + 24 >> 2] | 0;
  $103 = HEAP32[$5 + 12 >> 2] | 0;
  do if (($103 | 0) == ($5 | 0)) {
   $114 = $5 + 16 | 0;
   $115 = $114 + 4 | 0;
   $116 = HEAP32[$115 >> 2] | 0;
   if (!$116) {
    $118 = HEAP32[$114 >> 2] | 0;
    if (!$118) {
     $$3 = 0;
     break;
    } else {
     $$1271$ph = $118;
     $$1274$ph = $114;
    }
   } else {
    $$1271$ph = $116;
    $$1274$ph = $115;
   }
   $$1271 = $$1271$ph;
   $$1274 = $$1274$ph;
   while (1) {
    $120 = $$1271 + 20 | 0;
    $121 = HEAP32[$120 >> 2] | 0;
    if (!$121) {
     $123 = $$1271 + 16 | 0;
     $124 = HEAP32[$123 >> 2] | 0;
     if (!$124) break; else {
      $$1271$be = $124;
      $$1274$be = $123;
     }
    } else {
     $$1271$be = $121;
     $$1274$be = $120;
    }
    $$1271 = $$1271$be;
    $$1274 = $$1274$be;
   }
   if ($6 >>> 0 > $$1274 >>> 0) _abort(); else {
    HEAP32[$$1274 >> 2] = 0;
    $$3 = $$1271;
    break;
   }
  } else {
   $106 = HEAP32[$5 + 8 >> 2] | 0;
   if ($6 >>> 0 > $106 >>> 0) _abort();
   $108 = $106 + 12 | 0;
   if ((HEAP32[$108 >> 2] | 0) != ($5 | 0)) _abort();
   $111 = $103 + 8 | 0;
   if ((HEAP32[$111 >> 2] | 0) == ($5 | 0)) {
    HEAP32[$108 >> 2] = $103;
    HEAP32[$111 >> 2] = $106;
    $$3 = $103;
    break;
   } else _abort();
  } while (0);
  if ($101 | 0) {
   $129 = HEAP32[$5 + 28 >> 2] | 0;
   $130 = 24788 + ($129 << 2) | 0;
   do if ((HEAP32[$130 >> 2] | 0) == ($5 | 0)) {
    HEAP32[$130 >> 2] = $$3;
    if (!$$3) {
     HEAP32[6122] = HEAP32[6122] & ~(1 << $129);
     break L49;
    }
   } else if ((HEAP32[6125] | 0) >>> 0 > $101 >>> 0) _abort(); else {
    $139 = $101 + 16 | 0;
    HEAP32[((HEAP32[$139 >> 2] | 0) == ($5 | 0) ? $139 : $101 + 20 | 0) >> 2] = $$3;
    if (!$$3) break L49; else break;
   } while (0);
   $144 = HEAP32[6125] | 0;
   if ($144 >>> 0 > $$3 >>> 0) _abort();
   HEAP32[$$3 + 24 >> 2] = $101;
   $147 = $5 + 16 | 0;
   $148 = HEAP32[$147 >> 2] | 0;
   do if ($148 | 0) if ($144 >>> 0 > $148 >>> 0) _abort(); else {
    HEAP32[$$3 + 16 >> 2] = $148;
    HEAP32[$148 + 24 >> 2] = $$3;
    break;
   } while (0);
   $154 = HEAP32[$147 + 4 >> 2] | 0;
   if ($154 | 0) if ((HEAP32[6125] | 0) >>> 0 > $154 >>> 0) _abort(); else {
    HEAP32[$$3 + 20 >> 2] = $154;
    HEAP32[$154 + 24 >> 2] = $$3;
    break;
   }
  }
 } while (0);
 if ($75 >>> 0 < 16) {
  HEAP32[$2 >> 2] = $3 & 1 | $73 | 2;
  $165 = $0 + $73 + 4 | 0;
  HEAP32[$165 >> 2] = HEAP32[$165 >> 2] | 1;
  $$2 = $0;
  return $$2 | 0;
 } else {
  $168 = $0 + $1 | 0;
  HEAP32[$2 >> 2] = $3 & 1 | $1 | 2;
  HEAP32[$168 + 4 >> 2] = $75 | 3;
  $175 = $0 + $73 + 4 | 0;
  HEAP32[$175 >> 2] = HEAP32[$175 >> 2] | 1;
  _dispose_chunk($168, $75);
  $$2 = $0;
  return $$2 | 0;
 }
 return 0;
}

function __ZN2ut4arch26SharedComponentDataManager15removeReferenceEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $$02832$i$i$i = 0, $$02833$i$i$i = 0, $$02833$us$i$i$i = 0, $$pre$phi$i$iZ2D = 0, $$sroa$0$0$i$i$i = 0, $$sroa$012$033 = 0, $$sroa$06$0$i$i = 0, $$sroa$06$1$i$i = 0, $10 = 0, $100 = 0, $103 = 0, $108 = 0, $109 = 0, $111 = 0, $113 = 0, $118 = 0, $121 = 0, $122 = 0, $127 = 0, $128 = 0, $13 = 0, $14 = 0, $19 = 0, $24 = 0, $26 = 0, $28 = 0, $30 = 0, $36 = 0, $37 = 0, $41 = 0, $42 = 0, $5 = 0, $50 = 0, $55 = 0, $6 = 0, $60 = 0, $62 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $77 = 0, $78 = 0, $79 = 0, $81 = 0, $86 = 0, $87 = 0, $89 = 0, $94 = 0, $99 = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 if (!$1) {
  STACKTOP = sp;
  return;
 }
 $5 = (HEAP32[$0 + 48 >> 2] | 0) + ($1 << 2) | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $7 = $6 + -1 | 0;
 HEAP32[$5 >> 2] = $7;
 if (!$6) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9480, 10927, 117);
 }
 if ($7 | 0) {
  STACKTOP = sp;
  return;
 }
 $10 = __ZN2ut4arch26SharedComponentDataManager16hashCodeForIndexEi($0, $1) | 0;
 $13 = (HEAP32[$0 + 36 >> 2] | 0) + ($1 << 2) | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 HEAP32[$13 >> 2] = 0;
 if ($14 | 0) __ZdaPv($14);
 HEAP32[(HEAP32[$0 + 72 >> 2] | 0) + ($1 << 2) >> 2] = -1;
 $19 = $0 + 84 | 0;
 HEAP32[(HEAP32[$0 + 60 >> 2] | 0) + ($1 << 2) >> 2] = HEAP32[$19 >> 2];
 HEAP32[$19 >> 2] = $1;
 $24 = $0 + 16 | 0;
 $26 = HEAP32[$0 + 20 >> 2] | 0;
 L13 : do if (!$26) {
  $$sroa$06$1$i$i = 0;
  $68 = 0;
 } else {
  $28 = $26 + -1 | 0;
  $30 = ($28 & $26 | 0) == 0;
  if ($30) $36 = $28 & $10; else if ($10 >>> 0 < $26 >>> 0) $36 = $10; else $36 = ($10 >>> 0) % ($26 >>> 0) | 0;
  $37 = HEAP32[(HEAP32[$24 >> 2] | 0) + ($36 << 2) >> 2] | 0;
  if (!$37) {
   $$sroa$06$1$i$i = 0;
   $68 = 0;
  } else {
   $$02832$i$i$i = HEAP32[$37 >> 2] | 0;
   if (!$$02832$i$i$i) {
    $$sroa$06$1$i$i = 0;
    $68 = 0;
   } else {
    L22 : do if ($30) {
     $$02833$us$i$i$i = $$02832$i$i$i;
     while (1) {
      $41 = HEAP32[$$02833$us$i$i$i + 4 >> 2] | 0;
      $42 = ($41 | 0) == ($10 | 0);
      if (!($42 | ($41 & $28 | 0) == ($36 | 0))) {
       $$sroa$06$1$i$i = 0;
       $68 = 0;
       break L13;
      }
      if ($42) if ((HEAP32[$$02833$us$i$i$i + 8 >> 2] | 0) == ($10 | 0)) {
       $$sroa$0$0$i$i$i = $$02833$us$i$i$i;
       break L22;
      }
      $$02833$us$i$i$i = HEAP32[$$02833$us$i$i$i >> 2] | 0;
      if (!$$02833$us$i$i$i) {
       $$sroa$06$1$i$i = 0;
       $68 = 0;
       break L13;
      }
     }
    } else {
     $$02833$i$i$i = $$02832$i$i$i;
     while (1) {
      $50 = HEAP32[$$02833$i$i$i + 4 >> 2] | 0;
      if (($50 | 0) == ($10 | 0)) {
       if ((HEAP32[$$02833$i$i$i + 8 >> 2] | 0) == ($10 | 0)) {
        $$sroa$0$0$i$i$i = $$02833$i$i$i;
        break L22;
       }
      } else {
       if ($50 >>> 0 < $26 >>> 0) $55 = $50; else $55 = ($50 >>> 0) % ($26 >>> 0) | 0;
       if (($55 | 0) != ($36 | 0)) {
        $$sroa$06$1$i$i = 0;
        $68 = 0;
        break L13;
       }
      }
      $$02833$i$i$i = HEAP32[$$02833$i$i$i >> 2] | 0;
      if (!$$02833$i$i$i) {
       $$sroa$06$1$i$i = 0;
       $68 = 0;
       break L13;
      }
     }
    } while (0);
    $60 = $$sroa$0$0$i$i$i;
    $$sroa$06$0$i$i = $60;
    while (1) {
     $62 = HEAP32[$$sroa$06$0$i$i >> 2] | 0;
     if (!$62) {
      $$sroa$06$1$i$i = 0;
      $68 = $60;
      break L13;
     }
     if ((HEAP32[$62 + 8 >> 2] | 0) == ($10 | 0)) $$sroa$06$0$i$i = $62; else {
      $$sroa$06$1$i$i = $62;
      $68 = $60;
      break;
     }
    }
   }
  }
 } while (0);
 $69 = $68;
 $70 = $$sroa$06$1$i$i;
 if (($69 | 0) == ($70 | 0)) {
  _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9506, 10927, 138);
 }
 $$sroa$012$033 = $68;
 $77 = $69;
 while (1) {
  if ((HEAP32[$$sroa$012$033 + 12 >> 2] | 0) == ($1 | 0)) break;
  $127 = HEAP32[$$sroa$012$033 >> 2] | 0;
  $128 = $127;
  if (($128 | 0) == ($70 | 0)) {
   label = 63;
   break;
  } else {
   $$sroa$012$033 = $127;
   $77 = $128;
  }
 }
 if ((label | 0) == 63) {
  _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9506, 10927, 138);
 }
 $78 = HEAP32[$77 + 4 >> 2] | 0;
 $79 = $26 + -1 | 0;
 $81 = ($79 & $26 | 0) == 0;
 if ($81) $87 = $78 & $79; else if ($78 >>> 0 < $26 >>> 0) $87 = $78; else $87 = ($78 >>> 0) % ($26 >>> 0) | 0;
 $86 = (HEAP32[$24 >> 2] | 0) + ($87 << 2) | 0;
 $$0$i$i = HEAP32[$86 >> 2] | 0;
 while (1) {
  $89 = HEAP32[$$0$i$i >> 2] | 0;
  if (($89 | 0) == ($77 | 0)) break; else $$0$i$i = $89;
 }
 if (($$0$i$i | 0) == ($0 + 24 | 0)) label = 46; else {
  $94 = HEAP32[$$0$i$i + 4 >> 2] | 0;
  if ($81) $99 = $94 & $79; else if ($94 >>> 0 < $26 >>> 0) $99 = $94; else $99 = ($94 >>> 0) % ($26 >>> 0) | 0;
  if (($99 | 0) == ($87 | 0)) $$pre$phi$i$iZ2D = $77; else label = 46;
 }
 do if ((label | 0) == 46) {
  $100 = HEAP32[$77 >> 2] | 0;
  if ($100 | 0) {
   $103 = HEAP32[$100 + 4 >> 2] | 0;
   if ($81) $108 = $103 & $79; else if ($103 >>> 0 < $26 >>> 0) $108 = $103; else $108 = ($103 >>> 0) % ($26 >>> 0) | 0;
   if (($108 | 0) == ($87 | 0)) {
    $$pre$phi$i$iZ2D = $77;
    break;
   }
  }
  HEAP32[$86 >> 2] = 0;
  $$pre$phi$i$iZ2D = $77;
 } while (0);
 $109 = HEAP32[$$pre$phi$i$iZ2D >> 2] | 0;
 $111 = $109;
 if (!$109) $121 = $111; else {
  $113 = HEAP32[$109 + 4 >> 2] | 0;
  if ($81) $118 = $113 & $79; else if ($113 >>> 0 < $26 >>> 0) $118 = $113; else $118 = ($113 >>> 0) % ($26 >>> 0) | 0;
  if (($118 | 0) == ($87 | 0)) $121 = $111; else {
   HEAP32[(HEAP32[$24 >> 2] | 0) + ($118 << 2) >> 2] = $$0$i$i;
   $121 = HEAP32[$$sroa$012$033 >> 2] | 0;
  }
 }
 HEAP32[$$0$i$i >> 2] = $121;
 HEAP32[$$pre$phi$i$iZ2D >> 2] = 0;
 $122 = $0 + 28 | 0;
 HEAP32[$122 >> 2] = (HEAP32[$122 >> 2] | 0) + -1;
 if (!$$sroa$012$033) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv($$sroa$012$033);
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$idx$i = 0, $$067 = 0, $$1 = 0, $101 = 0, $103 = 0, $12 = 0, $13 = 0, $14 = 0, $17 = 0, $21 = 0, $23 = 0, $24 = 0, $29 = 0, $3 = 0, $30 = 0, $34 = 0, $36 = 0, $4 = 0, $43 = 0, $44 = 0, $46 = 0, $50 = 0, $53 = 0, $54 = 0, $59 = 0, $60 = 0, $64 = 0, $66 = 0, $71 = 0, $8 = 0, $80 = 0, $81 = 0, $84 = 0, $85 = 0, $89 = 0, $90 = 0, $91 = 0, $96 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $3 = sp + 8 | 0;
 $4 = sp;
 L1 : do if (($0 | 0) == ($1 | 0)) $$1 = $0; else switch (HEAP8[$0 >> 0] | 0) {
 case 84:
  {
   $8 = $2 + 4 | 0;
   $12 = ((HEAP32[$8 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
   $13 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
   $14 = HEAP32[$8 >> 2] | 0;
   $17 = ($14 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
   $21 = $14;
   if (($13 | 0) != ($0 | 0) & ($17 | 0) == ($12 + 1 | 0)) {
    HEAP32[$4 >> 2] = HEAP32[$2 + 12 >> 2];
    __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($3, $21 + -24 | 0, $4);
    $23 = $2 + 20 | 0;
    $24 = HEAP32[$23 >> 2] | 0;
    if ($24 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
     HEAP32[$24 >> 2] = 0;
     $29 = $24 + 4 | 0;
     HEAP32[$29 >> 2] = 0;
     $30 = $24 + 8 | 0;
     HEAP32[$30 >> 2] = 0;
     HEAP32[$24 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
     HEAP32[$24 >> 2] = HEAP32[$3 >> 2];
     $34 = $3 + 4 | 0;
     HEAP32[$29 >> 2] = HEAP32[$34 >> 2];
     $36 = $3 + 8 | 0;
     HEAP32[$30 >> 2] = HEAP32[$36 >> 2];
     HEAP32[$36 >> 2] = 0;
     HEAP32[$34 >> 2] = 0;
     HEAP32[$3 >> 2] = 0;
     HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 16;
    } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $3);
    __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($3);
    $$1 = $13;
    break L1;
   }
   $$067 = $17;
   $43 = $21;
   while (1) {
    if (($$067 | 0) == ($12 | 0)) {
     $$1 = $0;
     break L1;
    }
    $$0$i$i$idx$i = 0;
    while (1) {
     if (($$0$i$i$idx$i | 0) == -1) break;
     $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($43 + ($$0$i$i$add$i * 24 | 0) | 0);
     $$0$i$i$idx$i = $$0$i$i$add$i;
    }
    $44 = $43 + -24 | 0;
    HEAP32[$8 >> 2] = $44;
    $$067 = $$067 + -1 | 0;
    $43 = $44;
   }
   break;
  }
 case 68:
  {
   $46 = __ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
   if (($46 | 0) == ($0 | 0)) {
    $$1 = $0;
    break L1;
   }
   $50 = HEAP32[$2 + 4 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($50 | 0)) {
    $$1 = $0;
    break L1;
   }
   HEAP32[$4 >> 2] = HEAP32[$2 + 12 >> 2];
   __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($3, $50 + -24 | 0, $4);
   $53 = $2 + 20 | 0;
   $54 = HEAP32[$53 >> 2] | 0;
   if ($54 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
    HEAP32[$54 >> 2] = 0;
    $59 = $54 + 4 | 0;
    HEAP32[$59 >> 2] = 0;
    $60 = $54 + 8 | 0;
    HEAP32[$60 >> 2] = 0;
    HEAP32[$54 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
    HEAP32[$54 >> 2] = HEAP32[$3 >> 2];
    $64 = $3 + 4 | 0;
    HEAP32[$59 >> 2] = HEAP32[$64 >> 2];
    $66 = $3 + 8 | 0;
    HEAP32[$60 >> 2] = HEAP32[$66 >> 2];
    HEAP32[$66 >> 2] = 0;
    HEAP32[$64 >> 2] = 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$53 >> 2] = (HEAP32[$53 >> 2] | 0) + 16;
   } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $3);
   __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($3);
   $$1 = $46;
   break L1;
   break;
  }
 case 83:
  {
   $71 = __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
   if (($71 | 0) != ($0 | 0)) {
    $$1 = $71;
    break L1;
   }
   if (($1 - $0 | 0) <= 2) {
    $$1 = $0;
    break L1;
   }
   if ((HEAP8[$0 + 1 >> 0] | 0) != 116) {
    $$1 = $0;
    break L1;
   }
   $80 = $0 + 2 | 0;
   $81 = __ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_($80, $1, $2) | 0;
   if (($81 | 0) == ($80 | 0)) {
    $$1 = $0;
    break L1;
   }
   $84 = $2 + 4 | 0;
   $85 = HEAP32[$84 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($85 | 0)) {
    $$1 = $0;
    break L1;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($85 + -24 | 0, 0, 22571) | 0;
   $89 = (HEAP32[$84 >> 2] | 0) + -24 | 0;
   HEAP32[$4 >> 2] = HEAP32[$2 + 12 >> 2];
   __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($3, $89, $4);
   $90 = $2 + 20 | 0;
   $91 = HEAP32[$90 >> 2] | 0;
   if ($91 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
    HEAP32[$91 >> 2] = 0;
    $96 = $91 + 4 | 0;
    HEAP32[$96 >> 2] = 0;
    $97 = $91 + 8 | 0;
    HEAP32[$97 >> 2] = 0;
    HEAP32[$91 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
    HEAP32[$91 >> 2] = HEAP32[$3 >> 2];
    $101 = $3 + 4 | 0;
    HEAP32[$96 >> 2] = HEAP32[$101 >> 2];
    $103 = $3 + 8 | 0;
    HEAP32[$97 >> 2] = HEAP32[$103 >> 2];
    HEAP32[$103 >> 2] = 0;
    HEAP32[$101 >> 2] = 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$90 >> 2] = (HEAP32[$90 >> 2] | 0) + 16;
   } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $3);
   __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($3);
   $$1 = $81;
   break L1;
   break;
  }
 default:
  {
   $$1 = $0;
   break L1;
  }
 } while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZN2ut12ManagerWorld18debugCheckEntitiesEb($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$02861 = 0, $$049$lcssa = 0, $$04968 = 0, $$050$lcssa = 0, $$05067 = 0, $$051$lcssa = 0, $$05166 = 0, $$065 = 0, $$069 = 0, $$1$lcssa = 0, $$152$lcssa = 0, $$15259 = 0, $$160 = 0, $$pr = 0, $$pre = 0, $15 = 0, $16 = 0, $20 = 0, $21 = 0, $26 = 0, $29 = 0, $31 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $41 = 0, $53 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $9 = 0, $storemerge55 = 0, $storemerge55$us = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer13 = 0, $vararg_buffer15 = 0, $vararg_buffer17 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $vararg_buffer17 = sp + 72 | 0;
 $vararg_buffer15 = sp + 64 | 0;
 $vararg_buffer13 = sp + 56 | 0;
 $vararg_buffer11 = sp + 48 | 0;
 $vararg_buffer7 = sp + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $$065 = HEAP32[(HEAP32[$0 + 4 >> 2] | 0) + 48 >> 2] | 0;
 L1 : do if (!$$065) {
  $$049$lcssa = 0;
  $$050$lcssa = 0;
  $$051$lcssa = 0;
 } else {
  $$04968 = 0;
  $$05067 = 0;
  $$05166 = 0;
  $$069 = $$065;
  L3 : while (1) {
   $6 = $$04968 + 1 | 0;
   $7 = $$069 + 32 | 0;
   $9 = HEAP32[HEAP32[$7 >> 2] >> 2] | 0;
   if (!(HEAP8[24208] | 0)) {
    if (!(HEAP8[24216] | 0)) {
     $15 = HEAP32[(__ZN2ut20InitComponentInfoForINS_6EntityEEERNS_13ComponentInfoEv() | 0) >> 2] | 0;
     HEAP32[6115] = $15;
     $16 = 24216;
     HEAP32[$16 >> 2] = 1;
     HEAP32[$16 + 4 >> 2] = 0;
     $20 = $15;
    } else $20 = HEAP32[6115] | 0;
    HEAP32[6114] = $20;
    $21 = 24208;
    HEAP32[$21 >> 2] = 1;
    HEAP32[$21 + 4 >> 2] = 0;
    $26 = $20;
   } else $26 = HEAP32[6114] | 0;
   if (($9 | 0) != ($26 | 0)) {
    label = 10;
    break;
   }
   $29 = HEAP32[(HEAP32[$7 >> 2] | 0) + 8 >> 2] | 0;
   $31 = HEAP32[$$069 + 4 >> 2] | 0;
   if (($31 | 0) == ($$069 | 0) | ($31 | 0) == 0) {
    $$1$lcssa = $$05067;
    $$152$lcssa = $$05166;
   } else {
    $$02861 = $31;
    $$15259 = $$05166;
    $$160 = $$05067;
    while (1) {
     $35 = $$15259 + 1 | 0;
     $36 = $$02861 + 24 | 0;
     $37 = HEAP32[$36 >> 2] | 0;
     $38 = $37 + $$160 | 0;
     $39 = $$02861 + 48 + $29 | 0;
     L18 : do if (($37 | 0) > 0) {
      if (!$1) {
       $storemerge55$us = 0;
       while (1) {
        $41 = $39 + ($storemerge55$us << 3) + 4 | 0;
        if ((HEAP32[$41 >> 2] | 0) <= 0) {
         label = 18;
         break L3;
        }
        if ((HEAP32[$39 + ($storemerge55$us << 3) >> 2] | 0) >= 65536) {
         label = 20;
         break L3;
        }
        if ((HEAP32[$41 >> 2] | 0) >= 65536) {
         label = 22;
         break L3;
        }
        $storemerge55$us = $storemerge55$us + 1 | 0;
        if (($storemerge55$us | 0) >= (HEAP32[$36 >> 2] | 0)) break L18;
       }
      }
      $storemerge55 = 0;
      do {
       $58 = $39 + ($storemerge55 << 3) + 4 | 0;
       $59 = HEAP32[$58 >> 2] | 0;
       $$pre = HEAP32[$39 + ($storemerge55 << 3) >> 2] | 0;
       if (($59 | 0) != 0 & ($$pre | 0) < 65536) $$pr = $59; else {
        HEAP32[$vararg_buffer7 >> 2] = $$pre;
        HEAP32[$vararg_buffer7 + 4 >> 2] = $59;
        HEAP32[$vararg_buffer7 + 8 >> 2] = $storemerge55;
        _printf(18367, $vararg_buffer7) | 0;
        $$pr = HEAP32[$58 >> 2] | 0;
       }
       if (($$pr | 0) <= 0) {
        label = 28;
        break L3;
       }
       if ((HEAP32[$39 + ($storemerge55 << 3) >> 2] | 0) >= 65536) {
        label = 30;
        break L3;
       }
       if ((HEAP32[$58 >> 2] | 0) >= 65536) {
        label = 32;
        break L3;
       }
       $storemerge55 = $storemerge55 + 1 | 0;
      } while (($storemerge55 | 0) < (HEAP32[$36 >> 2] | 0));
     } while (0);
     $53 = HEAP32[$$02861 + 4 >> 2] | 0;
     $$02861 = ($53 | 0) == (HEAP32[$$02861 + 16 >> 2] | 0) ? 0 : $53;
     if (!$$02861) {
      $$1$lcssa = $38;
      $$152$lcssa = $35;
      break;
     } else {
      $$15259 = $35;
      $$160 = $38;
     }
    }
   }
   $$069 = HEAP32[$$069 + 108 >> 2] | 0;
   if (!$$069) {
    $$049$lcssa = $6;
    $$050$lcssa = $$1$lcssa;
    $$051$lcssa = $$152$lcssa;
    break L1;
   } else {
    $$04968 = $6;
    $$05067 = $$1$lcssa;
    $$05166 = $$152$lcssa;
   }
  }
  if ((label | 0) == 10) {
   _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 18176, 18225, 57);
  } else if ((label | 0) == 18) {
   _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 18297, 18225, 70);
  } else if ((label | 0) == 20) {
   _snprintf(25060, 1024, 27124, $vararg_buffer3) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 18317, 18225, 71);
  } else if ((label | 0) == 22) {
   _snprintf(25060, 1024, 27124, $vararg_buffer5) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 18341, 18225, 72);
  } else if ((label | 0) == 28) {
   _snprintf(25060, 1024, 27124, $vararg_buffer11) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 18297, 18225, 70);
  } else if ((label | 0) == 30) {
   _snprintf(25060, 1024, 27124, $vararg_buffer13) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 18317, 18225, 71);
  } else if ((label | 0) == 32) {
   _snprintf(25060, 1024, 27124, $vararg_buffer15) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 18341, 18225, 72);
  }
 } while (0);
 if (!$1) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$vararg_buffer17 >> 2] = $$049$lcssa;
 HEAP32[$vararg_buffer17 + 4 >> 2] = $$051$lcssa;
 HEAP32[$vararg_buffer17 + 8 >> 2] = $$050$lcssa;
 _printf(18419, $vararg_buffer17) | 0;
 STACKTOP = sp;
 return;
}

function __ZN2ut9Scheduler3runENSt3__26chrono10time_pointINS2_12steady_clockENS2_8durationIxNS1_5ratioILx1ELx1000000000EEEEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre$phi11$iZ2D = 0, $$sink$i = 0.0, $$sroa$0$0$$sroa_idx$i2$i = 0, $$sroa$0$0$$sroa_idx$i2$i$i = 0, $$sroa$0$0$$sroa_idx$i2$i18 = 0, $$sroa$027$038 = 0, $100 = 0, $101 = 0, $103 = 0, $106 = 0, $107 = 0, $109 = 0, $11 = 0, $115 = 0, $117 = 0, $12 = 0, $123 = 0, $127 = 0, $131 = 0, $132 = 0, $134 = 0, $14 = 0, $140 = 0, $142 = 0, $152 = 0, $153 = 0, $155 = 0, $161 = 0, $163 = 0, $168 = 0, $2 = 0, $20 = 0, $22 = 0, $26 = 0, $28 = 0, $29 = 0, $31 = 0, $37 = 0, $39 = 0, $4 = 0, $46 = 0, $48 = 0, $51 = 0, $52 = 0, $58 = 0, $6 = 0, $62 = 0, $7 = 0, $70 = 0.0, $73 = 0, $75 = 0, $78 = 0, $79 = 0, $86 = 0, $91 = 0, $92 = 0, $95 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 _emscripten_asm_const_i(5) | 0;
 $4 = $0 + 92 | 0;
 switch (HEAP32[$4 >> 2] | 0) {
 case 0:
  break;
 case 1:
  {
   HEAP32[$4 >> 2] = 2;
   STACKTOP = sp;
   return;
  }
 case 3:
  {
   HEAP32[$4 >> 2] = 1;
   break;
  }
 case 2:
  {
   STACKTOP = sp;
   return;
  }
 default:
  {
   _snprintf(25060, 1024, 17818, sp + 8 | 0) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 23477, 17842, 315);
  }
 }
 $6 = $0 + 76 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 if ($7 | 0) {
  $11 = HEAP32[(HEAP32[$7 >> 2] | 0) + 8 >> 2] | 0;
  $12 = __ZNSt3__26chrono12steady_clock3nowEv() | 0;
  $$sroa$0$0$$sroa_idx$i2$i = $0 + 16 | 0;
  $14 = $$sroa$0$0$$sroa_idx$i2$i;
  $20 = _i64Subtract($12 | 0, tempRet0 | 0, HEAP32[$14 >> 2] | 0, HEAP32[$14 + 4 >> 2] | 0) | 0;
  $22 = $2;
  HEAP32[$22 >> 2] = $20;
  HEAP32[$22 + 4 >> 2] = tempRet0;
  FUNCTION_TABLE_vii[$11 & 15]($7, $2);
  $26 = HEAP32[$6 >> 2] | 0;
  $28 = HEAP32[HEAP32[$26 >> 2] >> 2] | 0;
  $29 = __ZNSt3__26chrono12steady_clock3nowEv() | 0;
  $31 = $$sroa$0$0$$sroa_idx$i2$i;
  $37 = _i64Subtract($29 | 0, tempRet0 | 0, HEAP32[$31 >> 2] | 0, HEAP32[$31 + 4 >> 2] | 0) | 0;
  $39 = $2;
  HEAP32[$39 >> 2] = $37;
  HEAP32[$39 + 4 >> 2] = tempRet0;
  FUNCTION_TABLE_viii[$28 & 31]($26, $2, $0 + 4 | 0);
 }
 if (!(HEAP32[$4 >> 2] | 0)) {
  $46 = $1;
  $48 = HEAP32[$46 >> 2] | 0;
  $51 = HEAP32[$46 + 4 >> 2] | 0;
  $$sroa$0$0$$sroa_idx$i2$i$i = $0 + 24 | 0;
  $52 = $$sroa$0$0$$sroa_idx$i2$i$i;
  $58 = _i64Subtract($48 | 0, $51 | 0, HEAP32[$52 >> 2] | 0, HEAP32[$52 + 4 >> 2] | 0) | 0;
  $$pre$phi11$iZ2D = $$sroa$0$0$$sroa_idx$i2$i$i;
  $$sink$i = (+($58 >>> 0) + 4294967296.0 * +(tempRet0 | 0)) / 1.0e9;
  $75 = $48;
  $78 = $51;
 } else {
  $62 = $1;
  $$pre$phi11$iZ2D = $0 + 24 | 0;
  $$sink$i = .016666666666666666;
  $75 = HEAP32[$62 >> 2] | 0;
  $78 = HEAP32[$62 + 4 >> 2] | 0;
 }
 $70 = $$sink$i < 1.0e-05 ? 1.0e-05 : $$sink$i;
 HEAPF64[$0 + 32 >> 3] = $70 < 1.0 ? $70 : 1.0;
 $73 = $$pre$phi11$iZ2D;
 HEAP32[$73 >> 2] = $75;
 HEAP32[$73 + 4 >> 2] = $78;
 $79 = $0 + 80 | 0;
 __ZNSt3__26vectorIN2ut9Scheduler15ScheduledSystemENS_9allocatorIS3_EEE7reserveEj($79, ((HEAP32[$0 + 64 >> 2] | 0) - (HEAP32[$0 + 60 >> 2] | 0) | 0) / 40 | 0);
 $86 = __ZN2ut9Scheduler7resolveEv($0) | 0;
 if (($79 | 0) != ($86 | 0)) __ZNSt3__26vectorIN2ut9Scheduler15ScheduledSystemENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_($79, HEAP32[$86 >> 2] | 0, HEAP32[$86 + 4 >> 2] | 0);
 $91 = HEAP32[$79 >> 2] | 0;
 $92 = $0 + 84 | 0;
 if (($91 | 0) != (HEAP32[$92 >> 2] | 0)) {
  $$sroa$0$0$$sroa_idx$i2$i18 = $0 + 16 | 0;
  $$sroa$027$038 = $91;
  do {
   if (HEAP8[$$sroa$027$038 + 36 >> 0] | 0) {
    $100 = $$sroa$027$038 + 16 | 0;
    $101 = HEAP32[$100 >> 2] | 0;
    if ($101 | 0) {
     $103 = HEAP32[$6 >> 2] | 0;
     if (!$103) $123 = $101; else {
      $106 = HEAP32[HEAP32[$103 >> 2] >> 2] | 0;
      $107 = __ZNSt3__26chrono12steady_clock3nowEv() | 0;
      $109 = $$sroa$0$0$$sroa_idx$i2$i18;
      $115 = _i64Subtract($107 | 0, tempRet0 | 0, HEAP32[$109 >> 2] | 0, HEAP32[$109 + 4 >> 2] | 0) | 0;
      $117 = $2;
      HEAP32[$117 >> 2] = $115;
      HEAP32[$117 + 4 >> 2] = tempRet0;
      FUNCTION_TABLE_viii[$106 & 31]($103, $2, $$sroa$027$038 + 4 | 0);
      $123 = HEAP32[$100 >> 2] | 0;
     }
     FUNCTION_TABLE_viii[HEAP32[(HEAP32[$123 >> 2] | 0) + 12 >> 2] & 31]($123, $0, HEAP32[$0 >> 2] | 0);
     $127 = HEAP32[$6 >> 2] | 0;
     if ($127 | 0) {
      $131 = HEAP32[(HEAP32[$127 >> 2] | 0) + 4 >> 2] | 0;
      $132 = __ZNSt3__26chrono12steady_clock3nowEv() | 0;
      $134 = $$sroa$0$0$$sroa_idx$i2$i18;
      $140 = _i64Subtract($132 | 0, tempRet0 | 0, HEAP32[$134 >> 2] | 0, HEAP32[$134 + 4 >> 2] | 0) | 0;
      $142 = $2;
      HEAP32[$142 >> 2] = $140;
      HEAP32[$142 + 4 >> 2] = tempRet0;
      FUNCTION_TABLE_viii[$131 & 31]($127, $2, $$sroa$027$038 + 4 | 0);
     }
    }
   }
   $$sroa$027$038 = $$sroa$027$038 + 40 | 0;
  } while (($$sroa$027$038 | 0) != (HEAP32[$92 >> 2] | 0));
 }
 $95 = HEAP32[$6 >> 2] | 0;
 if (!$95) {
  STACKTOP = sp;
  return;
 }
 $152 = HEAP32[(HEAP32[$95 >> 2] | 0) + 4 >> 2] | 0;
 $153 = __ZNSt3__26chrono12steady_clock3nowEv() | 0;
 $155 = $0 + 16 | 0;
 $161 = _i64Subtract($153 | 0, tempRet0 | 0, HEAP32[$155 >> 2] | 0, HEAP32[$155 + 4 >> 2] | 0) | 0;
 $163 = $2;
 HEAP32[$163 >> 2] = $161;
 HEAP32[$163 + 4 >> 2] = tempRet0;
 FUNCTION_TABLE_viii[$152 & 31]($95, $2, $0 + 4 | 0);
 $168 = HEAP32[$6 >> 2] | 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$168 >> 2] | 0) + 12 >> 2] & 63]($168);
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_19base_nameINSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEEEET_RS9_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0$i$i = 0, $$032$ph = 0, $$032$ph$be = 0, $$034 = 0, $$034$ph = 0, $$1 = 0, $$2 = 0, $$2$pn = 0, $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $30 = 0, $31 = 0, $40 = 0, $41 = 0, $43 = 0, $44 = 0, $5 = 0, $50 = 0, $51 = 0, $53 = 0, $54 = 0, $56 = 0, $60 = 0, $66 = 0, label = 0;
 $2 = $1 + 11 | 0;
 $3 = HEAP8[$2 >> 0] | 0;
 $5 = $1 + 4 | 0;
 L1 : do if (!(($3 << 24 >> 24 < 0 ? HEAP32[$5 >> 2] | 0 : $3 & 255) | 0)) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($0, $1); else {
  $10 = __ZNSt3__211char_traitsIcE6lengthEPKc(23097) | 0;
  $11 = HEAP8[$2 >> 0] | 0;
  if (($10 | 0) == (($11 << 24 >> 24 < 0 ? HEAP32[$5 >> 2] | 0 : $11 & 255) | 0)) if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEjjPKcj($1, 23097, $10) | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc($1, 23109);
   HEAP32[$0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0, 23180, __ZNSt3__211char_traitsIcE6lengthEPKc(23180) | 0);
   break;
  }
  $20 = __ZNSt3__211char_traitsIcE6lengthEPKc(23193) | 0;
  $21 = HEAP8[$2 >> 0] | 0;
  if (($20 | 0) == (($21 << 24 >> 24 < 0 ? HEAP32[$5 >> 2] | 0 : $21 & 255) | 0)) if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEjjPKcj($1, 23193, $20) | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc($1, 23206);
   HEAP32[$0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0, 23256, __ZNSt3__211char_traitsIcE6lengthEPKc(23256) | 0);
   break;
  }
  $30 = __ZNSt3__211char_traitsIcE6lengthEPKc(23270) | 0;
  $31 = HEAP8[$2 >> 0] | 0;
  if (($30 | 0) == (($31 << 24 >> 24 < 0 ? HEAP32[$5 >> 2] | 0 : $31 & 255) | 0)) if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEjjPKcj($1, 23270, $30) | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc($1, 23283);
   HEAP32[$0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0, 23333, __ZNSt3__211char_traitsIcE6lengthEPKc(23333) | 0);
   break;
  }
  $40 = __ZNSt3__211char_traitsIcE6lengthEPKc(23347) | 0;
  $41 = HEAP8[$2 >> 0] | 0;
  $43 = HEAP32[$5 >> 2] | 0;
  $44 = $41 & 255;
  do if (($40 | 0) == (($41 << 24 >> 24 < 0 ? $43 : $44) | 0)) if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEjjPKcj($1, 23347, $40) | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc($1, 23361);
   HEAP32[$0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0, 23412, __ZNSt3__211char_traitsIcE6lengthEPKc(23412) | 0);
   break L1;
  } else {
   $$pre = HEAP8[$2 >> 0] | 0;
   $$pre$phiZ2D = $$pre & 255;
   $51 = $$pre;
   $54 = HEAP32[$5 >> 2] | 0;
   break;
  } else {
   $$pre$phiZ2D = $44;
   $51 = $41;
   $54 = $43;
  } while (0);
  $50 = $51 << 24 >> 24 < 0;
  $53 = $50 ? HEAP32[$1 >> 2] | 0 : $1;
  $56 = $53 + ($50 ? $54 : $$pre$phiZ2D) | 0;
  do if ((HEAP8[$56 + -1 >> 0] | 0) == 62) {
   $$032$ph = 1;
   $$034$ph = $56;
   L24 : while (1) {
    $$034 = $$034$ph;
    L26 : while (1) {
     $60 = $$034 + -1 | 0;
     if (($60 | 0) == ($53 | 0)) break L24;
     switch (HEAP8[$$034 + -2 >> 0] | 0) {
     case 60:
      {
       label = 24;
       break L26;
       break;
      }
     case 62:
      {
       label = 25;
       break L26;
       break;
      }
     default:
      $$034 = $60;
     }
    }
    if ((label | 0) == 24) {
     label = 0;
     $66 = $$032$ph + -1 | 0;
     if (!$66) {
      label = 27;
      break;
     } else $$032$ph$be = $66;
    } else if ((label | 0) == 25) {
     label = 0;
     $$032$ph$be = $$032$ph + 1 | 0;
    }
    $$032$ph = $$032$ph$be;
    $$034$ph = $60;
   }
   if ((label | 0) == 27) {
    $$2 = $$034 + -2 | 0;
    break;
   };
   HEAP32[$0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   $$0$i$i = 0;
   while (1) {
    if (($$0$i$i | 0) == 3) break L1;
    HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
    $$0$i$i = $$0$i$i + 1 | 0;
   }
  } else $$2 = $56; while (0);
  $$2$pn = $$2;
  while (1) {
   $$0 = $$2$pn + -1 | 0;
   if (($$0 | 0) == ($53 | 0)) {
    $$1 = $53;
    break;
   }
   if ((HEAP8[$$0 >> 0] | 0) == 58) {
    $$1 = $$2$pn;
    break;
   } else $$2$pn = $$0;
  }
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_($0, $$1, $$2);
 } while (0);
 return;
}

function __ZN9rapidjson6WriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE11WriteStringEPKcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sroa$0$023$ptr = 0, $$sroa$0$1 = 0, $10 = 0, $100 = 0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $17 = 0, $20 = 0, $24 = 0, $28 = 0, $29 = 0, $3 = 0, $35 = 0, $36 = 0, $38 = 0, $39 = 0, $41 = 0, $42 = 0, $44 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $spec$select$i$i$i$i = 0, label = 0;
 $3 = HEAP32[$0 >> 2] | 0;
 $5 = ($2 * 6 | 0) + 2 | 0;
 $6 = $3 + 12 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 $9 = $3 + 16 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 $12 = $10;
 $13 = $7;
 if (($7 + $5 | 0) >>> 0 > $10 >>> 0) {
  $14 = $3 + 8 | 0;
  $15 = HEAP32[$14 >> 2] | 0;
  $17 = $15;
  if (!$15) {
   if (!(HEAP32[$3 >> 2] | 0)) {
    $20 = __Znwj(1) | 0;
    HEAP32[$3 >> 2] = $20;
    HEAP32[$3 + 4 >> 2] = $20;
   }
   $$0$i$i$i$i = HEAP32[$3 + 20 >> 2] | 0;
  } else {
   $24 = $12 - $17 | 0;
   $$0$i$i$i$i = (($24 + 1 | 0) >>> 1) + $24 | 0;
  }
  $28 = $13 - $17 | 0;
  $29 = $28 + $5 | 0;
  $spec$select$i$i$i$i = $$0$i$i$i$i >>> 0 < $29 >>> 0 ? $29 : $$0$i$i$i$i;
  if (!$spec$select$i$i$i$i) {
   _free($15);
   $$0$i$i$i$i$i$i = 0;
  } else $$0$i$i$i$i$i$i = _realloc($15, $spec$select$i$i$i$i) | 0;
  HEAP32[$14 >> 2] = $$0$i$i$i$i$i$i;
  HEAP32[$6 >> 2] = $$0$i$i$i$i$i$i + $28;
  HEAP32[$9 >> 2] = $$0$i$i$i$i$i$i + $spec$select$i$i$i$i;
  $$pre = HEAP32[$0 >> 2] | 0;
  $$phi$trans$insert = $$pre + 12 | 0;
  $$pre$phiZ2D = $$phi$trans$insert;
  $36 = HEAP32[$$phi$trans$insert >> 2] | 0;
  $38 = HEAP32[$$pre + 16 >> 2] | 0;
 } else {
  $$pre$phiZ2D = $6;
  $36 = $7;
  $38 = $10;
 }
 $35 = $36 + 1 | 0;
 if ($35 >>> 0 > $38 >>> 0) ___assert_fail(5614, 5657, 129, 5717);
 HEAP32[$$pre$phiZ2D >> 2] = $35;
 HEAP8[$36 >> 0] = 34;
 $39 = $1;
 L18 : do if ($2 | 0) {
  $$sroa$0$023$ptr = $1;
  while (1) {
   $41 = HEAP8[$$sroa$0$023$ptr >> 0] | 0;
   $42 = $41 & 255;
   $44 = HEAP8[14849 + $42 >> 0] | 0;
   if (!($44 << 24 >> 24)) {
    $97 = HEAP32[$0 >> 2] | 0;
    $98 = $97 + 12 | 0;
    $99 = HEAP32[$98 >> 2] | 0;
    $100 = $99 + 1 | 0;
    if ($100 >>> 0 > (HEAP32[$97 + 16 >> 2] | 0) >>> 0) {
     label = 31;
     break;
    }
    HEAP32[$98 >> 2] = $100;
    HEAP8[$99 >> 0] = $41;
    $$sroa$0$1 = $$sroa$0$023$ptr + 1 | 0;
   } else {
    $47 = $$sroa$0$023$ptr + 1 | 0;
    $48 = HEAP32[$0 >> 2] | 0;
    $49 = $48 + 12 | 0;
    $50 = HEAP32[$49 >> 2] | 0;
    $51 = $50 + 1 | 0;
    if ($51 >>> 0 > (HEAP32[$48 + 16 >> 2] | 0) >>> 0) {
     label = 17;
     break;
    }
    HEAP32[$49 >> 2] = $51;
    HEAP8[$50 >> 0] = 92;
    $55 = HEAP32[$0 >> 2] | 0;
    $56 = $55 + 12 | 0;
    $57 = HEAP32[$56 >> 2] | 0;
    $58 = $57 + 1 | 0;
    if ($58 >>> 0 > (HEAP32[$55 + 16 >> 2] | 0) >>> 0) {
     label = 19;
     break;
    }
    HEAP32[$56 >> 2] = $58;
    HEAP8[$57 >> 0] = $44;
    if ($44 << 24 >> 24 == 117) {
     $63 = HEAP32[$0 >> 2] | 0;
     $64 = $63 + 12 | 0;
     $65 = HEAP32[$64 >> 2] | 0;
     $66 = $65 + 1 | 0;
     if ($66 >>> 0 > (HEAP32[$63 + 16 >> 2] | 0) >>> 0) {
      label = 22;
      break;
     }
     HEAP32[$64 >> 2] = $66;
     HEAP8[$65 >> 0] = 48;
     $70 = HEAP32[$0 >> 2] | 0;
     $71 = $70 + 12 | 0;
     $72 = HEAP32[$71 >> 2] | 0;
     $73 = $72 + 1 | 0;
     if ($73 >>> 0 > (HEAP32[$70 + 16 >> 2] | 0) >>> 0) {
      label = 24;
      break;
     }
     HEAP32[$71 >> 2] = $73;
     HEAP8[$72 >> 0] = 48;
     $77 = HEAP32[$0 >> 2] | 0;
     $78 = $77 + 12 | 0;
     $79 = HEAP32[$78 >> 2] | 0;
     $80 = $79 + 1 | 0;
     if ($80 >>> 0 > (HEAP32[$77 + 16 >> 2] | 0) >>> 0) {
      label = 26;
      break;
     }
     $86 = HEAP8[19803 + ($42 >>> 4) >> 0] | 0;
     HEAP32[$78 >> 2] = $80;
     HEAP8[$79 >> 0] = $86;
     $87 = HEAP32[$0 >> 2] | 0;
     $88 = $87 + 12 | 0;
     $89 = HEAP32[$88 >> 2] | 0;
     $90 = $89 + 1 | 0;
     if ($90 >>> 0 > (HEAP32[$87 + 16 >> 2] | 0) >>> 0) {
      label = 28;
      break;
     }
     $96 = HEAP8[19803 + ($42 & 15) >> 0] | 0;
     HEAP32[$88 >> 2] = $90;
     HEAP8[$89 >> 0] = $96;
     $$sroa$0$1 = $47;
    } else $$sroa$0$1 = $47;
   }
   if (($$sroa$0$1 - $39 | 0) >>> 0 < $2 >>> 0) $$sroa$0$023$ptr = $$sroa$0$1; else break L18;
  }
  if ((label | 0) == 17) ___assert_fail(5614, 5657, 129, 5717); else if ((label | 0) == 19) ___assert_fail(5614, 5657, 129, 5717); else if ((label | 0) == 22) ___assert_fail(5614, 5657, 129, 5717); else if ((label | 0) == 24) ___assert_fail(5614, 5657, 129, 5717); else if ((label | 0) == 26) ___assert_fail(5614, 5657, 129, 5717); else if ((label | 0) == 28) ___assert_fail(5614, 5657, 129, 5717); else if ((label | 0) == 31) ___assert_fail(5614, 5657, 129, 5717);
 } while (0);
 $108 = HEAP32[$0 >> 2] | 0;
 $109 = $108 + 12 | 0;
 $110 = HEAP32[$109 >> 2] | 0;
 $111 = $110 + 1 | 0;
 if ($111 >>> 0 > (HEAP32[$108 + 16 >> 2] | 0) >>> 0) ___assert_fail(5614, 5657, 129, 5717); else {
  HEAP32[$109 >> 2] = $111;
  HEAP8[$110 >> 0] = 34;
  return 1;
 }
 return 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_116parse_local_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$add$i79 = 0, $$0$i$i$add$i83 = 0, $$0$i$i$add$i88 = 0, $$0$i$i$idx$i = 0, $$0$i$i$idx$i78 = 0, $$0$i$i$idx$i82 = 0, $$0$i$i$idx$i87 = 0, $$4 = 0, $13 = 0, $18 = 0, $21 = 0, $24 = 0, $26 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $34 = 0, $41 = 0, $48 = 0, $49 = 0, $56 = 0, $59 = 0, $61 = 0, $62 = 0, $63 = 0, $7 = 0, $70 = 0, $77 = 0, $78 = 0, $8 = 0, $85 = 0, $86 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 L1 : do if (($0 | 0) == ($1 | 0)) $$4 = $0; else if ((HEAP8[$0 >> 0] | 0) == 90) {
  $7 = $0 + 1 | 0;
  $8 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($7, $1, $2) | 0;
  if (($8 | 0) == ($7 | 0) | ($8 | 0) == ($1 | 0)) $$4 = $0; else if ((HEAP8[$8 >> 0] | 0) == 69) {
   $13 = $8 + 1 | 0;
   if (($13 | 0) == ($1 | 0)) $$4 = $0; else switch (HEAP8[$13 >> 0] | 0) {
   case 115:
    {
     $18 = __ZN10__cxxabiv112_GLOBAL__N_119parse_discriminatorEPKcS2_($8 + 2 | 0, $1) | 0;
     $21 = HEAP32[$2 + 4 >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($21 | 0)) {
      $$4 = $18;
      break L1;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($21 + -24 | 0, 23636) | 0;
     $$4 = $18;
     break L1;
     break;
    }
   case 100:
    {
     $24 = $8 + 2 | 0;
     if (($24 | 0) == ($1 | 0)) {
      $$4 = $0;
      break L1;
     }
     $26 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($24, $1) | 0;
     if (($26 | 0) == ($1 | 0)) {
      $$4 = $0;
      break L1;
     }
     if ((HEAP8[$26 >> 0] | 0) != 95) {
      $$4 = $0;
      break L1;
     }
     $30 = $26 + 1 | 0;
     $31 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($30, $1, $2) | 0;
     $33 = $2 + 4 | 0;
     if (($31 | 0) == ($30 | 0)) {
      $56 = HEAP32[$33 >> 2] | 0;
      $$0$i$i$idx$i78 = 0;
      while (1) {
       if (($$0$i$i$idx$i78 | 0) == -1) break;
       $$0$i$i$add$i79 = $$0$i$i$idx$i78 + -1 | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($56 + ($$0$i$i$add$i79 * 24 | 0) | 0);
       $$0$i$i$idx$i78 = $$0$i$i$add$i79;
      }
      HEAP32[$33 >> 2] = $56 + -24;
      $$4 = $0;
      break L1;
     }
     $34 = HEAP32[$33 >> 2] | 0;
     if ((($34 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      $$4 = $0;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $34 + -24 | 0);
     $41 = HEAP32[$33 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($41 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$33 >> 2] = $41 + -24;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($41 + -48 | 0, 22349) | 0;
     $48 = HEAP8[$3 + 11 >> 0] | 0;
     $49 = $48 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[$33 >> 2] | 0) + -24 | 0, $49 ? HEAP32[$3 >> 2] | 0 : $3, $49 ? HEAP32[$3 + 4 >> 2] | 0 : $48 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$4 = $31;
     break L1;
     break;
    }
   default:
    {
     $59 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($13, $1, $2) | 0;
     if (($59 | 0) == ($13 | 0)) {
      $85 = $2 + 4 | 0;
      $86 = HEAP32[$85 >> 2] | 0;
      $$0$i$i$idx$i87 = 0;
      while (1) {
       if (($$0$i$i$idx$i87 | 0) == -1) break;
       $$0$i$i$add$i88 = $$0$i$i$idx$i87 + -1 | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($86 + ($$0$i$i$add$i88 * 24 | 0) | 0);
       $$0$i$i$idx$i87 = $$0$i$i$add$i88;
      }
      HEAP32[$85 >> 2] = $86 + -24;
      $$4 = $0;
      break L1;
     }
     $61 = __ZN10__cxxabiv112_GLOBAL__N_119parse_discriminatorEPKcS2_($59, $1) | 0;
     $62 = $2 + 4 | 0;
     $63 = HEAP32[$62 >> 2] | 0;
     if ((($63 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      $$4 = $61;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $63 + -24 | 0);
     $70 = HEAP32[$62 >> 2] | 0;
     $$0$i$i$idx$i82 = 0;
     while (1) {
      if (($$0$i$i$idx$i82 | 0) == -1) break;
      $$0$i$i$add$i83 = $$0$i$i$idx$i82 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($70 + ($$0$i$i$add$i83 * 24 | 0) | 0);
      $$0$i$i$idx$i82 = $$0$i$i$add$i83;
     }
     HEAP32[$62 >> 2] = $70 + -24;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($70 + -48 | 0, 22349) | 0;
     $77 = HEAP8[$3 + 11 >> 0] | 0;
     $78 = $77 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[$62 >> 2] | 0) + -24 | 0, $78 ? HEAP32[$3 >> 2] | 0 : $3, $78 ? HEAP32[$3 + 4 >> 2] | 0 : $77 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$4 = $61;
     break L1;
    }
   }
  } else $$4 = $0;
 } else $$4 = $0; while (0);
 STACKTOP = sp;
 return $$4 | 0;
}

function __ZN9rapidjson6WriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE9WriteBoolEb($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i6 = 0, $$0$i$i$i$i4 = 0, $$phi$trans$insert = 0, $$phi$trans$insert18 = 0, $$pre = 0, $$pre$phi23Z2D = 0, $$pre$phiZ2D = 0, $$pre17 = 0, $$sink = 0, $10 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $12 = 0, $14 = 0, $17 = 0, $2 = 0, $21 = 0, $25 = 0, $26 = 0, $3 = 0, $32 = 0, $33 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $58 = 0, $59 = 0, $6 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $66 = 0, $69 = 0, $7 = 0, $73 = 0, $77 = 0, $78 = 0, $84 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $spec$select$i$i$i$i = 0, $spec$select$i$i$i$i5 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $2 + 12 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if ($1) {
  $6 = $2 + 16 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  $9 = $7;
  $10 = $4;
  if (($4 + 4 | 0) >>> 0 > $7 >>> 0) {
   $11 = $2 + 8 | 0;
   $12 = HEAP32[$11 >> 2] | 0;
   $14 = $12;
   if (!$12) {
    if (!(HEAP32[$2 >> 2] | 0)) {
     $17 = __Znwj(1) | 0;
     HEAP32[$2 >> 2] = $17;
     HEAP32[$2 + 4 >> 2] = $17;
    }
    $$0$i$i$i$i = HEAP32[$2 + 20 >> 2] | 0;
   } else {
    $21 = $9 - $14 | 0;
    $$0$i$i$i$i = (($21 + 1 | 0) >>> 1) + $21 | 0;
   }
   $25 = $10 - $14 | 0;
   $26 = $25 + 4 | 0;
   $spec$select$i$i$i$i = $$0$i$i$i$i >>> 0 < $26 >>> 0 ? $26 : $$0$i$i$i$i;
   if (!$spec$select$i$i$i$i) {
    _free($12);
    $$0$i$i$i$i$i$i = 0;
   } else $$0$i$i$i$i$i$i = _realloc($12, $spec$select$i$i$i$i) | 0;
   HEAP32[$11 >> 2] = $$0$i$i$i$i$i$i;
   HEAP32[$3 >> 2] = $$0$i$i$i$i$i$i + $25;
   HEAP32[$6 >> 2] = $$0$i$i$i$i$i$i + $spec$select$i$i$i$i;
   $$pre17 = HEAP32[$0 >> 2] | 0;
   $$phi$trans$insert18 = $$pre17 + 12 | 0;
   $$pre$phiZ2D = $$phi$trans$insert18;
   $33 = HEAP32[$$phi$trans$insert18 >> 2] | 0;
   $35 = HEAP32[$$pre17 + 16 >> 2] | 0;
  } else {
   $$pre$phiZ2D = $3;
   $33 = $4;
   $35 = $7;
  }
  $32 = $33 + 1 | 0;
  if ($32 >>> 0 > $35 >>> 0) ___assert_fail(5614, 5657, 129, 5717);
  HEAP32[$$pre$phiZ2D >> 2] = $32;
  HEAP8[$33 >> 0] = 116;
  $36 = HEAP32[$0 >> 2] | 0;
  $37 = $36 + 12 | 0;
  $38 = HEAP32[$37 >> 2] | 0;
  $39 = $38 + 1 | 0;
  if ($39 >>> 0 > (HEAP32[$36 + 16 >> 2] | 0) >>> 0) ___assert_fail(5614, 5657, 129, 5717);
  HEAP32[$37 >> 2] = $39;
  HEAP8[$38 >> 0] = 114;
  $43 = HEAP32[$0 >> 2] | 0;
  $44 = $43 + 12 | 0;
  $45 = HEAP32[$44 >> 2] | 0;
  $46 = $45 + 1 | 0;
  if ($46 >>> 0 > (HEAP32[$43 + 16 >> 2] | 0) >>> 0) ___assert_fail(5614, 5657, 129, 5717);
  HEAP32[$44 >> 2] = $46;
  HEAP8[$45 >> 0] = 117;
  $50 = HEAP32[$0 >> 2] | 0;
  $51 = $50 + 12 | 0;
  $52 = HEAP32[$51 >> 2] | 0;
  $53 = $52 + 1 | 0;
  if ($53 >>> 0 > (HEAP32[$50 + 16 >> 2] | 0) >>> 0) ___assert_fail(5614, 5657, 129, 5717);
  HEAP32[$51 >> 2] = $53;
  $$sink = $52;
  HEAP8[$$sink >> 0] = 101;
  return 1;
 }
 $58 = $2 + 16 | 0;
 $59 = HEAP32[$58 >> 2] | 0;
 $61 = $59;
 $62 = $4;
 if (($4 + 5 | 0) >>> 0 > $59 >>> 0) {
  $63 = $2 + 8 | 0;
  $64 = HEAP32[$63 >> 2] | 0;
  $66 = $64;
  if (!$64) {
   if (!(HEAP32[$2 >> 2] | 0)) {
    $69 = __Znwj(1) | 0;
    HEAP32[$2 >> 2] = $69;
    HEAP32[$2 + 4 >> 2] = $69;
   }
   $$0$i$i$i$i4 = HEAP32[$2 + 20 >> 2] | 0;
  } else {
   $73 = $61 - $66 | 0;
   $$0$i$i$i$i4 = (($73 + 1 | 0) >>> 1) + $73 | 0;
  }
  $77 = $62 - $66 | 0;
  $78 = $77 + 5 | 0;
  $spec$select$i$i$i$i5 = $$0$i$i$i$i4 >>> 0 < $78 >>> 0 ? $78 : $$0$i$i$i$i4;
  if (!$spec$select$i$i$i$i5) {
   _free($64);
   $$0$i$i$i$i$i$i6 = 0;
  } else $$0$i$i$i$i$i$i6 = _realloc($64, $spec$select$i$i$i$i5) | 0;
  HEAP32[$63 >> 2] = $$0$i$i$i$i$i$i6;
  HEAP32[$3 >> 2] = $$0$i$i$i$i$i$i6 + $77;
  HEAP32[$58 >> 2] = $$0$i$i$i$i$i$i6 + $spec$select$i$i$i$i5;
  $$pre = HEAP32[$0 >> 2] | 0;
  $$phi$trans$insert = $$pre + 12 | 0;
  $$pre$phi23Z2D = $$phi$trans$insert;
  $85 = HEAP32[$$phi$trans$insert >> 2] | 0;
  $87 = HEAP32[$$pre + 16 >> 2] | 0;
 } else {
  $$pre$phi23Z2D = $3;
  $85 = $4;
  $87 = $59;
 }
 $84 = $85 + 1 | 0;
 if ($84 >>> 0 > $87 >>> 0) ___assert_fail(5614, 5657, 129, 5717);
 HEAP32[$$pre$phi23Z2D >> 2] = $84;
 HEAP8[$85 >> 0] = 102;
 $88 = HEAP32[$0 >> 2] | 0;
 $89 = $88 + 12 | 0;
 $90 = HEAP32[$89 >> 2] | 0;
 $91 = $90 + 1 | 0;
 if ($91 >>> 0 > (HEAP32[$88 + 16 >> 2] | 0) >>> 0) ___assert_fail(5614, 5657, 129, 5717);
 HEAP32[$89 >> 2] = $91;
 HEAP8[$90 >> 0] = 97;
 $95 = HEAP32[$0 >> 2] | 0;
 $96 = $95 + 12 | 0;
 $97 = HEAP32[$96 >> 2] | 0;
 $98 = $97 + 1 | 0;
 if ($98 >>> 0 > (HEAP32[$95 + 16 >> 2] | 0) >>> 0) ___assert_fail(5614, 5657, 129, 5717);
 HEAP32[$96 >> 2] = $98;
 HEAP8[$97 >> 0] = 108;
 $102 = HEAP32[$0 >> 2] | 0;
 $103 = $102 + 12 | 0;
 $104 = HEAP32[$103 >> 2] | 0;
 $105 = $104 + 1 | 0;
 if ($105 >>> 0 > (HEAP32[$102 + 16 >> 2] | 0) >>> 0) ___assert_fail(5614, 5657, 129, 5717);
 HEAP32[$103 >> 2] = $105;
 HEAP8[$104 >> 0] = 115;
 $109 = HEAP32[$0 >> 2] | 0;
 $110 = $109 + 12 | 0;
 $111 = HEAP32[$110 >> 2] | 0;
 $112 = $111 + 1 | 0;
 if ($112 >>> 0 > (HEAP32[$109 + 16 >> 2] | 0) >>> 0) ___assert_fail(5614, 5657, 129, 5717);
 HEAP32[$110 >> 2] = $112;
 $$sink = $111;
 HEAP8[$$sink >> 0] = 101;
 return 1;
}

function __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$add$i91 = 0, $$0$i$i$idx$i = 0, $$0$i$i$idx$i90 = 0, $$3 = 0, $14 = 0, $16 = 0, $18 = 0, $24 = 0, $25 = 0, $28 = 0, $29 = 0, $3 = 0, $34 = 0, $35 = 0, $39 = 0, $4 = 0, $41 = 0, $46 = 0, $48 = 0, $55 = 0, $60 = 0, $61 = 0, $68 = 0, $73 = 0, $75 = 0, $76 = 0, $83 = 0, $88 = 0, $89 = 0, $spec$select = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $3 = sp + 8 | 0;
 $4 = sp;
 L1 : do if (($1 - $0 | 0) > 1) {
  $spec$select = (HEAP8[$0 >> 0] | 0) == 76 ? $0 + 1 | 0 : $0;
  switch (HEAP8[$spec$select >> 0] | 0) {
  case 78:
   {
    $14 = __ZN10__cxxabiv112_GLOBAL__N_117parse_nested_nameINS0_2DbEEEPKcS4_S4_RT_($spec$select, $1, $2) | 0;
    $$3 = ($14 | 0) == ($spec$select | 0) ? $0 : $14;
    break L1;
    break;
   }
  case 90:
   {
    $16 = __ZN10__cxxabiv112_GLOBAL__N_116parse_local_nameINS0_2DbEEEPKcS4_S4_RT_($spec$select, $1, $2) | 0;
    $$3 = ($16 | 0) == ($spec$select | 0) ? $0 : $16;
    break L1;
    break;
   }
  default:
   {
    $18 = __ZN10__cxxabiv112_GLOBAL__N_119parse_unscoped_nameINS0_2DbEEEPKcS4_S4_RT_($spec$select, $1, $2) | 0;
    if (($18 | 0) == ($spec$select | 0)) {
     $68 = __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($spec$select, $1, $2) | 0;
     if (($68 | 0) == ($spec$select | 0) | ($68 | 0) == ($1 | 0)) {
      $$3 = $0;
      break L1;
     }
     if ((HEAP8[$68 >> 0] | 0) != 73) {
      $$3 = $0;
      break L1;
     }
     $73 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($68, $1, $2) | 0;
     if (($73 | 0) == ($68 | 0)) {
      $$3 = $0;
      break L1;
     }
     $75 = $2 + 4 | 0;
     $76 = HEAP32[$75 >> 2] | 0;
     if ((($76 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      $$3 = $0;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $76 + -24 | 0);
     $83 = HEAP32[$75 >> 2] | 0;
     $$0$i$i$idx$i90 = 0;
     while (1) {
      if (($$0$i$i$idx$i90 | 0) == -1) break;
      $$0$i$i$add$i91 = $$0$i$i$idx$i90 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($83 + ($$0$i$i$add$i91 * 24 | 0) | 0);
      $$0$i$i$idx$i90 = $$0$i$i$add$i91;
     }
     HEAP32[$75 >> 2] = $83 + -24;
     $88 = HEAP8[$3 + 11 >> 0] | 0;
     $89 = $88 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($83 + -48 | 0, $89 ? HEAP32[$3 >> 2] | 0 : $3, $89 ? HEAP32[$3 + 4 >> 2] | 0 : $88 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$3 = $73;
     break L1;
    }
    if (($18 | 0) == ($1 | 0)) {
     $$3 = $1;
     break L1;
    }
    if ((HEAP8[$18 >> 0] | 0) != 73) {
     $$3 = $18;
     break L1;
    }
    $24 = $2 + 4 | 0;
    $25 = HEAP32[$24 >> 2] | 0;
    if ((HEAP32[$2 >> 2] | 0) == ($25 | 0)) {
     $$3 = $0;
     break L1;
    }
    HEAP32[$4 >> 2] = HEAP32[$2 + 12 >> 2];
    __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($3, $25 + -24 | 0, $4);
    $28 = $2 + 20 | 0;
    $29 = HEAP32[$28 >> 2] | 0;
    if ($29 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
     HEAP32[$29 >> 2] = 0;
     $34 = $29 + 4 | 0;
     HEAP32[$34 >> 2] = 0;
     $35 = $29 + 8 | 0;
     HEAP32[$35 >> 2] = 0;
     HEAP32[$29 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
     HEAP32[$29 >> 2] = HEAP32[$3 >> 2];
     $39 = $3 + 4 | 0;
     HEAP32[$34 >> 2] = HEAP32[$39 >> 2];
     $41 = $3 + 8 | 0;
     HEAP32[$35 >> 2] = HEAP32[$41 >> 2];
     HEAP32[$41 >> 2] = 0;
     HEAP32[$39 >> 2] = 0;
     HEAP32[$3 >> 2] = 0;
     HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + 16;
    } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $3);
    __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($3);
    $46 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($18, $1, $2) | 0;
    if (($46 | 0) == ($18 | 0)) {
     $$3 = $0;
     break L1;
    }
    $48 = HEAP32[$24 >> 2] | 0;
    if ((($48 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     $$3 = $0;
     break L1;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $48 + -24 | 0);
    $55 = HEAP32[$24 >> 2] | 0;
    $$0$i$i$idx$i = 0;
    while (1) {
     if (($$0$i$i$idx$i | 0) == -1) break;
     $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($55 + ($$0$i$i$add$i * 24 | 0) | 0);
     $$0$i$i$idx$i = $$0$i$i$add$i;
    }
    HEAP32[$24 >> 2] = $55 + -24;
    $60 = HEAP8[$3 + 11 >> 0] | 0;
    $61 = $60 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($55 + -48 | 0, $61 ? HEAP32[$3 >> 2] | 0 : $3, $61 ? HEAP32[$3 + 4 >> 2] | 0 : $60 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = $46;
    break L1;
   }
  }
 } else $$3 = $0; while (0);
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZN2ut4arch5Chunk13replicateDataEPS1_iS2_ii($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0100103 = 0, $$0109 = 0, $$097106 = 0, $$098104 = 0, $$099112 = 0, $$1105 = 0, $$2108 = 0, $13 = 0, $15 = 0, $16 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $38 = 0, $40 = 0, $43 = 0, $46 = 0, $47 = 0, $5 = 0, $51 = 0, $54 = 0, $56 = 0, $6 = 0, $62 = 0, $67 = 0, $68 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $81 = 0, $84 = 0, $vararg_buffer11 = 0, $vararg_buffer13 = 0, $vararg_buffer15 = 0, $vararg_buffer17 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $vararg_buffer17 = sp + 72 | 0;
 $vararg_buffer15 = sp + 64 | 0;
 $vararg_buffer13 = sp + 56 | 0;
 $vararg_buffer11 = sp + 48 | 0;
 $vararg_buffer9 = sp + 40 | 0;
 $5 = sp + 88 | 0;
 $6 = sp + 80 | 0;
 $8 = HEAP32[$0 + 16 >> 2] | 0;
 if (($8 | 0) != (HEAP32[$2 + 16 >> 2] | 0)) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9525, 9568, 42);
 }
 $13 = HEAP32[$8 + 32 >> 2] | 0;
 $15 = HEAP32[$8 + 28 >> 2] | 0;
 $16 = $0 + 24 | 0;
 if ((HEAP32[$16 >> 2] | 0) > (HEAP32[$0 + 28 >> 2] | 0)) {
  _snprintf(25060, 1024, 27124, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9638, 9568, 50);
 }
 if ((HEAP32[$2 + 24 >> 2] | 0) > (HEAP32[$2 + 28 >> 2] | 0)) {
  _snprintf(25060, 1024, 27124, sp + 16 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9676, 9568, 51);
 }
 if ((HEAP32[$16 >> 2] | 0) <= ($1 | 0)) {
  _snprintf(25060, 1024, 27124, sp + 24 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9714, 9568, 53);
 }
 if ((HEAP32[$8 + 20 >> 2] | 0) <= ($3 | 0)) {
  _snprintf(25060, 1024, 27124, sp + 32 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9741, 9568, 54);
 }
 if (($15 | 0) <= 0) {
  STACKTOP = sp;
  return;
 }
 $32 = $2 + 16384 | 0;
 $33 = ($4 | 0) > 0;
 $34 = $5 + 4 | 0;
 $35 = $6 + 4 | 0;
 $$099112 = 0;
 L19 : while (1) {
  $36 = $13 + ($$099112 << 4) | 0;
  $38 = HEAP32[$13 + ($$099112 << 4) + 8 >> 2] | 0;
  $40 = HEAP32[$13 + ($$099112 << 4) + 12 >> 2] | 0;
  $43 = (Math_imul($40, $1) | 0) + $38 + ($0 + 48) | 0;
  $46 = (Math_imul($40, $3) | 0) + $38 + ($2 + 48) | 0;
  $47 = Math_imul($40, $4) | 0;
  if (($46 + $47 | 0) >>> 0 > $32 >>> 0) {
   label = 15;
   break;
  }
  $51 = HEAP32[$13 + ($$099112 << 4) + 4 >> 2] | 0;
  L22 : do if (!($51 & 4)) {
   if (!($51 & 16)) {
    if (!$33) break;
    $$0109 = 0;
    $$2108 = $46;
    while (1) {
     _memcpy($$2108 | 0, $43 | 0, $40 | 0) | 0;
     $$0109 = $$0109 + 1 | 0;
     if (($$0109 | 0) == ($4 | 0)) break L22; else $$2108 = $$2108 + $40 | 0;
    }
   }
   _memset($46 | 0, 0, $47 | 0) | 0;
   $75 = HEAP32[$36 >> 2] | 0;
   HEAP32[$5 >> 2] = $43;
   $77 = HEAP32[6067] | 0;
   $79 = (HEAP32[6068] | 0) - $77 >> 2;
   $81 = $77;
   if ($79 >>> 0 <= $75 >>> 0) {
    label = 26;
    break L19;
   }
   HEAP32[$34 >> 2] = HEAP32[$81 + ($75 << 2) >> 2];
   $84 = HEAP32[$36 >> 2] | 0;
   HEAP32[$6 >> 2] = 0;
   if ($79 >>> 0 <= $84 >>> 0) {
    label = 28;
    break L19;
   }
   HEAP32[$35 >> 2] = HEAP32[$81 + ($84 << 2) >> 2];
   if ($33) {
    $$097106 = 0;
    $$1105 = $46;
    while (1) {
     HEAP32[$6 >> 2] = $$1105;
     __ZN2ut25ComponentNativeBufferBase8copyFromERKS0_($6, $5);
     $$097106 = $$097106 + 1 | 0;
     if (($$097106 | 0) == ($4 | 0)) break; else $$1105 = $$1105 + $40 | 0;
    }
   }
  } else {
   $54 = HEAP32[$36 >> 2] | 0;
   $56 = HEAP32[6067] | 0;
   if ((HEAP32[6068] | 0) - $56 >> 2 >>> 0 <= $54 >>> 0) {
    label = 18;
    break L19;
   }
   $62 = HEAP32[$56 + ($54 << 2) >> 2] | 0;
   if (HEAP32[$62 + 4 >> 2] & 8 | 0) {
    label = 20;
    break L19;
   }
   if ($33) {
    $67 = $62 + 36 | 0;
    $68 = $62 + 44 | 0;
    $$0100103 = $46;
    $$098104 = 0;
    while (1) {
     FUNCTION_TABLE_viii[HEAP32[$67 >> 2] & 31]($43, $$0100103, HEAP32[$68 >> 2] | 0);
     $$098104 = $$098104 + 1 | 0;
     if (($$098104 | 0) == ($4 | 0)) break; else $$0100103 = $$0100103 + $40 | 0;
    }
   }
  } while (0);
  $$099112 = $$099112 + 1 | 0;
  if (($$099112 | 0) == ($15 | 0)) {
   label = 13;
   break;
  }
 }
 if ((label | 0) == 13) {
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 15) {
  _snprintf(25060, 1024, 27124, $vararg_buffer9) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9772, 9568, 61);
 } else if ((label | 0) == 18) {
  _snprintf(25060, 1024, 27124, $vararg_buffer11) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 } else if ((label | 0) == 20) {
  _snprintf(25060, 1024, 27124, $vararg_buffer13) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 12664, 9568, 65);
 } else if ((label | 0) == 26) {
  _snprintf(25060, 1024, 27124, $vararg_buffer15) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 } else if ((label | 0) == 28) {
  _snprintf(25060, 1024, 27124, $vararg_buffer17) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
}

function __ZN2ut4arch17EntityDataManager16allocateEntitiesEPNS0_9ArchetypeEPNS0_5ChunkEiiPNS_6EntityE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$us = 0, $$03233 = 0, $$03233$us = 0, $$08$i$i$i = 0, $$08$i$i$i$us = 0, $$lcssa$i$i$i = 0, $$lcssa$i$i$i$us = 0, $$pre$i$i = 0, $$pre$i$i$us = 0, $$pre44 = 0, $$pre46 = 0, $20 = 0, $22 = 0, $23 = 0, $24 = 0, $26 = 0, $27 = 0, $28 = 0, $32 = 0, $33 = 0, $35 = 0, $37 = 0, $41 = 0, $46 = 0, $50 = 0, $52 = 0, $55 = 0, $61 = 0, $62 = 0, $63 = 0, $67 = 0, $68 = 0, $70 = 0, $72 = 0, $76 = 0, $81 = 0, $85 = 0, $88 = 0, $9 = 0, $94 = 0, sp = 0, $$08$i$i$i$us$looptemp = 0, $$08$i$i$i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $9 = HEAP32[(HEAP32[$2 + 16 >> 2] | 0) + 32 >> 2] | 0;
 if (HEAP32[$9 + 8 >> 2] | 0) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 12565, 9049, 50);
 }
 if ((HEAP32[$9 + 12 >> 2] | 0) != 8) {
  _snprintf(25060, 1024, 27124, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 12608, 9049, 51);
 }
 $20 = ($3 << 3) + (HEAP32[$9 + 8 >> 2] | 0) + ($2 + 48) | 0;
 if (($4 | 0) <= 0) {
  STACKTOP = sp;
  return;
 }
 $22 = $0 + 20 | 0;
 $23 = $0 + 28 | 0;
 $24 = $0 + 24 | 0;
 if (!$5) {
  $$03233$us = 0;
  do {
   $26 = HEAP32[$22 >> 2] | 0;
   $27 = HEAP32[$23 >> 2] | 0;
   $28 = $26 + ($27 << 4) | 0;
   if ((HEAP32[$26 + ($27 << 4) + 4 >> 2] | 0) == -1) {
    $32 = HEAP32[$24 >> 2] | 0;
    $33 = $32 << 1;
    if ($32 >>> 0 > $33 >>> 0) {
     $$0$us = $28;
     $52 = $27;
    } else {
     $35 = $32 + -1 | 0;
     $37 = _realloc($26, $32 << 5) | 0;
     HEAP32[$22 >> 2] = $37;
     HEAP32[$24 >> 2] = $33;
     if ($35 >>> 0 < $33 >>> 0) {
      $$08$i$i$i$us = $35;
      $41 = $37;
      while (1) {
       $$08$i$i$i$us$looptemp = $$08$i$i$i$us;
       $$08$i$i$i$us = $$08$i$i$i$us + 1 | 0;
       HEAP32[$41 + ($$08$i$i$i$us$looptemp << 4) + 4 >> 2] = $$08$i$i$i$us;
       HEAP32[(HEAP32[$22 >> 2] | 0) + ($$08$i$i$i$us$looptemp << 4) >> 2] = 1;
       HEAP32[(HEAP32[$22 >> 2] | 0) + ($$08$i$i$i$us$looptemp << 4) + 12 >> 2] = 0;
       $46 = HEAP32[$24 >> 2] | 0;
       $$pre$i$i$us = HEAP32[$22 >> 2] | 0;
       if ($$08$i$i$i$us >>> 0 >= $46 >>> 0) {
        $$lcssa$i$i$i$us = $46;
        $50 = $$pre$i$i$us;
        break;
       } else $41 = $$pre$i$i$us;
      }
     } else {
      $$lcssa$i$i$i$us = $33;
      $50 = $37;
     }
     HEAP32[$50 + ($$lcssa$i$i$i$us + -1 << 4) + 4 >> 2] = -1;
     $$pre46 = HEAP32[$23 >> 2] | 0;
     $$0$us = (HEAP32[$22 >> 2] | 0) + ($$pre46 << 4) | 0;
     $52 = $$pre46;
    }
   } else {
    $$0$us = $28;
    $52 = $27;
   }
   HEAP32[$20 + ($$03233$us << 3) >> 2] = $52;
   HEAP32[$20 + ($$03233$us << 3) + 4 >> 2] = HEAP32[$$0$us >> 2];
   $55 = $$0$us + 4 | 0;
   HEAP32[$23 >> 2] = HEAP32[$55 >> 2];
   HEAP32[$55 >> 2] = $$03233$us + $3;
   HEAP32[$$0$us + 8 >> 2] = $1;
   HEAP32[$$0$us + 12 >> 2] = $2;
   $$03233$us = $$03233$us + 1 | 0;
  } while (($$03233$us | 0) != ($4 | 0));
  STACKTOP = sp;
  return;
 } else {
  $$03233 = 0;
  do {
   $61 = HEAP32[$22 >> 2] | 0;
   $62 = HEAP32[$23 >> 2] | 0;
   $63 = $61 + ($62 << 4) | 0;
   if ((HEAP32[$61 + ($62 << 4) + 4 >> 2] | 0) == -1) {
    $67 = HEAP32[$24 >> 2] | 0;
    $68 = $67 << 1;
    if ($67 >>> 0 > $68 >>> 0) {
     $$0 = $63;
     $88 = $62;
    } else {
     $70 = $67 + -1 | 0;
     $72 = _realloc($61, $67 << 5) | 0;
     HEAP32[$22 >> 2] = $72;
     HEAP32[$24 >> 2] = $68;
     if ($70 >>> 0 < $68 >>> 0) {
      $$08$i$i$i = $70;
      $76 = $72;
      while (1) {
       $$08$i$i$i$looptemp = $$08$i$i$i;
       $$08$i$i$i = $$08$i$i$i + 1 | 0;
       HEAP32[$76 + ($$08$i$i$i$looptemp << 4) + 4 >> 2] = $$08$i$i$i;
       HEAP32[(HEAP32[$22 >> 2] | 0) + ($$08$i$i$i$looptemp << 4) >> 2] = 1;
       HEAP32[(HEAP32[$22 >> 2] | 0) + ($$08$i$i$i$looptemp << 4) + 12 >> 2] = 0;
       $81 = HEAP32[$24 >> 2] | 0;
       $$pre$i$i = HEAP32[$22 >> 2] | 0;
       if ($$08$i$i$i >>> 0 >= $81 >>> 0) {
        $$lcssa$i$i$i = $81;
        $85 = $$pre$i$i;
        break;
       } else $76 = $$pre$i$i;
      }
     } else {
      $$lcssa$i$i$i = $68;
      $85 = $72;
     }
     HEAP32[$85 + ($$lcssa$i$i$i + -1 << 4) + 4 >> 2] = -1;
     $$pre44 = HEAP32[$23 >> 2] | 0;
     $$0 = (HEAP32[$22 >> 2] | 0) + ($$pre44 << 4) | 0;
     $88 = $$pre44;
    }
   } else {
    $$0 = $63;
    $88 = $62;
   }
   HEAP32[$5 + ($$03233 << 3) >> 2] = $88;
   HEAP32[$5 + ($$03233 << 3) + 4 >> 2] = HEAP32[$$0 >> 2];
   HEAP32[$20 + ($$03233 << 3) >> 2] = HEAP32[$23 >> 2];
   HEAP32[$20 + ($$03233 << 3) + 4 >> 2] = HEAP32[$$0 >> 2];
   $94 = $$0 + 4 | 0;
   HEAP32[$23 >> 2] = HEAP32[$94 >> 2];
   HEAP32[$94 >> 2] = $$03233 + $3;
   HEAP32[$$0 + 8 >> 2] = $1;
   HEAP32[$$0 + 12 >> 2] = $2;
   $$03233 = $$03233 + 1 | 0;
  } while (($$03233 | 0) != ($4 | 0));
  STACKTOP = sp;
  return;
 }
}

function __ZN2ut4arch19EntityCommandBuffer10freeChunksEv($0) {
 $0 = $0 | 0;
 var $$04355 = 0, $$04454 = 0, $$in = 0, $1 = 0, $10 = 0, $102 = 0, $103 = 0, $13 = 0, $15 = 0, $2 = 0, $21 = 0, $23 = 0, $32 = 0, $34 = 0, $4 = 0, $40 = 0, $42 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $6 = 0, $61 = 0, $62 = 0, $65 = 0, $66 = 0, $70 = 0, $71 = 0, $75 = 0, $82 = 0, $84 = 0, $phi$call56 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, label = 0, sp = 0, $$in$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer7 = sp + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $1 = $0 + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if (!$2) {
  HEAP32[$1 >> 2] = 0;
  $102 = $0 + 8 | 0;
  HEAP32[$102 >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 $4 = $0 + 24 | 0;
 $$in = $2;
 L4 : while (1) {
  $$in$looptemp = $$in;
  $$in = HEAP32[$$in >> 2] | 0;
  $6 = $$in$looptemp + 8 | 0;
  L6 : do if ((HEAP32[$6 >> 2] | 0) >>> 0 >= 13) {
   $10 = $$in$looptemp;
   $phi$call56 = $$in$looptemp + 12 | 0;
   while (1) {
    switch (HEAP32[$phi$call56 >> 2] | 0) {
    case 8:
    case 6:
    case 14:
    case 13:
     {
      $13 = HEAP32[$phi$call56 + 16 >> 2] | 0;
      $15 = HEAP32[6067] | 0;
      if ((HEAP32[6068] | 0) - $15 >> 2 >>> 0 <= $13 >>> 0) {
       label = 7;
       break L4;
      }
      $21 = HEAP32[$15 + ($13 << 2) >> 2] | 0;
      $23 = HEAP32[$21 + 32 >> 2] | 0;
      if ($23 | 0) FUNCTION_TABLE_vii[$23 & 15](HEAP32[$phi$call56 + 24 >> 2] | 0, HEAP32[$21 + 48 >> 2] | 0);
      break;
     }
    case 9:
    case 7:
     {
      if (!(HEAP32[$4 >> 2] | 0)) {
       $32 = HEAP32[$phi$call56 + 16 >> 2] | 0;
       $34 = HEAP32[6067] | 0;
       if ((HEAP32[6068] | 0) - $34 >> 2 >>> 0 <= $32 >>> 0) {
        label = 12;
        break L4;
       }
       $40 = HEAP32[$34 + ($32 << 2) >> 2] | 0;
       $42 = HEAP32[$40 + 32 >> 2] | 0;
       if ($42 | 0) FUNCTION_TABLE_vii[$42 & 15](HEAP32[$phi$call56 + 24 >> 2] | 0, HEAP32[$40 + 48 >> 2] | 0);
      }
      break;
     }
    case 16:
     {
      $49 = HEAP32[$phi$call56 + 16 >> 2] | 0;
      $51 = HEAP32[6067] | 0;
      if ((HEAP32[6068] | 0) - $51 >> 2 >>> 0 <= $49 >>> 0) {
       label = 16;
       break L4;
      }
      $57 = HEAP32[$51 + ($49 << 2) >> 2] | 0;
      $58 = $57 + 32 | 0;
      if (HEAP32[$58 >> 2] | 0) {
       $61 = $57 + 12 | 0;
       $62 = HEAP32[$61 >> 2] | 0;
       if (($62 | 0) <= 0) {
        label = 19;
        break L4;
       }
       $65 = HEAP32[$phi$call56 + 20 >> 2] | 0;
       $66 = ($65 >>> 0) / ($62 >>> 0) | 0;
       if ($62 >>> 0 <= $65 >>> 0) {
        $70 = $57 + 48 | 0;
        $$04355 = 0;
        $$04454 = HEAP32[$phi$call56 + 24 >> 2] | 0;
        $103 = $62;
        while (1) {
         $71 = HEAP32[$58 >> 2] | 0;
         if (!$71) $75 = $103; else {
          FUNCTION_TABLE_vii[$71 & 15]($$04454, HEAP32[$70 >> 2] | 0);
          $75 = HEAP32[$61 >> 2] | 0;
         }
         $$04355 = $$04355 + 1 | 0;
         if ($$04355 >>> 0 >= $66 >>> 0) break; else {
          $$04454 = $$04454 + $75 | 0;
          $103 = $75;
         }
        }
       }
      }
      break;
     }
    case 17:
     {
      if (!(HEAP32[$4 >> 2] | 0)) {
       $82 = HEAP32[$phi$call56 + 16 >> 2] | 0;
       $84 = HEAP32[6067] | 0;
       if ((HEAP32[6068] | 0) - $84 >> 2 >>> 0 <= $82 >>> 0) {
        label = 27;
        break L4;
       }
       __ZN2ut25ComponentNativeBufferBase33freeNativeBufferWithComponentInfoEPNS_16NativeBufferBaseERKNS_13ComponentInfoE($phi$call56 + 20 | 0, HEAP32[$84 + ($82 << 2) >> 2] | 0);
      }
      break;
     }
    default:
     {}
    }
    $phi$call56 = (HEAP32[$phi$call56 + 4 >> 2] | 0) + $phi$call56 | 0;
    if (($phi$call56 | 0) == 0 ? 1 : ($phi$call56 | 0) >= ((HEAP32[$6 >> 2] | 0) + $10 | 0)) break L6;
   }
  } while (0);
  _free($$in$looptemp);
  if (!$$in) {
   label = 31;
   break;
  }
 }
 if ((label | 0) == 7) {
  _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 } else if ((label | 0) == 12) {
  _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 } else if ((label | 0) == 16) {
  _snprintf(25060, 1024, 27124, $vararg_buffer3) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 } else if ((label | 0) == 19) {
  _snprintf(25060, 1024, 27124, $vararg_buffer5) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 6191, 6212, 651);
 } else if ((label | 0) == 27) {
  _snprintf(25060, 1024, 27124, $vararg_buffer7) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 } else if ((label | 0) == 31) {
  HEAP32[$1 >> 2] = 0;
  $102 = $0 + 8 | 0;
  HEAP32[$102 >> 2] = 0;
  STACKTOP = sp;
  return;
 }
}

function __ZN9rapidjson8internal6Grisu2EdPcPiS2_($0, $1, $2, $3) {
 $0 = +$0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$sink$i = 0, $10 = 0, $104 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $115 = 0, $117 = 0, $119 = 0, $12 = 0, $120 = 0, $122 = 0, $124 = 0, $125 = 0, $129 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $138 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $149 = 0, $15 = 0, $151 = 0, $153 = 0, $155 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $41 = 0, $43 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $54 = 0.0, $55 = 0, $6 = 0, $61 = 0, $65 = 0, $67 = 0, $7 = 0, $70 = 0, $73 = 0, $74 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $87 = 0, $89 = 0, $90 = 0, $92 = 0, $94 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $4 = sp + 16 | 0;
 $5 = sp;
 HEAPF64[tempDoublePtr >> 3] = $0;
 $6 = HEAP32[tempDoublePtr >> 2] | 0;
 $7 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 $8 = _bitshift64Lshr($6 | 0, $7 | 0, 52) | 0;
 $10 = $8 & 2047;
 $11 = $7 & 1048575;
 $12 = ($10 | 0) == 0;
 $15 = $12 ? $6 : $6;
 $16 = $12 ? $11 : $11 | 1048576;
 $$sink$i = $12 ? -1074 : $10 + -1075 | 0;
 $17 = _bitshift64Shl($15 | 0, $16 | 0, 1) | 0;
 $18 = tempRet0;
 $19 = $17 | 1;
 $20 = $$sink$i + -1 | 0;
 if (0 == 0 & ($16 & 1048576 | 0) == 0) {
  $25 = $19;
  $26 = $18;
  $30 = $20;
  while (1) {
   $27 = _bitshift64Shl($25 | 0, $26 | 0, 1) | 0;
   $28 = tempRet0;
   $29 = $30 + -1 | 0;
   if (0 == 0 & ($26 & 1048576 | 0) == 0) {
    $25 = $27;
    $26 = $28;
    $30 = $29;
   } else {
    $35 = $27;
    $36 = $28;
    $48 = $29;
    break;
   }
  }
 } else {
  $35 = $19;
  $36 = $18;
  $48 = $20;
 }
 $37 = _bitshift64Shl($35 | 0, $36 | 0, 10) | 0;
 $41 = ($15 | 0) == 0 & ($16 | 0) == 1048576;
 $43 = _i64Add($17 | 0, $18 | 0, -1, -1) | 0;
 $49 = _bitshift64Shl(($41 ? -1 : $43) | 0, ($41 ? 4194303 : tempRet0) | 0, ($41 ? $$sink$i + -2 | 0 : $20) + 10 - $48 | 0) | 0;
 $50 = tempRet0;
 $54 = +(-51 - $48 | 0) * .30102999566398114 + 347.0;
 $55 = ~~$54;
 $61 = (($54 - +($55 | 0) > 0.0 & 1) + $55 >> 3) + 1 | 0;
 HEAP32[$3 >> 2] = 348 - ($61 << 3);
 $65 = 8 + ($61 << 3) | 0;
 $67 = HEAP32[$65 >> 2] | 0;
 $70 = HEAP32[$65 + 4 >> 2] | 0;
 $73 = HEAP16[4984 + ($61 << 1) >> 1] | 0;
 $74 = _llvm_ctlz_i64($15 | 0, $16 | 0, 0) | 0;
 $76 = _bitshift64Shl($15 | 0, $16 | 0, $74 | 0) | 0;
 $77 = tempRet0;
 $78 = ___muldi3($70 | 0, 0, $77 | 0, 0) | 0;
 $79 = tempRet0;
 $80 = ___muldi3($70 | 0, 0, $76 | 0, 0) | 0;
 $81 = tempRet0;
 $82 = ___muldi3($67 | 0, 0, $77 | 0, 0) | 0;
 $83 = tempRet0;
 ___muldi3($67 | 0, 0, $76 | 0, 0) | 0;
 $84 = tempRet0;
 $85 = _i64Add($82 | 0, 0, -2147483648, 0) | 0;
 $87 = _i64Add($85 | 0, tempRet0 | 0, $84 | 0, 0) | 0;
 _i64Add($87 | 0, tempRet0 | 0, $80 | 0, 0) | 0;
 $89 = tempRet0;
 $90 = _i64Add($83 | 0, 0, $78 | 0, $79 | 0) | 0;
 $92 = _i64Add($90 | 0, tempRet0 | 0, $81 | 0, 0) | 0;
 $94 = _i64Add($92 | 0, tempRet0 | 0, $89 | 0, 0) | 0;
 $99 = $4;
 HEAP32[$99 >> 2] = $94;
 HEAP32[$99 + 4 >> 2] = tempRet0;
 HEAP32[$4 + 8 >> 2] = $$sink$i + 64 - $74 + $73;
 $104 = _bitshift64Lshr($35 | 0, $36 | 0, 22) | 0;
 $106 = $37 & -1024;
 $107 = ___muldi3($70 | 0, 0, $104 | 0, 0) | 0;
 $108 = tempRet0;
 $109 = ___muldi3($70 | 0, 0, $106 | 0, 0) | 0;
 $110 = tempRet0;
 $111 = ___muldi3($67 | 0, 0, $104 | 0, 0) | 0;
 $112 = tempRet0;
 ___muldi3($67 | 0, 0, $106 | 0, 0) | 0;
 $113 = tempRet0;
 $115 = _i64Add($111 | 0, 0, -2147483648, 0) | 0;
 $117 = _i64Add($115 | 0, tempRet0 | 0, $113 | 0, 0) | 0;
 _i64Add($117 | 0, tempRet0 | 0, $109 & -1024 | 0, 0) | 0;
 $119 = tempRet0;
 $120 = _i64Add($112 | 0, 0, $107 | 0, $108 | 0) | 0;
 $122 = _i64Add($120 | 0, tempRet0 | 0, $110 | 0, 0) | 0;
 $124 = _i64Add($122 | 0, tempRet0 | 0, $119 | 0, 0) | 0;
 $125 = tempRet0;
 HEAP32[$5 + 8 >> 2] = $48 + 54 + $73;
 $129 = ___muldi3($70 | 0, 0, $50 | 0, 0) | 0;
 $130 = tempRet0;
 $131 = ___muldi3($70 | 0, 0, $49 | 0, 0) | 0;
 $132 = tempRet0;
 $133 = ___muldi3($67 | 0, 0, $50 | 0, 0) | 0;
 $134 = tempRet0;
 ___muldi3($67 | 0, 0, $49 | 0, 0) | 0;
 $135 = tempRet0;
 $136 = _i64Add($133 | 0, 0, -2147483648, 0) | 0;
 $138 = _i64Add($136 | 0, tempRet0 | 0, $135 | 0, 0) | 0;
 _i64Add($138 | 0, tempRet0 | 0, $131 | 0, 0) | 0;
 $140 = tempRet0;
 $141 = _i64Add($124 | 0, $125 | 0, -1, -1) | 0;
 $142 = tempRet0;
 $143 = $5;
 HEAP32[$143 >> 2] = $141;
 HEAP32[$143 + 4 >> 2] = $142;
 $149 = _i64Subtract(~$129 | 0, ~$130 | 0, $134 | 0, 0) | 0;
 $151 = _i64Subtract($149 | 0, tempRet0 | 0, $132 | 0, 0) | 0;
 $153 = _i64Subtract($151 | 0, tempRet0 | 0, $140 | 0, 0) | 0;
 $155 = _i64Add($153 | 0, tempRet0 | 0, $141 | 0, $142 | 0) | 0;
 __ZN9rapidjson8internal8DigitGenERKNS0_5DiyFpES3_yPcPiS5_($4, $5, $155, tempRet0, $1, $2, $3);
 STACKTOP = sp;
 return;
}

function __ZN2ut4arch26SharedComponentDataManager12addNoDefaultEjPKvj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$03143$i$i = 0, $$032$lcssa$i$i = 0, $$03242$i$i = 0, $$033$lcssa$i$i = 0, $$03341$i$i = 0, $$03540$i$i = 0, $$038$i$i = 0, $$13436$i$i = 0, $$137$i$i = 0, $$pre$phiZ2D = 0, $100 = 0, $13 = 0, $17 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $36 = 0, $4 = 0, $40 = 0, $46 = 0, $5 = 0, $51 = 0, $52 = 0, $6 = 0, $63 = 0, $64 = 0, $68 = 0, $70 = 0, $74 = 0, $75 = 0, $81 = 0, $83 = 0, $84 = 0, $9 = 0, $91 = 0, $92 = 0, $99 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $4 = sp + 8 | 0;
 $5 = sp + 4 | 0;
 HEAP32[$4 >> 2] = $1;
 $6 = $3 >>> 1;
 if (!$6) {
  $$032$lcssa$i$i = 255;
  $$033$lcssa$i$i = 255;
 } else {
  $$03143$i$i = $2;
  $$03242$i$i = 255;
  $$03341$i$i = 255;
  $$03540$i$i = $6;
  while (1) {
   $9 = ($$03540$i$i | 0) < 359 ? $$03540$i$i : 359;
   $$038$i$i = 0;
   $$13436$i$i = $$03341$i$i;
   $$137$i$i = $$03242$i$i;
   do {
    $$13436$i$i = $$13436$i$i + (HEAPU16[$$03143$i$i + ($$038$i$i << 1) >> 1] | 0) | 0;
    $$137$i$i = $$13436$i$i + $$137$i$i | 0;
    $$038$i$i = $$038$i$i + 1 | 0;
   } while (($$038$i$i | 0) < ($9 | 0));
   $13 = ($$13436$i$i & 65535) + ($$13436$i$i >>> 16) | 0;
   $17 = ($$137$i$i & 65535) + ($$137$i$i >>> 16) | 0;
   $$03540$i$i = $$03540$i$i - $9 | 0;
   if (($$03540$i$i | 0) <= 0) {
    $$032$lcssa$i$i = $17;
    $$033$lcssa$i$i = $13;
    break;
   } else {
    $$03143$i$i = $$03143$i$i + ($9 << 1) | 0;
    $$03242$i$i = $17;
    $$03341$i$i = $13;
   }
  }
 }
 $31 = $$033$lcssa$i$i & 65535 | $$033$lcssa$i$i >>> 16 | $$032$lcssa$i$i & -65536 | $$032$lcssa$i$i << 16;
 $32 = __Znaj($3) | 0;
 _memcpy($32 | 0, $2 | 0, $3 | 0) | 0;
 $33 = $0 + 84 | 0;
 $34 = HEAP32[$33 >> 2] | 0;
 if (($34 | 0) != -1) {
  $36 = $0 + 60 | 0;
  HEAP32[$33 >> 2] = HEAP32[(HEAP32[$36 >> 2] | 0) + ($34 << 2) >> 2];
  $40 = $0 + 36 | 0;
  if (HEAP32[(HEAP32[$40 >> 2] | 0) + ($34 << 2) >> 2] | 0) {
   _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 11016, 11061, 53);
  }
  $46 = __Znwj(16) | 0;
  HEAP32[$46 + 8 >> 2] = $31;
  HEAP32[$46 + 12 >> 2] = $34;
  HEAP32[$46 + 4 >> 2] = $31;
  HEAP32[$46 >> 2] = 0;
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIjiEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE19__node_insert_multiEPNS_11__hash_nodeIS2_PvEE($0 + 16 | 0, $46) | 0;
  $51 = (HEAP32[$40 >> 2] | 0) + ($34 << 2) | 0;
  $52 = HEAP32[$51 >> 2] | 0;
  HEAP32[$51 >> 2] = $32;
  if ($52 | 0) __ZdaPv($52);
  HEAP32[(HEAP32[$0 + 48 >> 2] | 0) + ($34 << 2) >> 2] = 1;
  HEAP32[(HEAP32[$36 >> 2] | 0) + ($34 << 2) >> 2] = 1;
  HEAP32[(HEAP32[$0 + 72 >> 2] | 0) + ($34 << 2) >> 2] = HEAP32[$4 >> 2];
  $$0 = $34;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $63 = $0 + 36 | 0;
 $64 = $0 + 40 | 0;
 $68 = (HEAP32[$64 >> 2] | 0) - (HEAP32[$63 >> 2] | 0) >> 2;
 $70 = __Znwj(16) | 0;
 HEAP32[$70 + 8 >> 2] = $31;
 HEAP32[$70 + 12 >> 2] = $68;
 HEAP32[$70 + 4 >> 2] = $31;
 HEAP32[$70 >> 2] = 0;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIjiEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE19__node_insert_multiEPNS_11__hash_nodeIS2_PvEE($0 + 16 | 0, $70) | 0;
 $74 = $32;
 HEAP32[$5 >> 2] = $74;
 $75 = HEAP32[$64 >> 2] | 0;
 if ($75 >>> 0 < (HEAP32[$0 + 44 >> 2] | 0) >>> 0) {
  HEAP32[$5 >> 2] = 0;
  HEAP32[$75 >> 2] = $74;
  HEAP32[$64 >> 2] = (HEAP32[$64 >> 2] | 0) + 4;
  $$pre$phiZ2D = $5;
 } else {
  __ZNSt3__26vectorINS_10unique_ptrIA_hNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($63, $5);
  $$pre$phiZ2D = $5;
 }
 $81 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 HEAP32[$$pre$phiZ2D >> 2] = 0;
 if ($81 | 0) __ZdaPv($81);
 HEAP32[$5 >> 2] = 1;
 $83 = $0 + 52 | 0;
 $84 = HEAP32[$83 >> 2] | 0;
 if ($84 >>> 0 < (HEAP32[$0 + 56 >> 2] | 0) >>> 0) {
  HEAP32[$84 >> 2] = 1;
  HEAP32[$83 >> 2] = (HEAP32[$83 >> 2] | 0) + 4;
 } else __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($0 + 48 | 0, $5);
 HEAP32[$5 >> 2] = 1;
 $91 = $0 + 64 | 0;
 $92 = HEAP32[$91 >> 2] | 0;
 if ($92 >>> 0 < (HEAP32[$0 + 68 >> 2] | 0) >>> 0) {
  HEAP32[$92 >> 2] = 1;
  HEAP32[$91 >> 2] = (HEAP32[$91 >> 2] | 0) + 4;
 } else __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($0 + 60 | 0, $5);
 $99 = $0 + 76 | 0;
 $100 = HEAP32[$99 >> 2] | 0;
 if (($100 | 0) == (HEAP32[$0 + 80 >> 2] | 0)) {
  __ZNSt3__26vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIRKjEEvOT_($0 + 72 | 0, $4);
  $$0 = $68;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  HEAP32[$100 >> 2] = HEAP32[$4 >> 2];
  HEAP32[$99 >> 2] = (HEAP32[$99 >> 2] | 0) + 4;
  $$0 = $68;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}
function __ZNSt3__27__sort4IRNS_6__lessIN2ut4arch13ComponentSpecES4_EEPS4_EEjT0_S8_S8_S8_T_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i31$i = 0, $$026$i = 0, $101 = 0, $105 = 0, $111 = 0, $116 = 0, $117 = 0, $121 = 0, $125 = 0, $127 = 0, $134 = 0, $136 = 0, $139 = 0, $14 = 0, $140 = 0, $145 = 0, $146 = 0, $150 = 0, $154 = 0, $155 = 0, $156 = 0, $164 = 0, $166 = 0, $169 = 0, $170 = 0, $175 = 0, $176 = 0, $180 = 0, $184 = 0, $185 = 0, $186 = 0, $195 = 0, $197 = 0, $200 = 0, $201 = 0, $206 = 0, $207 = 0, $211 = 0, $22 = 0, $24 = 0, $27 = 0, $28 = 0, $33 = 0, $34 = 0, $38 = 0, $42 = 0, $43 = 0, $5 = 0, $51 = 0, $53 = 0, $56 = 0, $57 = 0, $6 = 0, $62 = 0, $63 = 0, $67 = 0, $71 = 0, $73 = 0, $76 = 0, $77 = 0, $82 = 0, $83 = 0, $87 = 0, $91 = 0, $96 = 0, $97 = 0;
 $5 = HEAP32[$1 >> 2] | 0;
 $6 = HEAP32[$0 >> 2] | 0;
 if (($5 | 0) == ($6 | 0)) $$0$i$i$i = (HEAP32[$1 + 4 >> 2] | 0) < (HEAP32[$0 + 4 >> 2] | 0); else $$0$i$i$i = $5 >>> 0 < $6 >>> 0;
 $14 = HEAP32[$2 >> 2] | 0;
 if (($14 | 0) == ($5 | 0)) $$0$i$i31$i = (HEAP32[$2 + 4 >> 2] | 0) < (HEAP32[$1 + 4 >> 2] | 0); else $$0$i$i31$i = $14 >>> 0 < $5 >>> 0;
 do if ($$0$i$i$i) {
  $71 = $0;
  $73 = HEAP32[$71 >> 2] | 0;
  $76 = HEAP32[$71 + 4 >> 2] | 0;
  if ($$0$i$i31$i) {
   $77 = $2;
   $82 = HEAP32[$77 + 4 >> 2] | 0;
   $83 = $0;
   HEAP32[$83 >> 2] = HEAP32[$77 >> 2];
   HEAP32[$83 + 4 >> 2] = $82;
   $87 = $2;
   HEAP32[$87 >> 2] = $73;
   HEAP32[$87 + 4 >> 2] = $76;
   $$026$i = 1;
   $127 = $73;
   break;
  }
  $91 = $1;
  $96 = HEAP32[$91 + 4 >> 2] | 0;
  $97 = $0;
  HEAP32[$97 >> 2] = HEAP32[$91 >> 2];
  HEAP32[$97 + 4 >> 2] = $96;
  $101 = $1;
  HEAP32[$101 >> 2] = $73;
  HEAP32[$101 + 4 >> 2] = $76;
  $105 = HEAP32[$2 >> 2] | 0;
  if (($105 | 0) == ($73 | 0)) {
   if ((HEAP32[$2 + 4 >> 2] | 0) >= ($76 | 0)) {
    $$026$i = 1;
    $127 = $105;
    break;
   }
  } else if ($105 >>> 0 >= $73 >>> 0) {
   $$026$i = 1;
   $127 = $105;
   break;
  }
  $111 = $2;
  $116 = HEAP32[$111 + 4 >> 2] | 0;
  $117 = $1;
  HEAP32[$117 >> 2] = HEAP32[$111 >> 2];
  HEAP32[$117 + 4 >> 2] = $116;
  $121 = $2;
  HEAP32[$121 >> 2] = $73;
  HEAP32[$121 + 4 >> 2] = $76;
  $$026$i = 2;
  $127 = $73;
 } else if ($$0$i$i31$i) {
  $22 = $1;
  $24 = HEAP32[$22 >> 2] | 0;
  $27 = HEAP32[$22 + 4 >> 2] | 0;
  $28 = $2;
  $33 = HEAP32[$28 + 4 >> 2] | 0;
  $34 = $1;
  HEAP32[$34 >> 2] = HEAP32[$28 >> 2];
  HEAP32[$34 + 4 >> 2] = $33;
  $38 = $2;
  HEAP32[$38 >> 2] = $24;
  HEAP32[$38 + 4 >> 2] = $27;
  $42 = HEAP32[$1 >> 2] | 0;
  $43 = HEAP32[$0 >> 2] | 0;
  if (($42 | 0) == ($43 | 0)) {
   if ((HEAP32[$1 + 4 >> 2] | 0) >= (HEAP32[$0 + 4 >> 2] | 0)) {
    $$026$i = 1;
    $127 = $24;
    break;
   }
  } else if ($42 >>> 0 >= $43 >>> 0) {
   $$026$i = 1;
   $127 = $24;
   break;
  }
  $51 = $0;
  $53 = HEAP32[$51 >> 2] | 0;
  $56 = HEAP32[$51 + 4 >> 2] | 0;
  $57 = $1;
  $62 = HEAP32[$57 + 4 >> 2] | 0;
  $63 = $0;
  HEAP32[$63 >> 2] = HEAP32[$57 >> 2];
  HEAP32[$63 + 4 >> 2] = $62;
  $67 = $1;
  HEAP32[$67 >> 2] = $53;
  HEAP32[$67 + 4 >> 2] = $56;
  $$026$i = 2;
  $127 = HEAP32[$2 >> 2] | 0;
 } else {
  $$026$i = 0;
  $127 = $14;
 } while (0);
 $125 = HEAP32[$3 >> 2] | 0;
 if (($125 | 0) == ($127 | 0)) {
  if ((HEAP32[$3 + 4 >> 2] | 0) >= (HEAP32[$2 + 4 >> 2] | 0)) {
   $$0 = $$026$i;
   return $$0 | 0;
  }
 } else if ($125 >>> 0 >= $127 >>> 0) {
  $$0 = $$026$i;
  return $$0 | 0;
 }
 $134 = $2;
 $136 = HEAP32[$134 >> 2] | 0;
 $139 = HEAP32[$134 + 4 >> 2] | 0;
 $140 = $3;
 $145 = HEAP32[$140 + 4 >> 2] | 0;
 $146 = $2;
 HEAP32[$146 >> 2] = HEAP32[$140 >> 2];
 HEAP32[$146 + 4 >> 2] = $145;
 $150 = $3;
 HEAP32[$150 >> 2] = $136;
 HEAP32[$150 + 4 >> 2] = $139;
 $154 = $$026$i + 1 | 0;
 $155 = HEAP32[$2 >> 2] | 0;
 $156 = HEAP32[$1 >> 2] | 0;
 if (($155 | 0) == ($156 | 0)) {
  if ((HEAP32[$2 + 4 >> 2] | 0) >= (HEAP32[$1 + 4 >> 2] | 0)) {
   $$0 = $154;
   return $$0 | 0;
  }
 } else if ($155 >>> 0 >= $156 >>> 0) {
  $$0 = $154;
  return $$0 | 0;
 }
 $164 = $1;
 $166 = HEAP32[$164 >> 2] | 0;
 $169 = HEAP32[$164 + 4 >> 2] | 0;
 $170 = $2;
 $175 = HEAP32[$170 + 4 >> 2] | 0;
 $176 = $1;
 HEAP32[$176 >> 2] = HEAP32[$170 >> 2];
 HEAP32[$176 + 4 >> 2] = $175;
 $180 = $2;
 HEAP32[$180 >> 2] = $166;
 HEAP32[$180 + 4 >> 2] = $169;
 $184 = $$026$i + 2 | 0;
 $185 = HEAP32[$1 >> 2] | 0;
 $186 = HEAP32[$0 >> 2] | 0;
 if (($185 | 0) == ($186 | 0)) {
  if ((HEAP32[$1 + 4 >> 2] | 0) >= (HEAP32[$0 + 4 >> 2] | 0)) {
   $$0 = $184;
   return $$0 | 0;
  }
 } else if ($185 >>> 0 >= $186 >>> 0) {
  $$0 = $184;
  return $$0 | 0;
 }
 $195 = $0;
 $197 = HEAP32[$195 >> 2] | 0;
 $200 = HEAP32[$195 + 4 >> 2] | 0;
 $201 = $1;
 $206 = HEAP32[$201 + 4 >> 2] | 0;
 $207 = $0;
 HEAP32[$207 >> 2] = HEAP32[$201 >> 2];
 HEAP32[$207 + 4 >> 2] = $206;
 $211 = $1;
 HEAP32[$211 >> 2] = $197;
 HEAP32[$211 + 4 >> 2] = $200;
 $$0 = $$026$i + 3 | 0;
 return $$0 | 0;
}

function __ZN2ut10loadEntityERNS_12ManagerWorldERKN9rapidjson12GenericValueINS2_4UTF8IcEENS2_19MemoryPoolAllocatorINS2_12CrtAllocatorEEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$032$041 = 0, $14 = 0, $2 = 0, $3 = 0, $30 = 0, $46 = 0, $51 = 0, $52 = 0, $53 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $vararg_buffer3 = sp + 40 | 0;
 $vararg_buffer1 = sp + 32 | 0;
 $vararg_buffer = sp + 24 | 0;
 $2 = sp;
 $3 = sp + 48 | 0;
 if (!(__ZNK9rapidjson12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorINS_12CrtAllocatorEEEE9HasMemberEPKc($1, 12871) | 0)) {
  _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 16002, 12969, 437);
 };
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 HEAP32[$2 + 16 >> 2] = 0;
 HEAP32[$2 + 20 >> 2] = 0;
 HEAP16[$2 + 18 >> 1] = 1029;
 HEAP32[$2 + 8 >> 2] = 12871;
 HEAP32[$2 >> 2] = 5;
 if (!(HEAP16[(__ZN9rapidjson12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorINS_12CrtAllocatorEEEEixIS5_EERS6_RKNS0_IS2_T_EE($1, $2) | 0) + 18 >> 1] & 32)) {
  _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 16002, 12969, 437);
 };
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 HEAP32[$2 + 16 >> 2] = 0;
 HEAP32[$2 + 20 >> 2] = 0;
 HEAP16[$2 + 18 >> 1] = 1029;
 HEAP32[$2 + 8 >> 2] = 12871;
 HEAP32[$2 >> 2] = 5;
 $14 = __ZN9rapidjson12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorINS_12CrtAllocatorEEEEixIS5_EERS6_RKNS0_IS2_T_EE($1, $2) | 0;
 if (!(HEAP16[$14 + 18 >> 1] & 32)) ___assert_fail(16055, 15939, 1645, 16080);
 HEAP32[$3 >> 2] = HEAP32[$14 >> 2];
 if (!(__ZNK9rapidjson12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorINS_12CrtAllocatorEEEE9HasMemberEPKc($1, 12877) | 0)) {
  _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 16087, 12969, 439);
 };
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 HEAP32[$2 + 16 >> 2] = 0;
 HEAP32[$2 + 20 >> 2] = 0;
 HEAP16[$2 + 18 >> 1] = 1029;
 HEAP32[$2 + 8 >> 2] = 12877;
 HEAP32[$2 >> 2] = 7;
 if (!(HEAP16[(__ZN9rapidjson12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorINS_12CrtAllocatorEEEEixIS5_EERS6_RKNS0_IS2_T_EE($1, $2) | 0) + 18 >> 1] & 32)) {
  _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 16087, 12969, 439);
 };
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 HEAP32[$2 + 16 >> 2] = 0;
 HEAP32[$2 + 20 >> 2] = 0;
 HEAP16[$2 + 18 >> 1] = 1029;
 HEAP32[$2 + 8 >> 2] = 12877;
 HEAP32[$2 >> 2] = 7;
 $30 = __ZN9rapidjson12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorINS_12CrtAllocatorEEEEixIS5_EERS6_RKNS0_IS2_T_EE($1, $2) | 0;
 if (!(HEAP16[$30 + 18 >> 1] & 32)) ___assert_fail(16055, 15939, 1645, 16080);
 HEAP32[$3 + 4 >> 2] = HEAP32[$30 >> 2];
 if (!(__ZNK9rapidjson12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorINS_12CrtAllocatorEEEE9HasMemberEPKc($1, 12885) | 0)) {
  _snprintf(25060, 1024, 27124, $vararg_buffer3) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 16144, 12969, 443);
 };
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 HEAP32[$2 + 16 >> 2] = 0;
 HEAP32[$2 + 20 >> 2] = 0;
 HEAP16[$2 + 18 >> 1] = 1029;
 HEAP32[$2 + 8 >> 2] = 12885;
 HEAP32[$2 >> 2] = 10;
 if ((HEAP16[(__ZN9rapidjson12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorINS_12CrtAllocatorEEEEixIS5_EERS6_RKNS0_IS2_T_EE($1, $2) | 0) + 18 >> 1] | 0) != 3) {
  _snprintf(25060, 1024, 27124, $vararg_buffer3) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 16144, 12969, 443);
 };
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 HEAP32[$2 + 16 >> 2] = 0;
 HEAP32[$2 + 20 >> 2] = 0;
 HEAP16[$2 + 18 >> 1] = 1029;
 HEAP32[$2 + 8 >> 2] = 12885;
 HEAP32[$2 >> 2] = 10;
 $46 = __ZN9rapidjson12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorINS_12CrtAllocatorEEEEixIS5_EERS6_RKNS0_IS2_T_EE($1, $2) | 0;
 if ((HEAP16[$46 + 18 >> 1] | 0) != 3) ___assert_fail(16210, 15939, 1459, 16221);
 $51 = HEAP32[$46 + 8 >> 2] | 0;
 $52 = HEAP32[$46 >> 2] | 0;
 $53 = $51 + ($52 * 48 | 0) | 0;
 if (!$52) {
  STACKTOP = sp;
  return;
 }
 $$sroa$032$041 = $51;
 do {
  __ZN2ut13loadComponentERNS_12ManagerWorldERNS_6EntityERKN9rapidjson12GenericValueINS4_4UTF8IcEENS4_19MemoryPoolAllocatorINS4_12CrtAllocatorEEEEESD_($0, $3, $$sroa$032$041, $$sroa$032$041 + 24 | 0);
  $$sroa$032$041 = $$sroa$032$041 + 48 | 0;
 } while (($$sroa$032$041 | 0) != ($53 | 0));
 STACKTOP = sp;
 return;
}

function __ZN2ut4arch13EntityManagerC2Ev($0) {
 $0 = $0 | 0;
 var $$pre = 0, $$pre29 = 0, $$pre29$1 = 0, $$pre29$2 = 0, $$pre31 = 0, $$pre31$1 = 0, $$pre31$2 = 0, $$pre32 = 0, $$pre32$1 = 0, $$pre32$2 = 0, $$pre33 = 0, $$pre33$1 = 0, $$pre33$2 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $22 = 0, $23 = 0, $25 = 0, $26 = 0, $28 = 0, $3 = 0, $31 = 0, $33 = 0, $34 = 0, $36 = 0, $37 = 0, $4 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $51 = 0, $58 = 0, $74 = 0, $75 = 0, $79 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = $0 + 4 | 0;
 $3 = $0 + 8 | 0;
 $4 = $0 + 12 | 0;
 $5 = $0 + 20 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 HEAP32[$5 + 12 >> 2] = 0;
 HEAP32[$5 + 16 >> 2] = 0;
 HEAP32[$0 + 40 >> 2] = 4096;
 HEAP32[$0 + 44 >> 2] = 0;
 HEAP32[$0 + 48 >> 2] = 0;
 HEAP32[$0 + 52 >> 2] = 4096;
 $10 = $0 + 56 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP8[$10 + 12 >> 0] = 0;
 $12 = $0 + 124 | 0;
 dest = $0 + 72 | 0;
 stop = dest + 52 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$12 >> 2] = 1065353216;
 $13 = $0 + 128 | 0;
 HEAP32[$13 >> 2] = 0;
 HEAP32[$13 + 4 >> 2] = 0;
 HEAP32[$13 + 8 >> 2] = 0;
 HEAP32[$13 + 12 >> 2] = 0;
 HEAP32[$0 + 144 >> 2] = 1065353216;
 HEAP8[$0 + 148 >> 0] = 0;
 _memset($0 + 152 | 0, 0, 32768) | 0;
 $17 = __Znwj(88) | 0;
 __ZN2ut4arch26SharedComponentDataManagerC2Ev($17);
 $18 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $17;
 if ($18 | 0) {
  __ZN2ut4arch26SharedComponentDataManagerD2Ev($18);
  __ZdlPv($18);
 }
 $20 = __Znwj(56) | 0;
 HEAP32[$20 >> 2] = 0;
 HEAP32[$20 + 4 >> 2] = 0;
 HEAP32[$20 + 8 >> 2] = 0;
 HEAP32[$20 + 12 >> 2] = 0;
 HEAP32[$20 + 16 >> 2] = 0;
 HEAP32[$20 + 20 >> 2] = 0;
 HEAP32[$20 + 24 >> 2] = 0;
 HEAP32[$20 + 28 >> 2] = 0;
 HEAP32[$20 + 32 >> 2] = 1065353216;
 $22 = $20 + 36 | 0;
 $23 = $20 + 40 | 0;
 HEAP32[$22 >> 2] = 0;
 HEAP32[$22 + 4 >> 2] = 0;
 HEAP32[$22 + 8 >> 2] = 0;
 HEAP32[$22 + 12 >> 2] = 0;
 $25 = _aligned_alloc(64, 65536) | 0;
 HEAP32[$25 >> 2] = 0;
 $26 = HEAP32[$23 >> 2] | 0;
 HEAP32[(($26 | 0) == 0 ? $22 : $26) >> 2] = $25;
 HEAP32[$23 >> 2] = $25;
 $28 = $25 + 4 | 0;
 HEAP32[$20 + 44 >> 2] = 12;
 HEAP32[$20 + 52 >> 2] = $28;
 HEAP32[$28 >> 2] = $28;
 HEAP32[$25 + 8 >> 2] = $28;
 $31 = HEAP32[$2 >> 2] | 0;
 HEAP32[$2 >> 2] = $20;
 if ($31 | 0) {
  __ZN2ut4arch16ArchetypeManagerD2Ev($31);
  __ZdlPv($31);
 }
 $33 = __Znwj(48) | 0;
 __ZN2ut4arch17EntityDataManagerC2Ev($33);
 $34 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = $33;
 if ($34 | 0) {
  __ZN2ut4arch17EntityDataManagerD2Ev($34);
  __ZdlPv($34);
 }
 $36 = __Znwj(16) | 0;
 HEAP32[$36 >> 2] = 0;
 HEAP32[$36 + 4 >> 2] = 0;
 HEAP32[$36 + 8 >> 2] = 0;
 HEAP32[$36 + 12 >> 2] = 0;
 $37 = HEAP32[$4 >> 2] | 0;
 HEAP32[$4 >> 2] = $36;
 if (!$37) {
  $51 = $36;
  $58 = $36;
 } else {
  __ZdlPv($37);
  $$pre = HEAP32[$4 >> 2] | 0;
  $51 = $$pre;
  $58 = $$pre;
 }
 $41 = HEAP32[$0 >> 2] | 0;
 $42 = HEAP32[$2 >> 2] | 0;
 $43 = HEAP32[$3 >> 2] | 0;
 $44 = __Znwj(16) | 0;
 HEAP32[$44 >> 2] = $41;
 HEAP32[$44 + 4 >> 2] = $42;
 HEAP32[$44 + 8 >> 2] = $43;
 HEAP32[$44 + 12 >> 2] = $51;
 HEAP32[$41 >> 2] = $42;
 HEAP32[$41 + 4 >> 2] = $41;
 HEAP32[$41 + 8 >> 2] = $58;
 HEAP32[$41 + 12 >> 2] = $43;
 $$pre29 = HEAP32[$44 + 4 >> 2] | 0;
 $$pre31 = HEAP32[$0 >> 2] | 0;
 $$pre32 = HEAP32[$4 >> 2] | 0;
 $$pre33 = HEAP32[$3 >> 2] | 0;
 HEAP32[$$pre29 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$pre29 + 4 >> 2] = $$pre31;
 HEAP32[$$pre29 + 8 >> 2] = $$pre32;
 HEAP32[$$pre29 + 12 >> 2] = $$pre33;
 $$pre29$1 = HEAP32[$44 + 8 >> 2] | 0;
 $$pre31$1 = HEAP32[$0 >> 2] | 0;
 $$pre32$1 = HEAP32[$4 >> 2] | 0;
 $$pre33$1 = HEAP32[$3 >> 2] | 0;
 HEAP32[$$pre29$1 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$pre29$1 + 4 >> 2] = $$pre31$1;
 HEAP32[$$pre29$1 + 8 >> 2] = $$pre32$1;
 HEAP32[$$pre29$1 + 12 >> 2] = $$pre33$1;
 $$pre29$2 = HEAP32[$44 + 12 >> 2] | 0;
 $$pre31$2 = HEAP32[$0 >> 2] | 0;
 $$pre32$2 = HEAP32[$4 >> 2] | 0;
 $$pre33$2 = HEAP32[$3 >> 2] | 0;
 HEAP32[$$pre29$2 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$pre29$2 + 4 >> 2] = $$pre31$2;
 HEAP32[$$pre29$2 + 8 >> 2] = $$pre32$2;
 HEAP32[$$pre29$2 + 12 >> 2] = $$pre33$2;
 __ZN2ut4arch13EntityManager31toTypeInArchetypeListWithEntityEPKjj($1, 0, 0, 0);
 $74 = __ZN2ut4arch16ArchetypeManager20getOrCreateArchetypeERKNSt3__26vectorIjNS2_9allocatorIjEEEE(HEAP32[$0 + 4 >> 2] | 0, $1) | 0;
 $75 = HEAP32[$1 >> 2] | 0;
 if (!$75) {
  $79 = $0 + 16 | 0;
  HEAP32[$79 >> 2] = $74;
  __ZdlPv($44);
  STACKTOP = sp;
  return;
 }
 HEAP32[$1 + 4 >> 2] = $75;
 __ZdlPv($75);
 $79 = $0 + 16 | 0;
 HEAP32[$79 >> 2] = $74;
 __ZdlPv($44);
 STACKTOP = sp;
 return;
}

function __ZN2ut10Serializer8fromJSONERNS_12ManagerWorldERKNS_12NativeStringE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $$035 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $27 = 0, $3 = 0, $35 = 0, $40 = 0, $41 = 0, $42 = 0, $46 = 0, $48 = 0, $5 = 0, $50 = 0, $53 = 0, $55 = 0, $59 = 0, $63 = 0, $7 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer4 = 0, $vararg_buffer6 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $vararg_buffer6 = sp + 112 | 0;
 $vararg_buffer4 = sp + 104 | 0;
 $vararg_buffer2 = sp + 96 | 0;
 $vararg_buffer = sp + 88 | 0;
 $2 = sp + 64 | 0;
 $3 = sp;
 $5 = HEAP32[$1 + 4 >> 2] | 0;
 $7 = _malloc($5 + 1 | 0) | 0;
 _memcpy($7 | 0, HEAP32[$1 >> 2] | 0, $5 | 0) | 0;
 HEAP8[$7 + $5 >> 0] = 0;
 $10 = $3 + 24 | 0;
 $11 = $3 + 28 | 0;
 $12 = $3 + 36 | 0;
 $13 = $3 + 52 | 0;
 dest = $3;
 stop = dest + 52 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$13 >> 2] = 1024;
 $14 = $3 + 56 | 0;
 HEAP32[$14 >> 2] = 0;
 $15 = $3 + 60 | 0;
 HEAP32[$15 >> 2] = 0;
 $16 = __Znwj(20) | 0;
 HEAP32[$16 >> 2] = 0;
 HEAP32[$16 + 4 >> 2] = 65536;
 HEAP32[$16 + 8 >> 2] = 0;
 HEAP32[$16 + 12 >> 2] = 0;
 HEAP32[$16 + 16 >> 2] = 0;
 HEAP32[$10 >> 2] = $16;
 HEAP32[$11 >> 2] = $16;
 HEAP32[$2 >> 2] = $7;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = $7;
 if (!(HEAP32[(__ZN9rapidjson15GenericDocumentINS_4UTF8IcEENS_19MemoryPoolAllocatorINS_12CrtAllocatorEEES4_E11ParseStreamILj1ES2_NS_25GenericInsituStringStreamIS2_EEEERS6_RT1_($3, $2) | 0) + 56 >> 2] | 0)) {
  if ((HEAP16[$3 + 18 >> 1] | 0) != 3) {
   _snprintf(25060, 1024, 27124, $vararg_buffer2) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 15859, 12969, 463);
  }
  if (!(__ZNK9rapidjson12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorINS_12CrtAllocatorEEEE9HasMemberEPKc($3, 5728) | 0)) {
   _snprintf(25060, 1024, 27124, $vararg_buffer4) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 15879, 12969, 466);
  };
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  HEAP32[$2 + 12 >> 2] = 0;
  HEAP32[$2 + 16 >> 2] = 0;
  HEAP32[$2 + 20 >> 2] = 0;
  HEAP16[$2 + 18 >> 1] = 1029;
  HEAP32[$2 + 8 >> 2] = 5728;
  HEAP32[$2 >> 2] = 8;
  $35 = __ZN9rapidjson12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorINS_12CrtAllocatorEEEEixIS5_EERS6_RKNS0_IS2_T_EE($3, $2) | 0;
  if ((HEAP16[$35 + 18 >> 1] | 0) != 4) {
   _snprintf(25060, 1024, 27124, $vararg_buffer6) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 15910, 12969, 468);
  }
  $40 = HEAP32[$35 + 8 >> 2] | 0;
  $41 = HEAP32[$35 >> 2] | 0;
  $42 = $40 + ($41 * 24 | 0) | 0;
  if ($41 | 0) {
   $$035 = $40;
   do {
    __ZN2ut10loadEntityERNS_12ManagerWorldERKN9rapidjson12GenericValueINS2_4UTF8IcEENS2_19MemoryPoolAllocatorINS2_12CrtAllocatorEEEEE($0, $$035);
    $$035 = $$035 + 24 | 0;
   } while (($$035 | 0) != ($42 | 0));
  }
  _free($7);
 } else {
  $27 = HEAP32[$15 >> 2] | 0;
  do switch (HEAP32[$14 >> 2] | 0) {
  case 0:
   {
    $$0$i = 15820;
    break;
   }
  case 1:
   {
    $$0$i = 15797;
    break;
   }
  case 2:
   {
    $$0$i = 15741;
    break;
   }
  case 3:
   {
    $$0$i = 15726;
    break;
   }
  case 4:
   {
    $$0$i = 15692;
    break;
   }
  case 5:
   {
    $$0$i = 15645;
    break;
   }
  case 6:
   {
    $$0$i = 15598;
    break;
   }
  case 7:
   {
    $$0$i = 15551;
    break;
   }
  case 8:
   {
    $$0$i = 15504;
    break;
   }
  case 9:
   {
    $$0$i = 15463;
    break;
   }
  case 10:
   {
    $$0$i = 15427;
    break;
   }
  case 11:
   {
    $$0$i = 15383;
    break;
   }
  case 12:
   {
    $$0$i = 15355;
    break;
   }
  case 13:
   {
    $$0$i = 15316;
    break;
   }
  case 14:
   {
    $$0$i = 15286;
    break;
   }
  case 15:
   {
    $$0$i = 15261;
    break;
   }
  case 16:
   {
    $$0$i = 15221;
    break;
   }
  case 17:
   {
    $$0$i = 15196;
    break;
   }
  default:
   $$0$i = 15181;
  } while (0);
  HEAP32[$vararg_buffer >> 2] = $27;
  HEAP32[$vararg_buffer + 4 >> 2] = $$0$i;
  _printf(15830, $vararg_buffer) | 0;
 }
 $46 = HEAP32[$11 >> 2] | 0;
 if ($46 | 0) {
  $48 = HEAP32[$46 >> 2] | 0;
  L41 : do if ($48 | 0) {
   $50 = $46 + 8 | 0;
   $53 = $48;
   while (1) {
    if ((HEAP32[$50 >> 2] | 0) == ($53 | 0)) break;
    $55 = HEAP32[$53 + 8 >> 2] | 0;
    _free($53);
    HEAP32[$46 >> 2] = $55;
    if (!$55) break L41; else $53 = $55;
   }
   HEAP32[$53 + 4 >> 2] = 0;
  } while (0);
  $59 = HEAP32[$46 + 16 >> 2] | 0;
  if ($59 | 0) __ZdlPv($59);
  __ZdlPv($46);
 }
 _free(HEAP32[$3 + 40 >> 2] | 0);
 $63 = HEAP32[$12 >> 2] | 0;
 if (!$63) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv($63);
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_128parse_sizeof_param_pack_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $$0$i$i$add$i = 0, $$0$i$i$i = 0, $$0$i$i$idx$i = 0, $$045 = 0, $$045$in = 0, $$046 = 0, $$148 = 0, $16 = 0, $19 = 0, $23 = 0, $24 = 0, $28 = 0, $3 = 0, $35 = 0, $36 = 0, $4 = 0, $43 = 0, $44 = 0, $5 = 0, $51 = 0, $52 = 0, $59 = 0, $6 = 0, $65 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $3 = sp + 48 | 0;
 $4 = sp + 24 | 0;
 $5 = sp;
 $6 = sp + 12 | 0;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 115) if ((HEAP8[$0 + 1 >> 0] | 0) == 90) {
  $16 = $0 + 2 | 0;
  if ((HEAP8[$16 >> 0] | 0) == 84) {
   $19 = $2 + 4 | 0;
   $23 = ((HEAP32[$19 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
   $24 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($16, $1, $2) | 0;
   $28 = ((HEAP32[$19 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
   if (($24 | 0) == ($16 | 0)) $$148 = $0; else {
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, 22488, __ZNSt3__211char_traitsIcE6lengthEPKc(22488) | 0);
    L7 : do if (($23 | 0) != ($28 | 0)) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($4, (HEAP32[$2 >> 2] | 0) + ($23 * 24 | 0) | 0);
     $35 = HEAP8[$4 + 11 >> 0] | 0;
     $36 = $35 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($3, $36 ? HEAP32[$4 >> 2] | 0 : $4, $36 ? HEAP32[$4 + 4 >> 2] | 0 : $35 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     $43 = $4 + 11 | 0;
     $44 = $4 + 4 | 0;
     $$045$in = $23;
     while (1) {
      $$045 = $$045$in + 1 | 0;
      if (($$045 | 0) == ($28 | 0)) break L7;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($5, (HEAP32[$2 >> 2] | 0) + ($$045 * 24 | 0) | 0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($5, 0, 22499) | 0;
      HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
      HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
      HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
      $$0$i$i$i = 0;
      while (1) {
       if (($$0$i$i$i | 0) == 3) break;
       HEAP32[$5 + ($$0$i$i$i << 2) >> 2] = 0;
       $$0$i$i$i = $$0$i$i$i + 1 | 0;
      }
      $51 = HEAP8[$43 >> 0] | 0;
      $52 = $51 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($3, $52 ? HEAP32[$4 >> 2] | 0 : $4, $52 ? HEAP32[$44 >> 2] | 0 : $51 & 255) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
      $$045$in = $$045;
     }
    } while (0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($3, 22275) | 0;
    $$046 = $28;
    while (1) {
     if (($$046 | 0) == ($23 | 0)) break;
     $59 = HEAP32[$19 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($59 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$19 >> 2] = $59 + -24;
     $$046 = $$046 + -1 | 0;
    }
    HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
    HEAP32[$6 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
    HEAP32[$6 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
    $$0$i$i = 0;
    while (1) {
     if (($$0$i$i | 0) == 3) break;
     HEAP32[$3 + ($$0$i$i << 2) >> 2] = 0;
     $$0$i$i = $$0$i$i + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($4, $6);
    $65 = HEAP32[$19 >> 2] | 0;
    if ($65 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($65, $4);
     HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$148 = $24;
   }
  } else $$148 = $0;
 } else $$148 = $0; else $$148 = $0; else $$148 = $0;
 STACKTOP = sp;
 return $$148 | 0;
}

function ___cxa_demangle($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i55 = 0, $$158 = 0, $$2 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $26 = 0, $29 = 0, $30 = 0, $34 = 0, $4 = 0, $41 = 0, $42 = 0, $45 = 0, $47 = 0, $48 = 0, $5 = 0, $51 = 0, $55 = 0, $56 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $63 = 0, $66 = 0, $67 = 0, $70 = 0, $71 = 0, $79 = 0, $8 = 0, $84 = 0, $87 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4192 | 0;
 $4 = sp + 4176 | 0;
 $5 = sp;
 $6 = sp + 4112 | 0;
 if (!$0) label = 3; else {
  $8 = ($1 | 0) != 0;
  $9 = ($2 | 0) == 0;
  if ($8 & $9) label = 3; else {
   if ($8) $62 = HEAP32[$2 >> 2] | 0; else $62 = 0;
   __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EEC2Ev($5);
   __ZN10__cxxabiv112_GLOBAL__N_12DbC2ILj4096EEERNS0_5arenaIXT_EEE($6, $5);
   $12 = $6 + 48 | 0;
   $13 = $6 + 61 | 0;
   HEAP32[$12 >> 2] = 0;
   HEAP32[$12 + 4 >> 2] = 0;
   HEAP32[$12 + 8 >> 2] = 0;
   HEAP8[$12 + 12 >> 0] = 0;
   HEAP8[$13 >> 0] = 1;
   $14 = $6 + 32 | 0;
   $15 = $6 + 36 | 0;
   $16 = HEAP32[$15 >> 2] | 0;
   if ($16 >>> 0 < (HEAP32[$6 + 40 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lj4096EEEEELj4096EEC2ERNS0_5arenaILj4096EEE($4, $5);
    HEAP32[$16 >> 2] = 0;
    HEAP32[$16 + 4 >> 2] = 0;
    HEAP32[$16 + 8 >> 2] = 0;
    HEAP32[$16 + 12 >> 2] = HEAP32[$4 >> 2];
    HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + 16;
   } else __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE24__emplace_back_slow_pathIJRNS2_5arenaILj4096EEEEEEvDpOT_($14, $5);
   $26 = $6 + 62 | 0;
   HEAP8[$26 >> 0] = 0;
   HEAP8[$6 + 63 >> 0] = 1;
   HEAP32[$4 >> 2] = 0;
   $29 = $0 + (_strlen($0) | 0) | 0;
   __ZN10__cxxabiv112_GLOBAL__N_18demangleINS0_2DbEEEvPKcS4_RT_Ri($0, $29, $6, $4);
   $30 = HEAP32[$4 >> 2] | 0;
   do if (($30 | 0) != 0 | (HEAP8[$26 >> 0] | 0) == 0) {
    $55 = $30;
    label = 22;
   } else {
    $34 = HEAP32[$14 >> 2] | 0;
    if (($34 | 0) == (HEAP32[$15 >> 2] | 0)) label = 23; else if ((HEAP32[$34 >> 2] | 0) == (HEAP32[$34 + 4 >> 2] | 0)) label = 23; else {
     HEAP8[$26 >> 0] = 0;
     HEAP8[$13 >> 0] = 0;
     $41 = HEAP32[$6 >> 2] | 0;
     $42 = $6 + 4 | 0;
     $$0$i$i$i = HEAP32[$42 >> 2] | 0;
     while (1) {
      if (($$0$i$i$i | 0) == ($41 | 0)) break;
      $45 = $$0$i$i$i + -24 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($45);
      $$0$i$i$i = $45;
     }
     HEAP32[$42 >> 2] = $41;
     $47 = HEAP32[$6 + 16 >> 2] | 0;
     $48 = $6 + 20 | 0;
     $$0$i$i$i55 = HEAP32[$48 >> 2] | 0;
     while (1) {
      if (($$0$i$i$i55 | 0) == ($47 | 0)) break;
      $51 = $$0$i$i$i55 + -16 | 0;
      __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($51);
      $$0$i$i$i55 = $51;
     }
     HEAP32[$48 >> 2] = $47;
     __ZN10__cxxabiv112_GLOBAL__N_18demangleINS0_2DbEEEvPKcS4_RT_Ri($0, $29, $6, $4);
     if (!(HEAP8[$26 >> 0] | 0)) {
      $55 = HEAP32[$4 >> 2] | 0;
      label = 22;
      break;
     } else {
      HEAP32[$4 >> 2] = -2;
      $$2 = 0;
      $87 = -2;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 22) if (!$55) label = 23; else {
    $$2 = 0;
    $87 = $55;
   }
   do if ((label | 0) == 23) {
    $56 = $6 + 4 | 0;
    $59 = __ZNK10__cxxabiv112_GLOBAL__N_111string_pair4sizeEv((HEAP32[$56 >> 2] | 0) + -24 | 0) | 0;
    $60 = $59 + 1 | 0;
    if ($60 >>> 0 > $62 >>> 0) {
     $63 = _realloc($1, $60) | 0;
     if (!$63) {
      HEAP32[$4 >> 2] = -1;
      $$2 = 0;
      $87 = -1;
      break;
     }
     if ($9) $$158 = $63; else {
      HEAP32[$2 >> 2] = $60;
      $$158 = $63;
     }
    } else if (!$1) {
     $$2 = 0;
     $87 = 0;
     break;
    } else $$158 = $1;
    $66 = HEAP32[$56 >> 2] | 0;
    $67 = $66 + -12 | 0;
    $70 = HEAP8[$67 + 11 >> 0] | 0;
    $71 = $70 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($66 + -24 | 0, $71 ? HEAP32[$67 >> 2] | 0 : $67, $71 ? HEAP32[$66 + -8 >> 2] | 0 : $70 & 255) | 0;
    $79 = (HEAP32[$56 >> 2] | 0) + -24 | 0;
    if ((HEAP8[$79 + 11 >> 0] | 0) < 0) $84 = HEAP32[$79 >> 2] | 0; else $84 = $79;
    _memcpy($$158 | 0, $84 | 0, $59 | 0) | 0;
    HEAP8[$$158 + $59 >> 0] = 0;
    $$2 = $$158;
    $87 = 0;
   } while (0);
   if ($3 | 0) HEAP32[$3 >> 2] = $87;
   __ZN10__cxxabiv112_GLOBAL__N_12DbD2Ev($6);
   __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EED2Ev($5);
   $$0 = $$2;
  }
 }
 if ((label | 0) == 3) if (!$3) $$0 = 0; else {
  HEAP32[$3 >> 2] = -3;
  $$0 = 0;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIjiEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE19__node_insert_multiEPNS_11__hash_nodeIS2_PvEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$051$off065 = 0, $$051$off065$us = 0, $$052$lcssa = 0, $$05264 = 0, $$05264$phi = 0, $$05264$us = 0, $$05264$us$phi = 0, $$lcssa = 0, $$pre$phiZ2D = 0, $10 = 0.0, $100 = 0, $100$phi = 0, $101 = 0, $101$phi = 0, $13 = 0.0, $2 = 0, $24 = 0, $27 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $39 = 0, $4 = 0, $40 = 0, $42 = 0, $46 = 0, $49 = 0, $5 = 0, $55 = 0, $56 = 0, $59 = 0, $6 = 0, $60 = 0, $63 = 0, $64 = 0, $7 = 0, $71 = 0, $72 = 0, $73 = 0, $76 = 0, $80 = 0, $87 = 0, $90 = 0, $95 = 0, $98 = 0, $99 = 0;
 $2 = $1 + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $1 + 4 | 0;
 HEAP32[$4 >> 2] = $3;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $7 = $0 + 12 | 0;
 $10 = +(((HEAP32[$7 >> 2] | 0) + 1 | 0) >>> 0);
 $13 = +HEAPF32[$0 + 16 >> 2];
 if (($6 | 0) == 0 | $13 * +($6 >>> 0) < $10) {
  $24 = $6 << 1 | ($6 >>> 0 < 3 | ($6 + -1 & $6 | 0) != 0) & 1;
  $27 = ~~+Math_ceil(+($10 / $13)) >>> 0;
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIjiEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE6rehashEj($0, $24 >>> 0 < $27 >>> 0 ? $27 : $24);
  $$0 = HEAP32[$5 >> 2] | 0;
  $34 = HEAP32[$4 >> 2] | 0;
 } else {
  $$0 = $6;
  $34 = $3;
 }
 $30 = $$0 + -1 | 0;
 $32 = ($30 & $$0 | 0) == 0;
 if ($32) $39 = $30 & $34; else if ($34 >>> 0 < $$0 >>> 0) $39 = $34; else $39 = ($34 >>> 0) % ($$0 >>> 0) | 0;
 $40 = HEAP32[(HEAP32[$0 >> 2] | 0) + ($39 << 2) >> 2] | 0;
 if (!$40) {
  $42 = $0 + 8 | 0;
  HEAP32[$1 >> 2] = HEAP32[$42 >> 2];
  HEAP32[$42 >> 2] = $1;
  HEAP32[(HEAP32[$0 >> 2] | 0) + ($39 << 2) >> 2] = $42;
  $46 = HEAP32[$1 >> 2] | 0;
  if (!$46) {
   $$pre$phiZ2D = $1;
   $98 = HEAP32[$7 >> 2] | 0;
   $99 = $98 + 1 | 0;
   HEAP32[$7 >> 2] = $99;
   return $$pre$phiZ2D | 0;
  }
  $49 = HEAP32[$46 + 4 >> 2] | 0;
  if ($32) $55 = $49 & $30; else if ($49 >>> 0 < $$0 >>> 0) $55 = $49; else $55 = ($49 >>> 0) % ($$0 >>> 0) | 0;
  HEAP32[(HEAP32[$0 >> 2] | 0) + ($55 << 2) >> 2] = $1;
  $$pre$phiZ2D = $1;
  $98 = HEAP32[$7 >> 2] | 0;
  $99 = $98 + 1 | 0;
  HEAP32[$7 >> 2] = $99;
  return $$pre$phiZ2D | 0;
 }
 $56 = HEAP32[$40 >> 2] | 0;
 L21 : do if (!$56) {
  $$052$lcssa = $40;
  $$lcssa = $40;
 } else {
  if ($32) {
   $$051$off065$us = 0;
   $$05264$us = $40;
   $101 = $40;
   $59 = $56;
   while (1) {
    $60 = HEAP32[$59 + 4 >> 2] | 0;
    if (($60 & $30 | 0) != ($39 | 0)) {
     $$052$lcssa = $$05264$us;
     $$lcssa = $101;
     break L21;
    }
    if (($60 | 0) == ($34 | 0)) $63 = (HEAP32[$59 + 8 >> 2] | 0) == (HEAP32[$2 >> 2] | 0); else $63 = 0;
    if (!($63 | $$051$off065$us ^ 1)) {
     $$052$lcssa = $$05264$us;
     $$lcssa = $101;
     break L21;
    }
    $64 = HEAP32[$59 >> 2] | 0;
    if (!$64) {
     $$052$lcssa = $59;
     $$lcssa = $59;
     break L21;
    } else {
     $101$phi = $59;
     $$05264$us$phi = $59;
     $$051$off065$us = $$051$off065$us | $63;
     $59 = $64;
     $101 = $101$phi;
     $$05264$us = $$05264$us$phi;
    }
   }
  }
  $$051$off065 = 0;
  $$05264 = $40;
  $100 = $40;
  $73 = $56;
  while (1) {
   $76 = HEAP32[$73 + 4 >> 2] | 0;
   if ($76 >>> 0 < $$0 >>> 0) $80 = $76; else $80 = ($76 >>> 0) % ($$0 >>> 0) | 0;
   if (($80 | 0) != ($39 | 0)) {
    $$052$lcssa = $$05264;
    $$lcssa = $100;
    break L21;
   }
   if (($76 | 0) == ($34 | 0)) $71 = (HEAP32[$73 + 8 >> 2] | 0) == (HEAP32[$2 >> 2] | 0); else $71 = 0;
   if (!($71 | $$051$off065 ^ 1)) {
    $$052$lcssa = $$05264;
    $$lcssa = $100;
    break L21;
   }
   $72 = HEAP32[$73 >> 2] | 0;
   if (!$72) {
    $$052$lcssa = $73;
    $$lcssa = $73;
    break;
   } else {
    $100$phi = $73;
    $$05264$phi = $73;
    $$051$off065 = $$051$off065 | $71;
    $73 = $72;
    $100 = $100$phi;
    $$05264 = $$05264$phi;
   }
  }
 } while (0);
 HEAP32[$1 >> 2] = HEAP32[$$052$lcssa >> 2];
 HEAP32[$$lcssa >> 2] = $1;
 $87 = HEAP32[$1 >> 2] | 0;
 if (!$87) {
  $$pre$phiZ2D = $1;
  $98 = HEAP32[$7 >> 2] | 0;
  $99 = $98 + 1 | 0;
  HEAP32[$7 >> 2] = $99;
  return $$pre$phiZ2D | 0;
 }
 $90 = HEAP32[$87 + 4 >> 2] | 0;
 if ($32) $95 = $90 & $30; else if ($90 >>> 0 < $$0 >>> 0) $95 = $90; else $95 = ($90 >>> 0) % ($$0 >>> 0) | 0;
 if (($95 | 0) == ($39 | 0)) {
  $$pre$phiZ2D = $1;
  $98 = HEAP32[$7 >> 2] | 0;
  $99 = $98 + 1 | 0;
  HEAP32[$7 >> 2] = $99;
  return $$pre$phiZ2D | 0;
 }
 HEAP32[(HEAP32[$0 >> 2] | 0) + ($95 << 2) >> 2] = $1;
 $$pre$phiZ2D = $1;
 $98 = HEAP32[$7 >> 2] | 0;
 $99 = $98 + 1 | 0;
 HEAP32[$7 >> 2] = $99;
 return $$pre$phiZ2D | 0;
}

function __ZNSt3__26vectorIjNS_9allocatorIjEEE6insertINS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEEEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsISC_E9referenceEEE5valueENS_11__wrap_iterIPjEEE4typeENSG_IPKjEESC_SC_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$017$i = 0, $$02$i$i = 0, $$02$i$i38 = 0, $$03$i$i = 0, $$in = 0, $$in90 = 0, $$in91 = 0, $$in92 = 0, $$pre = 0, $$pre$phi107Z2D = 0, $$pre$phiZ2D = 0, $$pre102 = 0, $$sroa$065$0 = 0, $$sroa$065$189 = 0, $$sroa$08$0$i = 0, $$sroa$12$2$in = 0, $10 = 0, $103 = 0, $108 = 0, $11 = 0, $12 = 0, $13 = 0, $16 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $28 = 0, $29 = 0, $31 = 0, $4 = 0, $40 = 0, $43 = 0, $45 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $55 = 0, $57 = 0, $62 = 0, $7 = 0, $73 = 0, $75 = 0, $78 = 0, $80 = 0, $81 = 0, $86 = 0, $87 = 0, $89 = 0, $9 = 0, $94 = 0, $99 = 0, $spec$select$i = 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = $4;
 $7 = (HEAP32[$1 >> 2] | 0) - $5 | 0;
 $9 = $4 + ($7 >> 2 << 2) | 0;
 $10 = HEAP32[$2 >> 2] | 0;
 $11 = HEAP32[$3 >> 2] | 0;
 $12 = $10;
 $13 = $11;
 if (($12 | 0) == ($13 | 0)) {
  $$0 = $9;
  return $$0 | 0;
 }
 $$02$i$i = 0;
 $$in = $10;
 while (1) {
  $16 = $$02$i$i + 1 | 0;
  $$in = HEAP32[$$in >> 2] | 0;
  if (($13 | 0) == ($$in | 0)) break; else $$02$i$i = $16;
 }
 $19 = $0 + 8 | 0;
 $20 = HEAP32[$19 >> 2] | 0;
 $21 = $0 + 4 | 0;
 $22 = HEAP32[$21 >> 2] | 0;
 $23 = $22;
 if (($$02$i$i | 0) >= ($20 - $23 >> 2 | 0)) {
  $73 = ($23 - $5 >> 2) + $16 | 0;
  if ($73 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
  $75 = $20 - $5 | 0;
  $78 = $75 >> 1;
  $spec$select$i = $75 >> 2 >>> 0 < 536870911 ? ($78 >>> 0 < $73 >>> 0 ? $73 : $78) : 1073741823;
  $80 = $9;
  $81 = $7 >> 2;
  do if (!$spec$select$i) $87 = 0; else if ($spec$select$i >>> 0 > 1073741823) _abort(); else {
   $87 = __Znwj($spec$select$i << 2) | 0;
   break;
  } while (0);
  $86 = $87 + ($81 << 2) | 0;
  $89 = $87 + ($spec$select$i << 2) | 0;
  $$in92 = $10;
  $94 = $86;
  do {
   HEAP32[$94 >> 2] = HEAP32[$$in92 + 8 >> 2];
   $94 = $94 + 4 | 0;
   $$in92 = HEAP32[$$in92 >> 2] | 0;
  } while (($13 | 0) != ($$in92 | 0));
  $$pre = HEAP32[$0 >> 2] | 0;
  $$pre102 = $80 - $$pre | 0;
  $99 = $86 + (0 - ($$pre102 >> 2) << 2) | 0;
  if (($$pre102 | 0) > 0) _memcpy($99 | 0, $$pre | 0, $$pre102 | 0) | 0;
  $103 = (HEAP32[$21 >> 2] | 0) - $80 | 0;
  if (($103 | 0) > 0) {
   _memcpy($94 | 0, $9 | 0, $103 | 0) | 0;
   $$sroa$12$2$in = $94 + ($103 >>> 2 << 2) | 0;
   $108 = HEAP32[$0 >> 2] | 0;
  } else {
   $$sroa$12$2$in = $94;
   $108 = $$pre;
  }
  HEAP32[$0 >> 2] = $99;
  HEAP32[$21 >> 2] = $$sroa$12$2$in;
  HEAP32[$19 >> 2] = $89;
  if (!$108) {
   $$0 = $86;
   return $$0 | 0;
  }
  __ZdlPv($108);
  $$0 = $86;
  return $$0 | 0;
 }
 $28 = $23 - $9 | 0;
 $29 = $28 >> 2;
 do if (($$02$i$i | 0) < ($29 | 0)) {
  $$pre$phi107Z2D = $23;
  $$sroa$065$189 = $11;
  $55 = $22;
 } else {
  $31 = ($28 | 0) > 0;
  if ($31) {
   $$02$i$i38 = $29;
   $$in91 = $10;
   while (1) {
    $$in91 = HEAP32[$$in91 >> 2] | 0;
    if (($$02$i$i38 | 0) <= 1) break; else $$02$i$i38 = $$02$i$i38 + -1 | 0;
   }
   $$pre$phiZ2D = $$in91;
   $$sroa$065$0 = $$in91;
  } else {
   $$pre$phiZ2D = $12;
   $$sroa$065$0 = $10;
  }
  if (($$pre$phiZ2D | 0) == ($13 | 0)) $45 = $22; else {
   $$in90 = $$sroa$065$0;
   $40 = $22;
   while (1) {
    HEAP32[$40 >> 2] = HEAP32[$$in90 + 8 >> 2];
    $$in90 = HEAP32[$$in90 >> 2] | 0;
    $43 = (HEAP32[$21 >> 2] | 0) + 4 | 0;
    HEAP32[$21 >> 2] = $43;
    if (($13 | 0) == ($$in90 | 0)) {
     $45 = $43;
     break;
    } else $40 = $43;
   }
  }
  if ($31) {
   $$pre$phi107Z2D = $45;
   $$sroa$065$189 = $$sroa$065$0;
   $55 = $45;
   break;
  } else {
   $$0 = $9;
   return $$0 | 0;
  }
 } while (0);
 $48 = $$pre$phi107Z2D - ($9 + ($16 << 2)) | 0;
 $49 = $48 >> 2;
 $50 = $9 + ($49 << 2) | 0;
 if ($50 >>> 0 < $22 >>> 0) {
  $$017$i = $50;
  $57 = $55;
  do {
   HEAP32[$57 >> 2] = HEAP32[$$017$i >> 2];
   $$017$i = $$017$i + 4 | 0;
   $57 = (HEAP32[$21 >> 2] | 0) + 4 | 0;
   HEAP32[$21 >> 2] = $57;
  } while ($$017$i >>> 0 < $22 >>> 0);
 }
 if ($48 | 0) _memmove($55 + (0 - $49 << 2) | 0, $9 | 0, $48 | 0) | 0;
 $62 = $$sroa$065$189;
 if (($62 | 0) == ($12 | 0)) {
  $$0 = $9;
  return $$0 | 0;
 }
 $$03$i$i = $9;
 $$sroa$08$0$i = $10;
 while (1) {
  HEAP32[$$03$i$i >> 2] = HEAP32[$$sroa$08$0$i + 8 >> 2];
  $$sroa$08$0$i = HEAP32[$$sroa$08$0$i >> 2] | 0;
  if (($62 | 0) == ($$sroa$08$0$i | 0)) {
   $$0 = $9;
   break;
  } else $$03$i$i = $$03$i$i + 4 | 0;
 }
 return $$0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$067 = 0, $$068 = 0, $$1 = 0, $$sroa$077$0 = 0, $$sroa$083$0 = 0, $12 = 0, $17 = 0, $20 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $31 = 0, $37 = 0, $38 = 0, $4 = 0, $49 = 0, $58 = 0, $60 = 0, $64 = 0, $68 = 0, $72 = 0, $73 = 0, $74 = 0, $77 = 0, $83 = 0, $84 = 0, $85 = 0, $isdigittmp = 0, $isdigittmp71 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $3 = sp + 16 | 0;
 $4 = sp;
 L1 : do if (($1 - $0 | 0) > 1) if ((HEAP8[$0 >> 0] | 0) == 84) {
  $12 = HEAP8[$0 + 1 >> 0] | 0;
  if ($12 << 24 >> 24 == 95) {
   $17 = HEAP32[$2 + 36 >> 2] | 0;
   if ((HEAP32[$2 + 32 >> 2] | 0) == ($17 | 0)) {
    $$1 = $0;
    break;
   }
   $20 = HEAP32[$17 + -16 >> 2] | 0;
   if (($20 | 0) == (HEAP32[$17 + -12 >> 2] | 0)) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj3EEERAT__Kc($3);
    $37 = $2 + 4 | 0;
    $38 = HEAP32[$37 >> 2] | 0;
    if ($38 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($38, $3);
     HEAP32[$37 >> 2] = (HEAP32[$37 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    HEAP8[$2 + 62 >> 0] = 1;
    $$1 = $0 + 2 | 0;
    break;
   }
   $26 = HEAP32[$20 + 4 >> 2] | 0;
   $27 = $2 + 4 | 0;
   $28 = $2 + 8 | 0;
   $$sroa$083$0 = HEAP32[$20 >> 2] | 0;
   while (1) {
    if (($$sroa$083$0 | 0) == ($26 | 0)) break;
    $31 = HEAP32[$27 >> 2] | 0;
    if (($31 | 0) == (HEAP32[$28 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($2, $$sroa$083$0); else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($31, $$sroa$083$0);
     HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) + 24;
    }
    $$sroa$083$0 = $$sroa$083$0 + 24 | 0;
   }
   $$1 = $0 + 2 | 0;
   break;
  }
  $isdigittmp = ($12 << 24 >> 24) + -48 | 0;
  if ($isdigittmp >>> 0 < 10) {
   $$067 = $isdigittmp;
   $$068 = $0 + 2 | 0;
   while (1) {
    if (($$068 | 0) == ($1 | 0)) {
     $$1 = $0;
     break L1;
    }
    $49 = HEAP8[$$068 >> 0] | 0;
    $isdigittmp71 = ($49 << 24 >> 24) + -48 | 0;
    if ($isdigittmp71 >>> 0 >= 10) break;
    $$067 = $isdigittmp71 + ($$067 * 10 | 0) | 0;
    $$068 = $$068 + 1 | 0;
   }
   if ($49 << 24 >> 24 == 95) {
    $58 = HEAP32[$2 + 36 >> 2] | 0;
    if ((HEAP32[$2 + 32 >> 2] | 0) == ($58 | 0)) $$1 = $0; else {
     $60 = $$067 + 1 | 0;
     $64 = HEAP32[$58 + -16 >> 2] | 0;
     $68 = $64;
     if ($60 >>> 0 >= (HEAP32[$58 + -12 >> 2] | 0) - $64 >> 4 >>> 0) {
      $83 = $$068 + 1 | 0;
      HEAP32[$4 >> 2] = 0;
      HEAP32[$4 + 4 >> 2] = 0;
      HEAP32[$4 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_($4, $0, $83);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $4);
      $84 = $2 + 4 | 0;
      $85 = HEAP32[$84 >> 2] | 0;
      if ($85 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($85, $3);
       HEAP32[$84 >> 2] = (HEAP32[$84 >> 2] | 0) + 24;
      } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
      HEAP8[$2 + 62 >> 0] = 1;
      $$1 = $83;
      break;
     }
     $72 = HEAP32[$68 + ($60 << 4) + 4 >> 2] | 0;
     $73 = $2 + 4 | 0;
     $74 = $2 + 8 | 0;
     $$sroa$077$0 = HEAP32[$68 + ($60 << 4) >> 2] | 0;
     while (1) {
      if (($$sroa$077$0 | 0) == ($72 | 0)) break;
      $77 = HEAP32[$73 >> 2] | 0;
      if (($77 | 0) == (HEAP32[$74 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($2, $$sroa$077$0); else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($77, $$sroa$077$0);
       HEAP32[$73 >> 2] = (HEAP32[$73 >> 2] | 0) + 24;
      }
      $$sroa$077$0 = $$sroa$077$0 + 24 | 0;
     }
     $$1 = $$068 + 1 | 0;
    }
   } else $$1 = $0;
  } else $$1 = $0;
 } else $$1 = $0; else $$1 = $0; while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZN2ut8PtrTable7releaseINS_12ManagerWorldEEEvPT_($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $$02832$i = 0, $$02833$i = 0, $$02833$us$i = 0, $$pre = 0, $$pre$phi$i$iZ2D = 0, $$pre$phiZ2D = 0, $$sroa$0$0$i = 0, $100 = 0, $102 = 0, $104 = 0, $109 = 0, $112 = 0, $13 = 0, $16 = 0, $18 = 0, $19 = 0, $21 = 0, $23 = 0, $29 = 0, $30 = 0, $34 = 0, $35 = 0, $4 = 0, $43 = 0, $48 = 0, $53 = 0, $54 = 0, $58 = 0, $61 = 0, $63 = 0, $64 = 0, $71 = 0, $72 = 0, $74 = 0, $78 = 0, $79 = 0, $81 = 0, $85 = 0, $9 = 0, $90 = 0, $91 = 0, $94 = 0, $99 = 0, label = 0;
 if (!$0) return;
 if (!(HEAP8[24152] | 0)) {
  HEAP32[6070] = 0;
  HEAP32[6071] = 0;
  HEAP32[6072] = 0;
  HEAP32[6073] = 0;
  HEAP32[6074] = 1065353216;
  $4 = 24152;
  HEAP32[$4 >> 2] = 1;
  HEAP32[$4 + 4 >> 2] = 0;
 }
 $9 = Math_imul($0, 1540483477) | 0;
 $13 = (Math_imul($9 >>> 24 ^ $9, 1540483477) | 0) ^ 1866966612;
 $16 = Math_imul($13 >>> 13 ^ $13, 1540483477) | 0;
 $18 = $16 >>> 15 ^ $16;
 $19 = HEAP32[6071] | 0;
 if (!$19) return;
 $21 = $19 + -1 | 0;
 $23 = ($21 & $19 | 0) == 0;
 if ($23) $29 = $21 & $18; else if ($18 >>> 0 < $19 >>> 0) $29 = $18; else $29 = ($18 >>> 0) % ($19 >>> 0) | 0;
 $30 = HEAP32[(HEAP32[6070] | 0) + ($29 << 2) >> 2] | 0;
 if (!$30) return;
 $$02832$i = HEAP32[$30 >> 2] | 0;
 if (!$$02832$i) return;
 L21 : do if ($23) {
  $$02833$us$i = $$02832$i;
  while (1) {
   $34 = HEAP32[$$02833$us$i + 4 >> 2] | 0;
   $35 = ($34 | 0) == ($18 | 0);
   if (!($35 | ($34 & $21 | 0) == ($29 | 0))) {
    label = 58;
    break;
   }
   if ($35) if ((HEAP32[$$02833$us$i + 8 >> 2] | 0) == ($0 | 0)) {
    $$sroa$0$0$i = $$02833$us$i;
    break L21;
   }
   $$02833$us$i = HEAP32[$$02833$us$i >> 2] | 0;
   if (!$$02833$us$i) {
    label = 58;
    break;
   }
  }
  if ((label | 0) == 58) return;
 } else {
  $$02833$i = $$02832$i;
  while (1) {
   $43 = HEAP32[$$02833$i + 4 >> 2] | 0;
   if (($43 | 0) == ($18 | 0)) {
    if ((HEAP32[$$02833$i + 8 >> 2] | 0) == ($0 | 0)) {
     $$sroa$0$0$i = $$02833$i;
     break L21;
    }
   } else {
    if ($43 >>> 0 < $19 >>> 0) $48 = $43; else $48 = ($43 >>> 0) % ($19 >>> 0) | 0;
    if (($48 | 0) != ($29 | 0)) {
     label = 58;
     break;
    }
   }
   $$02833$i = HEAP32[$$02833$i >> 2] | 0;
   if (!$$02833$i) {
    label = 58;
    break;
   }
  }
  if ((label | 0) == 58) return;
 } while (0);
 $53 = $$sroa$0$0$i + 12 | 0;
 $54 = HEAP32[$53 >> 2] | 0;
 HEAP32[$53 >> 2] = $54 + -1;
 if (($54 | 0) >= 2) return;
 $58 = HEAP32[$$sroa$0$0$i + 16 >> 2] | 0;
 if (!$58) {
  $$pre$phiZ2D = $21;
  $71 = $19;
  $74 = $18;
 } else {
  $61 = HEAP32[$58 + 4 >> 2] | 0;
  if ($61 | 0) {
   $63 = $61 + 4 | 0;
   $64 = HEAP32[$63 >> 2] | 0;
   HEAP32[$63 >> 2] = $64 + -1;
   if (!$64) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$61 >> 2] | 0) + 8 >> 2] & 63]($61);
    __ZNSt3__219__shared_weak_count14__release_weakEv($61);
   }
  }
  __ZdlPv($58);
  $$pre = HEAP32[6071] | 0;
  $$pre$phiZ2D = $$pre + -1 | 0;
  $71 = $$pre;
  $74 = HEAP32[$$sroa$0$0$i + 4 >> 2] | 0;
 }
 $72 = ($$pre$phiZ2D & $71 | 0) == 0;
 if ($72) $79 = $$pre$phiZ2D & $74; else if ($74 >>> 0 < $71 >>> 0) $79 = $74; else $79 = ($74 >>> 0) % ($71 >>> 0) | 0;
 $78 = (HEAP32[6070] | 0) + ($79 << 2) | 0;
 $$0$i$i = HEAP32[$78 >> 2] | 0;
 while (1) {
  $81 = HEAP32[$$0$i$i >> 2] | 0;
  if (($81 | 0) == ($$sroa$0$0$i | 0)) break; else $$0$i$i = $81;
 }
 if (($$0$i$i | 0) == 24288) label = 43; else {
  $85 = HEAP32[$$0$i$i + 4 >> 2] | 0;
  if ($72) $90 = $85 & $$pre$phiZ2D; else if ($85 >>> 0 < $71 >>> 0) $90 = $85; else $90 = ($85 >>> 0) % ($71 >>> 0) | 0;
  if (($90 | 0) == ($79 | 0)) $$pre$phi$i$iZ2D = $$sroa$0$0$i; else label = 43;
 }
 do if ((label | 0) == 43) {
  $91 = HEAP32[$$sroa$0$0$i >> 2] | 0;
  if ($91 | 0) {
   $94 = HEAP32[$91 + 4 >> 2] | 0;
   if ($72) $99 = $94 & $$pre$phiZ2D; else if ($94 >>> 0 < $71 >>> 0) $99 = $94; else $99 = ($94 >>> 0) % ($71 >>> 0) | 0;
   if (($99 | 0) == ($79 | 0)) {
    $$pre$phi$i$iZ2D = $$sroa$0$0$i;
    break;
   }
  }
  HEAP32[$78 >> 2] = 0;
  $$pre$phi$i$iZ2D = $$sroa$0$0$i;
 } while (0);
 $100 = HEAP32[$$pre$phi$i$iZ2D >> 2] | 0;
 $102 = $100;
 if (!$100) $112 = $102; else {
  $104 = HEAP32[$100 + 4 >> 2] | 0;
  if ($72) $109 = $104 & $$pre$phiZ2D; else if ($104 >>> 0 < $71 >>> 0) $109 = $104; else $109 = ($104 >>> 0) % ($71 >>> 0) | 0;
  if (($109 | 0) == ($79 | 0)) $112 = $102; else {
   HEAP32[(HEAP32[6070] | 0) + ($109 << 2) >> 2] = $$0$i$i;
   $112 = HEAP32[$$sroa$0$0$i >> 2] | 0;
  }
 }
 HEAP32[$$0$i$i >> 2] = $112;
 HEAP32[$$pre$phi$i$iZ2D >> 2] = 0;
 HEAP32[6073] = (HEAP32[6073] | 0) + -1;
 __ZdlPv($$sroa$0$0$i);
 return;
}

function __ZN2ut8PtrTable7releaseINS_6SystemEEEvPT_($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $$02832$i = 0, $$02833$i = 0, $$02833$us$i = 0, $$pre = 0, $$pre$phi$i$iZ2D = 0, $$pre$phiZ2D = 0, $$sroa$0$0$i = 0, $100 = 0, $102 = 0, $104 = 0, $109 = 0, $112 = 0, $13 = 0, $16 = 0, $18 = 0, $19 = 0, $21 = 0, $23 = 0, $29 = 0, $30 = 0, $34 = 0, $35 = 0, $4 = 0, $43 = 0, $48 = 0, $53 = 0, $54 = 0, $58 = 0, $61 = 0, $63 = 0, $64 = 0, $71 = 0, $72 = 0, $74 = 0, $78 = 0, $79 = 0, $81 = 0, $85 = 0, $9 = 0, $90 = 0, $91 = 0, $94 = 0, $99 = 0, label = 0;
 if (!$0) return;
 if (!(HEAP8[24152] | 0)) {
  HEAP32[6070] = 0;
  HEAP32[6071] = 0;
  HEAP32[6072] = 0;
  HEAP32[6073] = 0;
  HEAP32[6074] = 1065353216;
  $4 = 24152;
  HEAP32[$4 >> 2] = 1;
  HEAP32[$4 + 4 >> 2] = 0;
 }
 $9 = Math_imul($0, 1540483477) | 0;
 $13 = (Math_imul($9 >>> 24 ^ $9, 1540483477) | 0) ^ 1866966612;
 $16 = Math_imul($13 >>> 13 ^ $13, 1540483477) | 0;
 $18 = $16 >>> 15 ^ $16;
 $19 = HEAP32[6071] | 0;
 if (!$19) return;
 $21 = $19 + -1 | 0;
 $23 = ($21 & $19 | 0) == 0;
 if ($23) $29 = $21 & $18; else if ($18 >>> 0 < $19 >>> 0) $29 = $18; else $29 = ($18 >>> 0) % ($19 >>> 0) | 0;
 $30 = HEAP32[(HEAP32[6070] | 0) + ($29 << 2) >> 2] | 0;
 if (!$30) return;
 $$02832$i = HEAP32[$30 >> 2] | 0;
 if (!$$02832$i) return;
 L21 : do if ($23) {
  $$02833$us$i = $$02832$i;
  while (1) {
   $34 = HEAP32[$$02833$us$i + 4 >> 2] | 0;
   $35 = ($34 | 0) == ($18 | 0);
   if (!($35 | ($34 & $21 | 0) == ($29 | 0))) {
    label = 58;
    break;
   }
   if ($35) if ((HEAP32[$$02833$us$i + 8 >> 2] | 0) == ($0 | 0)) {
    $$sroa$0$0$i = $$02833$us$i;
    break L21;
   }
   $$02833$us$i = HEAP32[$$02833$us$i >> 2] | 0;
   if (!$$02833$us$i) {
    label = 58;
    break;
   }
  }
  if ((label | 0) == 58) return;
 } else {
  $$02833$i = $$02832$i;
  while (1) {
   $43 = HEAP32[$$02833$i + 4 >> 2] | 0;
   if (($43 | 0) == ($18 | 0)) {
    if ((HEAP32[$$02833$i + 8 >> 2] | 0) == ($0 | 0)) {
     $$sroa$0$0$i = $$02833$i;
     break L21;
    }
   } else {
    if ($43 >>> 0 < $19 >>> 0) $48 = $43; else $48 = ($43 >>> 0) % ($19 >>> 0) | 0;
    if (($48 | 0) != ($29 | 0)) {
     label = 58;
     break;
    }
   }
   $$02833$i = HEAP32[$$02833$i >> 2] | 0;
   if (!$$02833$i) {
    label = 58;
    break;
   }
  }
  if ((label | 0) == 58) return;
 } while (0);
 $53 = $$sroa$0$0$i + 12 | 0;
 $54 = HEAP32[$53 >> 2] | 0;
 HEAP32[$53 >> 2] = $54 + -1;
 if (($54 | 0) >= 2) return;
 $58 = HEAP32[$$sroa$0$0$i + 16 >> 2] | 0;
 if (!$58) {
  $$pre$phiZ2D = $21;
  $71 = $19;
  $74 = $18;
 } else {
  $61 = HEAP32[$58 + 4 >> 2] | 0;
  if ($61 | 0) {
   $63 = $61 + 4 | 0;
   $64 = HEAP32[$63 >> 2] | 0;
   HEAP32[$63 >> 2] = $64 + -1;
   if (!$64) {
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$61 >> 2] | 0) + 8 >> 2] & 63]($61);
    __ZNSt3__219__shared_weak_count14__release_weakEv($61);
   }
  }
  __ZdlPv($58);
  $$pre = HEAP32[6071] | 0;
  $$pre$phiZ2D = $$pre + -1 | 0;
  $71 = $$pre;
  $74 = HEAP32[$$sroa$0$0$i + 4 >> 2] | 0;
 }
 $72 = ($$pre$phiZ2D & $71 | 0) == 0;
 if ($72) $79 = $$pre$phiZ2D & $74; else if ($74 >>> 0 < $71 >>> 0) $79 = $74; else $79 = ($74 >>> 0) % ($71 >>> 0) | 0;
 $78 = (HEAP32[6070] | 0) + ($79 << 2) | 0;
 $$0$i$i = HEAP32[$78 >> 2] | 0;
 while (1) {
  $81 = HEAP32[$$0$i$i >> 2] | 0;
  if (($81 | 0) == ($$sroa$0$0$i | 0)) break; else $$0$i$i = $81;
 }
 if (($$0$i$i | 0) == 24288) label = 43; else {
  $85 = HEAP32[$$0$i$i + 4 >> 2] | 0;
  if ($72) $90 = $85 & $$pre$phiZ2D; else if ($85 >>> 0 < $71 >>> 0) $90 = $85; else $90 = ($85 >>> 0) % ($71 >>> 0) | 0;
  if (($90 | 0) == ($79 | 0)) $$pre$phi$i$iZ2D = $$sroa$0$0$i; else label = 43;
 }
 do if ((label | 0) == 43) {
  $91 = HEAP32[$$sroa$0$0$i >> 2] | 0;
  if ($91 | 0) {
   $94 = HEAP32[$91 + 4 >> 2] | 0;
   if ($72) $99 = $94 & $$pre$phiZ2D; else if ($94 >>> 0 < $71 >>> 0) $99 = $94; else $99 = ($94 >>> 0) % ($71 >>> 0) | 0;
   if (($99 | 0) == ($79 | 0)) {
    $$pre$phi$i$iZ2D = $$sroa$0$0$i;
    break;
   }
  }
  HEAP32[$78 >> 2] = 0;
  $$pre$phi$i$iZ2D = $$sroa$0$0$i;
 } while (0);
 $100 = HEAP32[$$pre$phi$i$iZ2D >> 2] | 0;
 $102 = $100;
 if (!$100) $112 = $102; else {
  $104 = HEAP32[$100 + 4 >> 2] | 0;
  if ($72) $109 = $104 & $$pre$phiZ2D; else if ($104 >>> 0 < $71 >>> 0) $109 = $104; else $109 = ($104 >>> 0) % ($71 >>> 0) | 0;
  if (($109 | 0) == ($79 | 0)) $112 = $102; else {
   HEAP32[(HEAP32[6070] | 0) + ($109 << 2) >> 2] = $$0$i$i;
   $112 = HEAP32[$$sroa$0$0$i >> 2] | 0;
  }
 }
 HEAP32[$$0$i$i >> 2] = $112;
 HEAP32[$$pre$phi$i$iZ2D >> 2] = 0;
 HEAP32[6073] = (HEAP32[6073] | 0) + -1;
 __ZdlPv($$sroa$0$0$i);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_115parse_call_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$add$i = 0, $$0$i$i$i$i = 0, $$0$i$i$idx$i = 0, $$063 = 0, $$066 = 0, $$1 = 0, $$164 = 0, $$6 = 0, $14 = 0, $15 = 0, $19 = 0, $20 = 0, $22 = 0, $25 = 0, $26 = 0, $3 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $40 = 0, $46 = 0, $47 = 0, $50 = 0, $54 = 0, $57 = 0, $59 = 0, $60 = 0, $61 = 0, $64 = 0, $72 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $3 = sp + 12 | 0;
 $4 = sp;
 L1 : do if (($1 - $0 | 0) > 3) if ((HEAP8[$0 >> 0] | 0) == 99) if ((HEAP8[$0 + 1 >> 0] | 0) == 108) {
  $14 = $0 + 2 | 0;
  $15 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($14, $1, $2) | 0;
  if (($15 | 0) == ($14 | 0) | ($15 | 0) == ($1 | 0)) $$6 = $0; else {
   $19 = $2 + 4 | 0;
   $20 = HEAP32[$19 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($20 | 0)) $$6 = $0; else {
    $22 = $20 + -12 | 0;
    $25 = HEAP8[$22 + 11 >> 0] | 0;
    $26 = $25 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($20 + -24 | 0, $26 ? HEAP32[$22 >> 2] | 0 : $22, $26 ? HEAP32[$20 + -8 >> 2] | 0 : $25 & 255) | 0;
    HEAP32[$4 >> 2] = 0;
    HEAP32[$4 + 4 >> 2] = 0;
    HEAP32[$4 + 8 >> 2] = 0;
    $$0$i$i = 0;
    while (1) {
     if (($$0$i$i | 0) == 3) break;
     HEAP32[$4 + ($$0$i$i << 2) >> 2] = 0;
     $$0$i$i = $$0$i$i + 1 | 0;
    }
    $35 = HEAP32[$19 >> 2] | 0;
    $36 = $35 + -12 | 0;
    $37 = $36 + 11 | 0;
    if ((HEAP8[$37 >> 0] | 0) < 0) {
     $40 = HEAP32[$36 >> 2] | 0;
     HEAP8[$3 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc($40, $3);
     HEAP32[$35 + -8 >> 2] = 0;
    } else {
     HEAP8[$3 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc($36, $3);
     HEAP8[$37 >> 0] = 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEj($36);
    HEAP32[$36 >> 2] = HEAP32[$4 >> 2];
    HEAP32[$36 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
    HEAP32[$36 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
    $$0$i$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i$i | 0) == 3) break;
     HEAP32[$4 + ($$0$i$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$19 >> 2] | 0) + -24 | 0, 22277) | 0;
    $46 = $3 + 11 | 0;
    $47 = $3 + 4 | 0;
    $$0 = 0;
    $$063 = $15;
    while (1) {
     if ((HEAP8[$$063 >> 0] | 0) == 69) break;
     $50 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($$063, $1, $2) | 0;
     if (($50 | 0) == ($$063 | 0) | ($50 | 0) == ($1 | 0)) {
      $$6 = $0;
      break L1;
     }
     $54 = HEAP32[$19 >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($54 | 0)) {
      $$6 = $0;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $54 + -24 | 0);
     $57 = HEAP32[$19 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($57 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     $59 = $57 + -24 | 0;
     HEAP32[$19 >> 2] = $59;
     $60 = HEAP8[$46 >> 0] | 0;
     $61 = $60 << 24 >> 24 < 0;
     $64 = $61 ? HEAP32[$47 >> 2] | 0 : $60 & 255;
     if (!$64) {
      $$066 = 1;
      $$1 = $$0;
      $$164 = $50;
     } else if ((HEAP32[$2 >> 2] | 0) == ($59 | 0)) {
      $$066 = 0;
      $$1 = $0;
      $$164 = $$063;
     } else {
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($57 + -48 | 0, $61 ? HEAP32[$3 >> 2] | 0 : $3, $64) | 0;
      $$066 = 1;
      $$1 = $$0;
      $$164 = $50;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     if ($$066) {
      $$0 = $$1;
      $$063 = $$164;
     } else {
      $$6 = $$1;
      break L1;
     }
    }
    $72 = HEAP32[$19 >> 2] | 0;
    if ((HEAP32[$2 >> 2] | 0) == ($72 | 0)) $$6 = $0; else {
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($72 + -24 | 0, 22275) | 0;
     $$6 = $$063 + 1 | 0;
    }
   }
  }
 } else $$6 = $0; else $$6 = $0; else $$6 = $0; while (0);
 STACKTOP = sp;
 return $$6 | 0;
}

function __ZNSt3__218__insertion_sort_3IRNS_6__lessIN2ut4arch13ComponentSpecES4_EEPS4_EEvT0_S8_T_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0$i$i31$i = 0, $$02942 = 0, $$03041 = 0, $$03041$phi = 0, $$lcssa = 0, $$pre = 0, $100 = 0, $105 = 0, $106 = 0, $110 = 0, $114 = 0, $116 = 0, $118 = 0, $125 = 0, $127 = 0, $130 = 0, $131 = 0, $136 = 0, $137 = 0, $14 = 0, $142 = 0, $143 = 0, $144 = 0, $150 = 0, $155 = 0, $156 = 0, $157 = 0, $162 = 0, $166 = 0, $168 = 0, $22 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $33 = 0, $34 = 0, $38 = 0, $4 = 0, $47 = 0, $49 = 0, $5 = 0, $52 = 0, $53 = 0, $57 = 0, $6 = 0, $61 = 0, $63 = 0, $66 = 0, $67 = 0, $72 = 0, $73 = 0, $77 = 0, $81 = 0, $86 = 0, $87 = 0, $91 = 0, label = 0, $143$looptemp = 0, $156$looptemp = 0;
 $3 = $0 + 16 | 0;
 $4 = $0 + 8 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = HEAP32[$0 >> 2] | 0;
 if (($5 | 0) == ($6 | 0)) $$0$i$i$i = (HEAP32[$0 + 12 >> 2] | 0) < (HEAP32[$0 + 4 >> 2] | 0); else $$0$i$i$i = $5 >>> 0 < $6 >>> 0;
 $14 = HEAP32[$3 >> 2] | 0;
 if (($14 | 0) == ($5 | 0)) $$0$i$i31$i = (HEAP32[$0 + 20 >> 2] | 0) < (HEAP32[$0 + 12 >> 2] | 0); else $$0$i$i31$i = $14 >>> 0 < $5 >>> 0;
 do if ($$0$i$i$i) {
  $61 = $0;
  $63 = HEAP32[$61 >> 2] | 0;
  $66 = HEAP32[$61 + 4 >> 2] | 0;
  if ($$0$i$i31$i) {
   $67 = $3;
   $72 = HEAP32[$67 + 4 >> 2] | 0;
   $73 = $0;
   HEAP32[$73 >> 2] = HEAP32[$67 >> 2];
   HEAP32[$73 + 4 >> 2] = $72;
   $77 = $3;
   HEAP32[$77 >> 2] = $63;
   HEAP32[$77 + 4 >> 2] = $66;
   $168 = $63;
   break;
  }
  $81 = $4;
  $86 = HEAP32[$81 + 4 >> 2] | 0;
  $87 = $0;
  HEAP32[$87 >> 2] = HEAP32[$81 >> 2];
  HEAP32[$87 + 4 >> 2] = $86;
  $91 = $4;
  HEAP32[$91 >> 2] = $63;
  HEAP32[$91 + 4 >> 2] = $66;
  if (($14 | 0) == ($63 | 0)) {
   if ((HEAP32[$0 + 20 >> 2] | 0) >= ($66 | 0)) {
    $168 = $14;
    break;
   }
  } else if ($14 >>> 0 >= $63 >>> 0) {
   $168 = $14;
   break;
  }
  $100 = $3;
  $105 = HEAP32[$100 + 4 >> 2] | 0;
  $106 = $4;
  HEAP32[$106 >> 2] = HEAP32[$100 >> 2];
  HEAP32[$106 + 4 >> 2] = $105;
  $110 = $3;
  HEAP32[$110 >> 2] = $63;
  HEAP32[$110 + 4 >> 2] = $66;
  $168 = $63;
 } else if ($$0$i$i31$i) {
  $22 = $4;
  $24 = HEAP32[$22 >> 2] | 0;
  $27 = HEAP32[$22 + 4 >> 2] | 0;
  $28 = $3;
  $30 = HEAP32[$28 >> 2] | 0;
  $33 = HEAP32[$28 + 4 >> 2] | 0;
  $34 = $4;
  HEAP32[$34 >> 2] = $30;
  HEAP32[$34 + 4 >> 2] = $33;
  $38 = $3;
  HEAP32[$38 >> 2] = $24;
  HEAP32[$38 + 4 >> 2] = $27;
  if (($6 | 0) == ($30 | 0)) {
   if ((HEAP32[$0 + 4 >> 2] | 0) <= ($33 | 0)) {
    $168 = $24;
    break;
   }
  } else if ($6 >>> 0 <= $30 >>> 0) {
   $168 = $24;
   break;
  }
  $47 = $0;
  $49 = HEAP32[$47 >> 2] | 0;
  $52 = HEAP32[$47 + 4 >> 2] | 0;
  $53 = $0;
  HEAP32[$53 >> 2] = $30;
  HEAP32[$53 + 4 >> 2] = $33;
  $57 = $4;
  HEAP32[$57 >> 2] = $49;
  HEAP32[$57 + 4 >> 2] = $52;
  $168 = $24;
 } else $168 = $14; while (0);
 $114 = $0 + 24 | 0;
 if (($114 | 0) == ($1 | 0)) return;
 $$02942 = $114;
 $$03041 = $3;
 $118 = $168;
 while (1) {
  $116 = HEAP32[$$02942 >> 2] | 0;
  if (($116 | 0) == ($118 | 0)) {
   if ((HEAP32[$$02942 + 4 >> 2] | 0) < (HEAP32[$$03041 + 4 >> 2] | 0)) label = 25;
  } else if ($116 >>> 0 < $118 >>> 0) label = 25;
  if ((label | 0) == 25) {
   label = 0;
   $125 = $$02942;
   $127 = HEAP32[$125 >> 2] | 0;
   $130 = HEAP32[$125 + 4 >> 2] | 0;
   $131 = $$03041;
   $136 = HEAP32[$131 + 4 >> 2] | 0;
   $137 = $$02942;
   HEAP32[$137 >> 2] = HEAP32[$131 >> 2];
   HEAP32[$137 + 4 >> 2] = $136;
   L35 : do if (($$03041 | 0) == ($0 | 0)) $$lcssa = $$03041; else {
    $143 = $$03041;
    $156 = $$03041;
    while (1) {
     $143$looptemp = $143;
     $156$looptemp = $156;
     $142 = $143 + -8 | 0;
     $144 = HEAP32[$142 >> 2] | 0;
     if (($144 | 0) == ($127 | 0)) {
      if ((HEAP32[$143$looptemp + -4 >> 2] | 0) <= ($130 | 0)) {
       $$lcssa = $156$looptemp;
       break L35;
      }
     } else if ($144 >>> 0 <= $127 >>> 0) {
      $$lcssa = $156$looptemp;
      break L35;
     }
     $150 = $142;
     $155 = HEAP32[$150 + 4 >> 2] | 0;
     $157 = $156$looptemp;
     HEAP32[$157 >> 2] = HEAP32[$150 >> 2];
     HEAP32[$157 + 4 >> 2] = $155;
     if (($142 | 0) == ($0 | 0)) {
      $$lcssa = $0;
      break;
     } else {
      $143 = $142;
      $156 = $142;
     }
    }
   } while (0);
   $162 = $$lcssa;
   HEAP32[$162 >> 2] = $127;
   HEAP32[$162 + 4 >> 2] = $130;
  }
  $166 = $$02942 + 8 | 0;
  if (($166 | 0) == ($1 | 0)) break;
  $$pre = HEAP32[$$02942 >> 2] | 0;
  $$03041$phi = $$02942;
  $$02942 = $166;
  $118 = $$pre;
  $$03041 = $$03041$phi;
 }
 return;
}

function __ZN2ut11CoreService12createSystemERKNS_12NativeStringENSt3__28functionIFvPNS_9SchedulerEPNS_12ManagerWorldEEEERKNS4_6vectorIS1_NS4_9allocatorIS1_EEEESH_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$021$i$i1$i = 0, $$021$i$i1$i20 = 0, $$023$i$i$i = 0, $$023$i$i$i22 = 0, $$1$lcssa$i$i$i = 0, $$1$lcssa$i$i$i26 = 0, $$122$i$i$i = 0, $$122$i$i$i23 = 0, $$sroa$030$043 = 0, $$sroa$036$044 = 0, $11 = 0, $13 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $21 = 0, $23 = 0, $24 = 0, $25 = 0, $27 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $38 = 0, $39 = 0, $50 = 0, $52 = 0, $55 = 0, $56 = 0, $59 = 0, $6 = 0, $60 = 0, $64 = 0, $65 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $6 = sp;
 __ZNSt3__210shared_ptrIN2ut12SimpleSystemEE11make_sharedIJRKNS1_12NativeStringERNS_8functionIFvPNS1_9SchedulerEPNS1_12ManagerWorldEEEEEEES3_DpOT_($6, $2, $3);
 $7 = HEAP32[$6 >> 2] | 0;
 HEAP32[$0 >> 2] = $7;
 HEAP32[$0 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 $11 = HEAP32[$4 >> 2] | 0;
 $13 = HEAP32[$4 + 4 >> 2] | 0;
 L1 : do if (($11 | 0) != ($13 | 0)) {
  $16 = $6 + 11 | 0;
  $17 = $6 + 8 | 0;
  $18 = $6 + 4 | 0;
  $$sroa$036$044 = $11;
  $27 = $7;
  while (1) {
   $29 = HEAP32[(HEAP32[$27 >> 2] | 0) + 24 >> 2] | 0;
   $30 = HEAP32[$$sroa$036$044 >> 2] | 0;
   if (!$30) {
    HEAP32[$6 >> 2] = 0;
    HEAP32[$6 + 4 >> 2] = 0;
    HEAP32[$6 + 8 >> 2] = 0;
   } else {
    $33 = HEAP32[$$sroa$036$044 + 4 >> 2] | 0;
    $34 = $30 + $33 | 0;
    HEAP32[$6 >> 2] = 0;
    HEAP32[$6 + 4 >> 2] = 0;
    HEAP32[$6 + 8 >> 2] = 0;
    if ($33 >>> 0 > 4294967279) break;
    if ($33 >>> 0 < 11) {
     HEAP8[$16 >> 0] = $33;
     if (!$33) $$1$lcssa$i$i$i26 = $6; else {
      $$021$i$i1$i20 = $6;
      label = 11;
     }
    } else {
     $38 = $33 + 16 & -16;
     $39 = __Znwj($38) | 0;
     HEAP32[$6 >> 2] = $39;
     HEAP32[$17 >> 2] = $38 | -2147483648;
     HEAP32[$18 >> 2] = $33;
     $$021$i$i1$i20 = $39;
     label = 11;
    }
    if ((label | 0) == 11) {
     label = 0;
     $$023$i$i$i22 = $30;
     $$122$i$i$i23 = $$021$i$i1$i20;
     while (1) {
      HEAP8[$$122$i$i$i23 >> 0] = HEAP8[$$023$i$i$i22 >> 0] | 0;
      $$023$i$i$i22 = $$023$i$i$i22 + 1 | 0;
      if (($$023$i$i$i22 | 0) == ($34 | 0)) break; else $$122$i$i$i23 = $$122$i$i$i23 + 1 | 0;
     }
     $$1$lcssa$i$i$i26 = $$021$i$i1$i20 + $33 | 0;
    }
    HEAP8[$$1$lcssa$i$i$i26 >> 0] = 0;
   }
   FUNCTION_TABLE_vii[$29 & 15]($27, $6);
   if ((HEAP8[$16 >> 0] | 0) < 0) __ZdlPv(HEAP32[$6 >> 2] | 0);
   $50 = $$sroa$036$044 + 8 | 0;
   if (($50 | 0) == ($13 | 0)) break L1;
   $$sroa$036$044 = $50;
   $27 = HEAP32[$0 >> 2] | 0;
  }
  __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($6);
 } while (0);
 $19 = HEAP32[$5 >> 2] | 0;
 $21 = HEAP32[$5 + 4 >> 2] | 0;
 if (($19 | 0) == ($21 | 0)) {
  STACKTOP = sp;
  return;
 }
 $23 = $6 + 11 | 0;
 $24 = $6 + 8 | 0;
 $25 = $6 + 4 | 0;
 $$sroa$030$043 = $19;
 while (1) {
  $52 = HEAP32[$0 >> 2] | 0;
  $55 = HEAP32[(HEAP32[$52 >> 2] | 0) + 20 >> 2] | 0;
  $56 = HEAP32[$$sroa$030$043 >> 2] | 0;
  if (!$56) {
   HEAP32[$6 >> 2] = 0;
   HEAP32[$6 + 4 >> 2] = 0;
   HEAP32[$6 + 8 >> 2] = 0;
  } else {
   $59 = HEAP32[$$sroa$030$043 + 4 >> 2] | 0;
   $60 = $56 + $59 | 0;
   HEAP32[$6 >> 2] = 0;
   HEAP32[$6 + 4 >> 2] = 0;
   HEAP32[$6 + 8 >> 2] = 0;
   if ($59 >>> 0 > 4294967279) {
    label = 23;
    break;
   }
   if ($59 >>> 0 < 11) {
    HEAP8[$23 >> 0] = $59;
    if (!$59) $$1$lcssa$i$i$i = $6; else {
     $$021$i$i1$i = $6;
     label = 27;
    }
   } else {
    $64 = $59 + 16 & -16;
    $65 = __Znwj($64) | 0;
    HEAP32[$6 >> 2] = $65;
    HEAP32[$24 >> 2] = $64 | -2147483648;
    HEAP32[$25 >> 2] = $59;
    $$021$i$i1$i = $65;
    label = 27;
   }
   if ((label | 0) == 27) {
    label = 0;
    $$023$i$i$i = $56;
    $$122$i$i$i = $$021$i$i1$i;
    while (1) {
     HEAP8[$$122$i$i$i >> 0] = HEAP8[$$023$i$i$i >> 0] | 0;
     $$023$i$i$i = $$023$i$i$i + 1 | 0;
     if (($$023$i$i$i | 0) == ($60 | 0)) break; else $$122$i$i$i = $$122$i$i$i + 1 | 0;
    }
    $$1$lcssa$i$i$i = $$021$i$i1$i + $59 | 0;
   }
   HEAP8[$$1$lcssa$i$i$i >> 0] = 0;
  }
  FUNCTION_TABLE_vii[$55 & 15]($52, $6);
  if ((HEAP8[$23 >> 0] | 0) < 0) __ZdlPv(HEAP32[$6 >> 2] | 0);
  $$sroa$030$043 = $$sroa$030$043 + 8 | 0;
  if (($$sroa$030$043 | 0) == ($21 | 0)) {
   label = 20;
   break;
  }
 }
 if ((label | 0) == 20) {
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 23) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($6);
}

function __ZN2ut11CoreService12createSystemERKNS_12NativeStringENSt3__28functionIFvPNS_9SchedulerEPNS_12ManagerWorldEEEERKNS_12NativeBufferIS1_EESF_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$06$i$i$i = 0, $$06$i$i$i10 = 0, $$07$i$i$i$i = 0, $$07$i$i$i$i6 = 0, $$idx$i = 0, $$idx$i4 = 0, $10 = 0, $23 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $32 = 0, $34 = 0, $35 = 0, $37 = 0, $41 = 0, $48 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $57 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $66 = 0, $7 = 0, $73 = 0, $75 = 0, $8 = 0, $81 = 0, $82 = 0, $84 = 0, $90 = 0, $92 = 0, sp = 0, $$06$i$i$i$looptemp = 0, $$06$i$i$i10$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $6 = sp;
 $7 = sp + 36 | 0;
 $8 = sp + 24 | 0;
 $10 = HEAP32[$3 + 16 >> 2] | 0;
 do if (!$10) HEAP32[$6 + 16 >> 2] = 0; else if (($3 | 0) == ($10 | 0)) {
  HEAP32[$6 + 16 >> 2] = $6;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 15]($10, $6);
  break;
 } else {
  HEAP32[$6 + 16 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 8 >> 2] & 7]($10) | 0;
  break;
 } while (0);
 $23 = HEAP32[$4 >> 2] | 0;
 $25 = HEAP32[$4 + 4 >> 2] | 0;
 $26 = $23 + ($25 << 3) | 0;
 HEAP32[$7 >> 2] = 0;
 $27 = $7 + 4 | 0;
 HEAP32[$27 >> 2] = 0;
 $28 = $7 + 8 | 0;
 HEAP32[$28 >> 2] = 0;
 $$idx$i = $25 << 3;
 $29 = $$idx$i >> 3;
 if ($25 | 0) {
  if ($29 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($7);
  $32 = __Znwj($$idx$i) | 0;
  HEAP32[$27 >> 2] = $32;
  HEAP32[$7 >> 2] = $32;
  HEAP32[$28 >> 2] = $32 + ($29 << 3);
  $$07$i$i$i$i = $23;
  $37 = $32;
  do {
   $34 = $$07$i$i$i$i + 4 | 0;
   $35 = HEAP32[$34 >> 2] | 0;
   HEAP32[$37 + 4 >> 2] = $35;
   if (!$35) HEAP32[$37 >> 2] = 0; else {
    $41 = _malloc((HEAP32[$34 >> 2] | 0) + 1 | 0) | 0;
    HEAP32[$37 >> 2] = $41;
    _memcpy($41 | 0, HEAP32[$$07$i$i$i$i >> 2] | 0, (HEAP32[$34 >> 2] | 0) + 1 | 0) | 0;
   }
   $$07$i$i$i$i = $$07$i$i$i$i + 8 | 0;
   $37 = $37 + 8 | 0;
   HEAP32[$27 >> 2] = $37;
  } while (($$07$i$i$i$i | 0) != ($26 | 0));
 }
 $48 = HEAP32[$5 >> 2] | 0;
 $50 = HEAP32[$5 + 4 >> 2] | 0;
 $51 = $48 + ($50 << 3) | 0;
 HEAP32[$8 >> 2] = 0;
 $52 = $8 + 4 | 0;
 HEAP32[$52 >> 2] = 0;
 $53 = $8 + 8 | 0;
 HEAP32[$53 >> 2] = 0;
 $$idx$i4 = $50 << 3;
 $54 = $$idx$i4 >> 3;
 if ($50 | 0) {
  if ($54 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($8);
  $57 = __Znwj($$idx$i4) | 0;
  HEAP32[$52 >> 2] = $57;
  HEAP32[$8 >> 2] = $57;
  HEAP32[$53 >> 2] = $57 + ($54 << 3);
  $$07$i$i$i$i6 = $48;
  $62 = $57;
  do {
   $59 = $$07$i$i$i$i6 + 4 | 0;
   $60 = HEAP32[$59 >> 2] | 0;
   HEAP32[$62 + 4 >> 2] = $60;
   if (!$60) HEAP32[$62 >> 2] = 0; else {
    $66 = _malloc((HEAP32[$59 >> 2] | 0) + 1 | 0) | 0;
    HEAP32[$62 >> 2] = $66;
    _memcpy($66 | 0, HEAP32[$$07$i$i$i$i6 >> 2] | 0, (HEAP32[$59 >> 2] | 0) + 1 | 0) | 0;
   }
   $$07$i$i$i$i6 = $$07$i$i$i$i6 + 8 | 0;
   $62 = $62 + 8 | 0;
   HEAP32[$52 >> 2] = $62;
  } while (($$07$i$i$i$i6 | 0) != ($51 | 0));
 }
 __ZN2ut11CoreService12createSystemERKNS_12NativeStringENSt3__28functionIFvPNS_9SchedulerEPNS_12ManagerWorldEEEERKNS4_6vectorIS1_NS4_9allocatorIS1_EEEESH_($0, $1, $2, $6, $7, $8);
 $73 = HEAP32[$8 >> 2] | 0;
 if ($73 | 0) {
  $75 = HEAP32[$52 >> 2] | 0;
  if (($75 | 0) == ($73 | 0)) $81 = $73; else {
   $$06$i$i$i = $75;
   do {
    $$06$i$i$i$looptemp = $$06$i$i$i;
    $$06$i$i$i = $$06$i$i$i + -8 | 0;
    _free(HEAP32[$$06$i$i$i >> 2] | 0);
    HEAP32[$$06$i$i$i >> 2] = 0;
    HEAP32[$$06$i$i$i$looptemp + -4 >> 2] = 0;
   } while (($$06$i$i$i | 0) != ($73 | 0));
   $81 = HEAP32[$8 >> 2] | 0;
  }
  HEAP32[$52 >> 2] = $73;
  __ZdlPv($81);
 }
 $82 = HEAP32[$7 >> 2] | 0;
 if ($82 | 0) {
  $84 = HEAP32[$27 >> 2] | 0;
  if (($84 | 0) == ($82 | 0)) $90 = $82; else {
   $$06$i$i$i10 = $84;
   do {
    $$06$i$i$i10$looptemp = $$06$i$i$i10;
    $$06$i$i$i10 = $$06$i$i$i10 + -8 | 0;
    _free(HEAP32[$$06$i$i$i10 >> 2] | 0);
    HEAP32[$$06$i$i$i10 >> 2] = 0;
    HEAP32[$$06$i$i$i10$looptemp + -4 >> 2] = 0;
   } while (($$06$i$i$i10 | 0) != ($82 | 0));
   $90 = HEAP32[$7 >> 2] | 0;
  }
  HEAP32[$27 >> 2] = $82;
  __ZdlPv($90);
 }
 $92 = HEAP32[$6 + 16 >> 2] | 0;
 if (($6 | 0) == ($92 | 0)) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$92 >> 2] | 0) + 16 >> 2] & 63]($92);
  STACKTOP = sp;
  return;
 }
 if (!$92) {
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$92 >> 2] | 0) + 20 >> 2] & 63]($92);
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_127parse_reinterpret_cast_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$i = 0, $$0$i$i$i47 = 0, $$0$i$i$i50 = 0, $$0$i$i$i53 = 0, $$0$i$i$idx$i = 0, $$341 = 0, $19 = 0, $20 = 0, $22 = 0, $24 = 0, $25 = 0, $3 = 0, $32 = 0, $4 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $3 = sp + 88 | 0;
 $4 = sp + 64 | 0;
 $5 = sp + 48 | 0;
 $6 = sp + 36 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 12 | 0;
 $9 = sp;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 114) if ((HEAP8[$0 + 1 >> 0] | 0) == 99) {
  $19 = $0 + 2 | 0;
  $20 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($19, $1, $2) | 0;
  if (($20 | 0) == ($19 | 0)) $$341 = $0; else {
   $22 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($20, $1, $2) | 0;
   if (($22 | 0) == ($20 | 0)) $$341 = $0; else {
    $24 = $2 + 4 | 0;
    $25 = HEAP32[$24 >> 2] | 0;
    if ((($25 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$341 = $0; else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $25 + -24 | 0);
     $32 = HEAP32[$24 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($32 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$24 >> 2] = $32 + -24;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($9, $32 + -48 | 0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($9, 0, 22527) | 0;
     HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
     HEAP32[$8 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
     HEAP32[$8 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
     $$0$i$i$i = 0;
     while (1) {
      if (($$0$i$i$i | 0) == 3) break;
      HEAP32[$9 + ($$0$i$i$i << 2) >> 2] = 0;
      $$0$i$i$i = $$0$i$i$i + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($8, 22524) | 0;
     HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
     HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
     HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
     $$0$i$i$i47 = 0;
     while (1) {
      if (($$0$i$i$i47 | 0) == 3) break;
      HEAP32[$8 + ($$0$i$i$i47 << 2) >> 2] = 0;
      $$0$i$i$i47 = $$0$i$i$i47 + 1 | 0;
     }
     $43 = HEAP8[$3 + 11 >> 0] | 0;
     $44 = $43 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($7, $44 ? HEAP32[$3 >> 2] | 0 : $3, $44 ? HEAP32[$3 + 4 >> 2] | 0 : $43 & 255) | 0;
     HEAP32[$6 >> 2] = HEAP32[$7 >> 2];
     HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
     HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
     $$0$i$i$i50 = 0;
     while (1) {
      if (($$0$i$i$i50 | 0) == 3) break;
      HEAP32[$7 + ($$0$i$i$i50 << 2) >> 2] = 0;
      $$0$i$i$i50 = $$0$i$i$i50 + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($6, 22275) | 0;
     HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
     HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
     HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
     $$0$i$i$i53 = 0;
     while (1) {
      if (($$0$i$i$i53 | 0) == 3) break;
      HEAP32[$6 + ($$0$i$i$i53 << 2) >> 2] = 0;
      $$0$i$i$i53 = $$0$i$i$i53 + 1 | 0;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($4, $5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$24 >> 2] | 0) + -24 | 0, $4);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$341 = $22;
    }
   }
  }
 } else $$341 = $0; else $$341 = $0; else $$341 = $0;
 STACKTOP = sp;
 return $$341 | 0;
}

function __ZNSt3__26vectorIN2ut9Scheduler15ScheduledSystemENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$06$i$i = 0, $$in = 0, $102 = 0, $104 = 0, $105 = 0, $111 = 0, $12 = 0, $14 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $32 = 0, $34 = 0, $37 = 0, $39 = 0, $4 = 0, $40 = 0, $43 = 0, $44 = 0, $45 = 0, $48 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $65 = 0, $67 = 0, $68 = 0, $7 = 0, $70 = 0, $73 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $80 = 0, $82 = 0, $9 = 0, $90 = 0, $91 = 0, $93 = 0, $95 = 0, $97 = 0, $spec$select$i = 0, $$06$i$i$looptemp = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $6 = ((HEAP32[$2 >> 2] | 0) - $4 | 0) / 40 | 0;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 107374182) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $12 = ((HEAP32[$9 >> 2] | 0) - $4 | 0) / 40 | 0;
 $14 = $12 << 1;
 $spec$select$i = $12 >>> 0 < 53687091 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 107374182;
 do if (!$spec$select$i) $21 = 0; else if ($spec$select$i >>> 0 > 107374182) _abort(); else {
  $21 = __Znwj($spec$select$i * 40 | 0) | 0;
  break;
 } while (0);
 $20 = $21 + ($6 * 40 | 0) | 0;
 $23 = $21 + ($spec$select$i * 40 | 0) | 0;
 HEAP32[$20 >> 2] = HEAP32[$1 >> 2];
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($21 + ($6 * 40 | 0) + 4 | 0, $1 + 4 | 0);
 HEAP32[$21 + ($6 * 40 | 0) + 16 >> 2] = HEAP32[$1 + 16 >> 2];
 $32 = HEAP32[$1 + 20 >> 2] | 0;
 HEAP32[$21 + ($6 * 40 | 0) + 20 >> 2] = $32;
 if ($32 | 0) {
  $34 = $32 + 4 | 0;
  HEAP32[$34 >> 2] = (HEAP32[$34 >> 2] | 0) + 1;
 }
 $37 = $21 + ($6 * 40 | 0) + 24 | 0;
 HEAP32[$37 >> 2] = 0;
 $39 = $21 + ($6 * 40 | 0) + 28 | 0;
 HEAP32[$39 >> 2] = 0;
 $40 = $21 + ($6 * 40 | 0) + 32 | 0;
 HEAP32[$40 >> 2] = 0;
 $43 = HEAP32[$1 + 24 >> 2] | 0;
 $44 = (HEAP32[$1 + 28 >> 2] | 0) - $43 | 0;
 $45 = $44 >> 2;
 if ($44 | 0) {
  if ($45 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($37);
  $48 = __Znwj($44) | 0;
  HEAP32[$39 >> 2] = $48;
  HEAP32[$37 >> 2] = $48;
  HEAP32[$40 >> 2] = $48 + ($45 << 2);
  if (($44 | 0) > 0) {
   _memcpy($48 | 0, $43 | 0, $44 | 0) | 0;
   HEAP32[$39 >> 2] = $48 + ($44 >>> 2 << 2);
  }
 }
 HEAP8[$21 + ($6 * 40 | 0) + 36 >> 0] = HEAP8[$1 + 36 >> 0] | 0;
 $58 = $20 + 40 | 0;
 $59 = HEAP32[$0 >> 2] | 0;
 $60 = HEAP32[$2 >> 2] | 0;
 if (($60 | 0) == ($59 | 0)) {
  $$in = $20;
  $90 = $59;
  $93 = $59;
 } else {
  $$06$i$i = $60;
  $65 = $20;
  do {
   $$06$i$i$looptemp = $$06$i$i;
   $$06$i$i = $$06$i$i + -40 | 0;
   HEAP32[$65 + -40 >> 2] = HEAP32[$$06$i$i >> 2];
   $67 = $65 + -36 | 0;
   $68 = $$06$i$i$looptemp + -36 | 0;
   HEAP32[$67 >> 2] = HEAP32[$68 >> 2];
   HEAP32[$67 + 4 >> 2] = HEAP32[$68 + 4 >> 2];
   HEAP32[$67 + 8 >> 2] = HEAP32[$68 + 8 >> 2];
   HEAP32[$68 >> 2] = 0;
   HEAP32[$68 + 4 >> 2] = 0;
   HEAP32[$68 + 8 >> 2] = 0;
   $70 = $$06$i$i$looptemp + -24 | 0;
   HEAP32[$65 + -24 >> 2] = HEAP32[$70 >> 2];
   $73 = $$06$i$i$looptemp + -20 | 0;
   HEAP32[$65 + -20 >> 2] = HEAP32[$73 >> 2];
   HEAP32[$70 >> 2] = 0;
   HEAP32[$73 >> 2] = 0;
   $75 = $65 + -16 | 0;
   $76 = $$06$i$i$looptemp + -16 | 0;
   HEAP32[$75 >> 2] = 0;
   $77 = $65 + -12 | 0;
   HEAP32[$77 >> 2] = 0;
   $78 = $65 + -8 | 0;
   HEAP32[$78 >> 2] = 0;
   HEAP32[$75 >> 2] = HEAP32[$76 >> 2];
   $80 = $$06$i$i$looptemp + -12 | 0;
   HEAP32[$77 >> 2] = HEAP32[$80 >> 2];
   $82 = $$06$i$i$looptemp + -8 | 0;
   HEAP32[$78 >> 2] = HEAP32[$82 >> 2];
   HEAP32[$82 >> 2] = 0;
   HEAP32[$80 >> 2] = 0;
   HEAP32[$76 >> 2] = 0;
   HEAP8[$65 + -4 >> 0] = HEAP8[$$06$i$i$looptemp + -4 >> 0] | 0;
   $65 = $65 + -40 | 0;
  } while (($$06$i$i | 0) != ($59 | 0));
  $$in = $65;
  $90 = HEAP32[$0 >> 2] | 0;
  $93 = HEAP32[$2 >> 2] | 0;
 }
 HEAP32[$0 >> 2] = $$in;
 HEAP32[$2 >> 2] = $58;
 HEAP32[$9 >> 2] = $23;
 $91 = $90;
 if (($93 | 0) != ($91 | 0)) {
  $95 = $93;
  do {
   $97 = HEAP32[$95 + -16 >> 2] | 0;
   if ($97 | 0) {
    HEAP32[$95 + -12 >> 2] = $97;
    __ZdlPv($97);
   }
   $102 = HEAP32[$95 + -20 >> 2] | 0;
   if ($102 | 0) {
    $104 = $102 + 4 | 0;
    $105 = HEAP32[$104 >> 2] | 0;
    HEAP32[$104 >> 2] = $105 + -1;
    if (!$105) {
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$102 >> 2] | 0) + 8 >> 2] & 63]($102);
     __ZNSt3__219__shared_weak_count14__release_weakEv($102);
    }
   }
   $111 = $95 + -36 | 0;
   $95 = $95 + -40 | 0;
   if ((HEAP8[$111 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$111 >> 2] | 0);
  } while (($95 | 0) != ($91 | 0));
 }
 if (!$90) return;
 __ZdlPv($90);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_123parse_dynamic_cast_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$i = 0, $$0$i$i$i47 = 0, $$0$i$i$i50 = 0, $$0$i$i$i53 = 0, $$0$i$i$idx$i = 0, $$341 = 0, $19 = 0, $20 = 0, $22 = 0, $24 = 0, $25 = 0, $3 = 0, $32 = 0, $4 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $3 = sp + 88 | 0;
 $4 = sp + 64 | 0;
 $5 = sp + 48 | 0;
 $6 = sp + 36 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 12 | 0;
 $9 = sp;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 100) if ((HEAP8[$0 + 1 >> 0] | 0) == 99) {
  $19 = $0 + 2 | 0;
  $20 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($19, $1, $2) | 0;
  if (($20 | 0) == ($19 | 0)) $$341 = $0; else {
   $22 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($20, $1, $2) | 0;
   if (($22 | 0) == ($20 | 0)) $$341 = $0; else {
    $24 = $2 + 4 | 0;
    $25 = HEAP32[$24 >> 2] | 0;
    if ((($25 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$341 = $0; else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $25 + -24 | 0);
     $32 = HEAP32[$24 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($32 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$24 >> 2] = $32 + -24;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($9, $32 + -48 | 0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($9, 0, 23427) | 0;
     HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
     HEAP32[$8 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
     HEAP32[$8 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
     $$0$i$i$i = 0;
     while (1) {
      if (($$0$i$i$i | 0) == 3) break;
      HEAP32[$9 + ($$0$i$i$i << 2) >> 2] = 0;
      $$0$i$i$i = $$0$i$i$i + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($8, 22524) | 0;
     HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
     HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
     HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
     $$0$i$i$i47 = 0;
     while (1) {
      if (($$0$i$i$i47 | 0) == 3) break;
      HEAP32[$8 + ($$0$i$i$i47 << 2) >> 2] = 0;
      $$0$i$i$i47 = $$0$i$i$i47 + 1 | 0;
     }
     $43 = HEAP8[$3 + 11 >> 0] | 0;
     $44 = $43 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($7, $44 ? HEAP32[$3 >> 2] | 0 : $3, $44 ? HEAP32[$3 + 4 >> 2] | 0 : $43 & 255) | 0;
     HEAP32[$6 >> 2] = HEAP32[$7 >> 2];
     HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
     HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
     $$0$i$i$i50 = 0;
     while (1) {
      if (($$0$i$i$i50 | 0) == 3) break;
      HEAP32[$7 + ($$0$i$i$i50 << 2) >> 2] = 0;
      $$0$i$i$i50 = $$0$i$i$i50 + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($6, 22275) | 0;
     HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
     HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
     HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
     $$0$i$i$i53 = 0;
     while (1) {
      if (($$0$i$i$i53 | 0) == 3) break;
      HEAP32[$6 + ($$0$i$i$i53 << 2) >> 2] = 0;
      $$0$i$i$i53 = $$0$i$i$i53 + 1 | 0;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($4, $5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$24 >> 2] | 0) + -24 | 0, $4);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$341 = $22;
    }
   }
  }
 } else $$341 = $0; else $$341 = $0; else $$341 = $0;
 STACKTOP = sp;
 return $$341 | 0;
}

function __ZN2ut4arch16ArchetypeManager22getChunkWithEmptySlotsEPNS0_9ArchetypeEPi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$02127$i$us = 0, $$030$i = 0, $$04359 = 0, $$04359$lcssa = 0, $$04359$us = 0, $$3 = 0, $28 = 0, $3 = 0, $31 = 0, $38 = 0, $48 = 0, $5 = 0, $51 = 0, $60 = 0, $63 = 0, $65 = 0, $67 = 0, $69 = 0, $80 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $vararg_buffer11 = sp + 48 | 0;
 $vararg_buffer9 = sp + 40 | 0;
 $vararg_buffer7 = sp + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $3 = $1 + 8 | 0;
 $5 = HEAP32[$1 + 12 >> 2] | 0;
 L1 : do if (($5 | 0) != ($3 | 0)) {
  if (!(HEAP32[$1 + 104 >> 2] | 0)) {
   if ((HEAP32[$5 + 16 >> 2] | 0) > (HEAP32[$5 + 20 >> 2] | 0)) {
    _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9893, 9243, 248);
   }
   if ((HEAP32[$5 + 8 >> 2] | 0) == ($1 | 0)) {
    $$3 = $5 + -8 | 0;
    STACKTOP = sp;
    return $$3 | 0;
   } else {
    _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9925, 9243, 249);
   }
  }
  L12 : do if (!$2) {
   $$04359$us = $5;
   L14 : while (1) {
    if ((HEAP32[$$04359$us + 16 >> 2] | 0) == (HEAP32[$$04359$us + 20 >> 2] | 0)) {
     label = 11;
     break;
    }
    $28 = HEAP32[(HEAP32[$$04359$us + 8 >> 2] | 0) + 104 >> 2] | 0;
    if (($28 | 0) <= 0) {
     $$04359$lcssa = $$04359$us;
     break L12;
    }
    $31 = HEAP32[$$04359$us + 12 >> 2] | 0;
    $$02127$i$us = 0;
    while (1) {
     if (HEAP32[$31 + ($$02127$i$us << 2) >> 2] | 0) break;
     $$02127$i$us = $$02127$i$us + 1 | 0;
     if (($$02127$i$us | 0) >= ($28 | 0)) break L14;
    }
    $38 = HEAP32[$$04359$us + 4 >> 2] | 0;
    if (($38 | 0) == ($3 | 0)) break L1; else $$04359$us = $38;
   }
   if ((label | 0) == 11) {
    _snprintf(25060, 1024, 27124, $vararg_buffer3) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9955, 9243, 256);
   }
   $$3 = $$04359$us + -8 | 0;
   STACKTOP = sp;
   return $$3 | 0;
  } else {
   $$04359 = $5;
   L27 : while (1) {
    if ((HEAP32[$$04359 + 16 >> 2] | 0) == (HEAP32[$$04359 + 20 >> 2] | 0)) {
     label = 18;
     break;
    }
    $48 = HEAP32[(HEAP32[$$04359 + 8 >> 2] | 0) + 104 >> 2] | 0;
    if (($48 | 0) <= 0) {
     $$04359$lcssa = $$04359;
     break L12;
    }
    $51 = HEAP32[$$04359 + 12 >> 2] | 0;
    $$030$i = 0;
    while (1) {
     if ((HEAP32[$51 + ($$030$i << 2) >> 2] | 0) != (HEAP32[$2 + ($$030$i << 2) >> 2] | 0)) break;
     $$030$i = $$030$i + 1 | 0;
     if (($$030$i | 0) >= ($48 | 0)) break L27;
    }
    $60 = HEAP32[$$04359 + 4 >> 2] | 0;
    if (($60 | 0) == ($3 | 0)) break L1; else $$04359 = $60;
   }
   if ((label | 0) == 18) {
    _snprintf(25060, 1024, 27124, $vararg_buffer5) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9955, 9243, 256);
   }
   $$3 = $$04359 + -8 | 0;
   STACKTOP = sp;
   return $$3 | 0;
  } while (0);
  $$3 = $$04359$lcssa + -8 | 0;
  STACKTOP = sp;
  return $$3 | 0;
 } while (0);
 $63 = HEAP32[$0 + 52 >> 2] | 0;
 $65 = HEAP32[$63 + 4 >> 2] | 0;
 if (($65 | 0) == ($63 | 0)) {
  $80 = _aligned_alloc(64, 16384) | 0;
  __ZN2ut4arch16ArchetypeManager14constructChunkEPNS0_9ArchetypeEPNS0_5ChunkEPi($0, $1, $80, $2);
  if ((HEAP32[$80 + 16 >> 2] | 0) == ($1 | 0)) {
   $$3 = $80;
   STACKTOP = sp;
   return $$3 | 0;
  } else {
   _snprintf(25060, 1024, 27124, $vararg_buffer11) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9925, 9243, 279);
  }
 }
 $67 = HEAP32[$65 >> 2] | 0;
 if ($67 | 0) {
  $69 = $65 + 4 | 0;
  HEAP32[$67 + 4 >> 2] = HEAP32[$69 >> 2];
  HEAP32[HEAP32[$69 >> 2] >> 2] = HEAP32[$65 >> 2];
  HEAP32[$69 >> 2] = 0;
  HEAP32[$65 >> 2] = 0;
 }
 __ZN2ut4arch16ArchetypeManager14constructChunkEPNS0_9ArchetypeEPNS0_5ChunkEPi($0, $1, $65, $2);
 if (HEAP32[$65 + 24 >> 2] | 0) {
  _snprintf(25060, 1024, 27124, $vararg_buffer7) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9987, 9243, 266);
 }
 if ((HEAP32[$65 + 16 >> 2] | 0) == ($1 | 0)) {
  $$3 = $65;
  STACKTOP = sp;
  return $$3 | 0;
 } else {
  _snprintf(25060, 1024, 27124, $vararg_buffer9) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 10011, 9243, 267);
 }
 return 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_122parse_static_cast_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$i = 0, $$0$i$i$i47 = 0, $$0$i$i$i50 = 0, $$0$i$i$i53 = 0, $$0$i$i$idx$i = 0, $$341 = 0, $19 = 0, $20 = 0, $22 = 0, $24 = 0, $25 = 0, $3 = 0, $32 = 0, $4 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $3 = sp + 88 | 0;
 $4 = sp + 64 | 0;
 $5 = sp + 48 | 0;
 $6 = sp + 36 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 12 | 0;
 $9 = sp;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 115) if ((HEAP8[$0 + 1 >> 0] | 0) == 99) {
  $19 = $0 + 2 | 0;
  $20 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($19, $1, $2) | 0;
  if (($20 | 0) == ($19 | 0)) $$341 = $0; else {
   $22 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($20, $1, $2) | 0;
   if (($22 | 0) == ($20 | 0)) $$341 = $0; else {
    $24 = $2 + 4 | 0;
    $25 = HEAP32[$24 >> 2] | 0;
    if ((($25 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$341 = $0; else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $25 + -24 | 0);
     $32 = HEAP32[$24 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($32 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$24 >> 2] = $32 + -24;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($9, $32 + -48 | 0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($9, 0, 22511) | 0;
     HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
     HEAP32[$8 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
     HEAP32[$8 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
     $$0$i$i$i = 0;
     while (1) {
      if (($$0$i$i$i | 0) == 3) break;
      HEAP32[$9 + ($$0$i$i$i << 2) >> 2] = 0;
      $$0$i$i$i = $$0$i$i$i + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($8, 22524) | 0;
     HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
     HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
     HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
     $$0$i$i$i47 = 0;
     while (1) {
      if (($$0$i$i$i47 | 0) == 3) break;
      HEAP32[$8 + ($$0$i$i$i47 << 2) >> 2] = 0;
      $$0$i$i$i47 = $$0$i$i$i47 + 1 | 0;
     }
     $43 = HEAP8[$3 + 11 >> 0] | 0;
     $44 = $43 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($7, $44 ? HEAP32[$3 >> 2] | 0 : $3, $44 ? HEAP32[$3 + 4 >> 2] | 0 : $43 & 255) | 0;
     HEAP32[$6 >> 2] = HEAP32[$7 >> 2];
     HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
     HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
     $$0$i$i$i50 = 0;
     while (1) {
      if (($$0$i$i$i50 | 0) == 3) break;
      HEAP32[$7 + ($$0$i$i$i50 << 2) >> 2] = 0;
      $$0$i$i$i50 = $$0$i$i$i50 + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($6, 22275) | 0;
     HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
     HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
     HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
     $$0$i$i$i53 = 0;
     while (1) {
      if (($$0$i$i$i53 | 0) == 3) break;
      HEAP32[$6 + ($$0$i$i$i53 << 2) >> 2] = 0;
      $$0$i$i$i53 = $$0$i$i$i53 + 1 | 0;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($4, $5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$24 >> 2] | 0) + -24 | 0, $4);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$341 = $22;
    }
   }
  }
 } else $$341 = $0; else $$341 = $0; else $$341 = $0;
 STACKTOP = sp;
 return $$341 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_const_cast_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$i = 0, $$0$i$i$i47 = 0, $$0$i$i$i50 = 0, $$0$i$i$i53 = 0, $$0$i$i$idx$i = 0, $$341 = 0, $19 = 0, $20 = 0, $22 = 0, $24 = 0, $25 = 0, $3 = 0, $32 = 0, $4 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $3 = sp + 88 | 0;
 $4 = sp + 64 | 0;
 $5 = sp + 48 | 0;
 $6 = sp + 36 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 12 | 0;
 $9 = sp;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 99) if ((HEAP8[$0 + 1 >> 0] | 0) == 99) {
  $19 = $0 + 2 | 0;
  $20 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($19, $1, $2) | 0;
  if (($20 | 0) == ($19 | 0)) $$341 = $0; else {
   $22 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($20, $1, $2) | 0;
   if (($22 | 0) == ($20 | 0)) $$341 = $0; else {
    $24 = $2 + 4 | 0;
    $25 = HEAP32[$24 >> 2] | 0;
    if ((($25 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$341 = $0; else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $25 + -24 | 0);
     $32 = HEAP32[$24 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($32 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$24 >> 2] = $32 + -24;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($9, $32 + -48 | 0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($9, 0, 23444) | 0;
     HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
     HEAP32[$8 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
     HEAP32[$8 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
     $$0$i$i$i = 0;
     while (1) {
      if (($$0$i$i$i | 0) == 3) break;
      HEAP32[$9 + ($$0$i$i$i << 2) >> 2] = 0;
      $$0$i$i$i = $$0$i$i$i + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($8, 22524) | 0;
     HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
     HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
     HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
     $$0$i$i$i47 = 0;
     while (1) {
      if (($$0$i$i$i47 | 0) == 3) break;
      HEAP32[$8 + ($$0$i$i$i47 << 2) >> 2] = 0;
      $$0$i$i$i47 = $$0$i$i$i47 + 1 | 0;
     }
     $43 = HEAP8[$3 + 11 >> 0] | 0;
     $44 = $43 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($7, $44 ? HEAP32[$3 >> 2] | 0 : $3, $44 ? HEAP32[$3 + 4 >> 2] | 0 : $43 & 255) | 0;
     HEAP32[$6 >> 2] = HEAP32[$7 >> 2];
     HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
     HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
     $$0$i$i$i50 = 0;
     while (1) {
      if (($$0$i$i$i50 | 0) == 3) break;
      HEAP32[$7 + ($$0$i$i$i50 << 2) >> 2] = 0;
      $$0$i$i$i50 = $$0$i$i$i50 + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($6, 22275) | 0;
     HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
     HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
     HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
     $$0$i$i$i53 = 0;
     while (1) {
      if (($$0$i$i$i53 | 0) == 3) break;
      HEAP32[$6 + ($$0$i$i$i53 << 2) >> 2] = 0;
      $$0$i$i$i53 = $$0$i$i$i53 + 1 | 0;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($4, $5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$24 >> 2] | 0) + -24 | 0, $4);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$341 = $22;
    }
   }
  }
 } else $$341 = $0; else $$341 = $0; else $$341 = $0;
 STACKTOP = sp;
 return $$341 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_120parse_function_paramINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i56 = 0, $$2 = 0, $$3 = 0, $17 = 0, $18 = 0, $25 = 0, $26 = 0, $3 = 0, $34 = 0, $39 = 0, $4 = 0, $40 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $3 = sp + 64 | 0;
 $4 = sp + 40 | 0;
 $5 = sp + 12 | 0;
 $6 = sp + 24 | 0;
 $7 = sp;
 L1 : do if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 102) {
  switch (HEAP8[$0 + 1 >> 0] | 0) {
  case 112:
   {
    $17 = __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($0 + 2 | 0, $1, $3) | 0;
    $18 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($17, $1) | 0;
    if (($18 | 0) == ($1 | 0)) $$0 = $0; else if ((HEAP8[$18 >> 0] | 0) == 95) {
     HEAP32[$6 >> 2] = 0;
     HEAP32[$6 + 4 >> 2] = 0;
     HEAP32[$6 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_($6, $17, $18);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($6, 0, 23466) | 0;
     HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
     HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
     HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
     $$0$i$i$i = 0;
     while (1) {
      if (($$0$i$i$i | 0) == 3) break;
      HEAP32[$6 + ($$0$i$i$i << 2) >> 2] = 0;
      $$0$i$i$i = $$0$i$i$i + 1 | 0;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($4, $5);
     $25 = $2 + 4 | 0;
     $26 = HEAP32[$25 >> 2] | 0;
     if ($26 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($26, $4);
      HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $4);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
     $$0 = $18 + 1 | 0;
    } else $$0 = $0;
    $$3 = $$0;
    break L1;
    break;
   }
  case 76:
   break;
  default:
   {
    $$3 = $0;
    break L1;
   }
  }
  $34 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($0 + 2 | 0, $1) | 0;
  if (($34 | 0) == ($1 | 0)) $$2 = $0; else if ((HEAP8[$34 >> 0] | 0) == 112) {
   $39 = __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($34 + 1 | 0, $1, $3) | 0;
   $40 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($39, $1) | 0;
   if (($40 | 0) == ($1 | 0)) $$2 = $0; else if ((HEAP8[$40 >> 0] | 0) == 95) {
    HEAP32[$6 >> 2] = 0;
    HEAP32[$6 + 4 >> 2] = 0;
    HEAP32[$6 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_($6, $39, $40);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($6, 0, 23466) | 0;
    HEAP32[$7 >> 2] = HEAP32[$6 >> 2];
    HEAP32[$7 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
    HEAP32[$7 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
    $$0$i$i$i56 = 0;
    while (1) {
     if (($$0$i$i$i56 | 0) == 3) break;
     HEAP32[$6 + ($$0$i$i$i56 << 2) >> 2] = 0;
     $$0$i$i$i56 = $$0$i$i$i56 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($4, $7);
    $47 = $2 + 4 | 0;
    $48 = HEAP32[$47 >> 2] | 0;
    if ($48 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($48, $4);
     HEAP32[$47 >> 2] = (HEAP32[$47 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
    $$2 = $40 + 1 | 0;
   } else $$2 = $0;
  } else $$2 = $0;
  $$3 = $$2;
 } else $$3 = $0; else $$3 = $0; while (0);
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZN2ut4arch26SharedComponentDataManager13findNoDefaultEjPKvj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$02832$i$i$i = 0, $$02833$i$i$i = 0, $$02833$us$i$i$i = 0, $$03143$i$i = 0, $$032$lcssa$i$i = 0, $$03242$i$i = 0, $$033$lcssa$i$i = 0, $$03341$i$i = 0, $$03540$i$i = 0, $$038$i$i = 0, $$13436$i$i = 0, $$137$i$i = 0, $$sroa$0$0$i$i$i = 0, $$sroa$0$037 = 0, $$sroa$06$0$i$i = 0, $$sroa$06$1$i$i = 0, $11 = 0, $15 = 0, $29 = 0, $31 = 0, $33 = 0, $35 = 0, $4 = 0, $42 = 0, $43 = 0, $47 = 0, $48 = 0, $56 = 0, $61 = 0, $66 = 0, $68 = 0, $7 = 0, $74 = 0, $76 = 0, $79 = 0, $80 = 0, $83 = 0, $85 = 0, $97 = 0, label = 0;
 $4 = $3 >>> 1;
 if (!$4) {
  $$032$lcssa$i$i = 255;
  $$033$lcssa$i$i = 255;
 } else {
  $$03143$i$i = $2;
  $$03242$i$i = 255;
  $$03341$i$i = 255;
  $$03540$i$i = $4;
  while (1) {
   $7 = ($$03540$i$i | 0) < 359 ? $$03540$i$i : 359;
   $$038$i$i = 0;
   $$13436$i$i = $$03341$i$i;
   $$137$i$i = $$03242$i$i;
   do {
    $$13436$i$i = $$13436$i$i + (HEAPU16[$$03143$i$i + ($$038$i$i << 1) >> 1] | 0) | 0;
    $$137$i$i = $$13436$i$i + $$137$i$i | 0;
    $$038$i$i = $$038$i$i + 1 | 0;
   } while (($$038$i$i | 0) < ($7 | 0));
   $11 = ($$13436$i$i & 65535) + ($$13436$i$i >>> 16) | 0;
   $15 = ($$137$i$i & 65535) + ($$137$i$i >>> 16) | 0;
   $$03540$i$i = $$03540$i$i - $7 | 0;
   if (($$03540$i$i | 0) <= 0) {
    $$032$lcssa$i$i = $15;
    $$033$lcssa$i$i = $11;
    break;
   } else {
    $$03143$i$i = $$03143$i$i + ($7 << 1) | 0;
    $$03242$i$i = $15;
    $$03341$i$i = $11;
   }
  }
 }
 $29 = $$033$lcssa$i$i & 65535 | $$033$lcssa$i$i >>> 16 | $$032$lcssa$i$i & -65536 | $$032$lcssa$i$i << 16;
 $31 = HEAP32[$0 + 20 >> 2] | 0;
 L9 : do if (!$31) {
  $$sroa$06$1$i$i = 0;
  $74 = 0;
 } else {
  $33 = $31 + -1 | 0;
  $35 = ($33 & $31 | 0) == 0;
  if ($35) $42 = $29 & $33; else if ($29 >>> 0 < $31 >>> 0) $42 = $29; else $42 = ($29 >>> 0) % ($31 >>> 0) | 0;
  $43 = HEAP32[(HEAP32[$0 + 16 >> 2] | 0) + ($42 << 2) >> 2] | 0;
  if (!$43) {
   $$sroa$06$1$i$i = 0;
   $74 = 0;
  } else {
   $$02832$i$i$i = HEAP32[$43 >> 2] | 0;
   if (!$$02832$i$i$i) {
    $$sroa$06$1$i$i = 0;
    $74 = 0;
   } else {
    L18 : do if ($35) {
     $$02833$us$i$i$i = $$02832$i$i$i;
     while (1) {
      $47 = HEAP32[$$02833$us$i$i$i + 4 >> 2] | 0;
      $48 = ($47 | 0) == ($29 | 0);
      if (!($48 | ($47 & $33 | 0) == ($42 | 0))) {
       $$sroa$06$1$i$i = 0;
       $74 = 0;
       break L9;
      }
      if ($48) if ((HEAP32[$$02833$us$i$i$i + 8 >> 2] | 0) == ($29 | 0)) {
       $$sroa$0$0$i$i$i = $$02833$us$i$i$i;
       break L18;
      }
      $$02833$us$i$i$i = HEAP32[$$02833$us$i$i$i >> 2] | 0;
      if (!$$02833$us$i$i$i) {
       $$sroa$06$1$i$i = 0;
       $74 = 0;
       break L9;
      }
     }
    } else {
     $$02833$i$i$i = $$02832$i$i$i;
     while (1) {
      $56 = HEAP32[$$02833$i$i$i + 4 >> 2] | 0;
      if (($56 | 0) == ($29 | 0)) {
       if ((HEAP32[$$02833$i$i$i + 8 >> 2] | 0) == ($29 | 0)) {
        $$sroa$0$0$i$i$i = $$02833$i$i$i;
        break L18;
       }
      } else {
       if ($56 >>> 0 < $31 >>> 0) $61 = $56; else $61 = ($56 >>> 0) % ($31 >>> 0) | 0;
       if (($61 | 0) != ($42 | 0)) {
        $$sroa$06$1$i$i = 0;
        $74 = 0;
        break L9;
       }
      }
      $$02833$i$i$i = HEAP32[$$02833$i$i$i >> 2] | 0;
      if (!$$02833$i$i$i) {
       $$sroa$06$1$i$i = 0;
       $74 = 0;
       break L9;
      }
     }
    } while (0);
    $66 = $$sroa$0$0$i$i$i;
    $$sroa$06$0$i$i = $66;
    while (1) {
     $68 = HEAP32[$$sroa$06$0$i$i >> 2] | 0;
     if (!$68) {
      $$sroa$06$1$i$i = 0;
      $74 = $66;
      break L9;
     }
     if ((HEAP32[$68 + 8 >> 2] | 0) == ($29 | 0)) $$sroa$06$0$i$i = $68; else {
      $$sroa$06$1$i$i = $68;
      $74 = $66;
      break;
     }
    }
   }
  }
 } while (0);
 $76 = $$sroa$06$1$i$i;
 if (($74 | 0) == ($76 | 0)) {
  $97 = -1;
  return $97 | 0;
 }
 $79 = HEAP32[$0 + 36 >> 2] | 0;
 $80 = $0 + 72 | 0;
 $$sroa$0$037 = $74;
 while (1) {
  $83 = HEAP32[$$sroa$0$037 + 12 >> 2] | 0;
  $85 = HEAP32[$79 + ($83 << 2) >> 2] | 0;
  if ($85 | 0) if ((HEAP32[(HEAP32[$80 >> 2] | 0) + ($83 << 2) >> 2] | 0) == ($1 | 0)) if (!(_memcmp($85, $2, $3) | 0)) {
   $97 = $83;
   label = 35;
   break;
  }
  $$sroa$0$037 = HEAP32[$$sroa$0$037 >> 2] | 0;
  if (($$sroa$0$037 | 0) == ($76 | 0)) {
   $97 = -1;
   label = 35;
   break;
  }
 }
 if ((label | 0) == 35) return $97 | 0;
 return 0;
}

function __ZN2ut10loadMemberERNS_12ManagerWorldERKN9rapidjson12GenericValueINS2_4UTF8IcEENS2_19MemoryPoolAllocatorINS2_12CrtAllocatorEEEEERKNS_4meta10MemberDescEPv($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$0$i$i$i$i = 0, $$0$i35 = 0, $14 = 0, $18 = 0, $25 = 0, $38 = 0, $4 = 0, $40 = 0, $42 = 0, $43 = 0, $48 = 0, $5 = 0, $8 = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $vararg_buffer11 = sp + 72 | 0;
 $vararg_buffer9 = sp + 64 | 0;
 $vararg_buffer7 = sp + 56 | 0;
 $vararg_buffer5 = sp + 48 | 0;
 $vararg_buffer3 = sp + 40 | 0;
 $vararg_buffer1 = sp + 32 | 0;
 $4 = sp;
 $5 = $2 + 8 | 0;
 if (!(HEAP32[$5 >> 2] | 0)) {
  _snprintf(25060, 1024, 27124, sp + 24 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13122, 12969, 368);
 }
 $8 = HEAP32[$2 >> 2] | 0;
 do if (!$8) $$0 = $1; else if ((HEAP32[HEAP32[$5 >> 2] >> 2] | 0) == 1) $$0 = $1; else {
  if (!(__ZNK9rapidjson12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorINS_12CrtAllocatorEEEE9HasMemberEPKc($1, $8) | 0)) {
   _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 16365, 12969, 370);
  }
  $14 = HEAP32[$2 >> 2] | 0;
  $$0$i$i$i$i = $14;
  while (1) if (!(HEAP8[$$0$i$i$i$i >> 0] | 0)) break; else $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
  $18 = $14;
  if (!$14) ___assert_fail(16395, 15939, 315, 16402); else {
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   HEAP32[$4 + 12 >> 2] = 0;
   HEAP32[$4 + 16 >> 2] = 0;
   HEAP32[$4 + 20 >> 2] = 0;
   HEAP16[$4 + 18 >> 1] = 1029;
   HEAP32[$4 + 8 >> 2] = $18;
   HEAP32[$4 >> 2] = $$0$i$i$i$i - $18;
   $$0 = __ZN9rapidjson12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorINS_12CrtAllocatorEEEEixIS5_EERS6_RKNS0_IS2_T_EE($1, $4) | 0;
   break;
  }
 } while (0);
 $25 = HEAP32[$5 >> 2] | 0;
 switch (HEAP32[$25 >> 2] | 0) {
 case 1:
 case 0:
  {
   __ZN2ut8loadDataERNS_12ManagerWorldERKN9rapidjson12GenericValueINS2_4UTF8IcEENS2_19MemoryPoolAllocatorINS2_12CrtAllocatorEEEEERKNS_4meta10MemberDescEPv($0, $$0, $2, $3);
   STACKTOP = sp;
   return;
  }
 case 2:
  {
   if ((HEAP16[$$0 + 18 >> 1] | 0) != 4) {
    _snprintf(25060, 1024, 27124, $vararg_buffer3) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 16419, 12969, 380);
   }
   __ZN2ut9loadArrayERNS_12ManagerWorldERKN9rapidjson12GenericValueINS2_4UTF8IcEENS2_19MemoryPoolAllocatorINS2_12CrtAllocatorEEEEERKNS_4meta10MemberDescEPv($0, $$0, $2, $3);
   STACKTOP = sp;
   return;
  }
 case 3:
  {
   if ((HEAP16[$$0 + 18 >> 1] | 0) != 4) {
    _snprintf(25060, 1024, 27124, $vararg_buffer5) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 16419, 12969, 384);
   }
   __ZN2ut10loadVectorERNS_12ManagerWorldERKN9rapidjson12GenericValueINS2_4UTF8IcEENS2_19MemoryPoolAllocatorINS2_12CrtAllocatorEEEEERKNS_4meta10MemberDescEPv($0, $$0, $2, $3);
   STACKTOP = sp;
   return;
  }
 case 5:
 case 4:
  {
   if ((HEAP16[$$0 + 18 >> 1] | 0) != 3) {
    _snprintf(25060, 1024, 27124, $vararg_buffer7) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 16436, 12969, 389);
   }
   $38 = $3 + (HEAP32[$2 + 4 >> 2] | 0) | 0;
   $40 = HEAP32[$25 + 12 >> 2] | 0;
   $42 = HEAP32[$25 + 16 >> 2] | 0;
   $43 = $40 + ($42 * 12 | 0) | 0;
   if (!$42) {
    STACKTOP = sp;
    return;
   }
   $$0$i35 = $40;
   do {
    __ZN2ut10loadMemberERNS_12ManagerWorldERKN9rapidjson12GenericValueINS2_4UTF8IcEENS2_19MemoryPoolAllocatorINS2_12CrtAllocatorEEEEERKNS_4meta10MemberDescEPv($0, $$0, $$0$i35, $38);
    $$0$i35 = $$0$i35 + 12 | 0;
   } while (($$0$i35 | 0) != ($43 | 0));
   STACKTOP = sp;
   return;
  }
 case 6:
  {
   $48 = HEAP16[$$0 + 18 >> 1] | 0;
   if (!($48 & 32)) {
    _snprintf(25060, 1024, 27124, $vararg_buffer9) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 16454, 12969, 393);
   }
   if (!($48 & 32)) ___assert_fail(16055, 15939, 1645, 16080);
   HEAP32[$3 + (HEAP32[$2 + 4 >> 2] | 0) >> 2] = HEAP32[$$0 >> 2];
   STACKTOP = sp;
   return;
  }
 default:
  {
   _snprintf(25060, 1024, 13169, $vararg_buffer11) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 23477, 12969, 397);
  }
 }
}

function __ZN2ut4arch13EntityManager15formatComponentEj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$016$i$i = 0, $$017$i$i = 0, $14 = 0, $16 = 0, $17 = 0, $21 = 0, $22 = 0, $3 = 0, $30 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $41 = 0, $5 = 0, $52 = 0, $56 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $69 = 0, $70 = 0, $8 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $3 = sp + 36 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 12 | 0;
 $6 = sp;
 $8 = HEAP32[6067] | 0;
 if ((HEAP32[6068] | 0) - $8 >> 2 >>> 0 <= $2 >>> 0) {
  if (($2 | 0) == -1) {
   $52 = __Znwj(64) | 0;
   HEAP32[$0 >> 2] = $52;
   HEAP32[$0 + 8 >> 2] = -2147483584;
   HEAP32[$0 + 4 >> 2] = 50;
   dest = $52;
   src = 7642;
   stop = dest + 50 | 0;
   do {
    HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
    dest = dest + 1 | 0;
    src = src + 1 | 0;
   } while ((dest | 0) < (stop | 0));
   HEAP8[$52 + 50 >> 0] = 0;
   STACKTOP = sp;
   return;
  }
  $56 = __Znwj(32) | 0;
  HEAP32[$4 >> 2] = $56;
  HEAP32[$4 + 8 >> 2] = -2147483616;
  HEAP32[$4 + 4 >> 2] = 22;
  dest = $56;
  src = 7693;
  stop = dest + 22 | 0;
  do {
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   dest = dest + 1 | 0;
   src = src + 1 | 0;
  } while ((dest | 0) < (stop | 0));
  HEAP8[$56 + 22 >> 0] = 0;
  __ZNSt3__29to_stringEj($5, $2);
  $60 = $5 + 11 | 0;
  $61 = HEAP8[$60 >> 0] | 0;
  $62 = $61 << 24 >> 24 < 0;
  $69 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($4, $62 ? HEAP32[$5 >> 2] | 0 : $5, $62 ? HEAP32[$5 + 4 >> 2] | 0 : $61 & 255) | 0;
  HEAP32[$3 >> 2] = HEAP32[$69 >> 2];
  HEAP32[$3 + 4 >> 2] = HEAP32[$69 + 4 >> 2];
  HEAP32[$3 + 8 >> 2] = HEAP32[$69 + 8 >> 2];
  HEAP32[$69 >> 2] = 0;
  HEAP32[$69 + 4 >> 2] = 0;
  HEAP32[$69 + 8 >> 2] = 0;
  $70 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($3, 7716) | 0;
  HEAP32[$0 >> 2] = HEAP32[$70 >> 2];
  HEAP32[$0 + 4 >> 2] = HEAP32[$70 + 4 >> 2];
  HEAP32[$0 + 8 >> 2] = HEAP32[$70 + 8 >> 2];
  HEAP32[$70 >> 2] = 0;
  HEAP32[$70 + 4 >> 2] = 0;
  HEAP32[$70 + 8 >> 2] = 0;
  if ((HEAP8[$3 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$3 >> 2] | 0);
  if ((HEAP8[$60 >> 0] | 0) < 0) __ZdlPv(HEAP32[$5 >> 2] | 0);
  if ((HEAP8[$4 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$4 >> 2] | 0);
  STACKTOP = sp;
  return;
 }
 $14 = HEAP32[$8 + ($2 << 2) >> 2] | 0;
 $16 = HEAP32[$14 + 52 >> 2] | 0;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 $17 = _strlen($16) | 0;
 if ($17 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($5);
 if ($17 >>> 0 < 11) {
  HEAP8[$5 + 11 >> 0] = $17;
  if (!$17) $$017$i$i = $5; else {
   $$016$i$i = $5;
   label = 7;
  }
 } else {
  $21 = $17 + 16 & -16;
  $22 = __Znwj($21) | 0;
  HEAP32[$5 >> 2] = $22;
  HEAP32[$5 + 8 >> 2] = $21 | -2147483648;
  HEAP32[$5 + 4 >> 2] = $17;
  $$016$i$i = $22;
  label = 7;
 }
 if ((label | 0) == 7) {
  _memcpy($$016$i$i | 0, $16 | 0, $17 | 0) | 0;
  $$017$i$i = $$016$i$i;
 }
 HEAP8[$$017$i$i + $17 >> 0] = 0;
 $30 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($5, 7626) | 0;
 HEAP32[$4 >> 2] = HEAP32[$30 >> 2];
 HEAP32[$4 + 4 >> 2] = HEAP32[$30 + 4 >> 2];
 HEAP32[$4 + 8 >> 2] = HEAP32[$30 + 8 >> 2];
 HEAP32[$30 >> 2] = 0;
 HEAP32[$30 + 4 >> 2] = 0;
 HEAP32[$30 + 8 >> 2] = 0;
 __ZNSt3__29to_stringEj($6, HEAP32[$14 >> 2] | 0);
 $32 = $6 + 11 | 0;
 $33 = HEAP8[$32 >> 0] | 0;
 $34 = $33 << 24 >> 24 < 0;
 $41 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($4, $34 ? HEAP32[$6 >> 2] | 0 : $6, $34 ? HEAP32[$6 + 4 >> 2] | 0 : $33 & 255) | 0;
 HEAP32[$3 >> 2] = HEAP32[$41 >> 2];
 HEAP32[$3 + 4 >> 2] = HEAP32[$41 + 4 >> 2];
 HEAP32[$3 + 8 >> 2] = HEAP32[$41 + 8 >> 2];
 HEAP32[$41 >> 2] = 0;
 HEAP32[$41 + 4 >> 2] = 0;
 HEAP32[$41 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($3, 41);
 HEAP32[$0 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 if ((HEAP8[$32 >> 0] | 0) < 0) __ZdlPv(HEAP32[$6 >> 2] | 0);
 if ((HEAP8[$4 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$4 >> 2] | 0);
 if ((HEAP8[$5 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$5 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function __ZN2ut9Scheduler8scheduleERKNSt3__210shared_ptrINS_6SystemEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$033$037 = 0, $10 = 0, $12 = 0, $15 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $29 = 0, $3 = 0, $35 = 0, $38 = 0, $40 = 0, $42 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $51 = 0, $52 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $65 = 0, $67 = 0, $7 = 0, $71 = 0, $72 = 0, $73 = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $2 = sp + 32 | 0;
 $3 = sp + 28 | 0;
 $6 = __ZN2ut9Scheduler16getOrAddInternalERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, (HEAP32[$1 >> 2] | 0) + 12 | 0) | 0;
 $7 = $6 + 16 | 0;
 if (HEAP32[$7 >> 2] | 0) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 18588, 17842, 51);
 }
 $10 = HEAP32[$1 >> 2] | 0;
 $12 = HEAP32[$1 + 4 >> 2] | 0;
 if ($12 | 0) {
  $15 = $12 + 4 | 0;
  HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + 1;
 }
 HEAP32[$7 >> 2] = $10;
 $18 = $6 + 20 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 HEAP32[$18 >> 2] = $12;
 if ($19 | 0) {
  $21 = $19 + 4 | 0;
  $22 = HEAP32[$21 >> 2] | 0;
  HEAP32[$21 >> 2] = $22 + -1;
  if (!$22) {
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$19 >> 2] | 0) + 8 >> 2] & 63]($19);
   __ZNSt3__219__shared_weak_count14__release_weakEv($19);
  }
 }
 HEAP8[$6 + 36 >> 0] = 1;
 $29 = HEAP32[$1 >> 2] | 0;
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[$29 >> 2] | 0) + 8 >> 2] & 31]($29, $0, HEAP32[$0 >> 2] | 0);
 $35 = (HEAP32[$1 >> 2] | 0) + 36 | 0;
 if (HEAP8[$35 >> 0] | 0) {
  _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 18601, 18613, 46);
 }
 HEAP8[$35 >> 0] = 1;
 $38 = HEAP32[$1 >> 2] | 0;
 $40 = HEAP32[$38 + 24 >> 2] | 0;
 $42 = HEAP32[$38 + 28 >> 2] | 0;
 if (($40 | 0) == ($42 | 0)) {
  $45 = $0 + 72 | 0;
  HEAP8[$45 >> 0] = 1;
  $46 = HEAP32[$6 >> 2] | 0;
  STACKTOP = sp;
  return $46 | 0;
 }
 $44 = $0 + 40 | 0;
 $$sroa$033$037 = $40;
 while (1) {
  $47 = $$sroa$033$037 + 4 | 0;
  if (!(HEAP8[$$sroa$033$037 >> 0] | 0)) {
   $65 = HEAP32[$6 >> 2] | 0;
   $67 = HEAP32[(__ZN2ut9Scheduler16getOrAddInternalERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $47) | 0) >> 2] | 0;
   HEAP32[$2 >> 2] = $65;
   HEAP32[$3 >> 2] = $67;
   if (!(($65 | 0) != 0 & ($67 | 0) != 0)) {
    label = 21;
    break;
   }
   $71 = __ZNSt3__213unordered_mapIiN2ut9Scheduler15ScheduledSystemENS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS3_EEEEEixERSA_($44, $2) | 0;
   $72 = $71 + 28 | 0;
   $73 = HEAP32[$72 >> 2] | 0;
   if (($73 | 0) == (HEAP32[$71 + 32 >> 2] | 0)) __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIRKiEEvOT_($71 + 24 | 0, $3); else {
    HEAP32[$73 >> 2] = $67;
    HEAP32[$72 >> 2] = (HEAP32[$72 >> 2] | 0) + 4;
   }
  } else {
   $51 = HEAP32[(__ZN2ut9Scheduler16getOrAddInternalERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $47) | 0) >> 2] | 0;
   $52 = HEAP32[$6 >> 2] | 0;
   HEAP32[$2 >> 2] = $51;
   HEAP32[$3 >> 2] = $52;
   if (!(($51 | 0) != 0 & ($52 | 0) != 0)) {
    label = 15;
    break;
   }
   $56 = __ZNSt3__213unordered_mapIiN2ut9Scheduler15ScheduledSystemENS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS3_EEEEEixERSA_($44, $2) | 0;
   $57 = $56 + 28 | 0;
   $58 = HEAP32[$57 >> 2] | 0;
   if (($58 | 0) == (HEAP32[$56 + 32 >> 2] | 0)) __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIRKiEEvOT_($56 + 24 | 0, $3); else {
    HEAP32[$58 >> 2] = $52;
    HEAP32[$57 >> 2] = (HEAP32[$57 >> 2] | 0) + 4;
   }
  }
  $$sroa$033$037 = $$sroa$033$037 + 16 | 0;
  if (($$sroa$033$037 | 0) == ($42 | 0)) {
   label = 12;
   break;
  }
 }
 if ((label | 0) == 12) {
  $45 = $0 + 72 | 0;
  HEAP8[$45 >> 0] = 1;
  $46 = HEAP32[$6 >> 2] | 0;
  STACKTOP = sp;
  return $46 | 0;
 } else if ((label | 0) == 15) {
  _snprintf(25060, 1024, 27124, $vararg_buffer3) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 18639, 17842, 78);
 } else if ((label | 0) == 21) {
  _snprintf(25060, 1024, 27124, $vararg_buffer5) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 18639, 17842, 78);
 }
 return 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIjN2ut4arch13EntityManager11FreshEntity13ComponentEditEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS7_NS_8equal_toIjEELb1EEENS_9allocatorIS7_EEE8__rehashEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$lcssa = 0, $$0$lcssa$us = 0, $$05468 = 0, $$05468$us = 0, $$05566 = 0, $$05569 = 0, $$05569$us = 0, $$05667 = 0, $$05667$us = 0, $$05871 = 0, $$062 = 0, $$062$phi = 0, $$062$us = 0, $$062$us$phi = 0, $$1 = 0, $$1$us = 0, $$157 = 0, $$157$us = 0, $10 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $25 = 0, $29 = 0, $32 = 0, $35 = 0, $37 = 0, $38 = 0, $43 = 0, $55 = 0, $59 = 0, $6 = 0, $61 = 0, $64 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $83 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 if (!$1) {
  $83 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = 0;
  if ($83 | 0) __ZdlPv($83);
  HEAP32[$2 >> 2] = 0;
  return;
 }
 if ($1 >>> 0 > 1073741823) _abort();
 $6 = __Znwj($1 << 2) | 0;
 $7 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $6;
 if ($7 | 0) __ZdlPv($7);
 HEAP32[$2 >> 2] = $1;
 $$05871 = 0;
 do {
  HEAP32[(HEAP32[$0 >> 2] | 0) + ($$05871 << 2) >> 2] = 0;
  $$05871 = $$05871 + 1 | 0;
 } while (($$05871 | 0) != ($1 | 0));
 $9 = $0 + 8 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if (!$10) return;
 $16 = HEAP32[$10 + 4 >> 2] | 0;
 $17 = $1 + -1 | 0;
 $19 = ($17 & $1 | 0) == 0;
 if ($19) $25 = $16 & $17; else if ($16 >>> 0 < $1 >>> 0) $25 = $16; else $25 = ($16 >>> 0) % ($1 >>> 0) | 0;
 HEAP32[(HEAP32[$0 >> 2] | 0) + ($25 << 2) >> 2] = $9;
 $$05566 = HEAP32[$10 >> 2] | 0;
 if (!$$05566) return;
 if ($19) {
  $$05468$us = $25;
  $$05569$us = $$05566;
  $$05667$us = $10;
  while (1) {
   $29 = HEAP32[$$05569$us + 4 >> 2] & $17;
   do if (($29 | 0) == ($$05468$us | 0)) {
    $$1$us = $$05468$us;
    $$157$us = $$05569$us;
   } else {
    $32 = (HEAP32[$0 >> 2] | 0) + ($29 << 2) | 0;
    if (!(HEAP32[$32 >> 2] | 0)) {
     HEAP32[$32 >> 2] = $$05667$us;
     $$1$us = $29;
     $$157$us = $$05569$us;
     break;
    }
    $35 = HEAP32[$$05569$us >> 2] | 0;
    L37 : do if (!$35) $$0$lcssa$us = $$05569$us; else {
     $43 = HEAP32[$$05569$us + 8 >> 2] | 0;
     $$062$us = $$05569$us;
     $38 = $35;
     while (1) {
      if (($43 | 0) != (HEAP32[$38 + 8 >> 2] | 0)) {
       $$0$lcssa$us = $$062$us;
       break L37;
      }
      $37 = HEAP32[$38 >> 2] | 0;
      if (!$37) {
       $$0$lcssa$us = $38;
       break;
      } else {
       $$062$us$phi = $38;
       $38 = $37;
       $$062$us = $$062$us$phi;
      }
     }
    } while (0);
    HEAP32[$$05667$us >> 2] = HEAP32[$$0$lcssa$us >> 2];
    HEAP32[$$0$lcssa$us >> 2] = HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($29 << 2) >> 2] >> 2];
    HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($29 << 2) >> 2] >> 2] = $$05569$us;
    $$1$us = $$05468$us;
    $$157$us = $$05667$us;
   } while (0);
   $$05569$us = HEAP32[$$157$us >> 2] | 0;
   if (!$$05569$us) break; else {
    $$05468$us = $$1$us;
    $$05667$us = $$157$us;
   }
  }
  return;
 }
 $$05468 = $25;
 $$05569 = $$05566;
 $$05667 = $10;
 while (1) {
  $55 = HEAP32[$$05569 + 4 >> 2] | 0;
  if ($55 >>> 0 < $1 >>> 0) $59 = $55; else $59 = ($55 >>> 0) % ($1 >>> 0) | 0;
  do if (($59 | 0) == ($$05468 | 0)) {
   $$1 = $$05468;
   $$157 = $$05569;
  } else {
   $61 = (HEAP32[$0 >> 2] | 0) + ($59 << 2) | 0;
   if (!(HEAP32[$61 >> 2] | 0)) {
    HEAP32[$61 >> 2] = $$05667;
    $$1 = $59;
    $$157 = $$05569;
    break;
   }
   $64 = HEAP32[$$05569 >> 2] | 0;
   L56 : do if (!$64) $$0$lcssa = $$05569; else {
    $67 = HEAP32[$$05569 + 8 >> 2] | 0;
    $$062 = $$05569;
    $69 = $64;
    while (1) {
     if (($67 | 0) != (HEAP32[$69 + 8 >> 2] | 0)) {
      $$0$lcssa = $$062;
      break L56;
     }
     $68 = HEAP32[$69 >> 2] | 0;
     if (!$68) {
      $$0$lcssa = $69;
      break;
     } else {
      $$062$phi = $69;
      $69 = $68;
      $$062 = $$062$phi;
     }
    }
   } while (0);
   HEAP32[$$05667 >> 2] = HEAP32[$$0$lcssa >> 2];
   HEAP32[$$0$lcssa >> 2] = HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($59 << 2) >> 2] >> 2];
   HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($59 << 2) >> 2] >> 2] = $$05569;
   $$1 = $$05468;
   $$157 = $$05667;
  } while (0);
  $$05569 = HEAP32[$$157 >> 2] | 0;
  if (!$$05569) break; else {
   $$05468 = $$1;
   $$05667 = $$157;
  }
 }
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiN2ut4arch13EntityManager11FreshEntityEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS_9allocatorIS6_EEE8__rehashEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$lcssa = 0, $$0$lcssa$us = 0, $$05468 = 0, $$05468$us = 0, $$05566 = 0, $$05569 = 0, $$05569$us = 0, $$05667 = 0, $$05667$us = 0, $$05871 = 0, $$062 = 0, $$062$phi = 0, $$062$us = 0, $$062$us$phi = 0, $$1 = 0, $$1$us = 0, $$157 = 0, $$157$us = 0, $10 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $25 = 0, $29 = 0, $32 = 0, $35 = 0, $37 = 0, $38 = 0, $43 = 0, $55 = 0, $59 = 0, $6 = 0, $61 = 0, $64 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $83 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 if (!$1) {
  $83 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = 0;
  if ($83 | 0) __ZdlPv($83);
  HEAP32[$2 >> 2] = 0;
  return;
 }
 if ($1 >>> 0 > 1073741823) _abort();
 $6 = __Znwj($1 << 2) | 0;
 $7 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $6;
 if ($7 | 0) __ZdlPv($7);
 HEAP32[$2 >> 2] = $1;
 $$05871 = 0;
 do {
  HEAP32[(HEAP32[$0 >> 2] | 0) + ($$05871 << 2) >> 2] = 0;
  $$05871 = $$05871 + 1 | 0;
 } while (($$05871 | 0) != ($1 | 0));
 $9 = $0 + 8 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if (!$10) return;
 $16 = HEAP32[$10 + 4 >> 2] | 0;
 $17 = $1 + -1 | 0;
 $19 = ($17 & $1 | 0) == 0;
 if ($19) $25 = $16 & $17; else if ($16 >>> 0 < $1 >>> 0) $25 = $16; else $25 = ($16 >>> 0) % ($1 >>> 0) | 0;
 HEAP32[(HEAP32[$0 >> 2] | 0) + ($25 << 2) >> 2] = $9;
 $$05566 = HEAP32[$10 >> 2] | 0;
 if (!$$05566) return;
 if ($19) {
  $$05468$us = $25;
  $$05569$us = $$05566;
  $$05667$us = $10;
  while (1) {
   $29 = HEAP32[$$05569$us + 4 >> 2] & $17;
   do if (($29 | 0) == ($$05468$us | 0)) {
    $$1$us = $$05468$us;
    $$157$us = $$05569$us;
   } else {
    $32 = (HEAP32[$0 >> 2] | 0) + ($29 << 2) | 0;
    if (!(HEAP32[$32 >> 2] | 0)) {
     HEAP32[$32 >> 2] = $$05667$us;
     $$1$us = $29;
     $$157$us = $$05569$us;
     break;
    }
    $35 = HEAP32[$$05569$us >> 2] | 0;
    L37 : do if (!$35) $$0$lcssa$us = $$05569$us; else {
     $43 = HEAP32[$$05569$us + 8 >> 2] | 0;
     $$062$us = $$05569$us;
     $38 = $35;
     while (1) {
      if (($43 | 0) != (HEAP32[$38 + 8 >> 2] | 0)) {
       $$0$lcssa$us = $$062$us;
       break L37;
      }
      $37 = HEAP32[$38 >> 2] | 0;
      if (!$37) {
       $$0$lcssa$us = $38;
       break;
      } else {
       $$062$us$phi = $38;
       $38 = $37;
       $$062$us = $$062$us$phi;
      }
     }
    } while (0);
    HEAP32[$$05667$us >> 2] = HEAP32[$$0$lcssa$us >> 2];
    HEAP32[$$0$lcssa$us >> 2] = HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($29 << 2) >> 2] >> 2];
    HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($29 << 2) >> 2] >> 2] = $$05569$us;
    $$1$us = $$05468$us;
    $$157$us = $$05667$us;
   } while (0);
   $$05569$us = HEAP32[$$157$us >> 2] | 0;
   if (!$$05569$us) break; else {
    $$05468$us = $$1$us;
    $$05667$us = $$157$us;
   }
  }
  return;
 }
 $$05468 = $25;
 $$05569 = $$05566;
 $$05667 = $10;
 while (1) {
  $55 = HEAP32[$$05569 + 4 >> 2] | 0;
  if ($55 >>> 0 < $1 >>> 0) $59 = $55; else $59 = ($55 >>> 0) % ($1 >>> 0) | 0;
  do if (($59 | 0) == ($$05468 | 0)) {
   $$1 = $$05468;
   $$157 = $$05569;
  } else {
   $61 = (HEAP32[$0 >> 2] | 0) + ($59 << 2) | 0;
   if (!(HEAP32[$61 >> 2] | 0)) {
    HEAP32[$61 >> 2] = $$05667;
    $$1 = $59;
    $$157 = $$05569;
    break;
   }
   $64 = HEAP32[$$05569 >> 2] | 0;
   L56 : do if (!$64) $$0$lcssa = $$05569; else {
    $67 = HEAP32[$$05569 + 8 >> 2] | 0;
    $$062 = $$05569;
    $69 = $64;
    while (1) {
     if (($67 | 0) != (HEAP32[$69 + 8 >> 2] | 0)) {
      $$0$lcssa = $$062;
      break L56;
     }
     $68 = HEAP32[$69 >> 2] | 0;
     if (!$68) {
      $$0$lcssa = $69;
      break;
     } else {
      $$062$phi = $69;
      $69 = $68;
      $$062 = $$062$phi;
     }
    }
   } while (0);
   HEAP32[$$05667 >> 2] = HEAP32[$$0$lcssa >> 2];
   HEAP32[$$0$lcssa >> 2] = HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($59 << 2) >> 2] >> 2];
   HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($59 << 2) >> 2] >> 2] = $$05569;
   $$1 = $$05468;
   $$157 = $$05667;
  } while (0);
  $$05569 = HEAP32[$$157 >> 2] | 0;
  if (!$$05569) break; else {
   $$05468 = $$1;
   $$05667 = $$157;
  }
 }
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiN2ut9Scheduler15ScheduledSystemEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS5_NS_8equal_toIiEELb1EEENS_9allocatorIS5_EEE8__rehashEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$lcssa = 0, $$0$lcssa$us = 0, $$05468 = 0, $$05468$us = 0, $$05566 = 0, $$05569 = 0, $$05569$us = 0, $$05667 = 0, $$05667$us = 0, $$05871 = 0, $$062 = 0, $$062$phi = 0, $$062$us = 0, $$062$us$phi = 0, $$1 = 0, $$1$us = 0, $$157 = 0, $$157$us = 0, $10 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $25 = 0, $29 = 0, $32 = 0, $35 = 0, $37 = 0, $38 = 0, $43 = 0, $55 = 0, $59 = 0, $6 = 0, $61 = 0, $64 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $83 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 if (!$1) {
  $83 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = 0;
  if ($83 | 0) __ZdlPv($83);
  HEAP32[$2 >> 2] = 0;
  return;
 }
 if ($1 >>> 0 > 1073741823) _abort();
 $6 = __Znwj($1 << 2) | 0;
 $7 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $6;
 if ($7 | 0) __ZdlPv($7);
 HEAP32[$2 >> 2] = $1;
 $$05871 = 0;
 do {
  HEAP32[(HEAP32[$0 >> 2] | 0) + ($$05871 << 2) >> 2] = 0;
  $$05871 = $$05871 + 1 | 0;
 } while (($$05871 | 0) != ($1 | 0));
 $9 = $0 + 8 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if (!$10) return;
 $16 = HEAP32[$10 + 4 >> 2] | 0;
 $17 = $1 + -1 | 0;
 $19 = ($17 & $1 | 0) == 0;
 if ($19) $25 = $16 & $17; else if ($16 >>> 0 < $1 >>> 0) $25 = $16; else $25 = ($16 >>> 0) % ($1 >>> 0) | 0;
 HEAP32[(HEAP32[$0 >> 2] | 0) + ($25 << 2) >> 2] = $9;
 $$05566 = HEAP32[$10 >> 2] | 0;
 if (!$$05566) return;
 if ($19) {
  $$05468$us = $25;
  $$05569$us = $$05566;
  $$05667$us = $10;
  while (1) {
   $29 = HEAP32[$$05569$us + 4 >> 2] & $17;
   do if (($29 | 0) == ($$05468$us | 0)) {
    $$1$us = $$05468$us;
    $$157$us = $$05569$us;
   } else {
    $32 = (HEAP32[$0 >> 2] | 0) + ($29 << 2) | 0;
    if (!(HEAP32[$32 >> 2] | 0)) {
     HEAP32[$32 >> 2] = $$05667$us;
     $$1$us = $29;
     $$157$us = $$05569$us;
     break;
    }
    $35 = HEAP32[$$05569$us >> 2] | 0;
    L37 : do if (!$35) $$0$lcssa$us = $$05569$us; else {
     $43 = HEAP32[$$05569$us + 8 >> 2] | 0;
     $$062$us = $$05569$us;
     $38 = $35;
     while (1) {
      if (($43 | 0) != (HEAP32[$38 + 8 >> 2] | 0)) {
       $$0$lcssa$us = $$062$us;
       break L37;
      }
      $37 = HEAP32[$38 >> 2] | 0;
      if (!$37) {
       $$0$lcssa$us = $38;
       break;
      } else {
       $$062$us$phi = $38;
       $38 = $37;
       $$062$us = $$062$us$phi;
      }
     }
    } while (0);
    HEAP32[$$05667$us >> 2] = HEAP32[$$0$lcssa$us >> 2];
    HEAP32[$$0$lcssa$us >> 2] = HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($29 << 2) >> 2] >> 2];
    HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($29 << 2) >> 2] >> 2] = $$05569$us;
    $$1$us = $$05468$us;
    $$157$us = $$05667$us;
   } while (0);
   $$05569$us = HEAP32[$$157$us >> 2] | 0;
   if (!$$05569$us) break; else {
    $$05468$us = $$1$us;
    $$05667$us = $$157$us;
   }
  }
  return;
 }
 $$05468 = $25;
 $$05569 = $$05566;
 $$05667 = $10;
 while (1) {
  $55 = HEAP32[$$05569 + 4 >> 2] | 0;
  if ($55 >>> 0 < $1 >>> 0) $59 = $55; else $59 = ($55 >>> 0) % ($1 >>> 0) | 0;
  do if (($59 | 0) == ($$05468 | 0)) {
   $$1 = $$05468;
   $$157 = $$05569;
  } else {
   $61 = (HEAP32[$0 >> 2] | 0) + ($59 << 2) | 0;
   if (!(HEAP32[$61 >> 2] | 0)) {
    HEAP32[$61 >> 2] = $$05667;
    $$1 = $59;
    $$157 = $$05569;
    break;
   }
   $64 = HEAP32[$$05569 >> 2] | 0;
   L56 : do if (!$64) $$0$lcssa = $$05569; else {
    $67 = HEAP32[$$05569 + 8 >> 2] | 0;
    $$062 = $$05569;
    $69 = $64;
    while (1) {
     if (($67 | 0) != (HEAP32[$69 + 8 >> 2] | 0)) {
      $$0$lcssa = $$062;
      break L56;
     }
     $68 = HEAP32[$69 >> 2] | 0;
     if (!$68) {
      $$0$lcssa = $69;
      break;
     } else {
      $$062$phi = $69;
      $69 = $68;
      $$062 = $$062$phi;
     }
    }
   } while (0);
   HEAP32[$$05667 >> 2] = HEAP32[$$0$lcssa >> 2];
   HEAP32[$$0$lcssa >> 2] = HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($59 << 2) >> 2] >> 2];
   HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($59 << 2) >> 2] >> 2] = $$05569;
   $$1 = $$05468;
   $$157 = $$05667;
  } while (0);
  $$05569 = HEAP32[$$157 >> 2] | 0;
  if (!$$05569) break; else {
   $$05468 = $$1;
   $$05667 = $$157;
  }
 }
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIPvNS_4pairIiS2_EEEENS_22__unordered_map_hasherIS2_S5_NS_4hashIS2_EELb1EEENS_21__unordered_map_equalIS2_S5_NS_8equal_toIS2_EELb1EEENS_9allocatorIS5_EEE8__rehashEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$lcssa = 0, $$0$lcssa$us = 0, $$05468 = 0, $$05468$us = 0, $$05566 = 0, $$05569 = 0, $$05569$us = 0, $$05667 = 0, $$05667$us = 0, $$05871 = 0, $$062 = 0, $$062$phi = 0, $$062$us = 0, $$062$us$phi = 0, $$1 = 0, $$1$us = 0, $$157 = 0, $$157$us = 0, $10 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $25 = 0, $29 = 0, $32 = 0, $35 = 0, $37 = 0, $38 = 0, $43 = 0, $55 = 0, $59 = 0, $6 = 0, $61 = 0, $64 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $83 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 if (!$1) {
  $83 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = 0;
  if ($83 | 0) __ZdlPv($83);
  HEAP32[$2 >> 2] = 0;
  return;
 }
 if ($1 >>> 0 > 1073741823) _abort();
 $6 = __Znwj($1 << 2) | 0;
 $7 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $6;
 if ($7 | 0) __ZdlPv($7);
 HEAP32[$2 >> 2] = $1;
 $$05871 = 0;
 do {
  HEAP32[(HEAP32[$0 >> 2] | 0) + ($$05871 << 2) >> 2] = 0;
  $$05871 = $$05871 + 1 | 0;
 } while (($$05871 | 0) != ($1 | 0));
 $9 = $0 + 8 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if (!$10) return;
 $16 = HEAP32[$10 + 4 >> 2] | 0;
 $17 = $1 + -1 | 0;
 $19 = ($17 & $1 | 0) == 0;
 if ($19) $25 = $16 & $17; else if ($16 >>> 0 < $1 >>> 0) $25 = $16; else $25 = ($16 >>> 0) % ($1 >>> 0) | 0;
 HEAP32[(HEAP32[$0 >> 2] | 0) + ($25 << 2) >> 2] = $9;
 $$05566 = HEAP32[$10 >> 2] | 0;
 if (!$$05566) return;
 if ($19) {
  $$05468$us = $25;
  $$05569$us = $$05566;
  $$05667$us = $10;
  while (1) {
   $29 = HEAP32[$$05569$us + 4 >> 2] & $17;
   do if (($29 | 0) == ($$05468$us | 0)) {
    $$1$us = $$05468$us;
    $$157$us = $$05569$us;
   } else {
    $32 = (HEAP32[$0 >> 2] | 0) + ($29 << 2) | 0;
    if (!(HEAP32[$32 >> 2] | 0)) {
     HEAP32[$32 >> 2] = $$05667$us;
     $$1$us = $29;
     $$157$us = $$05569$us;
     break;
    }
    $35 = HEAP32[$$05569$us >> 2] | 0;
    L37 : do if (!$35) $$0$lcssa$us = $$05569$us; else {
     $43 = HEAP32[$$05569$us + 8 >> 2] | 0;
     $$062$us = $$05569$us;
     $38 = $35;
     while (1) {
      if (($43 | 0) != (HEAP32[$38 + 8 >> 2] | 0)) {
       $$0$lcssa$us = $$062$us;
       break L37;
      }
      $37 = HEAP32[$38 >> 2] | 0;
      if (!$37) {
       $$0$lcssa$us = $38;
       break;
      } else {
       $$062$us$phi = $38;
       $38 = $37;
       $$062$us = $$062$us$phi;
      }
     }
    } while (0);
    HEAP32[$$05667$us >> 2] = HEAP32[$$0$lcssa$us >> 2];
    HEAP32[$$0$lcssa$us >> 2] = HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($29 << 2) >> 2] >> 2];
    HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($29 << 2) >> 2] >> 2] = $$05569$us;
    $$1$us = $$05468$us;
    $$157$us = $$05667$us;
   } while (0);
   $$05569$us = HEAP32[$$157$us >> 2] | 0;
   if (!$$05569$us) break; else {
    $$05468$us = $$1$us;
    $$05667$us = $$157$us;
   }
  }
  return;
 }
 $$05468 = $25;
 $$05569 = $$05566;
 $$05667 = $10;
 while (1) {
  $55 = HEAP32[$$05569 + 4 >> 2] | 0;
  if ($55 >>> 0 < $1 >>> 0) $59 = $55; else $59 = ($55 >>> 0) % ($1 >>> 0) | 0;
  do if (($59 | 0) == ($$05468 | 0)) {
   $$1 = $$05468;
   $$157 = $$05569;
  } else {
   $61 = (HEAP32[$0 >> 2] | 0) + ($59 << 2) | 0;
   if (!(HEAP32[$61 >> 2] | 0)) {
    HEAP32[$61 >> 2] = $$05667;
    $$1 = $59;
    $$157 = $$05569;
    break;
   }
   $64 = HEAP32[$$05569 >> 2] | 0;
   L56 : do if (!$64) $$0$lcssa = $$05569; else {
    $67 = HEAP32[$$05569 + 8 >> 2] | 0;
    $$062 = $$05569;
    $69 = $64;
    while (1) {
     if (($67 | 0) != (HEAP32[$69 + 8 >> 2] | 0)) {
      $$0$lcssa = $$062;
      break L56;
     }
     $68 = HEAP32[$69 >> 2] | 0;
     if (!$68) {
      $$0$lcssa = $69;
      break;
     } else {
      $$062$phi = $69;
      $69 = $68;
      $$062 = $$062$phi;
     }
    }
   } while (0);
   HEAP32[$$05667 >> 2] = HEAP32[$$0$lcssa >> 2];
   HEAP32[$$0$lcssa >> 2] = HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($59 << 2) >> 2] >> 2];
   HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($59 << 2) >> 2] >> 2] = $$05569;
   $$1 = $$05468;
   $$157 = $$05667;
  } while (0);
  $$05569 = HEAP32[$$157 >> 2] | 0;
  if (!$$05569) break; else {
   $$05468 = $$1;
   $$05667 = $$157;
  }
 }
 return;
}

function __ZN2ut4arch22ArchetypeChunkIterator14finalizeFilterEv($0) {
 $0 = $0 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$017$off034 = 0, $$032 = 0, $$pre39 = 0, $$sroa$024$033 = 0, $1 = 0, $10 = 0, $13 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $24 = 0, $29 = 0, $3 = 0, $31 = 0, $39 = 0, $4 = 0, $42 = 0, $44 = 0, $45 = 0, $49 = 0, $5 = 0, $50 = 0, $54 = 0, $56 = 0, $6 = 0, $60 = 0, $65 = 0, $66 = 0, $74 = 0, $75 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $83 = 0, $91 = 0, $94 = 0, $95 = 0, $96 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp + 8 | 0;
 $1 = sp;
 $2 = $0 + 30 | 0;
 HEAP8[$2 >> 0] = 0;
 $3 = $0 + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = $0 + 8 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $$pre39 = HEAP8[24240] | 0;
 if (($4 | 0) == ($6 | 0)) if (!($$pre39 << 24 >> 24)) {
  if (!(HEAP8[24248] | 0)) {
   $39 = __ZN2ut17ComponentRegistry10findByNameEPKc(18927) | 0;
   if (!$39) {
    $42 = __ZN2ut17InitComponentInfoEPKciiiijPvPFvS2_iES4_PFvPKvS2_iEPFvS2_S2_ES4_iiPKii(18927, 1, 1, 1, 0, 0, __Znwj(1) | 0, 0, 0, 0, 0, 7, 0, 0, 0, 0) | 0;
    HEAP32[$42 + 68 >> 2] = 0;
    $$0$i$i$i$i = $42;
   } else $$0$i$i$i$i = $39;
   $44 = HEAP32[$$0$i$i$i$i >> 2] | 0;
   HEAP32[6119] = $44;
   $45 = 24248;
   HEAP32[$45 >> 2] = 1;
   HEAP32[$45 + 4 >> 2] = 0;
   $49 = $44;
  } else $49 = HEAP32[6119] | 0;
  HEAP32[6118] = $49;
  $50 = 24240;
  HEAP32[$50 >> 2] = 1;
  HEAP32[$50 + 4 >> 2] = 0;
  $54 = $49;
  $96 = $1;
  label = 25;
 } else {
  $94 = $1;
  label = 18;
 } else {
  $$017$off034 = 0;
  $$sroa$024$033 = $4;
  $10 = $$pre39;
  while (1) {
   $8 = HEAP32[$$sroa$024$033 >> 2] | 0;
   if (!($10 << 24 >> 24)) {
    if (!(HEAP8[24248] | 0)) {
     $13 = __ZN2ut17ComponentRegistry10findByNameEPKc(18927) | 0;
     if (!$13) {
      $16 = __ZN2ut17InitComponentInfoEPKciiiijPvPFvS2_iES4_PFvPKvS2_iEPFvS2_S2_ES4_iiPKii(18927, 1, 1, 1, 0, 0, __Znwj(1) | 0, 0, 0, 0, 0, 7, 0, 0, 0, 0) | 0;
      HEAP32[$16 + 68 >> 2] = 0;
      $$0$i$i$i = $16;
     } else $$0$i$i$i = $13;
     $18 = HEAP32[$$0$i$i$i >> 2] | 0;
     HEAP32[6119] = $18;
     $19 = 24248;
     HEAP32[$19 >> 2] = 1;
     HEAP32[$19 + 4 >> 2] = 0;
     $23 = $18;
    } else $23 = HEAP32[6119] | 0;
    HEAP32[6118] = $23;
    $24 = 24240;
    HEAP32[$24 >> 2] = 1;
    HEAP32[$24 + 4 >> 2] = 0;
    $29 = $23;
    $31 = HEAP32[$$sroa$024$033 >> 2] | 0;
    $95 = 1;
   } else {
    $29 = HEAP32[6118] | 0;
    $31 = $8;
    $95 = $10;
   }
   $$017$off034 = $$017$off034 | ($8 | 0) == ($29 | 0);
   if (($31 | 0) == -1) if ((HEAP32[$$sroa$024$033 + 4 >> 2] | 0) >>> 0 < 2) HEAP8[$2 >> 0] = 1;
   $$sroa$024$033 = $$sroa$024$033 + 8 | 0;
   if (($$sroa$024$033 | 0) == ($6 | 0)) break; else $10 = $95;
  }
  if (!$$017$off034) {
   $94 = $1;
   label = 18;
  }
 }
 if ((label | 0) == 18) {
  $54 = HEAP32[6118] | 0;
  $96 = $94;
  label = 25;
 }
 if ((label | 0) == 25) {
  HEAP32[$1 >> 2] = $54;
  HEAP32[$1 + 4 >> 2] = 2;
  $56 = HEAP32[$5 >> 2] | 0;
  if ($56 >>> 0 < (HEAP32[$0 + 12 >> 2] | 0) >>> 0) {
   $60 = $1;
   $65 = HEAP32[$60 + 4 >> 2] | 0;
   $66 = $56;
   HEAP32[$66 >> 2] = HEAP32[$60 >> 2];
   HEAP32[$66 + 4 >> 2] = $65;
   HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 8;
  } else __ZNSt3__26vectorIN2ut4arch13ComponentSpecENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($3, $1);
 }
 __ZNSt3__26__sortIRNS_6__lessIN2ut4arch13ComponentSpecES4_EEPS4_EEvT0_S8_T_(HEAP32[$3 >> 2] | 0, HEAP32[$5 >> 2] | 0, $1);
 $74 = HEAP32[$5 >> 2] | 0;
 $75 = HEAP32[$3 >> 2] | 0;
 if ($74 - $75 >> 3 >>> 0 <= 1) {
  $79 = $0 + 28 | 0;
  HEAP8[$79 >> 0] = 1;
  STACKTOP = sp;
  return;
 }
 $$032 = 1;
 $80 = $75;
 $91 = $74;
 while (1) {
  $81 = $80;
  $83 = HEAP32[$81 + ($$032 << 3) >> 2] | 0;
  if (($83 | 0) != -1) if ($83 >>> 0 <= (HEAP32[$81 + ($$032 + -1 << 3) >> 2] | 0) >>> 0) {
   label = 34;
   break;
  }
  $$032 = $$032 + 1 | 0;
  if ($$032 >>> 0 >= $91 - $80 >> 3 >>> 0) {
   label = 31;
   break;
  }
 }
 if ((label | 0) == 31) {
  $79 = $0 + 28 | 0;
  HEAP8[$79 >> 0] = 1;
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 34) {
  _snprintf(25060, 1024, 14359, $vararg_buffer) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14407, 13749, 46);
 }
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIjiEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE8__rehashEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$lcssa = 0, $$0$lcssa$us = 0, $$05468 = 0, $$05468$us = 0, $$05566 = 0, $$05569 = 0, $$05569$us = 0, $$05667 = 0, $$05667$us = 0, $$05871 = 0, $$062 = 0, $$062$phi = 0, $$062$us = 0, $$062$us$phi = 0, $$1 = 0, $$1$us = 0, $$157 = 0, $$157$us = 0, $10 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $25 = 0, $29 = 0, $32 = 0, $35 = 0, $37 = 0, $38 = 0, $43 = 0, $55 = 0, $59 = 0, $6 = 0, $61 = 0, $64 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $83 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 if (!$1) {
  $83 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = 0;
  if ($83 | 0) __ZdlPv($83);
  HEAP32[$2 >> 2] = 0;
  return;
 }
 if ($1 >>> 0 > 1073741823) _abort();
 $6 = __Znwj($1 << 2) | 0;
 $7 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $6;
 if ($7 | 0) __ZdlPv($7);
 HEAP32[$2 >> 2] = $1;
 $$05871 = 0;
 do {
  HEAP32[(HEAP32[$0 >> 2] | 0) + ($$05871 << 2) >> 2] = 0;
  $$05871 = $$05871 + 1 | 0;
 } while (($$05871 | 0) != ($1 | 0));
 $9 = $0 + 8 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if (!$10) return;
 $16 = HEAP32[$10 + 4 >> 2] | 0;
 $17 = $1 + -1 | 0;
 $19 = ($17 & $1 | 0) == 0;
 if ($19) $25 = $16 & $17; else if ($16 >>> 0 < $1 >>> 0) $25 = $16; else $25 = ($16 >>> 0) % ($1 >>> 0) | 0;
 HEAP32[(HEAP32[$0 >> 2] | 0) + ($25 << 2) >> 2] = $9;
 $$05566 = HEAP32[$10 >> 2] | 0;
 if (!$$05566) return;
 if ($19) {
  $$05468$us = $25;
  $$05569$us = $$05566;
  $$05667$us = $10;
  while (1) {
   $29 = HEAP32[$$05569$us + 4 >> 2] & $17;
   do if (($29 | 0) == ($$05468$us | 0)) {
    $$1$us = $$05468$us;
    $$157$us = $$05569$us;
   } else {
    $32 = (HEAP32[$0 >> 2] | 0) + ($29 << 2) | 0;
    if (!(HEAP32[$32 >> 2] | 0)) {
     HEAP32[$32 >> 2] = $$05667$us;
     $$1$us = $29;
     $$157$us = $$05569$us;
     break;
    }
    $35 = HEAP32[$$05569$us >> 2] | 0;
    L37 : do if (!$35) $$0$lcssa$us = $$05569$us; else {
     $43 = HEAP32[$$05569$us + 8 >> 2] | 0;
     $$062$us = $$05569$us;
     $38 = $35;
     while (1) {
      if (($43 | 0) != (HEAP32[$38 + 8 >> 2] | 0)) {
       $$0$lcssa$us = $$062$us;
       break L37;
      }
      $37 = HEAP32[$38 >> 2] | 0;
      if (!$37) {
       $$0$lcssa$us = $38;
       break;
      } else {
       $$062$us$phi = $38;
       $38 = $37;
       $$062$us = $$062$us$phi;
      }
     }
    } while (0);
    HEAP32[$$05667$us >> 2] = HEAP32[$$0$lcssa$us >> 2];
    HEAP32[$$0$lcssa$us >> 2] = HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($29 << 2) >> 2] >> 2];
    HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($29 << 2) >> 2] >> 2] = $$05569$us;
    $$1$us = $$05468$us;
    $$157$us = $$05667$us;
   } while (0);
   $$05569$us = HEAP32[$$157$us >> 2] | 0;
   if (!$$05569$us) break; else {
    $$05468$us = $$1$us;
    $$05667$us = $$157$us;
   }
  }
  return;
 }
 $$05468 = $25;
 $$05569 = $$05566;
 $$05667 = $10;
 while (1) {
  $55 = HEAP32[$$05569 + 4 >> 2] | 0;
  if ($55 >>> 0 < $1 >>> 0) $59 = $55; else $59 = ($55 >>> 0) % ($1 >>> 0) | 0;
  do if (($59 | 0) == ($$05468 | 0)) {
   $$1 = $$05468;
   $$157 = $$05569;
  } else {
   $61 = (HEAP32[$0 >> 2] | 0) + ($59 << 2) | 0;
   if (!(HEAP32[$61 >> 2] | 0)) {
    HEAP32[$61 >> 2] = $$05667;
    $$1 = $59;
    $$157 = $$05569;
    break;
   }
   $64 = HEAP32[$$05569 >> 2] | 0;
   L56 : do if (!$64) $$0$lcssa = $$05569; else {
    $67 = HEAP32[$$05569 + 8 >> 2] | 0;
    $$062 = $$05569;
    $69 = $64;
    while (1) {
     if (($67 | 0) != (HEAP32[$69 + 8 >> 2] | 0)) {
      $$0$lcssa = $$062;
      break L56;
     }
     $68 = HEAP32[$69 >> 2] | 0;
     if (!$68) {
      $$0$lcssa = $69;
      break;
     } else {
      $$062$phi = $69;
      $69 = $68;
      $$062 = $$062$phi;
     }
    }
   } while (0);
   HEAP32[$$05667 >> 2] = HEAP32[$$0$lcssa >> 2];
   HEAP32[$$0$lcssa >> 2] = HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($59 << 2) >> 2] >> 2];
   HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($59 << 2) >> 2] >> 2] = $$05569;
   $$1 = $$05468;
   $$157 = $$05667;
  } while (0);
  $$05569 = HEAP32[$$157 >> 2] | 0;
  if (!$$05569) break; else {
   $$05468 = $$1;
   $$05667 = $$157;
  }
 }
 return;
}

function __ZNSt3__26vectorIN2ut9Scheduler15ScheduledSystemENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$lcssa$i$i = 0, $$06$i$i = 0, $$078$i$i = 0, $$09$i$i = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $26 = 0, $28 = 0, $31 = 0, $34 = 0, $35 = 0, $37 = 0, $38 = 0, $54 = 0, $6 = 0, $61 = 0, $65 = 0, $7 = 0, $70 = 0, $72 = 0, $73 = 0, $79 = 0, $89 = 0, $9 = 0, $91 = 0, $95 = 0, $spec$select = 0, $spec$select$i = 0;
 $6 = ($2 - $1 | 0) / 40 | 0;
 $7 = $0 + 8 | 0;
 $9 = HEAP32[$0 >> 2] | 0;
 $13 = $9;
 if ($6 >>> 0 > (((HEAP32[$7 >> 2] | 0) - $9 | 0) / 40 | 0) >>> 0) {
  __ZNSt3__26vectorIN2ut9Scheduler15ScheduledSystemENS_9allocatorIS3_EEE10deallocateEv($0);
  if ($6 >>> 0 > 107374182) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
  $89 = ((HEAP32[$7 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) | 0) / 40 | 0;
  $91 = $89 << 1;
  $spec$select$i = $89 >>> 0 < 53687091 ? ($91 >>> 0 < $6 >>> 0 ? $6 : $91) : 107374182;
  if ($spec$select$i >>> 0 > 107374182) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
  $95 = __Znwj($spec$select$i * 40 | 0) | 0;
  HEAP32[$0 + 4 >> 2] = $95;
  HEAP32[$0 >> 2] = $95;
  HEAP32[$7 >> 2] = $95 + ($spec$select$i * 40 | 0);
  __ZNSt3__26vectorIN2ut9Scheduler15ScheduledSystemENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_j($0, $1, $2, $6);
  return;
 }
 $14 = $0 + 4 | 0;
 $17 = ((HEAP32[$14 >> 2] | 0) - $9 | 0) / 40 | 0;
 $18 = $6 >>> 0 > $17 >>> 0;
 $spec$select = $18 ? $1 + ($17 * 40 | 0) | 0 : $2;
 if (($spec$select | 0) == ($1 | 0)) $$0$lcssa$i$i = $13; else {
  $$078$i$i = $1;
  $$09$i$i = $13;
  while (1) {
   HEAP32[$$09$i$i >> 2] = HEAP32[$$078$i$i >> 2];
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($$09$i$i + 4 | 0, $$078$i$i + 4 | 0) | 0;
   $26 = HEAP32[$$078$i$i + 16 >> 2] | 0;
   $28 = HEAP32[$$078$i$i + 20 >> 2] | 0;
   if ($28 | 0) {
    $31 = $28 + 4 | 0;
    HEAP32[$31 >> 2] = (HEAP32[$31 >> 2] | 0) + 1;
   }
   HEAP32[$$09$i$i + 16 >> 2] = $26;
   $34 = $$09$i$i + 20 | 0;
   $35 = HEAP32[$34 >> 2] | 0;
   HEAP32[$34 >> 2] = $28;
   if ($35 | 0) {
    $37 = $35 + 4 | 0;
    $38 = HEAP32[$37 >> 2] | 0;
    HEAP32[$37 >> 2] = $38 + -1;
    if (!$38) {
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$35 >> 2] | 0) + 8 >> 2] & 63]($35);
     __ZNSt3__219__shared_weak_count14__release_weakEv($35);
    }
   }
   if (($$09$i$i | 0) != ($$078$i$i | 0)) __ZNSt3__26vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($$09$i$i + 24 | 0, HEAP32[$$078$i$i + 24 >> 2] | 0, HEAP32[$$078$i$i + 28 >> 2] | 0);
   HEAP8[$$09$i$i + 36 >> 0] = HEAP8[$$078$i$i + 36 >> 0] | 0;
   $$078$i$i = $$078$i$i + 40 | 0;
   $54 = $$09$i$i + 40 | 0;
   if (($$078$i$i | 0) == ($spec$select | 0)) {
    $$0$lcssa$i$i = $54;
    break;
   } else $$09$i$i = $54;
  }
 }
 if ($18) {
  __ZNSt3__26vectorIN2ut9Scheduler15ScheduledSystemENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_j($0, $spec$select, $2, $6 - (((HEAP32[$14 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) | 0) / 40 | 0) | 0);
  return;
 }
 $61 = HEAP32[$14 >> 2] | 0;
 if (($61 | 0) != ($$0$lcssa$i$i | 0)) {
  $$06$i$i = $61;
  do {
   $65 = HEAP32[$$06$i$i + -16 >> 2] | 0;
   if ($65 | 0) {
    HEAP32[$$06$i$i + -12 >> 2] = $65;
    __ZdlPv($65);
   }
   $70 = HEAP32[$$06$i$i + -20 >> 2] | 0;
   if ($70 | 0) {
    $72 = $70 + 4 | 0;
    $73 = HEAP32[$72 >> 2] | 0;
    HEAP32[$72 >> 2] = $73 + -1;
    if (!$73) {
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$70 >> 2] | 0) + 8 >> 2] & 63]($70);
     __ZNSt3__219__shared_weak_count14__release_weakEv($70);
    }
   }
   $79 = $$06$i$i + -36 | 0;
   $$06$i$i = $$06$i$i + -40 | 0;
   if ((HEAP8[$79 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$79 >> 2] | 0);
  } while (($$06$i$i | 0) != ($$0$lcssa$i$i | 0));
 }
 HEAP32[$14 >> 2] = $$0$lcssa$i$i;
 return;
}

function __ZN2ut4arch19EntityCommandBuffer18fixupComponentDataEjPKvRNSt3__26vectorIhNS4_9allocatorIhEEEEPNS_6EntityE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$06065 = 0, $$06167 = 0, $12 = 0, $13 = 0, $16 = 0, $17 = 0, $18 = 0, $20 = 0, $23 = 0, $24 = 0, $26 = 0, $27 = 0, $36 = 0, $37 = 0, $38 = 0, $41 = 0, $44 = 0, $46 = 0, $48 = 0, $50 = 0, $55 = 0, $6 = 0, $60 = 0, $61 = 0, $66 = 0, $68 = 0, $69 = 0, $71 = 0, $74 = 0, $77 = 0, $78 = 0, $86 = 0, $91 = 0, $92 = 0, $98 = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer7 = sp + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $6 = HEAP32[6067] | 0;
 if ((HEAP32[6068] | 0) - $6 >> 2 >>> 0 <= $1 >>> 0) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
 $12 = HEAP32[$6 + ($1 << 2) >> 2] | 0;
 $13 = $12 + 60 | 0;
 if (!(HEAP32[$13 >> 2] | 0)) {
  $$0 = $2;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $16 = $12 + 16 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 $18 = $3 + 8 | 0;
 $20 = HEAP32[$3 >> 2] | 0;
 $23 = $20;
 if (((HEAP32[$18 >> 2] | 0) - $20 | 0) >>> 0 < $17 >>> 0) {
  $24 = $3 + 4 | 0;
  $26 = (HEAP32[$24 >> 2] | 0) - $20 | 0;
  $27 = __Znwj($17) | 0;
  if (($26 | 0) > 0) _memcpy($27 | 0, $23 | 0, $26 | 0) | 0;
  HEAP32[$3 >> 2] = $27;
  HEAP32[$24 >> 2] = $27 + $26;
  HEAP32[$18 >> 2] = $27 + $17;
  if (!$20) $36 = $27; else {
   __ZdlPv($23);
   $36 = HEAP32[$3 >> 2] | 0;
  }
 } else $36 = $23;
 _memcpy($36 | 0, $2 | 0, HEAP32[$16 >> 2] | 0) | 0;
 $37 = $36;
 $38 = $12 + 56 | 0;
 if ((HEAP32[$38 >> 2] | 0) <= 0) {
  $$0 = $36;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $41 = $0 + 20 | 0;
 $$06167 = 0;
 L17 : while (1) {
  $44 = HEAP32[(HEAP32[$13 >> 2] | 0) + ($$06167 << 2) >> 2] | 0;
  if (($44 | 0) > -1) {
   $46 = $44 + $37 | 0;
   $48 = HEAP32[$46 >> 2] | 0;
   if (($48 | 0) < 0) {
    $50 = 0 - $48 | 0;
    if ((HEAP32[$41 >> 2] | 0) < ($50 | 0)) {
     label = 14;
     break;
    }
    $55 = $4 + ($50 << 3) | 0;
    $60 = HEAP32[$55 + 4 >> 2] | 0;
    $61 = $46;
    HEAP32[$61 >> 2] = HEAP32[$55 >> 2];
    HEAP32[$61 + 4 >> 2] = $60;
   }
  } else {
   $66 = ~$44 + $37 | 0;
   $68 = $66 + 4 | 0;
   $69 = HEAP32[$68 >> 2] | 0;
   if ($69 | 0) {
    $71 = $66;
    $$06065 = 0;
    $77 = $69;
    while (1) {
     $74 = HEAP32[(HEAP32[$71 >> 2] | 0) + ($$06065 << 3) >> 2] | 0;
     if (($74 | 0) < 0) {
      if ($77 >>> 0 <= $$06065 >>> 0) {
       label = 20;
       break L17;
      }
      $78 = 0 - $74 | 0;
      if ((HEAP32[$41 >> 2] | 0) < ($78 | 0)) {
       label = 22;
       break L17;
      }
      if ((HEAP32[$68 >> 2] | 0) >>> 0 <= $$06065 >>> 0) {
       label = 24;
       break L17;
      }
      $86 = $4 + ($78 << 3) | 0;
      $91 = HEAP32[$86 + 4 >> 2] | 0;
      $92 = (HEAP32[$71 >> 2] | 0) + ($$06065 << 3) | 0;
      HEAP32[$92 >> 2] = HEAP32[$86 >> 2];
      HEAP32[$92 + 4 >> 2] = $91;
      $98 = HEAP32[$68 >> 2] | 0;
     } else $98 = $77;
     $$06065 = $$06065 + 1 | 0;
     if ($$06065 >>> 0 >= $98 >>> 0) break; else $77 = $98;
    }
   }
  }
  $$06167 = $$06167 + 1 | 0;
  if (($$06167 | 0) >= (HEAP32[$38 >> 2] | 0)) {
   $$0 = $36;
   label = 28;
   break;
  }
 }
 if ((label | 0) == 14) {
  _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 12100, 6212, 250);
 } else if ((label | 0) == 20) {
  _snprintf(25060, 1024, 27124, $vararg_buffer3) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 12124, 12134, 209);
 } else if ((label | 0) == 22) {
  _snprintf(25060, 1024, 27124, $vararg_buffer5) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 12100, 6212, 259);
 } else if ((label | 0) == 24) {
  _snprintf(25060, 1024, 27124, $vararg_buffer7) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 12124, 12134, 209);
 } else if ((label | 0) == 28) {
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__212__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$lcssa = 0, $$0$lcssa$us = 0, $$05468 = 0, $$05468$us = 0, $$05566 = 0, $$05569 = 0, $$05569$us = 0, $$05667 = 0, $$05667$us = 0, $$05871 = 0, $$062 = 0, $$062$phi = 0, $$062$us = 0, $$062$us$phi = 0, $$1 = 0, $$1$us = 0, $$157 = 0, $$157$us = 0, $10 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $25 = 0, $29 = 0, $32 = 0, $35 = 0, $37 = 0, $38 = 0, $43 = 0, $55 = 0, $59 = 0, $6 = 0, $61 = 0, $64 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $83 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 if (!$1) {
  $83 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = 0;
  if ($83 | 0) __ZdlPv($83);
  HEAP32[$2 >> 2] = 0;
  return;
 }
 if ($1 >>> 0 > 1073741823) _abort();
 $6 = __Znwj($1 << 2) | 0;
 $7 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $6;
 if ($7 | 0) __ZdlPv($7);
 HEAP32[$2 >> 2] = $1;
 $$05871 = 0;
 do {
  HEAP32[(HEAP32[$0 >> 2] | 0) + ($$05871 << 2) >> 2] = 0;
  $$05871 = $$05871 + 1 | 0;
 } while (($$05871 | 0) != ($1 | 0));
 $9 = $0 + 8 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if (!$10) return;
 $16 = HEAP32[$10 + 4 >> 2] | 0;
 $17 = $1 + -1 | 0;
 $19 = ($17 & $1 | 0) == 0;
 if ($19) $25 = $16 & $17; else if ($16 >>> 0 < $1 >>> 0) $25 = $16; else $25 = ($16 >>> 0) % ($1 >>> 0) | 0;
 HEAP32[(HEAP32[$0 >> 2] | 0) + ($25 << 2) >> 2] = $9;
 $$05566 = HEAP32[$10 >> 2] | 0;
 if (!$$05566) return;
 if ($19) {
  $$05468$us = $25;
  $$05569$us = $$05566;
  $$05667$us = $10;
  while (1) {
   $29 = HEAP32[$$05569$us + 4 >> 2] & $17;
   do if (($29 | 0) == ($$05468$us | 0)) {
    $$1$us = $$05468$us;
    $$157$us = $$05569$us;
   } else {
    $32 = (HEAP32[$0 >> 2] | 0) + ($29 << 2) | 0;
    if (!(HEAP32[$32 >> 2] | 0)) {
     HEAP32[$32 >> 2] = $$05667$us;
     $$1$us = $29;
     $$157$us = $$05569$us;
     break;
    }
    $35 = HEAP32[$$05569$us >> 2] | 0;
    L37 : do if (!$35) $$0$lcssa$us = $$05569$us; else {
     $43 = HEAP32[$$05569$us + 8 >> 2] | 0;
     $$062$us = $$05569$us;
     $38 = $35;
     while (1) {
      if (($43 | 0) != (HEAP32[$38 + 8 >> 2] | 0)) {
       $$0$lcssa$us = $$062$us;
       break L37;
      }
      $37 = HEAP32[$38 >> 2] | 0;
      if (!$37) {
       $$0$lcssa$us = $38;
       break;
      } else {
       $$062$us$phi = $38;
       $38 = $37;
       $$062$us = $$062$us$phi;
      }
     }
    } while (0);
    HEAP32[$$05667$us >> 2] = HEAP32[$$0$lcssa$us >> 2];
    HEAP32[$$0$lcssa$us >> 2] = HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($29 << 2) >> 2] >> 2];
    HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($29 << 2) >> 2] >> 2] = $$05569$us;
    $$1$us = $$05468$us;
    $$157$us = $$05667$us;
   } while (0);
   $$05569$us = HEAP32[$$157$us >> 2] | 0;
   if (!$$05569$us) break; else {
    $$05468$us = $$1$us;
    $$05667$us = $$157$us;
   }
  }
  return;
 }
 $$05468 = $25;
 $$05569 = $$05566;
 $$05667 = $10;
 while (1) {
  $55 = HEAP32[$$05569 + 4 >> 2] | 0;
  if ($55 >>> 0 < $1 >>> 0) $59 = $55; else $59 = ($55 >>> 0) % ($1 >>> 0) | 0;
  do if (($59 | 0) == ($$05468 | 0)) {
   $$1 = $$05468;
   $$157 = $$05569;
  } else {
   $61 = (HEAP32[$0 >> 2] | 0) + ($59 << 2) | 0;
   if (!(HEAP32[$61 >> 2] | 0)) {
    HEAP32[$61 >> 2] = $$05667;
    $$1 = $59;
    $$157 = $$05569;
    break;
   }
   $64 = HEAP32[$$05569 >> 2] | 0;
   L56 : do if (!$64) $$0$lcssa = $$05569; else {
    $67 = HEAP32[$$05569 + 8 >> 2] | 0;
    $$062 = $$05569;
    $69 = $64;
    while (1) {
     if (($67 | 0) != (HEAP32[$69 + 8 >> 2] | 0)) {
      $$0$lcssa = $$062;
      break L56;
     }
     $68 = HEAP32[$69 >> 2] | 0;
     if (!$68) {
      $$0$lcssa = $69;
      break;
     } else {
      $$062$phi = $69;
      $69 = $68;
      $$062 = $$062$phi;
     }
    }
   } while (0);
   HEAP32[$$05667 >> 2] = HEAP32[$$0$lcssa >> 2];
   HEAP32[$$0$lcssa >> 2] = HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($59 << 2) >> 2] >> 2];
   HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($59 << 2) >> 2] >> 2] = $$05569;
   $$1 = $$05468;
   $$157 = $$05667;
  } while (0);
  $$05569 = HEAP32[$$157 >> 2] | 0;
  if (!$$05569) break; else {
   $$05468 = $$1;
   $$05667 = $$157;
  }
 }
 return;
}
function __ZNSt3__212__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE8__rehashEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$lcssa = 0, $$0$lcssa$us = 0, $$05468 = 0, $$05468$us = 0, $$05566 = 0, $$05569 = 0, $$05569$us = 0, $$05667 = 0, $$05667$us = 0, $$05871 = 0, $$062 = 0, $$062$phi = 0, $$062$us = 0, $$062$us$phi = 0, $$1 = 0, $$1$us = 0, $$157 = 0, $$157$us = 0, $10 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $25 = 0, $29 = 0, $32 = 0, $35 = 0, $37 = 0, $38 = 0, $43 = 0, $55 = 0, $59 = 0, $6 = 0, $61 = 0, $64 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $83 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 if (!$1) {
  $83 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = 0;
  if ($83 | 0) __ZdlPv($83);
  HEAP32[$2 >> 2] = 0;
  return;
 }
 if ($1 >>> 0 > 1073741823) _abort();
 $6 = __Znwj($1 << 2) | 0;
 $7 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $6;
 if ($7 | 0) __ZdlPv($7);
 HEAP32[$2 >> 2] = $1;
 $$05871 = 0;
 do {
  HEAP32[(HEAP32[$0 >> 2] | 0) + ($$05871 << 2) >> 2] = 0;
  $$05871 = $$05871 + 1 | 0;
 } while (($$05871 | 0) != ($1 | 0));
 $9 = $0 + 8 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if (!$10) return;
 $16 = HEAP32[$10 + 4 >> 2] | 0;
 $17 = $1 + -1 | 0;
 $19 = ($17 & $1 | 0) == 0;
 if ($19) $25 = $16 & $17; else if ($16 >>> 0 < $1 >>> 0) $25 = $16; else $25 = ($16 >>> 0) % ($1 >>> 0) | 0;
 HEAP32[(HEAP32[$0 >> 2] | 0) + ($25 << 2) >> 2] = $9;
 $$05566 = HEAP32[$10 >> 2] | 0;
 if (!$$05566) return;
 if ($19) {
  $$05468$us = $25;
  $$05569$us = $$05566;
  $$05667$us = $10;
  while (1) {
   $29 = HEAP32[$$05569$us + 4 >> 2] & $17;
   do if (($29 | 0) == ($$05468$us | 0)) {
    $$1$us = $$05468$us;
    $$157$us = $$05569$us;
   } else {
    $32 = (HEAP32[$0 >> 2] | 0) + ($29 << 2) | 0;
    if (!(HEAP32[$32 >> 2] | 0)) {
     HEAP32[$32 >> 2] = $$05667$us;
     $$1$us = $29;
     $$157$us = $$05569$us;
     break;
    }
    $35 = HEAP32[$$05569$us >> 2] | 0;
    L37 : do if (!$35) $$0$lcssa$us = $$05569$us; else {
     $43 = HEAP32[$$05569$us + 8 >> 2] | 0;
     $$062$us = $$05569$us;
     $38 = $35;
     while (1) {
      if (($43 | 0) != (HEAP32[$38 + 8 >> 2] | 0)) {
       $$0$lcssa$us = $$062$us;
       break L37;
      }
      $37 = HEAP32[$38 >> 2] | 0;
      if (!$37) {
       $$0$lcssa$us = $38;
       break;
      } else {
       $$062$us$phi = $38;
       $38 = $37;
       $$062$us = $$062$us$phi;
      }
     }
    } while (0);
    HEAP32[$$05667$us >> 2] = HEAP32[$$0$lcssa$us >> 2];
    HEAP32[$$0$lcssa$us >> 2] = HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($29 << 2) >> 2] >> 2];
    HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($29 << 2) >> 2] >> 2] = $$05569$us;
    $$1$us = $$05468$us;
    $$157$us = $$05667$us;
   } while (0);
   $$05569$us = HEAP32[$$157$us >> 2] | 0;
   if (!$$05569$us) break; else {
    $$05468$us = $$1$us;
    $$05667$us = $$157$us;
   }
  }
  return;
 }
 $$05468 = $25;
 $$05569 = $$05566;
 $$05667 = $10;
 while (1) {
  $55 = HEAP32[$$05569 + 4 >> 2] | 0;
  if ($55 >>> 0 < $1 >>> 0) $59 = $55; else $59 = ($55 >>> 0) % ($1 >>> 0) | 0;
  do if (($59 | 0) == ($$05468 | 0)) {
   $$1 = $$05468;
   $$157 = $$05569;
  } else {
   $61 = (HEAP32[$0 >> 2] | 0) + ($59 << 2) | 0;
   if (!(HEAP32[$61 >> 2] | 0)) {
    HEAP32[$61 >> 2] = $$05667;
    $$1 = $59;
    $$157 = $$05569;
    break;
   }
   $64 = HEAP32[$$05569 >> 2] | 0;
   L56 : do if (!$64) $$0$lcssa = $$05569; else {
    $67 = HEAP32[$$05569 + 8 >> 2] | 0;
    $$062 = $$05569;
    $69 = $64;
    while (1) {
     if (($67 | 0) != (HEAP32[$69 + 8 >> 2] | 0)) {
      $$0$lcssa = $$062;
      break L56;
     }
     $68 = HEAP32[$69 >> 2] | 0;
     if (!$68) {
      $$0$lcssa = $69;
      break;
     } else {
      $$062$phi = $69;
      $69 = $68;
      $$062 = $$062$phi;
     }
    }
   } while (0);
   HEAP32[$$05667 >> 2] = HEAP32[$$0$lcssa >> 2];
   HEAP32[$$0$lcssa >> 2] = HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($59 << 2) >> 2] >> 2];
   HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($59 << 2) >> 2] >> 2] = $$05569;
   $$1 = $$05468;
   $$157 = $$05667;
  } while (0);
  $$05569 = HEAP32[$$157 >> 2] | 0;
  if (!$$05569) break; else {
   $$05468 = $$1;
   $$05667 = $$157;
  }
 }
 return;
}

function __ZNSt3__213unordered_mapIiN2ut4arch13EntityManager11FreshEntityENS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS4_EEEEEixERSB_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $$04777$i = 0, $$04778$i = 0, $$04778$us$i = 0, $$049$i = 0, $$1$i = 0, $$148$i = 0, $$sink = 0, $14 = 0, $15 = 0, $19 = 0, $2 = 0, $29 = 0, $3 = 0, $34 = 0, $38 = 0, $4 = 0, $41 = 0, $42 = 0, $44 = 0, $47 = 0.0, $5 = 0, $50 = 0.0, $6 = 0, $60 = 0, $63 = 0, $65 = 0, $66 = 0, $73 = 0, $74 = 0, $76 = 0, $78 = 0, $8 = 0, $81 = 0, $82 = 0, $90 = 0, $94 = 0, dest = 0, label = 0, stop = 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = ($4 | 0) == 0;
 L1 : do if ($5) $$0$i = 0; else {
  $6 = $4 + -1 | 0;
  $8 = ($6 & $4 | 0) == 0;
  if ($8) $14 = $6 & $2; else if ($2 >>> 0 < $4 >>> 0) $14 = $2; else $14 = ($2 >>> 0) % ($4 >>> 0) | 0;
  $15 = HEAP32[(HEAP32[$0 >> 2] | 0) + ($14 << 2) >> 2] | 0;
  if (!$15) $$0$i = $14; else {
   $$04777$i = HEAP32[$15 >> 2] | 0;
   if (!$$04777$i) $$0$i = $14; else {
    if ($8) {
     $$04778$us$i = $$04777$i;
     while (1) {
      $19 = HEAP32[$$04778$us$i + 4 >> 2] | 0;
      if (!(($19 | 0) == ($2 | 0) | ($19 & $6 | 0) == ($14 | 0))) {
       $$0$i = $14;
       break L1;
      }
      if ((HEAP32[$$04778$us$i + 8 >> 2] | 0) == ($2 | 0)) {
       $$148$i = $$04778$us$i;
       break;
      }
      $$04778$us$i = HEAP32[$$04778$us$i >> 2] | 0;
      if (!$$04778$us$i) {
       $$0$i = $14;
       break L1;
      }
     }
     $94 = $$148$i + 12 | 0;
     return $94 | 0;
    }
    $$04778$i = $$04777$i;
    while (1) {
     $29 = HEAP32[$$04778$i + 4 >> 2] | 0;
     if (($29 | 0) != ($2 | 0)) {
      if ($29 >>> 0 < $4 >>> 0) $34 = $29; else $34 = ($29 >>> 0) % ($4 >>> 0) | 0;
      if (($34 | 0) != ($14 | 0)) {
       $$0$i = $14;
       break L1;
      }
     }
     if ((HEAP32[$$04778$i + 8 >> 2] | 0) == ($2 | 0)) {
      $$148$i = $$04778$i;
      break;
     }
     $$04778$i = HEAP32[$$04778$i >> 2] | 0;
     if (!$$04778$i) {
      $$0$i = $14;
      break L1;
     }
    }
    $94 = $$148$i + 12 | 0;
    return $94 | 0;
   }
  }
 } while (0);
 $38 = __Znwj(64) | 0;
 HEAP32[$38 + 8 >> 2] = $2;
 $41 = $38 + 44 | 0;
 dest = $38 + 12 | 0;
 stop = dest + 52 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$41 >> 2] = 1065353216;
 $42 = $38 + 48 | 0;
 HEAP32[$42 >> 2] = 0;
 HEAP32[$42 + 4 >> 2] = 0;
 HEAP32[$42 + 8 >> 2] = 0;
 HEAP32[$38 + 4 >> 2] = $2;
 HEAP32[$38 >> 2] = 0;
 $44 = $0 + 12 | 0;
 $47 = +(((HEAP32[$44 >> 2] | 0) + 1 | 0) >>> 0);
 $50 = +HEAPF32[$0 + 16 >> 2];
 do if ($5 | $50 * +($4 >>> 0) < $47) {
  $60 = $4 << 1 | ($4 >>> 0 < 3 | ($4 + -1 & $4 | 0) != 0) & 1;
  $63 = ~~+Math_ceil(+($47 / $50)) >>> 0;
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIiN2ut4arch13EntityManager11FreshEntityEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS_9allocatorIS6_EEE6rehashEj($0, $60 >>> 0 < $63 >>> 0 ? $63 : $60);
  $65 = HEAP32[$3 >> 2] | 0;
  $66 = $65 + -1 | 0;
  if (!($66 & $65)) {
   $$049$i = $65;
   $$1$i = $66 & $2;
   break;
  }
  if ($2 >>> 0 < $65 >>> 0) {
   $$049$i = $65;
   $$1$i = $2;
  } else {
   $$049$i = $65;
   $$1$i = ($2 >>> 0) % ($65 >>> 0) | 0;
  }
 } else {
  $$049$i = $4;
  $$1$i = $$0$i;
 } while (0);
 $73 = (HEAP32[$0 >> 2] | 0) + ($$1$i << 2) | 0;
 $74 = HEAP32[$73 >> 2] | 0;
 if (!$74) {
  $76 = $0 + 8 | 0;
  HEAP32[$38 >> 2] = HEAP32[$76 >> 2];
  HEAP32[$76 >> 2] = $38;
  HEAP32[$73 >> 2] = $76;
  $78 = HEAP32[$38 >> 2] | 0;
  if ($78 | 0) {
   $81 = HEAP32[$78 + 4 >> 2] | 0;
   $82 = $$049$i + -1 | 0;
   if (!($82 & $$049$i)) $90 = $81 & $82; else if ($81 >>> 0 < $$049$i >>> 0) $90 = $81; else $90 = ($81 >>> 0) % ($$049$i >>> 0) | 0;
   $$sink = (HEAP32[$0 >> 2] | 0) + ($90 << 2) | 0;
   label = 33;
  }
 } else {
  HEAP32[$38 >> 2] = HEAP32[$74 >> 2];
  $$sink = $74;
  label = 33;
 }
 if ((label | 0) == 33) HEAP32[$$sink >> 2] = $38;
 HEAP32[$44 >> 2] = (HEAP32[$44 >> 2] | 0) + 1;
 $$148$i = $38;
 $94 = $$148$i + 12 | 0;
 return $94 | 0;
}

function __ZNSt3__213unordered_mapIPvNS_4pairIiS1_EENS_4hashIS1_EENS_8equal_toIS1_EENS_9allocatorINS2_IKS1_S3_EEEEEixEOS1_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $$04777$i = 0, $$04778$i = 0, $$04778$us$i = 0, $$049$i = 0, $$1$i = 0, $$148$i = 0, $$sink = 0, $10 = 0, $100 = 0, $104 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $25 = 0, $26 = 0, $3 = 0, $30 = 0, $40 = 0, $45 = 0, $49 = 0, $54 = 0, $57 = 0.0, $60 = 0.0, $7 = 0, $70 = 0, $73 = 0, $75 = 0, $76 = 0, $83 = 0, $84 = 0, $86 = 0, $88 = 0, $91 = 0, $92 = 0, label = 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = Math_imul($2, 1540483477) | 0;
 $7 = (Math_imul($3 >>> 24 ^ $3, 1540483477) | 0) ^ 1866966612;
 $10 = Math_imul($7 >>> 13 ^ $7, 1540483477) | 0;
 $12 = $10 >>> 15 ^ $10;
 $13 = $0 + 4 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 $15 = ($14 | 0) == 0;
 $16 = $2;
 L1 : do if ($15) $$0$i = 0; else {
  $17 = $14 + -1 | 0;
  $19 = ($17 & $14 | 0) == 0;
  if ($19) $25 = $12 & $17; else if ($12 >>> 0 < $14 >>> 0) $25 = $12; else $25 = ($12 >>> 0) % ($14 >>> 0) | 0;
  $26 = HEAP32[(HEAP32[$0 >> 2] | 0) + ($25 << 2) >> 2] | 0;
  if (!$26) $$0$i = $25; else {
   $$04777$i = HEAP32[$26 >> 2] | 0;
   if (!$$04777$i) $$0$i = $25; else {
    if ($19) {
     $$04778$us$i = $$04777$i;
     while (1) {
      $30 = HEAP32[$$04778$us$i + 4 >> 2] | 0;
      if (!(($30 | 0) == ($12 | 0) | ($30 & $17 | 0) == ($25 | 0))) {
       $$0$i = $25;
       break L1;
      }
      if ((HEAP32[$$04778$us$i + 8 >> 2] | 0) == ($16 | 0)) {
       $$148$i = $$04778$us$i;
       break;
      }
      $$04778$us$i = HEAP32[$$04778$us$i >> 2] | 0;
      if (!$$04778$us$i) {
       $$0$i = $25;
       break L1;
      }
     }
     $104 = $$148$i + 12 | 0;
     return $104 | 0;
    }
    $$04778$i = $$04777$i;
    while (1) {
     $40 = HEAP32[$$04778$i + 4 >> 2] | 0;
     if (($40 | 0) != ($12 | 0)) {
      if ($40 >>> 0 < $14 >>> 0) $45 = $40; else $45 = ($40 >>> 0) % ($14 >>> 0) | 0;
      if (($45 | 0) != ($25 | 0)) {
       $$0$i = $25;
       break L1;
      }
     }
     if ((HEAP32[$$04778$i + 8 >> 2] | 0) == ($16 | 0)) {
      $$148$i = $$04778$i;
      break;
     }
     $$04778$i = HEAP32[$$04778$i >> 2] | 0;
     if (!$$04778$i) {
      $$0$i = $25;
      break L1;
     }
    }
    $104 = $$148$i + 12 | 0;
    return $104 | 0;
   }
  }
 } while (0);
 $49 = __Znwj(20) | 0;
 HEAP32[$49 + 8 >> 2] = $2;
 HEAP32[$49 + 12 >> 2] = 0;
 HEAP32[$49 + 16 >> 2] = 0;
 HEAP32[$49 + 4 >> 2] = $12;
 HEAP32[$49 >> 2] = 0;
 $54 = $0 + 12 | 0;
 $57 = +(((HEAP32[$54 >> 2] | 0) + 1 | 0) >>> 0);
 $60 = +HEAPF32[$0 + 16 >> 2];
 do if ($15 | $60 * +($14 >>> 0) < $57) {
  $70 = $14 << 1 | ($14 >>> 0 < 3 | ($14 + -1 & $14 | 0) != 0) & 1;
  $73 = ~~+Math_ceil(+($57 / $60)) >>> 0;
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIPvNS_4pairIiS2_EEEENS_22__unordered_map_hasherIS2_S5_NS_4hashIS2_EELb1EEENS_21__unordered_map_equalIS2_S5_NS_8equal_toIS2_EELb1EEENS_9allocatorIS5_EEE6rehashEj($0, $70 >>> 0 < $73 >>> 0 ? $73 : $70);
  $75 = HEAP32[$13 >> 2] | 0;
  $76 = $75 + -1 | 0;
  if (!($76 & $75)) {
   $$049$i = $75;
   $$1$i = $76 & $12;
   break;
  }
  if ($12 >>> 0 < $75 >>> 0) {
   $$049$i = $75;
   $$1$i = $12;
  } else {
   $$049$i = $75;
   $$1$i = ($12 >>> 0) % ($75 >>> 0) | 0;
  }
 } else {
  $$049$i = $14;
  $$1$i = $$0$i;
 } while (0);
 $83 = (HEAP32[$0 >> 2] | 0) + ($$1$i << 2) | 0;
 $84 = HEAP32[$83 >> 2] | 0;
 if (!$84) {
  $86 = $0 + 8 | 0;
  HEAP32[$49 >> 2] = HEAP32[$86 >> 2];
  HEAP32[$86 >> 2] = $49;
  HEAP32[$83 >> 2] = $86;
  $88 = HEAP32[$49 >> 2] | 0;
  if ($88 | 0) {
   $91 = HEAP32[$88 + 4 >> 2] | 0;
   $92 = $$049$i + -1 | 0;
   if (!($92 & $$049$i)) $100 = $91 & $92; else if ($91 >>> 0 < $$049$i >>> 0) $100 = $91; else $100 = ($91 >>> 0) % ($$049$i >>> 0) | 0;
   $$sink = (HEAP32[$0 >> 2] | 0) + ($100 << 2) | 0;
   label = 33;
  }
 } else {
  HEAP32[$49 >> 2] = HEAP32[$84 >> 2];
  $$sink = $84;
  label = 33;
 }
 if ((label | 0) == 33) HEAP32[$$sink >> 2] = $49;
 HEAP32[$54 >> 2] = (HEAP32[$54 >> 2] | 0) + 1;
 $$148$i = $49;
 $104 = $$148$i + 12 | 0;
 return $104 | 0;
}

function __ZNSt3__26vectorIN2ut9Scheduler15ScheduledSystemENS_9allocatorIS3_EEE5eraseENS_11__wrap_iterIPKS3_EESA_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$lcssa$i$i = 0, $$06$i$i = 0, $$078$i$i = 0, $$09$i$i = 0, $$pre$phi$i$i$i$i$iZ2D = 0, $$pre$phi11$i$i$i$i$iZ2D = 0, $$pre$phi9$i$i$i$i$iZ2D = 0, $14 = 0, $15 = 0, $16 = 0, $19 = 0, $20 = 0, $21 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $34 = 0, $35 = 0, $41 = 0, $42 = 0, $43 = 0, $46 = 0, $47 = 0, $49 = 0, $5 = 0, $51 = 0, $60 = 0, $63 = 0, $68 = 0, $70 = 0, $71 = 0, $77 = 0, $8 = 0, $9 = 0;
 $3 = HEAP32[$0 >> 2] | 0;
 $5 = HEAP32[$1 >> 2] | 0;
 $8 = $3 + ((($5 - $3 | 0) / 40 | 0) * 40 | 0) | 0;
 $9 = HEAP32[$2 >> 2] | 0;
 if (($9 | 0) == ($5 | 0)) return $8 | 0;
 $14 = $8 + ((($9 - $5 | 0) / 40 | 0) * 40 | 0) | 0;
 $15 = $0 + 4 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($14 | 0) == ($16 | 0)) {
  $$0$lcssa$i$i = $8;
  $60 = $14;
 } else {
  $$078$i$i = $14;
  $$09$i$i = $8;
  do {
   HEAP32[$$09$i$i >> 2] = HEAP32[$$078$i$i >> 2];
   $19 = $$09$i$i + 4 | 0;
   $20 = $$078$i$i + 4 | 0;
   $21 = $19 + 11 | 0;
   if ((HEAP8[$21 >> 0] | 0) < 0) {
    HEAP8[HEAP32[$19 >> 2] >> 0] = 0;
    HEAP32[$$09$i$i + 8 >> 2] = 0;
    $$pre$phi$i$i$i$i$iZ2D = $19;
   } else {
    HEAP8[$19 >> 0] = 0;
    HEAP8[$21 >> 0] = 0;
    $$pre$phi$i$i$i$i$iZ2D = $19;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($19, 0);
   HEAP32[$$pre$phi$i$i$i$i$iZ2D >> 2] = HEAP32[$20 >> 2];
   HEAP32[$$pre$phi$i$i$i$i$iZ2D + 4 >> 2] = HEAP32[$20 + 4 >> 2];
   HEAP32[$$pre$phi$i$i$i$i$iZ2D + 8 >> 2] = HEAP32[$20 + 8 >> 2];
   HEAP32[$20 >> 2] = 0;
   HEAP32[$20 + 4 >> 2] = 0;
   HEAP32[$20 + 8 >> 2] = 0;
   $27 = $$078$i$i + 16 | 0;
   $28 = HEAP32[$27 >> 2] | 0;
   $29 = $$078$i$i + 20 | 0;
   $30 = HEAP32[$29 >> 2] | 0;
   HEAP32[$27 >> 2] = 0;
   HEAP32[$29 >> 2] = 0;
   HEAP32[$$09$i$i + 16 >> 2] = $28;
   $31 = $$09$i$i + 20 | 0;
   $32 = HEAP32[$31 >> 2] | 0;
   HEAP32[$31 >> 2] = $30;
   if ($32 | 0) {
    $34 = $32 + 4 | 0;
    $35 = HEAP32[$34 >> 2] | 0;
    HEAP32[$34 >> 2] = $35 + -1;
    if (!$35) {
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$32 >> 2] | 0) + 8 >> 2] & 63]($32);
     __ZNSt3__219__shared_weak_count14__release_weakEv($32);
    }
   }
   $41 = $$09$i$i + 24 | 0;
   $42 = $$078$i$i + 24 | 0;
   $43 = HEAP32[$41 >> 2] | 0;
   if (!$43) {
    $$pre$phi11$i$i$i$i$iZ2D = $$09$i$i + 32 | 0;
    $$pre$phi9$i$i$i$i$iZ2D = $$09$i$i + 28 | 0;
   } else {
    $46 = $$09$i$i + 28 | 0;
    HEAP32[$46 >> 2] = $43;
    __ZdlPv($43);
    $47 = $$09$i$i + 32 | 0;
    HEAP32[$47 >> 2] = 0;
    HEAP32[$46 >> 2] = 0;
    HEAP32[$41 >> 2] = 0;
    $$pre$phi11$i$i$i$i$iZ2D = $47;
    $$pre$phi9$i$i$i$i$iZ2D = $46;
   }
   HEAP32[$41 >> 2] = HEAP32[$42 >> 2];
   $49 = $$078$i$i + 28 | 0;
   HEAP32[$$pre$phi9$i$i$i$i$iZ2D >> 2] = HEAP32[$49 >> 2];
   $51 = $$078$i$i + 32 | 0;
   HEAP32[$$pre$phi11$i$i$i$i$iZ2D >> 2] = HEAP32[$51 >> 2];
   HEAP32[$51 >> 2] = 0;
   HEAP32[$49 >> 2] = 0;
   HEAP32[$42 >> 2] = 0;
   HEAP8[$$09$i$i + 36 >> 0] = HEAP8[$$078$i$i + 36 >> 0] | 0;
   $$078$i$i = $$078$i$i + 40 | 0;
   $$09$i$i = $$09$i$i + 40 | 0;
  } while (($$078$i$i | 0) != ($16 | 0));
  $$0$lcssa$i$i = $$09$i$i;
  $60 = HEAP32[$15 >> 2] | 0;
 }
 if (($60 | 0) != ($$0$lcssa$i$i | 0)) {
  $$06$i$i = $60;
  do {
   $63 = HEAP32[$$06$i$i + -16 >> 2] | 0;
   if ($63 | 0) {
    HEAP32[$$06$i$i + -12 >> 2] = $63;
    __ZdlPv($63);
   }
   $68 = HEAP32[$$06$i$i + -20 >> 2] | 0;
   if ($68 | 0) {
    $70 = $68 + 4 | 0;
    $71 = HEAP32[$70 >> 2] | 0;
    HEAP32[$70 >> 2] = $71 + -1;
    if (!$71) {
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$68 >> 2] | 0) + 8 >> 2] & 63]($68);
     __ZNSt3__219__shared_weak_count14__release_weakEv($68);
    }
   }
   $77 = $$06$i$i + -36 | 0;
   $$06$i$i = $$06$i$i + -40 | 0;
   if ((HEAP8[$77 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$77 >> 2] | 0);
  } while (($$06$i$i | 0) != ($$0$lcssa$i$i | 0));
 }
 HEAP32[$15 >> 2] = $$0$lcssa$i$i;
 return $8 | 0;
}

function __ZNSt3__213unordered_mapIiN2ut9Scheduler15ScheduledSystemENS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS3_EEEEEixERSA_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $$04777$i = 0, $$04778$i = 0, $$04778$us$i = 0, $$049$i = 0, $$1$i = 0, $$148$i = 0, $$sink = 0, $14 = 0, $15 = 0, $19 = 0, $2 = 0, $29 = 0, $3 = 0, $34 = 0, $38 = 0, $4 = 0, $42 = 0, $45 = 0.0, $48 = 0.0, $5 = 0, $58 = 0, $6 = 0, $61 = 0, $63 = 0, $64 = 0, $71 = 0, $72 = 0, $74 = 0, $76 = 0, $79 = 0, $8 = 0, $80 = 0, $88 = 0, $92 = 0, dest = 0, label = 0, stop = 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = ($4 | 0) == 0;
 L1 : do if ($5) $$0$i = 0; else {
  $6 = $4 + -1 | 0;
  $8 = ($6 & $4 | 0) == 0;
  if ($8) $14 = $6 & $2; else if ($2 >>> 0 < $4 >>> 0) $14 = $2; else $14 = ($2 >>> 0) % ($4 >>> 0) | 0;
  $15 = HEAP32[(HEAP32[$0 >> 2] | 0) + ($14 << 2) >> 2] | 0;
  if (!$15) $$0$i = $14; else {
   $$04777$i = HEAP32[$15 >> 2] | 0;
   if (!$$04777$i) $$0$i = $14; else {
    if ($8) {
     $$04778$us$i = $$04777$i;
     while (1) {
      $19 = HEAP32[$$04778$us$i + 4 >> 2] | 0;
      if (!(($19 | 0) == ($2 | 0) | ($19 & $6 | 0) == ($14 | 0))) {
       $$0$i = $14;
       break L1;
      }
      if ((HEAP32[$$04778$us$i + 8 >> 2] | 0) == ($2 | 0)) {
       $$148$i = $$04778$us$i;
       break;
      }
      $$04778$us$i = HEAP32[$$04778$us$i >> 2] | 0;
      if (!$$04778$us$i) {
       $$0$i = $14;
       break L1;
      }
     }
     $92 = $$148$i + 12 | 0;
     return $92 | 0;
    }
    $$04778$i = $$04777$i;
    while (1) {
     $29 = HEAP32[$$04778$i + 4 >> 2] | 0;
     if (($29 | 0) != ($2 | 0)) {
      if ($29 >>> 0 < $4 >>> 0) $34 = $29; else $34 = ($29 >>> 0) % ($4 >>> 0) | 0;
      if (($34 | 0) != ($14 | 0)) {
       $$0$i = $14;
       break L1;
      }
     }
     if ((HEAP32[$$04778$i + 8 >> 2] | 0) == ($2 | 0)) {
      $$148$i = $$04778$i;
      break;
     }
     $$04778$i = HEAP32[$$04778$i >> 2] | 0;
     if (!$$04778$i) {
      $$0$i = $14;
      break L1;
     }
    }
    $92 = $$148$i + 12 | 0;
    return $92 | 0;
   }
  }
 } while (0);
 $38 = __Znwj(52) | 0;
 HEAP32[$38 + 8 >> 2] = $2;
 dest = $38 + 12 | 0;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$38 + 4 >> 2] = $2;
 HEAP32[$38 >> 2] = 0;
 $42 = $0 + 12 | 0;
 $45 = +(((HEAP32[$42 >> 2] | 0) + 1 | 0) >>> 0);
 $48 = +HEAPF32[$0 + 16 >> 2];
 do if ($5 | $48 * +($4 >>> 0) < $45) {
  $58 = $4 << 1 | ($4 >>> 0 < 3 | ($4 + -1 & $4 | 0) != 0) & 1;
  $61 = ~~+Math_ceil(+($45 / $48)) >>> 0;
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIiN2ut9Scheduler15ScheduledSystemEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS5_NS_8equal_toIiEELb1EEENS_9allocatorIS5_EEE6rehashEj($0, $58 >>> 0 < $61 >>> 0 ? $61 : $58);
  $63 = HEAP32[$3 >> 2] | 0;
  $64 = $63 + -1 | 0;
  if (!($64 & $63)) {
   $$049$i = $63;
   $$1$i = $64 & $2;
   break;
  }
  if ($2 >>> 0 < $63 >>> 0) {
   $$049$i = $63;
   $$1$i = $2;
  } else {
   $$049$i = $63;
   $$1$i = ($2 >>> 0) % ($63 >>> 0) | 0;
  }
 } else {
  $$049$i = $4;
  $$1$i = $$0$i;
 } while (0);
 $71 = (HEAP32[$0 >> 2] | 0) + ($$1$i << 2) | 0;
 $72 = HEAP32[$71 >> 2] | 0;
 if (!$72) {
  $74 = $0 + 8 | 0;
  HEAP32[$38 >> 2] = HEAP32[$74 >> 2];
  HEAP32[$74 >> 2] = $38;
  HEAP32[$71 >> 2] = $74;
  $76 = HEAP32[$38 >> 2] | 0;
  if ($76 | 0) {
   $79 = HEAP32[$76 + 4 >> 2] | 0;
   $80 = $$049$i + -1 | 0;
   if (!($80 & $$049$i)) $88 = $79 & $80; else if ($79 >>> 0 < $$049$i >>> 0) $88 = $79; else $88 = ($79 >>> 0) % ($$049$i >>> 0) | 0;
   $$sink = (HEAP32[$0 >> 2] | 0) + ($88 << 2) | 0;
   label = 33;
  }
 } else {
  HEAP32[$38 >> 2] = HEAP32[$72 >> 2];
  $$sink = $72;
  label = 33;
 }
 if ((label | 0) == 33) HEAP32[$$sink >> 2] = $38;
 HEAP32[$42 >> 2] = (HEAP32[$42 >> 2] | 0) + 1;
 $$148$i = $38;
 $92 = $$148$i + 12 | 0;
 return $92 | 0;
}

function __ZNSt3__26vectorIjNS_9allocatorIjEEE6insertENS_11__wrap_iterIPKjEERS5_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$017$i = 0, $$022 = 0, $$pre = 0, $$pre$phi46Z2D = 0, $$pre$phi48Z2D = 0, $$pre45 = 0, $$sroa$19$0$ptr = 0, $$sroa$19$1$in = 0, $$sroa$33$0 = 0, $$sroa$speculated$i = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $15 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $30 = 0, $4 = 0, $42 = 0, $44 = 0, $47 = 0, $49 = 0, $50 = 0, $51 = 0, $54 = 0, $55 = 0, $56 = 0, $58 = 0, $6 = 0, $65 = 0, $70 = 0, $71 = 0, $73 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $82 = 0, $84 = 0, $88 = 0, $9 = 0, $spec$select$i = 0;
 $3 = HEAP32[$0 >> 2] | 0;
 $4 = $3;
 $6 = (HEAP32[$1 >> 2] | 0) - $4 | 0;
 $8 = $3 + ($6 >> 2 << 2) | 0;
 $9 = $0 + 4 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 $11 = $0 + 8 | 0;
 $12 = HEAP32[$11 >> 2] | 0;
 $14 = $10;
 $15 = $12;
 if ($10 >>> 0 < $12 >>> 0) {
  if (($8 | 0) == ($10 | 0)) {
   HEAP32[$8 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + 4;
   $$0 = $8;
   return $$0 | 0;
  }
  $22 = $14 - ($8 + 4) | 0;
  $23 = $22 >> 2;
  $24 = $8 + ($23 << 2) | 0;
  if ($24 >>> 0 < $10 >>> 0) {
   $$017$i = $24;
   $30 = $10;
   do {
    HEAP32[$30 >> 2] = HEAP32[$$017$i >> 2];
    $$017$i = $$017$i + 4 | 0;
    $30 = (HEAP32[$9 >> 2] | 0) + 4 | 0;
    HEAP32[$9 >> 2] = $30;
   } while ($$017$i >>> 0 < $10 >>> 0);
  }
  if ($22 | 0) _memmove($10 + (0 - $23 << 2) | 0, $8 | 0, $22 | 0) | 0;
  if ($8 >>> 0 > $2 >>> 0) $$022 = $2; else $$022 = (HEAP32[$9 >> 2] | 0) >>> 0 > $2 >>> 0 ? $2 + 4 | 0 : $2;
  HEAP32[$8 >> 2] = HEAP32[$$022 >> 2];
  $$0 = $8;
  return $$0 | 0;
 }
 $42 = ($14 - $4 >> 2) + 1 | 0;
 if ($42 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $44 = $15 - $4 | 0;
 $47 = $44 >> 1;
 $spec$select$i = $44 >> 2 >>> 0 < 536870911 ? ($47 >>> 0 < $42 >>> 0 ? $42 : $47) : 1073741823;
 $49 = $8;
 $50 = $6 >> 2;
 $51 = ($spec$select$i | 0) == 0;
 do if ($51) {
  $56 = 0;
  $75 = 0;
 } else if ($spec$select$i >>> 0 > 1073741823) _abort(); else {
  $54 = __Znwj($spec$select$i << 2) | 0;
  $56 = $54;
  $75 = $54;
  break;
 } while (0);
 $55 = $56 + ($50 << 2) | 0;
 $58 = $56 + ($spec$select$i << 2) | 0;
 do if (($50 | 0) == ($spec$select$i | 0)) {
  if (($6 | 0) > 0) {
   $$pre$phi46Z2D = $6;
   $$pre$phi48Z2D = $50;
   $$sroa$19$0$ptr = $55 + ((($spec$select$i + 1 | 0) / -2 | 0) << 2) | 0;
   $$sroa$33$0 = $58;
   $82 = $3;
   break;
  }
  $$sroa$speculated$i = $51 ? 1 : $spec$select$i << 2 >> 1;
  $65 = $$sroa$speculated$i >>> 2;
  do if (!$$sroa$speculated$i) $71 = 0; else if ($$sroa$speculated$i >>> 0 > 1073741823) _abort(); else {
   $71 = __Znwj($$sroa$speculated$i << 2) | 0;
   break;
  } while (0);
  $70 = $71 + ($65 << 2) | 0;
  $73 = $71 + ($$sroa$speculated$i << 2) | 0;
  if (!$56) {
   $$pre$phi46Z2D = $6;
   $$pre$phi48Z2D = $50;
   $$sroa$19$0$ptr = $70;
   $$sroa$33$0 = $73;
   $82 = $3;
  } else {
   __ZdlPv($75);
   $$pre = HEAP32[$0 >> 2] | 0;
   $$pre45 = $49 - $$pre | 0;
   $$pre$phi46Z2D = $$pre45;
   $$pre$phi48Z2D = $$pre45 >> 2;
   $$sroa$19$0$ptr = $70;
   $$sroa$33$0 = $73;
   $82 = $$pre;
  }
 } else {
  $$pre$phi46Z2D = $6;
  $$pre$phi48Z2D = $50;
  $$sroa$19$0$ptr = $55;
  $$sroa$33$0 = $58;
  $82 = $3;
 } while (0);
 HEAP32[$$sroa$19$0$ptr >> 2] = HEAP32[$2 >> 2];
 $77 = $$sroa$19$0$ptr + 4 | 0;
 $79 = $$sroa$19$0$ptr + (0 - $$pre$phi48Z2D << 2) | 0;
 if (($$pre$phi46Z2D | 0) > 0) _memcpy($79 | 0, $82 | 0, $$pre$phi46Z2D | 0) | 0;
 $84 = (HEAP32[$9 >> 2] | 0) - $49 | 0;
 if (($84 | 0) > 0) {
  _memcpy($77 | 0, $8 | 0, $84 | 0) | 0;
  $$sroa$19$1$in = $77 + ($84 >>> 2 << 2) | 0;
 } else $$sroa$19$1$in = $77;
 $88 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $79;
 HEAP32[$9 >> 2] = $$sroa$19$1$in;
 HEAP32[$11 >> 2] = $$sroa$33$0;
 if (!$88) {
  $$0 = $$sroa$19$0$ptr;
  return $$0 | 0;
 }
 __ZdlPv($88);
 $$0 = $$sroa$19$0$ptr;
 return $$0 | 0;
}

function __ZN2ut4arch5Chunk11destroyDataEPS1_ii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$04142$us = 0, $$043 = 0, $$043$us = 0, $10 = 0, $11 = 0, $13 = 0, $16 = 0, $18 = 0, $24 = 0, $26 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $37 = 0, $4 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $61 = 0, $62 = 0, $64 = 0, $8 = 0, $81 = 0, $82 = 0, $84 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $4 = HEAP32[$0 + 16 >> 2] | 0;
 $5 = $4 + 28 | 0;
 if ((HEAP32[$5 >> 2] | 0) <= 1) {
  STACKTOP = sp;
  return;
 }
 $8 = $4 + 32 | 0;
 if (($2 | 0) <= 0) {
  $$043 = 1;
  while (1) {
   $61 = HEAP32[$8 >> 2] | 0;
   $62 = $61 + ($$043 << 4) | 0;
   $64 = HEAP32[$61 + ($$043 << 4) + 4 >> 2] | 0;
   if (!($64 & 4)) {
    if ($64 & 16 | 0) {
     $81 = (HEAP32[$61 + ($$043 << 4) + 8 >> 2] | 0) + ($0 + 48) + (Math_imul(HEAP32[$61 + ($$043 << 4) + 12 >> 2] | 0, $1) | 0) | 0;
     $82 = HEAP32[$62 >> 2] | 0;
     $84 = HEAP32[6067] | 0;
     if ((HEAP32[6068] | 0) - $84 >> 2 >>> 0 <= $82 >>> 0) {
      label = 23;
      break;
     }
     __ZN2ut25ComponentNativeBufferBase33freeNativeBufferWithComponentInfoEPNS_16NativeBufferBaseERKNS_13ComponentInfoE($81, HEAP32[$84 + ($82 << 2) >> 2] | 0);
    }
   } else if ((HEAP32[6068] | 0) - (HEAP32[6067] | 0) >> 2 >>> 0 <= (HEAP32[$62 >> 2] | 0) >>> 0) {
    label = 20;
    break;
   }
   $$043 = $$043 + 1 | 0;
   if (($$043 | 0) >= (HEAP32[$5 >> 2] | 0)) {
    label = 17;
    break;
   }
  }
  if ((label | 0) == 17) {
   STACKTOP = sp;
   return;
  } else if ((label | 0) == 20) {
   _snprintf(25060, 1024, 27124, $vararg_buffer3) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
  } else if ((label | 0) == 23) {
   _snprintf(25060, 1024, 27124, $vararg_buffer5) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
  }
 }
 $$043$us = 1;
 while (1) {
  $10 = HEAP32[$8 >> 2] | 0;
  $11 = $10 + ($$043$us << 4) | 0;
  $13 = HEAP32[$10 + ($$043$us << 4) + 4 >> 2] | 0;
  if (!($13 & 4)) {
   if ($13 & 16 | 0) {
    $48 = (HEAP32[$10 + ($$043$us << 4) + 8 >> 2] | 0) + ($0 + 48) + (Math_imul(HEAP32[$10 + ($$043$us << 4) + 12 >> 2] | 0, $1) | 0) | 0;
    $49 = HEAP32[$11 >> 2] | 0;
    $51 = HEAP32[6067] | 0;
    if ((HEAP32[6068] | 0) - $51 >> 2 >>> 0 <= $49 >>> 0) {
     label = 14;
     break;
    }
    __ZN2ut25ComponentNativeBufferBase33freeNativeBufferWithComponentInfoEPNS_16NativeBufferBaseERKNS_13ComponentInfoE($48, HEAP32[$51 + ($49 << 2) >> 2] | 0);
   }
  } else {
   $16 = HEAP32[$11 >> 2] | 0;
   $18 = HEAP32[6067] | 0;
   if ((HEAP32[6068] | 0) - $18 >> 2 >>> 0 <= $16 >>> 0) {
    label = 7;
    break;
   }
   $24 = HEAP32[$18 + ($16 << 2) >> 2] | 0;
   $26 = HEAP32[$10 + ($$043$us << 4) + 12 >> 2] | 0;
   $31 = (HEAP32[$10 + ($$043$us << 4) + 8 >> 2] | 0) + ($0 + 48) + (Math_imul($26, $1) | 0) | 0;
   $32 = $24 + 32 | 0;
   $33 = $24 + 48 | 0;
   $$04142$us = 0;
   do {
    $34 = HEAP32[$32 >> 2] | 0;
    if ($34 | 0) {
     $37 = $31 + (Math_imul($$04142$us, $26) | 0) | 0;
     FUNCTION_TABLE_vii[$34 & 15]($37, HEAP32[$33 >> 2] | 0);
    }
    $$04142$us = $$04142$us + 1 | 0;
   } while (($$04142$us | 0) != ($2 | 0));
  }
  $$043$us = $$043$us + 1 | 0;
  if (($$043$us | 0) >= (HEAP32[$5 >> 2] | 0)) {
   label = 17;
   break;
  }
 }
 if ((label | 0) == 7) {
  _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 } else if ((label | 0) == 14) {
  _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 } else if ((label | 0) == 17) {
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__213unordered_mapIjN2ut4arch13EntityManager11FreshEntity13ComponentEditENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjS5_EEEEEixERSC_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $$04777$i = 0, $$04778$i = 0, $$04778$us$i = 0, $$049$i = 0, $$1$i = 0, $$148$i = 0, $$sink = 0, $14 = 0, $15 = 0, $19 = 0, $2 = 0, $29 = 0, $3 = 0, $34 = 0, $38 = 0, $4 = 0, $41 = 0, $46 = 0, $49 = 0.0, $5 = 0, $52 = 0.0, $6 = 0, $62 = 0, $65 = 0, $67 = 0, $68 = 0, $75 = 0, $76 = 0, $78 = 0, $8 = 0, $80 = 0, $83 = 0, $84 = 0, $92 = 0, $96 = 0, label = 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = ($4 | 0) == 0;
 L1 : do if ($5) $$0$i = 0; else {
  $6 = $4 + -1 | 0;
  $8 = ($6 & $4 | 0) == 0;
  if ($8) $14 = $6 & $2; else if ($2 >>> 0 < $4 >>> 0) $14 = $2; else $14 = ($2 >>> 0) % ($4 >>> 0) | 0;
  $15 = HEAP32[(HEAP32[$0 >> 2] | 0) + ($14 << 2) >> 2] | 0;
  if (!$15) $$0$i = $14; else {
   $$04777$i = HEAP32[$15 >> 2] | 0;
   if (!$$04777$i) $$0$i = $14; else {
    if ($8) {
     $$04778$us$i = $$04777$i;
     while (1) {
      $19 = HEAP32[$$04778$us$i + 4 >> 2] | 0;
      if (!(($19 | 0) == ($2 | 0) | ($19 & $6 | 0) == ($14 | 0))) {
       $$0$i = $14;
       break L1;
      }
      if ((HEAP32[$$04778$us$i + 8 >> 2] | 0) == ($2 | 0)) {
       $$148$i = $$04778$us$i;
       break;
      }
      $$04778$us$i = HEAP32[$$04778$us$i >> 2] | 0;
      if (!$$04778$us$i) {
       $$0$i = $14;
       break L1;
      }
     }
     $96 = $$148$i + 12 | 0;
     return $96 | 0;
    }
    $$04778$i = $$04777$i;
    while (1) {
     $29 = HEAP32[$$04778$i + 4 >> 2] | 0;
     if (($29 | 0) != ($2 | 0)) {
      if ($29 >>> 0 < $4 >>> 0) $34 = $29; else $34 = ($29 >>> 0) % ($4 >>> 0) | 0;
      if (($34 | 0) != ($14 | 0)) {
       $$0$i = $14;
       break L1;
      }
     }
     if ((HEAP32[$$04778$i + 8 >> 2] | 0) == ($2 | 0)) {
      $$148$i = $$04778$i;
      break;
     }
     $$04778$i = HEAP32[$$04778$i >> 2] | 0;
     if (!$$04778$i) {
      $$0$i = $14;
      break L1;
     }
    }
    $96 = $$148$i + 12 | 0;
    return $96 | 0;
   }
  }
 } while (0);
 $38 = __Znwj(20) | 0;
 HEAP32[$38 + 8 >> 2] = $2;
 $41 = $38 + 12 | 0;
 HEAP32[$41 >> 2] = 0;
 HEAP32[$41 + 4 >> 2] = 0;
 HEAP32[$38 + 4 >> 2] = $2;
 HEAP32[$38 >> 2] = 0;
 $46 = $0 + 12 | 0;
 $49 = +(((HEAP32[$46 >> 2] | 0) + 1 | 0) >>> 0);
 $52 = +HEAPF32[$0 + 16 >> 2];
 do if ($5 | $52 * +($4 >>> 0) < $49) {
  $62 = $4 << 1 | ($4 >>> 0 < 3 | ($4 + -1 & $4 | 0) != 0) & 1;
  $65 = ~~+Math_ceil(+($49 / $52)) >>> 0;
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIjN2ut4arch13EntityManager11FreshEntity13ComponentEditEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS7_NS_8equal_toIjEELb1EEENS_9allocatorIS7_EEE6rehashEj($0, $62 >>> 0 < $65 >>> 0 ? $65 : $62);
  $67 = HEAP32[$3 >> 2] | 0;
  $68 = $67 + -1 | 0;
  if (!($68 & $67)) {
   $$049$i = $67;
   $$1$i = $68 & $2;
   break;
  }
  if ($2 >>> 0 < $67 >>> 0) {
   $$049$i = $67;
   $$1$i = $2;
  } else {
   $$049$i = $67;
   $$1$i = ($2 >>> 0) % ($67 >>> 0) | 0;
  }
 } else {
  $$049$i = $4;
  $$1$i = $$0$i;
 } while (0);
 $75 = (HEAP32[$0 >> 2] | 0) + ($$1$i << 2) | 0;
 $76 = HEAP32[$75 >> 2] | 0;
 if (!$76) {
  $78 = $0 + 8 | 0;
  HEAP32[$38 >> 2] = HEAP32[$78 >> 2];
  HEAP32[$78 >> 2] = $38;
  HEAP32[$75 >> 2] = $78;
  $80 = HEAP32[$38 >> 2] | 0;
  if ($80 | 0) {
   $83 = HEAP32[$80 + 4 >> 2] | 0;
   $84 = $$049$i + -1 | 0;
   if (!($84 & $$049$i)) $92 = $83 & $84; else if ($83 >>> 0 < $$049$i >>> 0) $92 = $83; else $92 = ($83 >>> 0) % ($$049$i >>> 0) | 0;
   $$sink = (HEAP32[$0 >> 2] | 0) + ($92 << 2) | 0;
   label = 33;
  }
 } else {
  HEAP32[$38 >> 2] = HEAP32[$76 >> 2];
  $$sink = $76;
  label = 33;
 }
 if ((label | 0) == 33) HEAP32[$$sink >> 2] = $38;
 HEAP32[$46 >> 2] = (HEAP32[$46 >> 2] | 0) + 1;
 $$148$i = $38;
 $96 = $$148$i + 12 | 0;
 return $96 | 0;
}

function __ZN2ut4arch13EntityManager13getEntityNameENS_6EntityE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$02832$i$i$i = 0, $$02833$i$i$i = 0, $$02833$us$i$i$i = 0, $$sroa$0$0$i$i$i = 0, $10 = 0, $12 = 0, $14 = 0, $16 = 0, $23 = 0, $24 = 0, $28 = 0, $29 = 0, $3 = 0, $37 = 0, $42 = 0, $47 = 0, $48 = 0, $49 = 0, $51 = 0, $56 = 0, $57 = 0, $61 = 0, $68 = 0, $70 = 0, $73 = 0, $74 = 0, $78 = 0, $80 = 0, $82 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $93 = 0, $tmpcast$i10$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast$i10$byval_copy = sp + 8 | 0;
 $3 = sp;
 L1 : do if ((HEAP32[$1 + 36 >> 2] | 0) > 0) if (HEAP8[$1 + 148 >> 0] | 0) {
  $10 = HEAP32[$2 >> 2] | 0;
  $12 = HEAP32[$1 + 132 >> 2] | 0;
  if ($12 | 0) {
   $14 = $12 + -1 | 0;
   $16 = ($14 & $12 | 0) == 0;
   if ($16) $23 = $14 & $10; else if ($10 >>> 0 < $12 >>> 0) $23 = $10; else $23 = ($10 >>> 0) % ($12 >>> 0) | 0;
   $24 = HEAP32[(HEAP32[$1 + 128 >> 2] | 0) + ($23 << 2) >> 2] | 0;
   if ($24 | 0) {
    $$02832$i$i$i = HEAP32[$24 >> 2] | 0;
    if ($$02832$i$i$i | 0) {
     L12 : do if ($16) {
      $$02833$us$i$i$i = $$02832$i$i$i;
      while (1) {
       $28 = HEAP32[$$02833$us$i$i$i + 4 >> 2] | 0;
       $29 = ($28 | 0) == ($10 | 0);
       if (!($29 | ($28 & $14 | 0) == ($23 | 0))) break L1;
       if ($29) if ((HEAP32[$$02833$us$i$i$i + 8 >> 2] | 0) == ($10 | 0)) {
        $$sroa$0$0$i$i$i = $$02833$us$i$i$i;
        break L12;
       }
       $$02833$us$i$i$i = HEAP32[$$02833$us$i$i$i >> 2] | 0;
       if (!$$02833$us$i$i$i) break L1;
      }
     } else {
      $$02833$i$i$i = $$02832$i$i$i;
      while (1) {
       $37 = HEAP32[$$02833$i$i$i + 4 >> 2] | 0;
       if (($37 | 0) == ($10 | 0)) {
        if ((HEAP32[$$02833$i$i$i + 8 >> 2] | 0) == ($10 | 0)) {
         $$sroa$0$0$i$i$i = $$02833$i$i$i;
         break L12;
        }
       } else {
        if ($37 >>> 0 < $12 >>> 0) $42 = $37; else $42 = ($37 >>> 0) % ($12 >>> 0) | 0;
        if (($42 | 0) != ($23 | 0)) break L1;
       }
       $$02833$i$i$i = HEAP32[$$02833$i$i$i >> 2] | 0;
       if (!$$02833$i$i$i) break L1;
      }
     } while (0);
     $47 = $$sroa$0$0$i$i$i + 48 | 0;
     $48 = $47 + 11 | 0;
     $49 = HEAP8[$48 >> 0] | 0;
     $51 = $$sroa$0$0$i$i$i + 52 | 0;
     $56 = _malloc(($49 << 24 >> 24 < 0 ? HEAP32[$51 >> 2] | 0 : $49 & 255) + 1 | 0) | 0;
     HEAP32[$0 >> 2] = $56;
     $57 = HEAP8[$48 >> 0] | 0;
     $61 = $57 << 24 >> 24 < 0 ? HEAP32[$51 >> 2] | 0 : $57 & 255;
     HEAP32[$0 + 4 >> 2] = $61;
     _memcpy($56 | 0, ((HEAP8[$48 >> 0] | 0) < 0 ? HEAP32[$47 >> 2] | 0 : $47) | 0, $61 | 0) | 0;
     HEAP8[$56 + $61 >> 0] = 0;
     STACKTOP = sp;
     return;
    }
   }
  }
 } while (0);
 $68 = $2;
 $70 = HEAP32[$68 >> 2] | 0;
 $73 = HEAP32[$68 + 4 >> 2] | 0;
 $74 = $3;
 HEAP32[$74 >> 2] = $70;
 HEAP32[$74 + 4 >> 2] = $73;
 $78 = HEAP32[810] | 0;
 HEAP32[$tmpcast$i10$byval_copy >> 2] = HEAP32[$3 >> 2];
 HEAP32[$tmpcast$i10$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 if (!(__ZN2ut4arch13EntityManager15hasComponentRawENS_6EntityEj($1, $tmpcast$i10$byval_copy, $78) | 0)) {
  $80 = _malloc(1) | 0;
  HEAP32[$0 >> 2] = $80;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP8[$80 >> 0] = 0;
  STACKTOP = sp;
  return;
 }
 $82 = $3;
 HEAP32[$82 >> 2] = $70;
 HEAP32[$82 + 4 >> 2] = $73;
 $86 = HEAP32[810] | 0;
 HEAP32[$tmpcast$i10$byval_copy >> 2] = HEAP32[$3 >> 2];
 HEAP32[$tmpcast$i10$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 $87 = __ZN2ut4arch13EntityManager25getComponentDataRawUnsafeENS_6EntityEj($1, $tmpcast$i10$byval_copy, $86) | 0;
 $88 = $87 + 4 | 0;
 $89 = HEAP32[$88 >> 2] | 0;
 HEAP32[$0 + 4 >> 2] = $89;
 if (!$89) {
  HEAP32[$0 >> 2] = 0;
  STACKTOP = sp;
  return;
 } else {
  $93 = _malloc($89 + 1 | 0) | 0;
  HEAP32[$0 >> 2] = $93;
  _memcpy($93 | 0, HEAP32[$87 >> 2] | 0, (HEAP32[$88 >> 2] | 0) + 1 | 0) | 0;
  STACKTOP = sp;
  return;
 }
}

function __ZN9rapidjson8internal8PrettifyEPciii($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i = 0, $$0$i114 = 0, $$0108120 = 0, $$0124 = 0, $$022$i = 0, $$022$i113 = 0, $$off = 0, $100 = 0, $105 = 0, $112 = 0, $120 = 0, $17 = 0, $19 = 0, $23 = 0, $28 = 0, $37 = 0, $4 = 0, $55 = 0, $65 = 0, $70 = 0, $77 = 0, $8 = 0, $85 = 0, $95 = 0;
 $4 = $2 + $1 | 0;
 if (($2 | 0) > -1 & ($4 | 0) < 22) {
  if (($2 | 0) > 0) {
   $8 = $1 + 1 | 0;
   _memset($0 + $1 | 0, 48, (($4 | 0) > ($8 | 0) ? $4 : $8) - $1 | 0) | 0;
  }
  HEAP8[$0 + $4 >> 0] = 46;
  HEAP8[$0 + ($4 + 1) >> 0] = 48;
  $55 = $0 + ($4 + 2) | 0;
  return $55 | 0;
 }
 $$off = $4 + -1 | 0;
 if ($$off >>> 0 < 21) {
  $17 = $4 + 1 | 0;
  $19 = $0 + $4 | 0;
  _memmove($0 + $17 | 0, $19 | 0, 0 - $2 | 0) | 0;
  HEAP8[$19 >> 0] = 46;
  if (($3 + $2 | 0) >= 0) {
   $55 = $0 + ($1 + 1) | 0;
   return $55 | 0;
  }
  $23 = $4 + $3 | 0;
  L14 : do if (($23 | 0) > ($17 | 0)) {
   $$0108120 = $23;
   while (1) {
    if ((HEAP8[$0 + $$0108120 >> 0] | 0) != 48) break;
    $28 = $$0108120 + -1 | 0;
    if (($28 | 0) > ($17 | 0)) $$0108120 = $28; else break L14;
   }
   $55 = $0 + ($$0108120 + 1) | 0;
   return $55 | 0;
  } while (0);
  $55 = $0 + ($4 + 2) | 0;
  return $55 | 0;
 }
 if (($4 + 5 | 0) >>> 0 < 6) {
  $37 = 2 - $4 | 0;
  _memmove($0 + $37 | 0, $0 | 0, $1 | 0) | 0;
  HEAP8[$0 >> 0] = 48;
  HEAP8[$0 + 1 >> 0] = 46;
  if (($4 | 0) < 0) _memset($0 + 2 | 0, 48, (($37 | 0) > 3 ? $37 : 3) + -2 | 0) | 0;
  if ((0 - $2 | 0) <= ($3 | 0)) {
   $55 = $0 + ($37 + $1) | 0;
   return $55 | 0;
  }
  L33 : do if (($3 | 0) > 1) {
   $$0124 = $3 + 1 | 0;
   while (1) {
    if ((HEAP8[$0 + $$0124 >> 0] | 0) != 48) break;
    if (($$0124 | 0) > 3) $$0124 = $$0124 + -1 | 0; else break L33;
   }
   $55 = $0 + ($$0124 + 1) | 0;
   return $55 | 0;
  } while (0);
  $55 = $0 + 3 | 0;
  return $55 | 0;
 }
 if (($4 | 0) < (0 - $3 | 0)) {
  HEAP8[$0 >> 0] = 48;
  HEAP8[$0 + 1 >> 0] = 46;
  HEAP8[$0 + 2 >> 0] = 48;
  $55 = $0 + 3 | 0;
  return $55 | 0;
 }
 if (($1 | 0) == 1) {
  HEAP8[$0 + 1 >> 0] = 101;
  $65 = $0 + 2 | 0;
  if (($$off | 0) < 0) {
   HEAP8[$65 >> 0] = 45;
   $$0$i = 1 - $4 | 0;
   $$022$i = $0 + 3 | 0;
  } else {
   $$0$i = $$off;
   $$022$i = $65;
  }
  if (($$0$i | 0) > 99) {
   $70 = ($$0$i >>> 0) / 100 | 0;
   HEAP8[$$022$i >> 0] = $70 + 48;
   $77 = 13350 + ($$0$i - ($70 * 100 | 0) << 1) | 0;
   HEAP8[$$022$i + 1 >> 0] = HEAP8[$77 >> 0] | 0;
   HEAP8[$$022$i + 2 >> 0] = HEAP8[$77 + 1 >> 0] | 0;
   $55 = $$022$i + 3 | 0;
   return $55 | 0;
  }
  if (($$0$i | 0) > 9) {
   $85 = 13350 + ($$0$i << 1) | 0;
   HEAP8[$$022$i >> 0] = HEAP8[$85 >> 0] | 0;
   HEAP8[$$022$i + 1 >> 0] = HEAP8[$85 + 1 >> 0] | 0;
   $55 = $$022$i + 2 | 0;
   return $55 | 0;
  } else {
   HEAP8[$$022$i >> 0] = $$0$i + 48;
   $55 = $$022$i + 1 | 0;
   return $55 | 0;
  }
 } else {
  $95 = $0 + 1 | 0;
  _memmove($0 + 2 | 0, $95 | 0, $1 + -1 | 0) | 0;
  HEAP8[$95 >> 0] = 46;
  HEAP8[$0 + ($1 + 1) >> 0] = 101;
  $100 = $0 + ($1 + 2) | 0;
  if (($$off | 0) < 0) {
   HEAP8[$100 >> 0] = 45;
   $$0$i114 = 1 - $4 | 0;
   $$022$i113 = $100 + 1 | 0;
  } else {
   $$0$i114 = $$off;
   $$022$i113 = $100;
  }
  if (($$0$i114 | 0) > 99) {
   $105 = ($$0$i114 >>> 0) / 100 | 0;
   HEAP8[$$022$i113 >> 0] = $105 + 48;
   $112 = 13350 + ($$0$i114 - ($105 * 100 | 0) << 1) | 0;
   HEAP8[$$022$i113 + 1 >> 0] = HEAP8[$112 >> 0] | 0;
   HEAP8[$$022$i113 + 2 >> 0] = HEAP8[$112 + 1 >> 0] | 0;
   $55 = $$022$i113 + 3 | 0;
   return $55 | 0;
  }
  if (($$0$i114 | 0) > 9) {
   $120 = 13350 + ($$0$i114 << 1) | 0;
   HEAP8[$$022$i113 >> 0] = HEAP8[$120 >> 0] | 0;
   HEAP8[$$022$i113 + 1 >> 0] = HEAP8[$120 + 1 >> 0] | 0;
   $55 = $$022$i113 + 2 | 0;
   return $55 | 0;
  } else {
   HEAP8[$$022$i113 >> 0] = $$0$i114 + 48;
   $55 = $$022$i113 + 1 | 0;
   return $55 | 0;
  }
 }
 return 0;
}

function __ZN2ut4arch16ArchetypeManager13setChunkCountEPNS0_5ChunkEi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$06$i = 0, $10 = 0, $11 = 0, $14 = 0, $17 = 0, $19 = 0, $23 = 0, $26 = 0, $28 = 0, $3 = 0, $33 = 0, $34 = 0, $36 = 0, $42 = 0, $46 = 0, $47 = 0, $51 = 0, $52 = 0, $54 = 0, $6 = 0, $62 = 0, $63 = 0, $67 = 0, $68 = 0, $9 = 0, $vararg_buffer11 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $vararg_buffer11 = sp + 48 | 0;
 $vararg_buffer9 = sp + 40 | 0;
 $vararg_buffer7 = sp + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $3 = $1 + 28 | 0;
 if ((HEAP32[$3 >> 2] | 0) < ($2 | 0)) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9215, 9243, 213);
 }
 $6 = $1 + 24 | 0;
 if ((HEAP32[$6 >> 2] | 0) == ($2 | 0)) {
  _snprintf(25060, 1024, 27124, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9324, 9243, 214);
 }
 $9 = HEAP32[$3 >> 2] | 0;
 $10 = $1 + 16 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 if (!$2) {
  $14 = HEAP32[$11 + 104 >> 2] | 0;
  if (($14 | 0) > 0) {
   $17 = HEAP32[$0 + 4 >> 2] | 0;
   $19 = HEAP32[$1 + 20 >> 2] | 0;
   $$06$i = 0;
   do {
    __ZN2ut4arch26SharedComponentDataManager15removeReferenceEi($17, HEAP32[$19 + ($$06$i << 2) >> 2] | 0);
    $$06$i = $$06$i + 1 | 0;
   } while (($$06$i | 0) != ($14 | 0));
  }
  $23 = $11 + 24 | 0;
  HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + -1;
  HEAP32[$10 >> 2] = 0;
  $26 = HEAP32[$1 >> 2] | 0;
  if ($26 | 0) {
   $28 = $1 + 4 | 0;
   HEAP32[$26 + 4 >> 2] = HEAP32[$28 >> 2];
   HEAP32[HEAP32[$28 >> 2] >> 2] = HEAP32[$1 >> 2];
   HEAP32[$28 >> 2] = 0;
   HEAP32[$1 >> 2] = 0;
  }
  $33 = $1 + 8 | 0;
  $34 = HEAP32[$33 >> 2] | 0;
  if ($34 | 0) {
   $36 = $1 + 12 | 0;
   HEAP32[$34 + 4 >> 2] = HEAP32[$36 >> 2];
   HEAP32[HEAP32[$36 >> 2] >> 2] = HEAP32[$33 >> 2];
   HEAP32[$36 >> 2] = 0;
   HEAP32[$33 >> 2] = 0;
  }
  $42 = HEAP32[$0 + 52 >> 2] | 0;
  if (($1 | 0) == ($42 | 0)) {
   _snprintf(25060, 1024, 27124, $vararg_buffer3) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9349, 9361, 37);
  }
  if (HEAP32[$1 >> 2] | 0) {
   _snprintf(25060, 1024, 27124, $vararg_buffer5) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9438, 9361, 38);
  }
  $46 = HEAP32[$42 >> 2] | 0;
  HEAP32[$1 >> 2] = $46;
  $47 = $1 + 4 | 0;
  HEAP32[$47 >> 2] = $42;
  HEAP32[$46 + 4 >> 2] = $1;
  HEAP32[HEAP32[$47 >> 2] >> 2] = $1;
  HEAP32[$6 >> 2] = $2;
  STACKTOP = sp;
  return;
 }
 if (($9 | 0) == ($2 | 0)) {
  $51 = $1 + 8 | 0;
  $52 = HEAP32[$51 >> 2] | 0;
  if (!$52) {
   HEAP32[$6 >> 2] = $2;
   STACKTOP = sp;
   return;
  }
  $54 = $1 + 12 | 0;
  HEAP32[$52 + 4 >> 2] = HEAP32[$54 >> 2];
  HEAP32[HEAP32[$54 >> 2] >> 2] = HEAP32[$51 >> 2];
  HEAP32[$54 >> 2] = 0;
  HEAP32[$51 >> 2] = 0;
  HEAP32[$6 >> 2] = $2;
  STACKTOP = sp;
  return;
 }
 if ((HEAP32[$6 >> 2] | 0) != ($9 | 0)) {
  HEAP32[$6 >> 2] = $2;
  STACKTOP = sp;
  return;
 }
 if (($9 | 0) <= ($2 | 0)) {
  _snprintf(25060, 1024, 27124, $vararg_buffer7) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9456, 9243, 235);
 }
 $62 = $11 + 8 | 0;
 $63 = $1 + 8 | 0;
 if (($63 | 0) == ($62 | 0)) {
  _snprintf(25060, 1024, 27124, $vararg_buffer9) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9349, 9361, 37);
 }
 if (HEAP32[$63 >> 2] | 0) {
  _snprintf(25060, 1024, 27124, $vararg_buffer11) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9438, 9361, 38);
 }
 $67 = HEAP32[$62 >> 2] | 0;
 HEAP32[$63 >> 2] = $67;
 $68 = $1 + 12 | 0;
 HEAP32[$68 >> 2] = $62;
 HEAP32[$67 + 4 >> 2] = $63;
 HEAP32[HEAP32[$68 >> 2] >> 2] = $63;
 HEAP32[$6 >> 2] = $2;
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$add$i69 = 0, $$0$i$i$idx$i = 0, $$0$i$i$idx$i68 = 0, $$2 = 0, $13 = 0, $14 = 0, $16 = 0, $18 = 0, $19 = 0, $26 = 0, $3 = 0, $31 = 0, $32 = 0, $39 = 0, $41 = 0, $43 = 0, $45 = 0, $47 = 0, $48 = 0, $55 = 0, $60 = 0, $61 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 L1 : do if (($1 - $0 | 0) > 1) {
  $8 = HEAP8[$0 >> 0] | 0;
  switch ($8 << 24 >> 24) {
  case 100:
  case 111:
   {
    if ((HEAP8[$0 + 1 >> 0] | 0) == 110) {
     $13 = $0 + 2 | 0;
     if ($8 << 24 >> 24 != 111) {
      $39 = __ZN10__cxxabiv112_GLOBAL__N_121parse_destructor_nameINS0_2DbEEEPKcS4_S4_RT_($13, $1, $2) | 0;
      $$2 = ($39 | 0) == ($13 | 0) ? $0 : $39;
      break L1;
     }
     $14 = __ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_($13, $1, $2) | 0;
     if (($14 | 0) == ($13 | 0)) {
      $$2 = $0;
      break L1;
     }
     $16 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($14, $1, $2) | 0;
     if (($16 | 0) == ($14 | 0)) {
      $$2 = $14;
      break L1;
     }
     $18 = $2 + 4 | 0;
     $19 = HEAP32[$18 >> 2] | 0;
     if ((($19 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      $$2 = $16;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $19 + -24 | 0);
     $26 = HEAP32[$18 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($26 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$18 >> 2] = $26 + -24;
     $31 = HEAP8[$3 + 11 >> 0] | 0;
     $32 = $31 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($26 + -48 | 0, $32 ? HEAP32[$3 >> 2] | 0 : $3, $32 ? HEAP32[$3 + 4 >> 2] | 0 : $31 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$2 = $16;
     break L1;
    }
    break;
   }
  default:
   {}
  }
  $41 = __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
  if (($41 | 0) == ($0 | 0)) {
   $43 = __ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
   if (($43 | 0) == ($0 | 0)) $$2 = $0; else {
    $45 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($43, $1, $2) | 0;
    if (($45 | 0) == ($43 | 0)) $$2 = $43; else {
     $47 = $2 + 4 | 0;
     $48 = HEAP32[$47 >> 2] | 0;
     if ((($48 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$2 = $45; else {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $48 + -24 | 0);
      $55 = HEAP32[$47 >> 2] | 0;
      $$0$i$i$idx$i68 = 0;
      while (1) {
       if (($$0$i$i$idx$i68 | 0) == -1) break;
       $$0$i$i$add$i69 = $$0$i$i$idx$i68 + -1 | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($55 + ($$0$i$i$add$i69 * 24 | 0) | 0);
       $$0$i$i$idx$i68 = $$0$i$i$add$i69;
      }
      HEAP32[$47 >> 2] = $55 + -24;
      $60 = HEAP8[$3 + 11 >> 0] | 0;
      $61 = $60 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($55 + -48 | 0, $61 ? HEAP32[$3 >> 2] | 0 : $3, $61 ? HEAP32[$3 + 4 >> 2] | 0 : $60 & 255) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$2 = $45;
     }
    }
   }
  } else $$2 = $41;
 } else $$2 = $0; while (0);
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIjN2ut4arch13EntityManager11FreshEntity13ComponentEditEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS7_NS_8equal_toIjEELb1EEENS_9allocatorIS7_EEE14__erase_uniqueIjEEjRKT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0$i = 0, $$02832$i = 0, $$02833$i = 0, $$02833$us$i = 0, $$pre$phi$iZ2D = 0, $$sroa$0$0$i = 0, $12 = 0, $14 = 0, $15 = 0, $19 = 0, $2 = 0, $20 = 0, $28 = 0, $33 = 0, $4 = 0, $41 = 0, $42 = 0, $44 = 0, $49 = 0, $54 = 0, $55 = 0, $58 = 0, $6 = 0, $63 = 0, $64 = 0, $66 = 0, $68 = 0, $73 = 0, $76 = 0, $77 = 0, $8 = 0, label = 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $4 = HEAP32[$0 + 4 >> 2] | 0;
 if (!$4) {
  $$0 = 0;
  return $$0 | 0;
 }
 $6 = $4 + -1 | 0;
 $8 = ($6 & $4 | 0) == 0;
 if ($8) $14 = $6 & $2; else if ($2 >>> 0 < $4 >>> 0) $14 = $2; else $14 = ($2 >>> 0) % ($4 >>> 0) | 0;
 $12 = HEAP32[$0 >> 2] | 0;
 $15 = HEAP32[$12 + ($14 << 2) >> 2] | 0;
 if (!$15) {
  $$0 = 0;
  return $$0 | 0;
 }
 $$02832$i = HEAP32[$15 >> 2] | 0;
 if (!$$02832$i) {
  $$0 = 0;
  return $$0 | 0;
 }
 L15 : do if ($8) {
  $$02833$us$i = $$02832$i;
  while (1) {
   $19 = HEAP32[$$02833$us$i + 4 >> 2] | 0;
   $20 = ($19 | 0) == ($2 | 0);
   if (!($20 | ($19 & $6 | 0) == ($14 | 0))) {
    $$0 = 0;
    label = 50;
    break;
   }
   if ($20) if ((HEAP32[$$02833$us$i + 8 >> 2] | 0) == ($2 | 0)) {
    $$sroa$0$0$i = $$02833$us$i;
    break L15;
   }
   $$02833$us$i = HEAP32[$$02833$us$i >> 2] | 0;
   if (!$$02833$us$i) {
    $$0 = 0;
    label = 50;
    break;
   }
  }
  if ((label | 0) == 50) return $$0 | 0;
 } else {
  $$02833$i = $$02832$i;
  while (1) {
   $28 = HEAP32[$$02833$i + 4 >> 2] | 0;
   if (($28 | 0) == ($2 | 0)) {
    if ((HEAP32[$$02833$i + 8 >> 2] | 0) == ($2 | 0)) {
     $$sroa$0$0$i = $$02833$i;
     break L15;
    }
   } else {
    if ($28 >>> 0 < $4 >>> 0) $33 = $28; else $33 = ($28 >>> 0) % ($4 >>> 0) | 0;
    if (($33 | 0) != ($14 | 0)) {
     $$0 = 0;
     label = 50;
     break;
    }
   }
   $$02833$i = HEAP32[$$02833$i >> 2] | 0;
   if (!$$02833$i) {
    $$0 = 0;
    label = 50;
    break;
   }
  }
  if ((label | 0) == 50) return $$0 | 0;
 } while (0);
 if ($8) $42 = $2 & $6; else if ($2 >>> 0 < $4 >>> 0) $42 = $2; else $42 = ($2 >>> 0) % ($4 >>> 0) | 0;
 $41 = $12 + ($42 << 2) | 0;
 $$0$i = HEAP32[$41 >> 2] | 0;
 while (1) {
  $44 = HEAP32[$$0$i >> 2] | 0;
  if (($44 | 0) == ($$sroa$0$0$i | 0)) break; else $$0$i = $44;
 }
 if (($$0$i | 0) == ($0 + 8 | 0)) label = 34; else {
  $49 = HEAP32[$$0$i + 4 >> 2] | 0;
  if ($8) $54 = $49 & $6; else if ($49 >>> 0 < $4 >>> 0) $54 = $49; else $54 = ($49 >>> 0) % ($4 >>> 0) | 0;
  if (($54 | 0) == ($42 | 0)) $$pre$phi$iZ2D = $$sroa$0$0$i; else label = 34;
 }
 do if ((label | 0) == 34) {
  $55 = HEAP32[$$sroa$0$0$i >> 2] | 0;
  if ($55 | 0) {
   $58 = HEAP32[$55 + 4 >> 2] | 0;
   if ($8) $63 = $58 & $6; else if ($58 >>> 0 < $4 >>> 0) $63 = $58; else $63 = ($58 >>> 0) % ($4 >>> 0) | 0;
   if (($63 | 0) == ($42 | 0)) {
    $$pre$phi$iZ2D = $$sroa$0$0$i;
    break;
   }
  }
  HEAP32[$41 >> 2] = 0;
  $$pre$phi$iZ2D = $$sroa$0$0$i;
 } while (0);
 $64 = HEAP32[$$pre$phi$iZ2D >> 2] | 0;
 $66 = $64;
 if (!$64) $76 = $66; else {
  $68 = HEAP32[$64 + 4 >> 2] | 0;
  if ($8) $73 = $68 & $6; else if ($68 >>> 0 < $4 >>> 0) $73 = $68; else $73 = ($68 >>> 0) % ($4 >>> 0) | 0;
  if (($73 | 0) == ($42 | 0)) $76 = $66; else {
   HEAP32[(HEAP32[$0 >> 2] | 0) + ($73 << 2) >> 2] = $$0$i;
   $76 = HEAP32[$$sroa$0$0$i >> 2] | 0;
  }
 }
 HEAP32[$$0$i >> 2] = $76;
 HEAP32[$$pre$phi$iZ2D >> 2] = 0;
 $77 = $0 + 12 | 0;
 HEAP32[$77 >> 2] = (HEAP32[$77 >> 2] | 0) + -1;
 if (!$$sroa$0$0$i) {
  $$0 = 1;
  return $$0 | 0;
 }
 __ZdlPv($$sroa$0$0$i);
 $$0 = 1;
 return $$0 | 0;
}

function _ut_Scheduler_ScheduleFnInternal($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$021$i$i1$i = 0, $$023$i$i$i = 0, $$122$i$i$i = 0, $$pre$pre = 0, $12 = 0, $13 = 0, $17 = 0, $18 = 0, $3 = 0, $32 = 0, $4 = 0, $43 = 0, $44 = 0, $46 = 0, $47 = 0, $49 = 0, $5 = 0, $50 = 0, $56 = 0, $58 = 0, $59 = 0, $6 = 0, $66 = 0, $7 = 0, $79 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $3 = sp + 72 | 0;
 $4 = sp + 64 | 0;
 $5 = sp + 24 | 0;
 $6 = sp + 48 | 0;
 $7 = sp;
 $8 = $5 + 16 | 0;
 HEAP32[$5 >> 2] = 3800;
 HEAP32[$5 + 4 >> 2] = 11;
 HEAP32[$5 + 8 >> 2] = $2;
 HEAP32[$8 >> 2] = $5;
 $9 = HEAP32[$1 >> 2] | 0;
 do if (!$9) {
  HEAP32[$6 >> 2] = 0;
  HEAP32[$6 + 4 >> 2] = 0;
  HEAP32[$6 + 8 >> 2] = 0;
  $32 = $5;
  label = 13;
 } else {
  $12 = HEAP32[$1 + 4 >> 2] | 0;
  $13 = $9 + $12 | 0;
  HEAP32[$6 >> 2] = 0;
  HEAP32[$6 + 4 >> 2] = 0;
  HEAP32[$6 + 8 >> 2] = 0;
  if ($12 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($6);
  if ($12 >>> 0 < 11) {
   HEAP8[$6 + 11 >> 0] = $12;
   if (!$12) {
    HEAP8[$6 >> 0] = 0;
    $32 = $5;
    label = 13;
    break;
   } else $$021$i$i1$i = $6;
  } else {
   $17 = $12 + 16 & -16;
   $18 = __Znwj($17) | 0;
   HEAP32[$6 >> 2] = $18;
   HEAP32[$6 + 8 >> 2] = $17 | -2147483648;
   HEAP32[$6 + 4 >> 2] = $12;
   $$021$i$i1$i = $18;
  }
  $$023$i$i$i = $9;
  $$122$i$i$i = $$021$i$i1$i;
  while (1) {
   HEAP8[$$122$i$i$i >> 0] = HEAP8[$$023$i$i$i >> 0] | 0;
   $$023$i$i$i = $$023$i$i$i + 1 | 0;
   if (($$023$i$i$i | 0) == ($13 | 0)) break; else $$122$i$i$i = $$122$i$i$i + 1 | 0;
  }
  $$pre$pre = HEAP32[$8 >> 2] | 0;
  HEAP8[$$021$i$i1$i + $12 >> 0] = 0;
  if (!$$pre$pre) HEAP32[$7 + 16 >> 2] = 0; else {
   $32 = $$pre$pre;
   label = 13;
  }
 } while (0);
 do if ((label | 0) == 13) if (($5 | 0) == ($32 | 0)) {
  HEAP32[$7 + 16 >> 2] = $7;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$32 >> 2] | 0) + 12 >> 2] & 15]($32, $7);
  break;
 } else {
  HEAP32[$7 + 16 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$32 >> 2] | 0) + 8 >> 2] & 7]($32) | 0;
  break;
 } while (0);
 __ZNSt3__210shared_ptrIN2ut12SimpleSystemEE11make_sharedIJRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_8functionIFvPNS1_9SchedulerEPNS1_12ManagerWorldEEEEEEES3_DpOT_($4, $6, $7);
 HEAP32[$3 >> 2] = HEAP32[$4 >> 2];
 $43 = $3 + 4 | 0;
 $44 = $4 + 4 | 0;
 HEAP32[$43 >> 2] = HEAP32[$44 >> 2];
 HEAP32[$4 >> 2] = 0;
 HEAP32[$44 >> 2] = 0;
 $46 = __ZN2ut9Scheduler8scheduleERKNSt3__210shared_ptrINS_6SystemEEE($0, $3) | 0;
 $47 = HEAP32[$43 >> 2] | 0;
 if ($47 | 0) {
  $49 = $47 + 4 | 0;
  $50 = HEAP32[$49 >> 2] | 0;
  HEAP32[$49 >> 2] = $50 + -1;
  if (!$50) {
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$47 >> 2] | 0) + 8 >> 2] & 63]($47);
   __ZNSt3__219__shared_weak_count14__release_weakEv($47);
  }
 }
 $56 = HEAP32[$44 >> 2] | 0;
 if ($56 | 0) {
  $58 = $56 + 4 | 0;
  $59 = HEAP32[$58 >> 2] | 0;
  HEAP32[$58 >> 2] = $59 + -1;
  if (!$59) {
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$56 >> 2] | 0) + 8 >> 2] & 63]($56);
   __ZNSt3__219__shared_weak_count14__release_weakEv($56);
  }
 }
 $66 = HEAP32[$7 + 16 >> 2] | 0;
 if (($7 | 0) == ($66 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$66 >> 2] | 0) + 16 >> 2] & 63]($66); else if ($66 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$66 >> 2] | 0) + 20 >> 2] & 63]($66);
 if ((HEAP8[$6 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$6 >> 2] | 0);
 $79 = HEAP32[$8 >> 2] | 0;
 if (($5 | 0) == ($79 | 0)) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$79 >> 2] | 0) + 16 >> 2] & 63]($79);
  STACKTOP = sp;
  return $46 | 0;
 }
 if (!$79) {
  STACKTOP = sp;
  return $46 | 0;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$79 >> 2] | 0) + 20 >> 2] & 63]($79);
 STACKTOP = sp;
 return $46 | 0;
}

function __ZN9rapidjson13GenericReaderINS_4UTF8IcEES2_NS_12CrtAllocatorEE19ParseStringToStreamILj1ES2_S2_NS_25GenericInsituStringStreamIS2_EES7_EEvRT2_RT3_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $15 = 0, $18 = 0, $23 = 0, $28 = 0, $3 = 0, $31 = 0, $36 = 0, $4 = 0, $5 = 0, $51 = 0, $55 = 0, $58 = 0, $6 = 0, $60 = 0, $63 = 0, $66 = 0, $68 = 0, $7 = 0, label = 0;
 $3 = $1 + 8 | 0;
 $4 = $2 + 4 | 0;
 $5 = $0 + 24 | 0;
 L1 : while (1) {
  $6 = HEAP32[$1 >> 2] | 0;
  $7 = HEAP8[$6 >> 0] | 0;
  L3 : do switch ($7 << 24 >> 24) {
  case 34:
   {
    label = 24;
    break L1;
    break;
   }
  case 92:
   {
    $10 = $6 - (HEAP32[$3 >> 2] | 0) | 0;
    $11 = $6 + 1 | 0;
    HEAP32[$1 >> 2] = $11;
    $12 = HEAP8[$11 >> 0] | 0;
    $15 = HEAP8[17328 + ($12 & 255) >> 0] | 0;
    if ($15 << 24 >> 24) {
     HEAP32[$1 >> 2] = $6 + 2;
     $18 = HEAP32[$4 >> 2] | 0;
     if (!$18) {
      label = 5;
      break L1;
     }
     HEAP32[$4 >> 2] = $18 + 1;
     HEAP8[$18 >> 0] = $15;
     break L3;
    }
    if ($12 << 24 >> 24 != 117) {
     label = 21;
     break L1;
    }
    HEAP32[$1 >> 2] = $6 + 2;
    $23 = __ZN9rapidjson13GenericReaderINS_4UTF8IcEES2_NS_12CrtAllocatorEE9ParseHex4INS_25GenericInsituStringStreamIS2_EEEEjRT_j($0, $1, $10) | 0;
    if (HEAP32[$5 >> 2] | 0) {
     label = 38;
     break L1;
    }
    if (($23 & -1024 | 0) == 55296) {
     $28 = HEAP32[$1 >> 2] | 0;
     if ((HEAP8[$28 >> 0] | 0) != 92) break L1;
     $31 = $28 + 1 | 0;
     HEAP32[$1 >> 2] = $31;
     if ((HEAP8[$31 >> 0] | 0) != 117) {
      label = 13;
      break L1;
     }
     HEAP32[$1 >> 2] = $28 + 2;
     $36 = __ZN9rapidjson13GenericReaderINS_4UTF8IcEES2_NS_12CrtAllocatorEE9ParseHex4INS_25GenericInsituStringStreamIS2_EEEEjRT_j($0, $1, $10) | 0;
     if (HEAP32[$5 >> 2] | 0) {
      label = 38;
      break L1;
     }
     if (($36 & -1024 | 0) != 56320) {
      label = 18;
      break L1;
     }
     $$1 = ($36 + -56320 | ($23 << 10) + -56623104) + 65536 | 0;
    } else $$1 = $23;
    __ZN9rapidjson4UTF8IcE6EncodeINS_25GenericInsituStringStreamIS1_EEEEvRT_j($2, $$1);
    break;
   }
  default:
   {
    if (($7 & 255) < 32) {
     label = 28;
     break L1;
    }
    HEAP32[$1 >> 2] = $6 + 1;
    $66 = HEAP32[$4 >> 2] | 0;
    if (!$66) {
     label = 36;
     break L1;
    }
    $68 = HEAP8[$6 >> 0] | 0;
    HEAP32[$4 >> 2] = $66 + 1;
    HEAP8[$66 >> 0] = $68;
   }
  } while (0);
 }
 if ((label | 0) == 5) ___assert_fail(17584, 17594, 155, 17646); else if ((label | 0) == 13) {
  if (HEAP32[$5 >> 2] | 0) ___assert_fail(17049, 16987, 874, 17650);
 } else if ((label | 0) == 18) {
  HEAP32[$5 >> 2] = 9;
  HEAP32[$0 + 28 >> 2] = $10;
  return;
 } else if ((label | 0) == 21) {
  if (HEAP32[$5 >> 2] | 0) ___assert_fail(17049, 16987, 884, 17650);
  HEAP32[$5 >> 2] = 10;
  HEAP32[$0 + 28 >> 2] = $10;
  return;
 } else if ((label | 0) == 24) {
  HEAP32[$1 >> 2] = $6 + 1;
  $51 = HEAP32[$4 >> 2] | 0;
  if (!$51) ___assert_fail(17584, 17594, 155, 17646);
  HEAP32[$4 >> 2] = $51 + 1;
  HEAP8[$51 >> 0] = 0;
  return;
 } else if ((label | 0) == 28) {
  $55 = $6;
  $58 = (HEAP32[$5 >> 2] | 0) != 0;
  if (!($7 << 24 >> 24)) {
   if ($58) ___assert_fail(17049, 16987, 893, 17650);
   $60 = $55 - (HEAP32[$3 >> 2] | 0) | 0;
   HEAP32[$5 >> 2] = 11;
   HEAP32[$0 + 28 >> 2] = $60;
   return;
  } else {
   if ($58) ___assert_fail(17049, 16987, 895, 17650);
   $63 = $55 - (HEAP32[$3 >> 2] | 0) | 0;
   HEAP32[$5 >> 2] = 10;
   HEAP32[$0 + 28 >> 2] = $63;
   return;
  }
 } else if ((label | 0) == 36) ___assert_fail(17584, 17594, 155, 17646); else if ((label | 0) == 38) return;
 HEAP32[$5 >> 2] = 9;
 HEAP32[$0 + 28 >> 2] = $10;
 return;
}

function __ZN2ut4arch9Archetype18containsComponentsERKNSt3__26vectorINS0_13ComponentSpecENS2_9allocatorIS4_EEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$01113$i = 0, $$082 = 0, $$084$lcssa = 0, $$084134 = 0, $$086$lcssa = 0, $$086133 = 0, $$088132 = 0, $$089$ph = 0, $$093$ph = 0, $$093121$us = 0, $$095$ph = 0, $$098$ph = 0, $$185 = 0, $$187 = 0, $$190 = 0, $$194 = 0, $$2100 = 0, $$291119 = 0, $$297 = 0, $11 = 0, $20 = 0, $21 = 0, $23 = 0, $25 = 0, $26 = 0, $28 = 0, $31 = 0, $34 = 0, $4 = 0, $40 = 0, $5 = 0, $51 = 0, $6 = 0, $8 = 0, $switch = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $4 = HEAP32[$1 >> 2] | 0;
 $5 = (HEAP32[$1 + 4 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 3;
 $8 = $4;
 L1 : do if ($6 >>> 0 > 1) {
  $$01113$i = 1;
  while (1) {
   $11 = HEAP32[$8 + ($$01113$i + -1 << 3) >> 2] | 0;
   if (($11 | 0) != -1) if ($11 >>> 0 >= (HEAP32[$8 + ($$01113$i << 3) >> 2] | 0) >>> 0) break;
   $$01113$i = $$01113$i + 1 | 0;
   if ($$01113$i >>> 0 >= $6 >>> 0) break L1;
  }
  _snprintf(25060, 1024, 14174, $vararg_buffer) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14239, 14285, 31);
 } while (0);
 if (($5 | 0) > 0) {
  $$084134 = 0;
  $$086133 = 0;
  $$088132 = 0;
  while (1) {
   $34 = HEAP32[$8 + ($$088132 << 3) + 4 >> 2] | 0;
   $switch = ($34 + -3 | 0) >>> 0 < 2;
   $$187 = $$086133 + (($34 | 0) == 7 & ($switch ^ 1) & 1) | 0;
   $$185 = $$084134 + ($switch & 1) | 0;
   $$088132 = $$088132 + 1 | 0;
   if (($$088132 | 0) >= ($6 | 0)) {
    $$084$lcssa = $$185;
    $$086$lcssa = $$187;
    break;
   } else {
    $$084134 = $$185;
    $$086133 = $$187;
   }
  }
 } else {
  $$084$lcssa = 0;
  $$086$lcssa = 0;
 }
 $20 = HEAP32[$0 + 28 >> 2] | 0;
 $21 = $0 + 32 | 0;
 $$089$ph = 0;
 $$093$ph = 0;
 $$095$ph = 0;
 $$098$ph = 0;
 L15 : while (1) {
  $23 = ($$089$ph | 0) < ($6 | 0);
  if (!($23 & ($$093$ph | 0) < ($20 | 0))) {
   label = 20;
   break;
  }
  $25 = HEAP32[$8 + ($$089$ph << 3) >> 2] | 0;
  $26 = HEAP32[$21 >> 2] | 0;
  $$093121$us = $$093$ph;
  while (1) {
   $28 = HEAP32[$26 + ($$093121$us << 4) >> 2] | 0;
   if (($28 | 0) == ($25 | 0)) {
    label = 16;
    break;
   }
   if ($28 >>> 0 > $25 >>> 0) {
    label = 18;
    break;
   }
   $31 = $$093121$us + 1 | 0;
   if (($31 | 0) < ($20 | 0)) $$093121$us = $31; else {
    label = 20;
    break L15;
   }
  }
  if ((label | 0) == 16) {
   label = 0;
   $40 = HEAP32[$8 + ($$089$ph << 3) + 4 >> 2] | 0;
   if (($40 | 0) == 2) {
    label = 26;
    break;
   }
   $$082 = 7;
   $$190 = $$089$ph + 1 | 0;
   $$194 = $$093121$us + 1 | 0;
   $$2100 = $$098$ph + (($40 + -3 | 0) >>> 0 < 2 & 1) | 0;
   $$297 = $$095$ph + (($40 | 0) == 7 & 1) | 0;
  } else if ((label | 0) == 18) {
   label = 0;
   $51 = (HEAP32[$8 + ($$089$ph << 3) + 4 >> 2] | 0) >>> 0 < 2;
   $$082 = $51 ? 1 : 7;
   $$190 = $$089$ph + (($51 ^ 1) & 1) | 0;
   $$194 = $$093121$us;
   $$2100 = $$098$ph;
   $$297 = $$095$ph;
  }
  if (($$082 & 7) == 7) {
   $$089$ph = $$190;
   $$093$ph = $$194;
   $$095$ph = $$297;
   $$098$ph = $$2100;
  } else {
   label = 26;
   break;
  }
 }
 if ((label | 0) == 20) {
  L29 : do if ($23) {
   $$291119 = $$089$ph;
   while (1) {
    if ((HEAP32[$8 + ($$291119 << 3) + 4 >> 2] | 0) >>> 0 < 2) break;
    $$291119 = $$291119 + 1 | 0;
    if (($$291119 | 0) >= ($6 | 0)) break L29;
   }
   STACKTOP = sp;
   return 0;
  } while (0);
  if (($$084$lcssa | 0) == 0 | ($$098$ph | 0) > 0) {
   STACKTOP = sp;
   return ($$086$lcssa | 0) == 0 | ($$086$lcssa | 0) != ($$095$ph | 0) | 0;
  } else {
   STACKTOP = sp;
   return 0;
  }
 } else if ((label | 0) == 26) {
  STACKTOP = sp;
  return 0;
 }
 return 0;
}

function __ZN9rapidjson13GenericReaderINS_4UTF8IcEES2_NS_12CrtAllocatorEE10ParseArrayILj1ENS_25GenericInsituStringStreamIS2_EENS_15GenericDocumentIS2_NS_19MemoryPoolAllocatorIS3_EES3_EEEEvRT0_RT1_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$033 = 0, $$sroa$0$0$i$i = 0, $$sroa$0$0$i$i28 = 0, $12 = 0, $18 = 0, $19 = 0, $21 = 0, $22 = 0, $3 = 0, $37 = 0, $43 = 0, $55 = 0, $60 = 0, $8 = 0, label = 0;
 $3 = HEAP32[$1 >> 2] | 0;
 if ((HEAP8[$3 >> 0] | 0) != 91) ___assert_fail(17247, 16987, 658, 17264);
 HEAP32[$1 >> 2] = $3 + 1;
 $8 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushINS_12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorIS2_EEEEEEPT_j($2 + 32 | 0, 1) | 0;
 HEAP32[$8 >> 2] = 0;
 HEAP32[$8 + 4 >> 2] = 0;
 HEAP32[$8 + 8 >> 2] = 0;
 HEAP32[$8 + 12 >> 2] = 0;
 HEAP32[$8 + 16 >> 2] = 0;
 HEAP32[$8 + 20 >> 2] = 0;
 HEAP16[$8 + 18 >> 1] = 4;
 $$sroa$0$0$i$i = HEAP32[$1 >> 2] | 0;
 L4 : while (1) {
  switch (HEAP8[$$sroa$0$0$i$i >> 0] | 0) {
  case 9:
  case 13:
  case 10:
  case 32:
   break;
  default:
   break L4;
  }
  $$sroa$0$0$i$i = $$sroa$0$0$i$i + 1 | 0;
 }
 HEAP32[$1 >> 2] = $$sroa$0$0$i$i;
 $12 = $0 + 24 | 0;
 if (HEAP32[$12 >> 2] | 0) return;
 if ((HEAP8[$$sroa$0$0$i$i >> 0] | 0) == 93) {
  HEAP32[$1 >> 2] = $$sroa$0$0$i$i + 1;
  $18 = $2 + 44 | 0;
  $19 = HEAP32[$18 >> 2] | 0;
  $21 = HEAP32[$2 + 40 >> 2] | 0;
  $22 = $19;
  HEAP32[$18 >> 2] = $22;
  if (($19 - $21 | 0) >>> 0 <= 23) ___assert_fail(15105, 5657, 144, 15128);
  if (!(HEAP32[$2 + 24 >> 2] | 0)) ___assert_fail(17275, 15939, 2309, 17286);
  HEAP16[$22 + -6 >> 1] = 4;
  HEAP32[$22 + -16 >> 2] = 0;
  HEAP32[$22 + -20 >> 2] = 0;
  HEAP32[$22 + -24 >> 2] = 0;
  return;
 }
 __ZN9rapidjson13GenericReaderINS_4UTF8IcEES2_NS_12CrtAllocatorEE10ParseValueILj1ENS_25GenericInsituStringStreamIS2_EENS_15GenericDocumentIS2_NS_19MemoryPoolAllocatorIS3_EES3_EEEEvRT0_RT1_($0, $1, $2);
 if (HEAP32[$12 >> 2] | 0) return;
 $$033 = 0;
 L24 : while (1) {
  $37 = HEAP32[$1 >> 2] | 0;
  L26 : while (1) {
   switch (HEAP8[$37 >> 0] | 0) {
   case 9:
   case 13:
   case 10:
   case 32:
    break;
   default:
    break L26;
   }
   $37 = $37 + 1 | 0;
  }
  $$033 = $$033 + 1 | 0;
  HEAP32[$1 >> 2] = $37;
  if (HEAP32[$12 >> 2] | 0) {
   label = 30;
   break;
  }
  switch (HEAP8[$37 >> 0] | 0) {
  case 93:
   {
    label = 25;
    break L24;
    break;
   }
  case 44:
   break;
  default:
   {
    label = 29;
    break L24;
   }
  }
  $43 = $37 + 1 | 0;
  HEAP32[$1 >> 2] = $43;
  $$sroa$0$0$i$i28 = $43;
  L32 : while (1) {
   switch (HEAP8[$$sroa$0$0$i$i28 >> 0] | 0) {
   case 9:
   case 13:
   case 10:
   case 32:
    break;
   default:
    break L32;
   }
   $$sroa$0$0$i$i28 = $$sroa$0$0$i$i28 + 1 | 0;
  }
  HEAP32[$1 >> 2] = $$sroa$0$0$i$i28;
  if (HEAP32[$12 >> 2] | 0) {
   label = 30;
   break;
  }
  __ZN9rapidjson13GenericReaderINS_4UTF8IcEES2_NS_12CrtAllocatorEE10ParseValueILj1ENS_25GenericInsituStringStreamIS2_EENS_15GenericDocumentIS2_NS_19MemoryPoolAllocatorIS3_EES3_EEEEvRT0_RT1_($0, $1, $2);
  if (HEAP32[$12 >> 2] | 0) {
   label = 30;
   break;
  }
 }
 if ((label | 0) == 25) {
  HEAP32[$1 >> 2] = $37 + 1;
  if (__ZN9rapidjson15GenericDocumentINS_4UTF8IcEENS_19MemoryPoolAllocatorINS_12CrtAllocatorEEES4_E8EndArrayEj($2, $$033) | 0) return;
  if (!(HEAP32[$12 >> 2] | 0)) {
   $55 = (HEAP32[$1 >> 2] | 0) - (HEAP32[$1 + 8 >> 2] | 0) | 0;
   HEAP32[$12 >> 2] = 16;
   HEAP32[$0 + 28 >> 2] = $55;
   return;
  } else ___assert_fail(17049, 16987, 687, 17264);
 } else if ((label | 0) == 29) {
  $60 = $37 - (HEAP32[$1 + 8 >> 2] | 0) | 0;
  HEAP32[$12 >> 2] = 7;
  HEAP32[$0 + 28 >> 2] = $60;
  return;
 } else if ((label | 0) == 30) return;
}

function __ZNSt3__210shared_ptrI14DelegateSystemE11make_sharedIJRPKcRPFvPN2ut9SchedulerEPNS7_12ManagerWorldEPvERSC_EEES2_DpOT_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$016$i$i$i$i$i = 0, $$017$i$i$i$i$i = 0, $$pr$i$i$i = 0, $$pre$i = 0, $10 = 0, $11 = 0, $15 = 0, $16 = 0, $24 = 0, $25 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $64 = 0, $7 = 0, $76 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $4 = sp + 36 | 0;
 $5 = sp + 24 | 0;
 $6 = sp;
 $7 = __Znwj(88) | 0;
 $8 = $7 + 4 | 0;
 HEAP32[$8 >> 2] = 0;
 $9 = $7 + 8 | 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$7 >> 2] = 3388;
 $10 = HEAP32[$1 >> 2] | 0;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 $11 = _strlen($10) | 0;
 if ($11 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($5);
 if ($11 >>> 0 < 11) {
  HEAP8[$5 + 11 >> 0] = $11;
  if (!$11) $$017$i$i$i$i$i = $5; else {
   $$016$i$i$i$i$i = $5;
   label = 6;
  }
 } else {
  $15 = $11 + 16 & -16;
  $16 = __Znwj($15) | 0;
  HEAP32[$5 >> 2] = $16;
  HEAP32[$5 + 8 >> 2] = $15 | -2147483648;
  HEAP32[$5 + 4 >> 2] = $11;
  $$016$i$i$i$i$i = $16;
  label = 6;
 }
 if ((label | 0) == 6) {
  _memcpy($$016$i$i$i$i$i | 0, $10 | 0, $11 | 0) | 0;
  $$017$i$i$i$i$i = $$016$i$i$i$i$i;
 }
 HEAP8[$$017$i$i$i$i$i + $11 >> 0] = 0;
 $24 = HEAP32[$2 >> 2] | 0;
 $25 = $6 + 16 | 0;
 HEAP32[$25 >> 2] = 0;
 if ($24 | 0) {
  HEAP32[$6 >> 2] = 3416;
  HEAP32[$6 + 4 >> 2] = $24;
  HEAP32[$25 >> 2] = $6;
 }
 $29 = HEAP32[$3 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($4, $5);
 $30 = $7 + 20 | 0;
 HEAP32[$30 >> 2] = 0;
 $31 = $7 + 24 | 0;
 HEAP32[$31 >> 2] = 0;
 $32 = $7 + 16 | 0;
 $33 = $7 + 28 | 0;
 HEAP32[$33 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$33 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 HEAP32[$33 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 $34 = $7 + 40 | 0;
 HEAP32[$34 >> 2] = 0;
 HEAP32[$34 + 4 >> 2] = 0;
 HEAP32[$34 + 8 >> 2] = 0;
 HEAP8[$34 + 12 >> 0] = 0;
 HEAP32[$32 >> 2] = 3452;
 $35 = $7 + 56 | 0;
 $36 = HEAP32[$25 >> 2] | 0;
 do if (!$36) {
  HEAP32[$7 + 72 >> 2] = 0;
  HEAP32[$7 + 80 >> 2] = $29;
 } else {
  if (($6 | 0) == ($36 | 0)) {
   HEAP32[$7 + 72 >> 2] = $35;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$36 >> 2] | 0) + 12 >> 2] & 15]($36, $35);
  } else HEAP32[$7 + 72 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$36 >> 2] | 0) + 8 >> 2] & 7]($36) | 0;
  $$pr$i$i$i = HEAP32[$25 >> 2] | 0;
  HEAP32[$7 + 80 >> 2] = $29;
  if (($6 | 0) == ($$pr$i$i$i | 0)) {
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$$pr$i$i$i >> 2] | 0) + 16 >> 2] & 63]($$pr$i$i$i);
   break;
  }
  if ($$pr$i$i$i | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$$pr$i$i$i >> 2] | 0) + 20 >> 2] & 63]($$pr$i$i$i);
 } while (0);
 if ((HEAP8[$5 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$5 >> 2] | 0);
 HEAP32[$0 >> 2] = $32;
 HEAP32[$0 + 4 >> 2] = $7;
 $64 = HEAP32[$31 >> 2] | 0;
 if (!$64) $$pre$i = 0; else if ((HEAP32[$64 + 4 >> 2] | 0) == -1) $$pre$i = $64; else {
  STACKTOP = sp;
  return;
 }
 HEAP32[$8 >> 2] = (HEAP32[$8 >> 2] | 0) + 1;
 HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + 1;
 HEAP32[$30 >> 2] = $32;
 HEAP32[$31 >> 2] = $7;
 if ($$pre$i | 0) __ZNSt3__219__shared_weak_count14__release_weakEv($$pre$i);
 $76 = HEAP32[$8 >> 2] | 0;
 HEAP32[$8 >> 2] = $76 + -1;
 if ($76 | 0) {
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$7 >> 2] | 0) + 8 >> 2] & 63]($7);
 __ZNSt3__219__shared_weak_count14__release_weakEv($7);
 STACKTOP = sp;
 return;
}

function __ZNSt3__212__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEjRKT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0$i = 0, $$02832$i = 0, $$02833$i = 0, $$02833$us$i = 0, $$pre$phi$iZ2D = 0, $$sroa$0$0$i = 0, $12 = 0, $14 = 0, $15 = 0, $19 = 0, $2 = 0, $20 = 0, $28 = 0, $33 = 0, $4 = 0, $41 = 0, $42 = 0, $44 = 0, $49 = 0, $54 = 0, $55 = 0, $58 = 0, $6 = 0, $63 = 0, $64 = 0, $66 = 0, $68 = 0, $73 = 0, $76 = 0, $77 = 0, $8 = 0, label = 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $4 = HEAP32[$0 + 4 >> 2] | 0;
 if (!$4) {
  $$0 = 0;
  return $$0 | 0;
 }
 $6 = $4 + -1 | 0;
 $8 = ($6 & $4 | 0) == 0;
 if ($8) $14 = $6 & $2; else if ($2 >>> 0 < $4 >>> 0) $14 = $2; else $14 = ($2 >>> 0) % ($4 >>> 0) | 0;
 $12 = HEAP32[$0 >> 2] | 0;
 $15 = HEAP32[$12 + ($14 << 2) >> 2] | 0;
 if (!$15) {
  $$0 = 0;
  return $$0 | 0;
 }
 $$02832$i = HEAP32[$15 >> 2] | 0;
 if (!$$02832$i) {
  $$0 = 0;
  return $$0 | 0;
 }
 L15 : do if ($8) {
  $$02833$us$i = $$02832$i;
  while (1) {
   $19 = HEAP32[$$02833$us$i + 4 >> 2] | 0;
   $20 = ($19 | 0) == ($2 | 0);
   if (!($20 | ($19 & $6 | 0) == ($14 | 0))) {
    $$0 = 0;
    label = 50;
    break;
   }
   if ($20) if ((HEAP32[$$02833$us$i + 8 >> 2] | 0) == ($2 | 0)) {
    $$sroa$0$0$i = $$02833$us$i;
    break L15;
   }
   $$02833$us$i = HEAP32[$$02833$us$i >> 2] | 0;
   if (!$$02833$us$i) {
    $$0 = 0;
    label = 50;
    break;
   }
  }
  if ((label | 0) == 50) return $$0 | 0;
 } else {
  $$02833$i = $$02832$i;
  while (1) {
   $28 = HEAP32[$$02833$i + 4 >> 2] | 0;
   if (($28 | 0) == ($2 | 0)) {
    if ((HEAP32[$$02833$i + 8 >> 2] | 0) == ($2 | 0)) {
     $$sroa$0$0$i = $$02833$i;
     break L15;
    }
   } else {
    if ($28 >>> 0 < $4 >>> 0) $33 = $28; else $33 = ($28 >>> 0) % ($4 >>> 0) | 0;
    if (($33 | 0) != ($14 | 0)) {
     $$0 = 0;
     label = 50;
     break;
    }
   }
   $$02833$i = HEAP32[$$02833$i >> 2] | 0;
   if (!$$02833$i) {
    $$0 = 0;
    label = 50;
    break;
   }
  }
  if ((label | 0) == 50) return $$0 | 0;
 } while (0);
 if ($8) $42 = $2 & $6; else if ($2 >>> 0 < $4 >>> 0) $42 = $2; else $42 = ($2 >>> 0) % ($4 >>> 0) | 0;
 $41 = $12 + ($42 << 2) | 0;
 $$0$i = HEAP32[$41 >> 2] | 0;
 while (1) {
  $44 = HEAP32[$$0$i >> 2] | 0;
  if (($44 | 0) == ($$sroa$0$0$i | 0)) break; else $$0$i = $44;
 }
 if (($$0$i | 0) == ($0 + 8 | 0)) label = 34; else {
  $49 = HEAP32[$$0$i + 4 >> 2] | 0;
  if ($8) $54 = $49 & $6; else if ($49 >>> 0 < $4 >>> 0) $54 = $49; else $54 = ($49 >>> 0) % ($4 >>> 0) | 0;
  if (($54 | 0) == ($42 | 0)) $$pre$phi$iZ2D = $$sroa$0$0$i; else label = 34;
 }
 do if ((label | 0) == 34) {
  $55 = HEAP32[$$sroa$0$0$i >> 2] | 0;
  if ($55 | 0) {
   $58 = HEAP32[$55 + 4 >> 2] | 0;
   if ($8) $63 = $58 & $6; else if ($58 >>> 0 < $4 >>> 0) $63 = $58; else $63 = ($58 >>> 0) % ($4 >>> 0) | 0;
   if (($63 | 0) == ($42 | 0)) {
    $$pre$phi$iZ2D = $$sroa$0$0$i;
    break;
   }
  }
  HEAP32[$41 >> 2] = 0;
  $$pre$phi$iZ2D = $$sroa$0$0$i;
 } while (0);
 $64 = HEAP32[$$pre$phi$iZ2D >> 2] | 0;
 $66 = $64;
 if (!$64) $76 = $66; else {
  $68 = HEAP32[$64 + 4 >> 2] | 0;
  if ($8) $73 = $68 & $6; else if ($68 >>> 0 < $4 >>> 0) $73 = $68; else $73 = ($68 >>> 0) % ($4 >>> 0) | 0;
  if (($73 | 0) == ($42 | 0)) $76 = $66; else {
   HEAP32[(HEAP32[$0 >> 2] | 0) + ($73 << 2) >> 2] = $$0$i;
   $76 = HEAP32[$$sroa$0$0$i >> 2] | 0;
  }
 }
 HEAP32[$$0$i >> 2] = $76;
 HEAP32[$$pre$phi$iZ2D >> 2] = 0;
 $77 = $0 + 12 | 0;
 HEAP32[$77 >> 2] = (HEAP32[$77 >> 2] | 0) + -1;
 if (!$$sroa$0$0$i) {
  $$0 = 1;
  return $$0 | 0;
 }
 __ZdlPv($$sroa$0$0$i);
 $$0 = 1;
 return $$0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i = 0, $$0$i$i = 0, $$038 = 0, $$040$in = 0, $$3 = 0, $12 = 0, $20 = 0, $22 = 0, $3 = 0, $31 = 0, $32 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $9 = 0, $isdigittmp = 0, $isdigittmp47 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $3 = sp + 40 | 0;
 $4 = sp + 16 | 0;
 $5 = sp;
 L1 : do if (($0 | 0) == ($1 | 0)) $$3 = $0; else {
  $isdigittmp = (HEAP8[$0 >> 0] | 0) + -48 | 0;
  if ($isdigittmp >>> 0 < 10) {
   $9 = $0 + 1 | 0;
   if (($9 | 0) == ($1 | 0)) $$3 = $0; else {
    $$038 = $isdigittmp;
    $$040$in = $9;
    while (1) {
     $isdigittmp47 = (HEAP8[$$040$in >> 0] | 0) + -48 | 0;
     if ($isdigittmp47 >>> 0 >= 10) break;
     $12 = $$040$in + 1 | 0;
     if (($12 | 0) == ($1 | 0)) {
      $$3 = $0;
      break L1;
     }
     $$038 = $isdigittmp47 + ($$038 * 10 | 0) | 0;
     $$040$in = $12;
    }
    if (($1 - $$040$in | 0) >>> 0 < $$038 >>> 0) $$3 = $0; else {
     HEAP32[$3 >> 2] = 0;
     HEAP32[$3 + 4 >> 2] = 0;
     HEAP32[$3 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($3, $$040$in, $$038);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_jjRKS6_($4, $3, 10);
     $20 = __ZNSt3__211char_traitsIcE6lengthEPKc(23657) | 0;
     $22 = HEAP8[$4 + 11 >> 0] | 0;
     if (($20 | 0) == (($22 << 24 >> 24 < 0 ? HEAP32[$4 + 4 >> 2] | 0 : $22 & 255) | 0)) $$0$i = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEjjPKcj($4, 23657, $20) | 0) == 0; else $$0$i = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     if ($$0$i) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj22EEERAT__Kc($4);
      $31 = $2 + 4 | 0;
      $32 = HEAP32[$31 >> 2] | 0;
      if ($32 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($32, $4);
       HEAP32[$31 >> 2] = (HEAP32[$31 >> 2] | 0) + 24;
      } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $4);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
     } else {
      HEAP32[$5 >> 2] = HEAP32[$3 >> 2];
      HEAP32[$5 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
      HEAP32[$5 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
      $$0$i$i = 0;
      while (1) {
       if (($$0$i$i | 0) == 3) break;
       HEAP32[$3 + ($$0$i$i << 2) >> 2] = 0;
       $$0$i$i = $$0$i$i + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($4, $5);
      $40 = $2 + 4 | 0;
      $41 = HEAP32[$40 >> 2] | 0;
      if ($41 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($41, $4);
       HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 24;
      } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $4);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$3 = $$040$in + $$038 | 0;
    }
   }
  } else $$3 = $0;
 } while (0);
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZNSt3__210shared_ptrIN2ut12SimpleSystemEE11make_sharedIJRKNS1_12NativeStringERNS_8functionIFvPNS1_9SchedulerEPNS1_12ManagerWorldEEEEEEES3_DpOT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$021$i$i1$i$i$i$i = 0, $$023$i$i$i$i$i$i = 0, $$1$lcssa$i$i$i$i$i$i = 0, $$122$i$i$i$i$i$i = 0, $$pre$i = 0, $$pre$phi$i$i$iZ2D = 0, $12 = 0, $13 = 0, $17 = 0, $18 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $4 = 0, $42 = 0, $43 = 0, $5 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $71 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $3 = sp + 24 | 0;
 $4 = sp;
 $5 = __Znwj(104) | 0;
 $6 = $5 + 4 | 0;
 HEAP32[$6 >> 2] = 0;
 $7 = $5 + 8 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$5 >> 2] = 3836;
 $8 = $5 + 16 | 0;
 $9 = HEAP32[$1 >> 2] | 0;
 if (!$9) {
  HEAP32[$3 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = 0;
 } else {
  $12 = HEAP32[$1 + 4 >> 2] | 0;
  $13 = $9 + $12 | 0;
  HEAP32[$3 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = 0;
  if ($12 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($3);
  if ($12 >>> 0 < 11) {
   HEAP8[$3 + 11 >> 0] = $12;
   if (!$12) $$1$lcssa$i$i$i$i$i$i = $3; else {
    $$021$i$i1$i$i$i$i = $3;
    label = 7;
   }
  } else {
   $17 = $12 + 16 & -16;
   $18 = __Znwj($17) | 0;
   HEAP32[$3 >> 2] = $18;
   HEAP32[$3 + 8 >> 2] = $17 | -2147483648;
   HEAP32[$3 + 4 >> 2] = $12;
   $$021$i$i1$i$i$i$i = $18;
   label = 7;
  }
  if ((label | 0) == 7) {
   $$023$i$i$i$i$i$i = $9;
   $$122$i$i$i$i$i$i = $$021$i$i1$i$i$i$i;
   while (1) {
    HEAP8[$$122$i$i$i$i$i$i >> 0] = HEAP8[$$023$i$i$i$i$i$i >> 0] | 0;
    $$023$i$i$i$i$i$i = $$023$i$i$i$i$i$i + 1 | 0;
    if (($$023$i$i$i$i$i$i | 0) == ($13 | 0)) break; else $$122$i$i$i$i$i$i = $$122$i$i$i$i$i$i + 1 | 0;
   }
   $$1$lcssa$i$i$i$i$i$i = $$021$i$i1$i$i$i$i + $12 | 0;
  }
  HEAP8[$$1$lcssa$i$i$i$i$i$i >> 0] = 0;
 }
 $30 = HEAP32[$2 + 16 >> 2] | 0;
 do if (!$30) {
  $32 = $4 + 16 | 0;
  HEAP32[$32 >> 2] = 0;
  $$pre$phi$i$i$iZ2D = $32;
 } else if (($2 | 0) == ($30 | 0)) {
  $34 = $4 + 16 | 0;
  HEAP32[$34 >> 2] = $4;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$30 >> 2] | 0) + 12 >> 2] & 15]($30, $4);
  $$pre$phi$i$i$iZ2D = $34;
  break;
 } else {
  $42 = $4 + 16 | 0;
  HEAP32[$42 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 8 >> 2] & 7]($30) | 0;
  $$pre$phi$i$i$iZ2D = $42;
  break;
 } while (0);
 __ZN2ut12SimpleSystemC2ENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_8functionIFvPNS_9SchedulerEPNS_12ManagerWorldEEEE($8, $3, $4);
 $43 = HEAP32[$$pre$phi$i$i$iZ2D >> 2] | 0;
 if (($4 | 0) == ($43 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$43 >> 2] | 0) + 16 >> 2] & 63]($43); else if ($43 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$43 >> 2] | 0) + 20 >> 2] & 63]($43);
 if ((HEAP8[$3 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$3 >> 2] | 0);
 HEAP32[$0 >> 2] = $8;
 HEAP32[$0 + 4 >> 2] = $5;
 $57 = $5 + 20 | 0;
 $58 = $5 + 24 | 0;
 $59 = HEAP32[$58 >> 2] | 0;
 if (!$59) $$pre$i = 0; else if ((HEAP32[$59 + 4 >> 2] | 0) == -1) $$pre$i = $59; else {
  STACKTOP = sp;
  return;
 }
 HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 1;
 HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + 1;
 HEAP32[$57 >> 2] = $8;
 HEAP32[$58 >> 2] = $5;
 if ($$pre$i | 0) __ZNSt3__219__shared_weak_count14__release_weakEv($$pre$i);
 $71 = HEAP32[$6 >> 2] | 0;
 HEAP32[$6 >> 2] = $71 + -1;
 if ($71 | 0) {
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$5 >> 2] | 0) + 8 >> 2] & 63]($5);
 __ZNSt3__219__shared_weak_count14__release_weakEv($5);
 STACKTOP = sp;
 return;
}

function __ZN2ut4arch16ArchetypeManager14constructChunkEPNS0_9ArchetypeEPNS0_5ChunkEPi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$034 = 0, $$idx8$i = 0, $14 = 0, $15 = 0, $23 = 0, $25 = 0, $26 = 0, $29 = 0, $32 = 0, $33 = 0, $37 = 0, $38 = 0, $52 = 0, $55 = 0, $60 = 0, $62 = 0, $65 = 0, $70 = 0, $72 = 0, $74 = 0, $79 = 0, $84 = 0, $85 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 _memset($2 | 0, 0, 16384) | 0;
 HEAP32[$2 + 16 >> 2] = $1;
 HEAP32[$2 + 24 >> 2] = 0;
 HEAP32[$2 + 28 >> 2] = HEAP32[$1 + 20 >> 2];
 $9 = $1 + 104 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 $14 = $2 + 20 | 0;
 HEAP32[$14 >> 2] = $2 + (16384 - (HEAP32[$9 >> 2] << 2));
 $15 = $1 + 28 | 0;
 $23 = $2 + 40 | 0;
 HEAP32[$23 >> 2] = $2 + (16384 - (HEAP32[$15 >> 2] << 2) - (HEAP32[$9 >> 2] << 2));
 if (($2 | 0) == ($1 | 0)) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9349, 9361, 37);
 }
 $25 = HEAP32[$1 >> 2] | 0;
 HEAP32[$2 >> 2] = $25;
 $26 = $2 + 4 | 0;
 HEAP32[$26 >> 2] = $1;
 HEAP32[$25 + 4 >> 2] = $2;
 HEAP32[HEAP32[$26 >> 2] >> 2] = $2;
 $29 = $1 + 24 | 0;
 HEAP32[$29 >> 2] = (HEAP32[$29 >> 2] | 0) + 1;
 $32 = $1 + 8 | 0;
 $33 = $2 + 8 | 0;
 if (($33 | 0) == ($32 | 0)) {
  _snprintf(25060, 1024, 27124, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9349, 9361, 37);
 }
 if (HEAP32[$33 >> 2] | 0) {
  _snprintf(25060, 1024, 27124, sp + 16 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9438, 9361, 38);
 }
 $37 = HEAP32[$32 >> 2] | 0;
 HEAP32[$33 >> 2] = $37;
 $38 = $2 + 12 | 0;
 HEAP32[$38 >> 2] = $32;
 HEAP32[$37 + 4 >> 2] = $33;
 HEAP32[HEAP32[$38 >> 2] >> 2] = $33;
 if ((HEAP32[$1 + 4 >> 2] | 0) == ($1 | 0)) {
  _snprintf(25060, 1024, 27124, sp + 24 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 10047, 9243, 292);
 }
 if ((HEAP32[$1 + 12 >> 2] | 0) == ($32 | 0)) {
  _snprintf(25060, 1024, 27124, sp + 32 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 10077, 9243, 293);
 }
 if ((HEAP32[$1 >> 2] | 0) != ($2 | 0)) {
  _snprintf(25060, 1024, 27124, sp + 40 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 10121, 9243, 295);
 }
 if (((HEAP32[$32 >> 2] | 0) + -8 | 0) != ($2 | 0)) {
  _snprintf(25060, 1024, 27124, sp + 48 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 10168, 9243, 296);
 }
 $52 = HEAP32[$15 >> 2] | 0;
 if (($52 << 2 | 0) > 0) {
  $55 = ~$52;
  _memset(HEAP32[$23 >> 2] | 0, 0, ($52 + (($55 | 0) > -2 ? $55 : -2) << 2) + 8 | 0) | 0;
 }
 $60 = HEAP32[$9 >> 2] | 0;
 if (($60 | 0) < 1) {
  STACKTOP = sp;
  return;
 }
 $62 = HEAP32[$14 >> 2] | 0;
 $$idx8$i = $60 << 2;
 if (!$3) {
  $65 = ~$60;
  if (($$idx8$i | 0) <= 0) {
   STACKTOP = sp;
   return;
  }
  _memset($62 | 0, 0, ((($65 | 0) > -2 ? $65 : -2) + $60 << 2) + 8 | 0) | 0;
  STACKTOP = sp;
  return;
 }
 _memmove($62 | 0, $3 | 0, $$idx8$i | 0) | 0;
 $70 = HEAP32[$9 >> 2] | 0;
 if (($70 | 0) <= 0) {
  STACKTOP = sp;
  return;
 }
 $72 = $0 + 4 | 0;
 $$034 = 0;
 $85 = $70;
 while (1) {
  $74 = HEAP32[$62 + ($$034 << 2) >> 2] | 0;
  if (!$74) $84 = $85; else {
   $79 = (HEAP32[(HEAP32[$72 >> 2] | 0) + 48 >> 2] | 0) + ($74 << 2) | 0;
   HEAP32[$79 >> 2] = (HEAP32[$79 >> 2] | 0) + 1;
   $84 = HEAP32[$9 >> 2] | 0;
  }
  $$034 = $$034 + 1 | 0;
  if (($$034 | 0) >= ($84 | 0)) break; else $85 = $84;
 }
 STACKTOP = sp;
 return;
}

function __ZN2ut9Scheduler16getOrAddInternalERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$02026$i$i16 = 0, $$02125$i$i17 = 0, $$027$i$i15 = 0, $$pre$phi$inZ2D = 0, $$sroa$014$029$i = 0, $$sroa$014$030$i = 0, $$sroa$014$030$i$us = 0, $11 = 0, $13 = 0, $15 = 0, $18 = 0, $2 = 0, $27 = 0, $28 = 0, $30 = 0, $31 = 0, $34 = 0, $37 = 0, $51 = 0, $55 = 0, $58 = 0, $6 = 0, $63 = 0, $64 = 0, $66 = 0, $67 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $$sroa$014$029$i = HEAP32[$0 + 48 >> 2] | 0;
 L1 : do if (!$$sroa$014$029$i) label = 15; else {
  $6 = HEAP8[$1 + 11 >> 0] | 0;
  $7 = $6 << 24 >> 24 < 0;
  $11 = $7 ? HEAP32[$1 + 4 >> 2] | 0 : $6 & 255;
  $13 = $7 ? HEAP32[$1 >> 2] | 0 : $1;
  L3 : do if (!$11) {
   $$sroa$014$030$i$us = $$sroa$014$029$i;
   while (1) {
    $15 = $$sroa$014$030$i$us;
    $18 = HEAP8[$15 + 16 + 11 >> 0] | 0;
    if (!(($18 << 24 >> 24 < 0 ? HEAP32[$15 + 20 >> 2] | 0 : $18 & 255) | 0)) {
     $$pre$phi$inZ2D = $$sroa$014$030$i$us;
     break L3;
    }
    $$sroa$014$030$i$us = HEAP32[$$sroa$014$030$i$us >> 2] | 0;
    if (!$$sroa$014$030$i$us) {
     label = 15;
     break L1;
    }
   }
  } else {
   $$sroa$014$030$i = $$sroa$014$029$i;
   while (1) {
    $27 = $$sroa$014$030$i;
    $28 = $27 + 16 | 0;
    $30 = HEAP8[$28 + 11 >> 0] | 0;
    $31 = $30 << 24 >> 24 < 0;
    $34 = $30 & 255;
    do if ((($31 ? HEAP32[$27 + 20 >> 2] | 0 : $34) | 0) == ($11 | 0)) {
     $37 = HEAP32[$28 >> 2] | 0;
     if ($31) if (!(_memcmp($37, $13, $11) | 0)) {
      $$pre$phi$inZ2D = $$sroa$014$030$i;
      break L3;
     } else break;
     if ((HEAP8[$13 >> 0] | 0) == ($37 & 255) << 24 >> 24) {
      $$02026$i$i16 = $28;
      $$02125$i$i17 = $34;
      $$027$i$i15 = $13;
      do {
       $$02125$i$i17 = $$02125$i$i17 + -1 | 0;
       $$02026$i$i16 = $$02026$i$i16 + 1 | 0;
       if (!$$02125$i$i17) {
        $$pre$phi$inZ2D = $$sroa$014$030$i;
        break L3;
       }
       $$027$i$i15 = $$027$i$i15 + 1 | 0;
      } while ((HEAP8[$$02026$i$i16 >> 0] | 0) == (HEAP8[$$027$i$i15 >> 0] | 0));
     }
    } while (0);
    $$sroa$014$030$i = HEAP32[$$sroa$014$030$i >> 2] | 0;
    if (!$$sroa$014$030$i) {
     label = 15;
     break L1;
    }
   }
  } while (0);
  $51 = HEAP32[$$pre$phi$inZ2D + 12 >> 2] | 0;
  HEAP32[$2 >> 2] = $51;
  if ($51 | 0) {
   $$0 = __ZNSt3__213unordered_mapIiN2ut9Scheduler15ScheduledSystemENS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS3_EEEEEixERSA_($0 + 40 | 0, $2) | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 } while (0);
 if ((label | 0) == 15) HEAP32[$2 >> 2] = 0;
 $55 = HEAP32[947] | 0;
 HEAP32[947] = $55 + 1;
 HEAP32[$2 >> 2] = $55;
 $58 = __ZNSt3__213unordered_mapIiN2ut9Scheduler15ScheduledSystemENS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS3_EEEEEixERSA_($0 + 40 | 0, $2) | 0;
 HEAP32[$58 >> 2] = HEAP32[$2 >> 2];
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($58 + 4 | 0, $1) | 0;
 HEAP8[$58 + 36 >> 0] = 0;
 HEAP32[$58 + 16 >> 2] = 0;
 $63 = $58 + 20 | 0;
 $64 = HEAP32[$63 >> 2] | 0;
 HEAP32[$63 >> 2] = 0;
 if (!$64) {
  $$0 = $58;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $66 = $64 + 4 | 0;
 $67 = HEAP32[$66 >> 2] | 0;
 HEAP32[$66 >> 2] = $67 + -1;
 if ($67 | 0) {
  $$0 = $58;
  STACKTOP = sp;
  return $$0 | 0;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$64 >> 2] | 0) + 8 >> 2] & 63]($64);
 __ZNSt3__219__shared_weak_count14__release_weakEv($64);
 $$0 = $58;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN2ut25ComponentNativeBufferBase8copyFromERKS0_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$01920$i$i = 0, $$021$i$i = 0, $$0384251 = 0, $$0394152 = 0, $$pre23$i$i = 0, $$pre47 = 0, $14 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $25 = 0, $27 = 0, $29 = 0, $31 = 0, $36 = 0, $38 = 0, $4 = 0, $43 = 0, $44 = 0, $45 = 0, $47 = 0, $49 = 0, $50 = 0, $65 = 0, $75 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer7 = sp + 32 | 0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0 >> 2] | 0;
 if (!$2) {
  _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8037, 6303, 29);
 }
 $4 = HEAP32[$1 >> 2] | 0;
 if (!$4) {
  _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8037, 6303, 29);
 }
 if (($4 | 0) == ($2 | 0)) {
  _snprintf(25060, 1024, 27124, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8060, 6303, 30);
 }
 $8 = HEAP32[$1 + 4 >> 2] | 0;
 $9 = $0 + 4 | 0;
 if (($8 | 0) != (HEAP32[$9 >> 2] | 0)) {
  _snprintf(25060, 1024, 27124, sp + 16 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8083, 6303, 31);
 }
 $14 = HEAP32[(HEAP32[$1 >> 2] | 0) + 4 >> 2] | 0;
 $16 = HEAP32[$8 + 12 >> 2] | 0;
 $17 = HEAP32[$0 >> 2] | 0;
 if (!$17) {
  _snprintf(25060, 1024, 27124, sp + 24 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 6296, 6303, 8);
 }
 $19 = $8 + 32 | 0;
 $20 = HEAP32[$19 >> 2] | 0;
 $$pre23$i$i = $17 + 4 | 0;
 L16 : do if ($20 | 0) {
  $22 = HEAP32[$$pre23$i$i >> 2] | 0;
  if ($22 | 0) {
   $25 = $8 + 48 | 0;
   $$01920$i$i = HEAP32[$17 >> 2] | 0;
   $$021$i$i = 0;
   $27 = $20;
   $75 = $22;
   while (1) {
    if (!$27) $31 = $75; else {
     FUNCTION_TABLE_vii[$27 & 15]($$01920$i$i, HEAP32[$25 >> 2] | 0);
     $31 = HEAP32[$$pre23$i$i >> 2] | 0;
    }
    $29 = $$021$i$i + 1 | 0;
    if ($29 >>> 0 >= $31 >>> 0) break L16;
    $$01920$i$i = $$01920$i$i + $16 | 0;
    $$021$i$i = $29;
    $27 = HEAP32[$19 >> 2] | 0;
    $75 = $31;
   }
  }
 } while (0);
 _free(HEAP32[$17 >> 2] | 0);
 HEAP32[$17 >> 2] = 0;
 HEAP32[$$pre23$i$i >> 2] = 0;
 HEAP32[$17 + 8 >> 2] = 0;
 if (!$14) {
  STACKTOP = sp;
  return;
 }
 $36 = _llvm_ctlz_i64($16 | 0, 0, 0) | 0;
 $38 = _llvm_ctlz_i64($14 | 0, 0, 0) | 0;
 if ((128 - $38 - $36 | 0) >>> 0 >= 33) {
  _snprintf(25060, 1024, 27124, $vararg_buffer7) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8102, 8155, 32);
 }
 $43 = Math_imul($16, $14) | 0;
 $44 = _malloc($43) | 0;
 $45 = HEAP32[$9 >> 2] | 0;
 $47 = HEAP32[$45 + 36 >> 2] | 0;
 $49 = HEAP32[$1 >> 2] | 0;
 $50 = HEAP32[$49 >> 2] | 0;
 if (!$47) _memcpy($44 | 0, $50 | 0, $43 | 0) | 0; else if (HEAP32[$49 + 4 >> 2] | 0) {
  FUNCTION_TABLE_viii[$47 & 31]($50, $44, HEAP32[$45 + 44 >> 2] | 0);
  if ((HEAP32[(HEAP32[$1 >> 2] | 0) + 4 >> 2] | 0) >>> 0 > 1) {
   $$0384251 = $44;
   $$0394152 = $50;
   $65 = 1;
   do {
    $$0394152 = $$0394152 + $16 | 0;
    $$0384251 = $$0384251 + $16 | 0;
    $$pre47 = HEAP32[$9 >> 2] | 0;
    FUNCTION_TABLE_viii[HEAP32[$$pre47 + 36 >> 2] & 31]($$0394152, $$0384251, HEAP32[$$pre47 + 44 >> 2] | 0);
    $65 = $65 + 1 | 0;
   } while ($65 >>> 0 < (HEAP32[(HEAP32[$1 >> 2] | 0) + 4 >> 2] | 0) >>> 0);
  }
 }
 HEAP32[HEAP32[$0 >> 2] >> 2] = $44;
 HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] = $14;
 HEAP32[(HEAP32[$0 >> 2] | 0) + 8 >> 2] = $14;
 STACKTOP = sp;
 return;
}

function __ZN9rapidjson15GenericDocumentINS_4UTF8IcEENS_19MemoryPoolAllocatorINS_12CrtAllocatorEEES4_E11ParseStreamILj1ES2_NS_25GenericInsituStringStreamIS2_EEEERS6_RT1_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre = 0, $$pre$phi5Z2D = 0, $$pre$phi7Z2D = 0, $$pre$phi9Z2D = 0, $$pre$phiZ2D = 0, $$pre6 = 0, $$sroa$0$0$i$i$i = 0, $$sroa$0$0$i$i11$i = 0, $10 = 0, $2 = 0, $21 = 0, $31 = 0, $32 = 0, $34 = 0, $37 = 0, $38 = 0, $42 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $53 = 0, $54 = 0, $57 = 0, $60 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp;
 HEAP32[$2 >> 2] = HEAP32[$0 + 32 >> 2];
 $5 = $2 + 4 | 0;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 HEAP32[$5 + 12 >> 2] = 0;
 HEAP32[$2 + 20 >> 2] = 256;
 $7 = $2 + 24 | 0;
 $8 = $2 + 28 | 0;
 $9 = $2 + 24 | 0;
 $10 = $9;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 $$sroa$0$0$i$i11$i = HEAP32[$1 >> 2] | 0;
 L1 : while (1) {
  switch (HEAP8[$$sroa$0$0$i$i11$i >> 0] | 0) {
  case 9:
  case 13:
  case 10:
  case 32:
   break;
  default:
   break L1;
  }
  $$sroa$0$0$i$i11$i = $$sroa$0$0$i$i11$i + 1 | 0;
 }
 HEAP32[$1 >> 2] = $$sroa$0$0$i$i11$i;
 if (!(HEAP8[$$sroa$0$0$i$i11$i >> 0] | 0)) {
  $21 = $$sroa$0$0$i$i11$i - (HEAP32[$1 + 8 >> 2] | 0) | 0;
  HEAP32[$7 >> 2] = 1;
  HEAP32[$8 >> 2] = $21;
 } else {
  __ZN9rapidjson13GenericReaderINS_4UTF8IcEES2_NS_12CrtAllocatorEE10ParseValueILj1ENS_25GenericInsituStringStreamIS2_EENS_15GenericDocumentIS2_NS_19MemoryPoolAllocatorIS3_EES3_EEEEvRT0_RT1_($2, $1, $0);
  if (!(HEAP32[$7 >> 2] | 0)) {
   $$sroa$0$0$i$i$i = HEAP32[$1 >> 2] | 0;
   L9 : while (1) {
    switch (HEAP8[$$sroa$0$0$i$i$i >> 0] | 0) {
    case 9:
    case 13:
    case 10:
    case 32:
     break;
    default:
     break L9;
    }
    $$sroa$0$0$i$i$i = $$sroa$0$0$i$i$i + 1 | 0;
   }
   HEAP32[$1 >> 2] = $$sroa$0$0$i$i$i;
   if (HEAP8[$$sroa$0$0$i$i$i >> 0] | 0) {
    $31 = $$sroa$0$0$i$i$i - (HEAP32[$1 + 8 >> 2] | 0) | 0;
    HEAP32[$7 >> 2] = 2;
    HEAP32[$8 >> 2] = $31;
   }
  }
 }
 $32 = $9;
 $34 = HEAP32[$32 >> 2] | 0;
 $37 = HEAP32[$32 + 4 >> 2] | 0;
 $38 = $2 + 8 | 0;
 HEAP32[$2 + 12 >> 2] = HEAP32[$38 >> 2];
 $42 = $0 + 56 | 0;
 HEAP32[$42 >> 2] = $34;
 HEAP32[$42 + 4 >> 2] = $37;
 do if (!$34) {
  $47 = $0 + 44 | 0;
  $48 = HEAP32[$47 >> 2] | 0;
  $49 = $0 + 40 | 0;
  if (($48 - (HEAP32[$49 >> 2] | 0) | 0) != 24) ___assert_fail(16907, 15939, 2161, 16945);
  $53 = $48;
  $54 = $53 + -24 | 0;
  HEAP32[$47 >> 2] = $54;
  if (($0 | 0) == ($54 | 0)) ___assert_fail(16957, 15939, 756, 22609); else {
   HEAP32[$0 >> 2] = HEAP32[$54 >> 2];
   HEAP32[$0 + 4 >> 2] = HEAP32[$54 + 4 >> 2];
   HEAP32[$0 + 8 >> 2] = HEAP32[$54 + 8 >> 2];
   HEAP32[$0 + 12 >> 2] = HEAP32[$54 + 12 >> 2];
   HEAP32[$0 + 16 >> 2] = HEAP32[$54 + 16 >> 2];
   HEAP32[$0 + 20 >> 2] = HEAP32[$54 + 20 >> 2];
   HEAP16[$53 + -6 >> 1] = 0;
   $$pre$phi5Z2D = $49;
   $$pre$phi7Z2D = $47;
   $$pre$phi9Z2D = $47;
   $$pre$phiZ2D = $49;
   break;
  }
 } else {
  $$pre = $0 + 40 | 0;
  $$pre6 = $0 + 44 | 0;
  $$pre$phi5Z2D = $$pre;
  $$pre$phi7Z2D = $$pre6;
  $$pre$phi9Z2D = $$pre6;
  $$pre$phiZ2D = $$pre;
 } while (0);
 $57 = HEAP32[$$pre$phi5Z2D >> 2] | 0;
 HEAP32[$$pre$phi9Z2D >> 2] = $57;
 _free($57);
 HEAP32[$$pre$phiZ2D >> 2] = 0;
 HEAP32[$$pre$phi7Z2D >> 2] = 0;
 HEAP32[$0 + 48 >> 2] = 0;
 _free(HEAP32[$38 >> 2] | 0);
 $60 = HEAP32[$5 >> 2] | 0;
 if (!$60) {
  STACKTOP = sp;
  return $0 | 0;
 }
 __ZdlPv($60);
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeINS_6vectorIjNS_9allocatorIjEEEEPN2ut4arch9ArchetypeEEENS_22__unordered_map_hasherIS5_SA_NS_4hashIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_NS_8equal_toIS5_EELb1EEENS3_ISA_EEE4findIS5_EENS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEERKT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$02834 = 0, $$02835 = 0, $$02835$us = 0, $$sroa$0$0 = 0, $10 = 0, $11 = 0, $14 = 0, $17 = 0, $2 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $30 = 0, $36 = 0, $37 = 0, $4 = 0, $42 = 0, $44 = 0, $45 = 0, $50 = 0, $51 = 0, $54 = 0, $55 = 0, $58 = 0, $60 = 0, $67 = 0, $72 = 0, $75 = 0, $76 = 0, $79 = 0, $80 = 0, $83 = 0, $85 = 0, label = 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $4 = HEAPU16[$2 >> 1] | 0;
 $10 = $4 + 255 + (HEAPU16[$2 + 2 >> 1] | 0) | 0;
 $11 = $4 + 510 + $10 | 0;
 $14 = ($10 & 65535) + ($10 >>> 16) | 0;
 $17 = ($11 & 65535) + ($11 >>> 16) | 0;
 $23 = $14 & 65535 | $14 >>> 16 | $17 & 65536 | $17 << 16;
 $25 = HEAP32[$0 + 4 >> 2] | 0;
 $27 = $2;
 if (!$25) {
  $$sroa$0$0 = 0;
  return $$sroa$0$0 | 0;
 }
 $28 = $25 + -1 | 0;
 $30 = ($28 & $25 | 0) == 0;
 if ($30) $36 = $23 & $28; else if ($23 >>> 0 < $25 >>> 0) $36 = $23; else $36 = ($23 >>> 0) % ($25 >>> 0) | 0;
 $37 = HEAP32[(HEAP32[$0 >> 2] | 0) + ($36 << 2) >> 2] | 0;
 if (!$37) {
  $$sroa$0$0 = 0;
  return $$sroa$0$0 | 0;
 }
 $$02834 = HEAP32[$37 >> 2] | 0;
 if (!$$02834) {
  $$sroa$0$0 = 0;
  return $$sroa$0$0 | 0;
 }
 $42 = (HEAP32[$1 + 4 >> 2] | 0) - $27 | 0;
 if ($30) {
  $$02835$us = $$02834;
  L17 : while (1) {
   $44 = HEAP32[$$02835$us + 4 >> 2] | 0;
   $45 = ($44 | 0) == ($23 | 0);
   if (!($45 | ($44 & $28 | 0) == ($36 | 0))) {
    $$sroa$0$0 = 0;
    label = 29;
    break;
   }
   L20 : do if ($45) {
    $50 = HEAP32[$$02835$us + 12 >> 2] | 0;
    $51 = HEAP32[$$02835$us + 8 >> 2] | 0;
    $54 = $51;
    $55 = $50;
    if (($50 - $51 | 0) == ($42 | 0)) {
     if (($54 | 0) == ($55 | 0)) {
      $$sroa$0$0 = $$02835$us;
      label = 29;
      break L17;
     }
     $58 = $54;
     $60 = $2;
     while (1) {
      if ((HEAP32[$58 >> 2] | 0) != (HEAP32[$60 >> 2] | 0)) break L20;
      $58 = $58 + 4 | 0;
      if (($58 | 0) == ($55 | 0)) {
       $$sroa$0$0 = $$02835$us;
       label = 29;
       break L17;
      } else $60 = $60 + 4 | 0;
     }
    }
   } while (0);
   $$02835$us = HEAP32[$$02835$us >> 2] | 0;
   if (!$$02835$us) {
    $$sroa$0$0 = 0;
    label = 29;
    break;
   }
  }
  if ((label | 0) == 29) return $$sroa$0$0 | 0;
 }
 $$02835 = $$02834;
 L34 : while (1) {
  $67 = HEAP32[$$02835 + 4 >> 2] | 0;
  L36 : do if (($67 | 0) == ($23 | 0)) {
   $75 = HEAP32[$$02835 + 12 >> 2] | 0;
   $76 = HEAP32[$$02835 + 8 >> 2] | 0;
   $79 = $76;
   $80 = $75;
   if (($75 - $76 | 0) == ($42 | 0)) {
    if (($79 | 0) == ($80 | 0)) {
     $$sroa$0$0 = $$02835;
     label = 29;
     break L34;
    }
    $83 = $79;
    $85 = $2;
    while (1) {
     if ((HEAP32[$83 >> 2] | 0) != (HEAP32[$85 >> 2] | 0)) break L36;
     $83 = $83 + 4 | 0;
     if (($83 | 0) == ($80 | 0)) {
      $$sroa$0$0 = $$02835;
      label = 29;
      break L34;
     } else $85 = $85 + 4 | 0;
    }
   }
  } else {
   if ($67 >>> 0 < $25 >>> 0) $72 = $67; else $72 = ($67 >>> 0) % ($25 >>> 0) | 0;
   if (($72 | 0) != ($36 | 0)) {
    $$sroa$0$0 = 0;
    label = 29;
    break L34;
   }
  } while (0);
  $$02835 = HEAP32[$$02835 >> 2] | 0;
  if (!$$02835) {
   $$sroa$0$0 = 0;
   label = 29;
   break;
  }
 }
 if ((label | 0) == 29) return $$sroa$0$0 | 0;
 return 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i$i$i = 0, $$025 = 0, $$1 = 0, $12 = 0, $13 = 0, $15 = 0, $23 = 0, $24 = 0, $30 = 0, $31 = 0, $39 = 0, $4 = 0, $45 = 0, $46 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $4 = sp + 24 | 0;
 $5 = sp;
 $6 = sp + 12 | 0;
 $7 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($0, $1) | 0;
 if (($7 | 0) == ($0 | 0) | ($7 | 0) == ($1 | 0)) $$1 = $0; else if ((HEAP8[$7 >> 0] | 0) == 69) {
  $12 = $2 + 11 | 0;
  $13 = HEAP8[$12 >> 0] | 0;
  $15 = $2 + 4 | 0;
  do if (($13 << 24 >> 24 < 0 ? HEAP32[$15 >> 2] | 0 : $13 & 255) >>> 0 > 3) {
   __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($6, 22277, $2);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($6, 22275) | 0;
   HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
   HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
   HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
   $$0$i$i$i = 0;
   while (1) {
    if (($$0$i$i$i | 0) == 3) break;
    HEAP32[$6 + ($$0$i$i$i << 2) >> 2] = 0;
    $$0$i$i$i = $$0$i$i$i + 1 | 0;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($4, $5);
   $23 = $3 + 4 | 0;
   $24 = HEAP32[$23 >> 2] | 0;
   if ($24 >>> 0 < (HEAP32[$3 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($24, $4);
    HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($3, $4);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
  } else {
   $30 = $3 + 4 | 0;
   $31 = HEAP32[$30 >> 2] | 0;
   if ($31 >>> 0 < (HEAP32[$3 + 8 >> 2] | 0) >>> 0) {
    HEAP32[$31 >> 2] = 0;
    HEAP32[$31 + 4 >> 2] = 0;
    HEAP32[$31 + 8 >> 2] = 0;
    HEAP32[$31 + 12 >> 2] = 0;
    HEAP32[$31 + 16 >> 2] = 0;
    HEAP32[$31 + 20 >> 2] = 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2Ev($31);
    HEAP32[$30 >> 2] = (HEAP32[$30 >> 2] | 0) + 24;
    break;
   } else {
    __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE24__emplace_back_slow_pathIJEEEvDpOT_($3);
    break;
   }
  } while (0);
  $39 = $3 + 4 | 0;
  if ((HEAP8[$0 >> 0] | 0) == 110) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc((HEAP32[$39 >> 2] | 0) + -24 | 0, 45);
   $$025 = $0 + 1 | 0;
  } else $$025 = $0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE23__append_forward_unsafeIPKcEERS7_T_SC_((HEAP32[$39 >> 2] | 0) + -24 | 0, $$025, $7);
  $45 = HEAP8[$12 >> 0] | 0;
  $46 = $45 << 24 >> 24 < 0;
  $49 = $46 ? HEAP32[$15 >> 2] | 0 : $45 & 255;
  if ($49 >>> 0 < 4) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[$39 >> 2] | 0) + -24 | 0, $46 ? HEAP32[$2 >> 2] | 0 : $2, $49) | 0;
  $$1 = $7 + 1 | 0;
 } else $$1 = $0;
 STACKTOP = sp;
 return $$1 | 0;
}

function __Z30registerOpaqueComponentPrivateiijPKcPiiPFvPviEiPFvPKvS2_iEi($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$073 = 0, $$07683 = 0, $$3 = 0, $$sink = 0, $10 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $19 = 0, $23 = 0, $39 = 0, $53 = 0, $54 = 0, $59 = 0, $63 = 0, $67 = 0, $74 = 0, $86 = 0, $89 = 0, $90 = 0, $spec$select = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $10 = sp + 12 | 0;
 $spec$select = ($0 | 0) == 0 ? 1 : $0;
 $$073 = ($1 | 0) == 0 ? 1 : $1;
 $13 = HEAP32[6065] | 0;
 $14 = HEAP32[6064] | 0;
 $16 = $14;
 L1 : do if (($13 | 0) != ($14 | 0)) {
  $17 = HEAP32[6067] | 0;
  $19 = $13 - $14 >> 2;
  $$07683 = 0;
  while (1) {
   $23 = HEAP32[$17 + (HEAP32[$16 + ($$07683 << 2) >> 2] << 2) >> 2] | 0;
   if (!(HEAP32[$23 + 4 >> 2] | 0)) if ((HEAP32[$23 + 12 >> 2] | 0) == ($spec$select | 0)) if ((HEAP32[$23 + 8 >> 2] | 0) == ($$073 | 0)) break;
   $39 = $$07683 + 1 | 0;
   if ($39 >>> 0 < $19 >>> 0) $$07683 = $39; else break L1;
  }
  if (HEAP32[$23 + 20 >> 2] | 0) {
   _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 5158, 5188, 77);
  }
  if (($spec$select | 0) != (HEAP32[$23 + 16 >> 2] | 0)) {
   _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 5265, 5188, 78);
  }
  HEAP32[(HEAP32[6064] | 0) + ($$07683 << 2) >> 2] = HEAP32[(HEAP32[6065] | 0) + -4 >> 2];
  HEAP32[6065] = (HEAP32[6065] | 0) + -4;
  HEAP32[$23 + 52 >> 2] = $3;
  HEAP32[$23 + 32 >> 2] = $6;
  HEAP32[$23 + 48 >> 2] = $7;
  HEAP32[$23 + 36 >> 2] = $8;
  HEAP32[$23 + 44 >> 2] = $9;
  $$3 = $23;
  STACKTOP = sp;
  return $$3 | 0;
 } while (0);
 $53 = __Znwj(76) | 0;
 dest = $53;
 stop = dest + 76 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$10 >> 2] = $53;
 $54 = HEAP32[6068] | 0;
 if ($54 >>> 0 < (HEAP32[6069] | 0) >>> 0) {
  HEAP32[$54 >> 2] = $53;
  $59 = (HEAP32[6068] | 0) + 4 | 0;
  HEAP32[6068] = $59;
  $63 = $59;
 } else {
  __ZNSt3__26vectorIPN2ut13ComponentInfoENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRS3_EEEvDpOT_(24268, $10);
  $63 = HEAP32[6068] | 0;
 }
 HEAP32[HEAP32[$10 >> 2] >> 2] = ($63 - (HEAP32[6067] | 0) >> 2) + -1;
 $67 = HEAP32[$10 >> 2] | 0;
 if ((HEAP32[$67 >> 2] | 0) >>> 0 > 256) _abort();
 HEAP32[$67 + 12 >> 2] = $spec$select;
 HEAP32[$67 + 16 >> 2] = $spec$select;
 HEAP32[$67 + 20 >> 2] = 0;
 HEAP32[$67 + 8 >> 2] = $$073;
 $74 = $67 + 4 | 0;
 HEAP32[$74 >> 2] = $2;
 HEAP32[$67 + 52 >> 2] = $3;
 HEAP32[$67 + 32 >> 2] = $6;
 HEAP32[$67 + 48 >> 2] = $7;
 HEAP32[$67 + 36 >> 2] = $8;
 HEAP32[$67 + 44 >> 2] = $9;
 if (!(($6 | 0) == 0 & ($8 | 0) == 0)) {
  HEAP32[$74 >> 2] = $2 | 4;
  HEAP32[$67 + 28 >> 2] = 10;
 }
 if (!$5) {
  HEAP32[$67 + 60 >> 2] = 0;
  $$sink = 0;
 } else {
  $86 = __Znaj($5 >>> 0 > 1073741823 ? -1 : $5 << 2) | 0;
  _memcpy($86 | 0, $4 | 0, $5 << 2 | 0) | 0;
  HEAP32[$67 + 60 >> 2] = $86;
  $89 = $67 + 64 | 0;
  $90 = HEAP32[$89 >> 2] | 0;
  HEAP32[$89 >> 2] = $86;
  if (!$90) $$sink = $5; else {
   __ZdaPv($90);
   $$sink = $5;
  }
 }
 HEAP32[$67 + 56 >> 2] = $$sink;
 HEAP32[$67 + 68 >> 2] = 0;
 $$3 = $67;
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertIPKcEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorISC_EE5valueENS_11__wrap_iterIPcEEE4typeENSD_ISA_EESC_SC_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$059 = 0, $$1 = 0, $$byval_copy = 0, $$sroa$0$1 = 0, $10 = 0, $12 = 0, $13 = 0, $16 = 0, $23 = 0, $24 = 0, $27 = 0, $28 = 0, $33 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $46 = 0, $47 = 0, $5 = 0, $50 = 0, $52 = 0, $53 = 0, $58 = 0, $6 = 0, $69 = 0, $7 = 0, $72 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 16 | 0;
 $4 = sp + 4 | 0;
 $5 = sp;
 $6 = $0 + 11 | 0;
 $7 = HEAP8[$6 >> 0] | 0;
 $8 = $7 << 24 >> 24 < 0;
 if ($8) $10 = HEAP32[$0 >> 2] | 0; else $10 = $0;
 $12 = HEAP32[$1 >> 2] | 0;
 $13 = $12 - $10 | 0;
 $16 = $3 - $2 | 0;
 do if (!$16) {
  $69 = $7;
  label = 27;
 } else {
  if ($8) {
   $23 = HEAP32[$0 >> 2] | 0;
   $24 = HEAP32[$0 + 4 >> 2] | 0;
  } else {
   $23 = $0;
   $24 = $7 & 255;
  }
  if (__ZNSt3__214__ptr_in_rangeIcEEbPKT_S3_S3_($2, $23, $23 + $24 | 0) | 0) {
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_($4, $2, $3);
   HEAP32[$5 >> 2] = $12;
   $27 = HEAP8[$4 + 11 >> 0] | 0;
   $28 = $27 << 24 >> 24 < 0;
   $33 = $28 ? HEAP32[$4 >> 2] | 0 : $4;
   $35 = $33 + ($28 ? HEAP32[$4 + 4 >> 2] | 0 : $27 & 255) | 0;
   HEAP32[$$byval_copy >> 2] = HEAP32[$5 >> 2];
   $36 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertIPKcEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorISC_EE5valueENS_11__wrap_iterIPcEEE4typeENSD_ISA_EESC_SC_($0, $$byval_copy, $33, $35) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
   $$sroa$0$1 = $36;
   break;
  }
  $37 = HEAP8[$6 >> 0] | 0;
  $38 = $37 << 24 >> 24 < 0;
  if ($38) {
   $46 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
   $47 = HEAP32[$0 + 4 >> 2] | 0;
  } else {
   $46 = 10;
   $47 = $37 & 255;
  }
  if (($46 - $47 | 0) >>> 0 < $16 >>> 0) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEjjjjjj($0, $46, $47 + $16 - $46 | 0, $47, $13, $16);
   $$0 = HEAP32[$0 >> 2] | 0;
  } else {
   if ($38) $53 = HEAP32[$0 >> 2] | 0; else $53 = $0;
   $50 = $47 - $13 | 0;
   if (!$50) $$0 = $53; else {
    $52 = $53 + $13 | 0;
    __ZNSt3__211char_traitsIcE4moveEPcPKcj($52 + $16 | 0, $52, $50) | 0;
    $$0 = $53;
   }
  }
  $58 = $47 + $16 | 0;
  if ((HEAP8[$6 >> 0] | 0) < 0) HEAP32[$0 + 4 >> 2] = $58; else HEAP8[$6 >> 0] = $58;
  HEAP8[$$byval_copy >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($$0 + $58 | 0, $$byval_copy);
  $$059 = $2;
  $$1 = $$0 + $13 | 0;
  while (1) {
   if (($$059 | 0) == ($3 | 0)) break;
   __ZNSt3__211char_traitsIcE6assignERcRKc($$1, $$059);
   $$059 = $$059 + 1 | 0;
   $$1 = $$1 + 1 | 0;
  }
  $69 = HEAP8[$6 >> 0] | 0;
  label = 27;
 } while (0);
 if ((label | 0) == 27) {
  if ($69 << 24 >> 24 < 0) $72 = HEAP32[$0 >> 2] | 0; else $72 = $0;
  $$sroa$0$1 = $72 + $13 | 0;
 }
 STACKTOP = sp;
 return $$sroa$0$1 | 0;
}

function __ZN9rapidjson8internal6u32toaEjPc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$2 = 0, $$5 = 0, $$7 = 0, $$pn = 0, $$pn134 = 0, $$pn135 = 0, $$pn137 = 0, $$pn138 = 0, $$sink = 0, $$sink$in = 0, $$sink140 = 0, $24 = 0, $26 = 0, $28 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $35 = 0, $4 = 0, $65 = 0, $67 = 0, $69 = 0, $7 = 0, $72 = 0, $78 = 0, $80 = 0, $82 = 0, $84 = 0, $85 = 0, $86 = 0, $89 = 0, label = 0;
 if ($0 >>> 0 < 1e4) {
  $3 = ($0 >>> 0) / 100 | 0;
  $4 = $3 << 1;
  $7 = $0 - ($3 * 100 | 0) << 1;
  if ($0 >>> 0 > 999) {
   HEAP8[$1 >> 0] = HEAP8[13350 + $4 >> 0] | 0;
   $$pn138 = $1 + 1 | 0;
   label = 5;
  } else if ($0 >>> 0 > 99) {
   $$pn138 = $1;
   label = 5;
  } else if ($0 >>> 0 > 9) {
   $$pn137 = $1;
   label = 7;
  } else $$2 = $1;
  if ((label | 0) == 5) {
   HEAP8[$$pn138 >> 0] = HEAP8[13350 + ($4 | 1) >> 0] | 0;
   $$pn137 = $$pn138 + 1 | 0;
   label = 7;
  }
  if ((label | 0) == 7) {
   HEAP8[$$pn137 >> 0] = HEAP8[13350 + $7 >> 0] | 0;
   $$2 = $$pn137 + 1 | 0;
  }
  $$7 = $$2 + 1 | 0;
  $$sink$in = 13350 + ($7 | 1) | 0;
  $$sink140 = $$2;
  $$sink = HEAP8[$$sink$in >> 0] | 0;
  HEAP8[$$sink140 >> 0] = $$sink;
  return $$7 | 0;
 }
 if ($0 >>> 0 >= 1e8) {
  $65 = ($0 >>> 0) / 1e8 | 0;
  $67 = $0 - (Math_imul($65, 1e8) | 0) | 0;
  if ($0 >>> 0 > 999999999) {
   $69 = $65 << 1;
   $72 = $1 + 1 | 0;
   HEAP8[$1 >> 0] = HEAP8[13350 + $69 >> 0] | 0;
   HEAP8[$72 >> 0] = HEAP8[13350 + ($69 | 1) >> 0] | 0;
   $$pn = $72;
  } else {
   HEAP8[$1 >> 0] = $65 + 48;
   $$pn = $1;
  }
  $78 = ($67 >>> 0) / 1e4 | 0;
  $80 = $67 - ($78 * 1e4 | 0) | 0;
  $82 = (($67 >>> 0) / 1e6 | 0) << 1;
  $84 = (($78 >>> 0) % 100 | 0) << 1;
  $85 = ($80 >>> 0) / 100 | 0;
  $86 = $85 << 1;
  $89 = $80 - ($85 * 100 | 0) << 1;
  HEAP8[$$pn + 1 >> 0] = HEAP8[13350 + $82 >> 0] | 0;
  HEAP8[$$pn + 2 >> 0] = HEAP8[13350 + ($82 | 1) >> 0] | 0;
  HEAP8[$$pn + 3 >> 0] = HEAP8[13350 + $84 >> 0] | 0;
  HEAP8[$$pn + 4 >> 0] = HEAP8[13350 + ($84 | 1) >> 0] | 0;
  HEAP8[$$pn + 5 >> 0] = HEAP8[13350 + $86 >> 0] | 0;
  HEAP8[$$pn + 6 >> 0] = HEAP8[13350 + ($86 | 1) >> 0] | 0;
  HEAP8[$$pn + 7 >> 0] = HEAP8[13350 + $89 >> 0] | 0;
  $$7 = $$pn + 9 | 0;
  $$sink$in = 13350 + ($89 | 1) | 0;
  $$sink140 = $$pn + 8 | 0;
  $$sink = HEAP8[$$sink$in >> 0] | 0;
  HEAP8[$$sink140 >> 0] = $$sink;
  return $$7 | 0;
 }
 $24 = ($0 >>> 0) / 1e4 | 0;
 $26 = $0 - ($24 * 1e4 | 0) | 0;
 $28 = (($0 >>> 0) / 1e6 | 0) << 1;
 $30 = (($24 >>> 0) % 100 | 0) << 1;
 $31 = ($26 >>> 0) / 100 | 0;
 $32 = $31 << 1;
 $35 = $26 - ($31 * 100 | 0) << 1;
 if ($0 >>> 0 > 9999999) {
  HEAP8[$1 >> 0] = HEAP8[13350 + $28 >> 0] | 0;
  $$pn135 = $1 + 1 | 0;
  label = 13;
 } else if ($0 >>> 0 > 999999) {
  $$pn135 = $1;
  label = 13;
 } else if ($0 >>> 0 > 99999) {
  $$pn134 = $1;
  label = 15;
 } else $$5 = $1;
 if ((label | 0) == 13) {
  HEAP8[$$pn135 >> 0] = HEAP8[13350 + ($28 | 1) >> 0] | 0;
  $$pn134 = $$pn135 + 1 | 0;
  label = 15;
 }
 if ((label | 0) == 15) {
  HEAP8[$$pn134 >> 0] = HEAP8[13350 + $30 >> 0] | 0;
  $$5 = $$pn134 + 1 | 0;
 }
 HEAP8[$$5 >> 0] = HEAP8[13350 + ($30 | 1) >> 0] | 0;
 HEAP8[$$5 + 1 >> 0] = HEAP8[13350 + $32 >> 0] | 0;
 HEAP8[$$5 + 2 >> 0] = HEAP8[13350 + ($32 | 1) >> 0] | 0;
 HEAP8[$$5 + 3 >> 0] = HEAP8[13350 + $35 >> 0] | 0;
 $$7 = $$5 + 5 | 0;
 $$sink$in = 13350 + ($35 | 1) | 0;
 $$sink140 = $$5 + 4 | 0;
 $$sink = HEAP8[$$sink$in >> 0] | 0;
 HEAP8[$$sink140 >> 0] = $$sink;
 return $$7 | 0;
}

function __ZN2ut4arch22ArchetypeChunkIterator46getTypeOrSharedComponentIndicesAndSizesInOrderEPNS0_13ComponentSpecEPiS4_j($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$020$i = 0, $$042 = 0, $$sink = 0, $21 = 0, $22 = 0, $27 = 0, $28 = 0, $31 = 0, $32 = 0, $33 = 0, $42 = 0, $45 = 0, $53 = 0, $68 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer7 = sp + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 if (!(HEAP8[$0 + 28 >> 0] | 0)) {
  _snprintf(25060, 1024, 13714, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13735, 13749, 166);
 }
 if (HEAP8[$0 + 29 >> 0] | 0) {
  _snprintf(25060, 1024, 13836, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13895, 13749, 167);
 }
 if ((HEAP32[$0 + 32 >> 2] | 0) != (HEAP32[HEAP32[(HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + 32 >> 2] >> 2] | 0)) {
  _snprintf(25060, 1024, 13906, sp + 16 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13942, 13749, 168);
 }
 if (!$4) {
  STACKTOP = sp;
  return;
 }
 $21 = $0 + 16 | 0;
 $22 = $0 + 20 | 0;
 $$042 = 0;
 L13 : while (1) {
  if ((HEAP32[$1 + ($$042 << 3) + 4 >> 2] | 0) != 2) {
   $27 = HEAP32[$1 + ($$042 << 3) >> 2] | 0;
   $28 = HEAP32[$21 >> 2] | 0;
   $31 = HEAP8[($27 & 63) + ($28 + 36) >> 0] | 0;
   $32 = $31 & 255;
   $33 = $28 + 28 | 0;
   if ((HEAP32[$33 >> 2] | 0) <= ($32 | 0)) {
    label = 12;
    break;
   }
   if (!($31 << 24 >> 24)) label = 15; else if ((HEAP32[(HEAP32[$28 + 32 >> 2] | 0) + ($32 << 4) >> 2] | 0) == ($27 | 0)) {
    $68 = $32;
    label = 20;
   } else label = 15;
   L20 : do if ((label | 0) == 15) {
    label = 0;
    $42 = HEAP32[$33 >> 2] | 0;
    if (($42 | 0) > 0) {
     $45 = HEAP32[$28 + 32 >> 2] | 0;
     $$020$i = 0;
     do {
      if ((HEAP32[$45 + ($$020$i << 4) >> 2] | 0) == ($27 | 0)) {
       $68 = $$020$i;
       label = 20;
       break L20;
      }
      $$020$i = $$020$i + 1 | 0;
     } while (($$020$i | 0) < ($42 | 0));
    }
    HEAP32[$2 + ($$042 << 2) >> 2] = -1;
    $$sink = 0;
   } while (0);
   do if ((label | 0) == 20) {
    label = 0;
    $53 = HEAP32[6067] | 0;
    if ((HEAP32[6068] | 0) - $53 >> 2 >>> 0 <= $27 >>> 0) {
     label = 21;
     break L13;
    }
    if (!(HEAP32[(HEAP32[$53 + ($27 << 2) >> 2] | 0) + 4 >> 2] & 2)) {
     HEAP32[$2 + ($$042 << 2) >> 2] = $68;
     $$sink = HEAP32[(HEAP32[(HEAP32[$21 >> 2] | 0) + 32 >> 2] | 0) + ($68 << 4) + 12 >> 2] | 0;
     break;
    } else {
     HEAP32[$2 + ($$042 << 2) >> 2] = HEAP32[(HEAP32[(HEAP32[$22 >> 2] | 0) + 20 >> 2] | 0) + (HEAP32[(HEAP32[(HEAP32[$21 >> 2] | 0) + 100 >> 2] | 0) + ($68 << 2) >> 2] << 2) >> 2];
     $$sink = 0;
     break;
    }
   } while (0);
   HEAP32[$3 + ($$042 << 2) >> 2] = $$sink;
  }
  $$042 = $$042 + 1 | 0;
  if (($$042 | 0) == ($4 | 0)) {
   label = 9;
   break;
  }
 }
 if ((label | 0) == 9) {
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 12) {
  _snprintf(25060, 1024, 27124, $vararg_buffer5) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13990, 14007, 120);
 } else if ((label | 0) == 21) {
  _snprintf(25060, 1024, 27124, $vararg_buffer7) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
}

function __ZN2ut4arch22ArchetypeChunkIterator46getTypeOrSharedComponentIndicesAndSizesInOrderEPjPiS3_j($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$020$i = 0, $$030 = 0, $$sink = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $28 = 0, $29 = 0, $30 = 0, $39 = 0, $42 = 0, $49 = 0, $51 = 0, $66 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer7 = sp + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 if (!(HEAP8[$0 + 28 >> 0] | 0)) {
  _snprintf(25060, 1024, 13714, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13735, 13749, 139);
 }
 if (HEAP8[$0 + 29 >> 0] | 0) {
  _snprintf(25060, 1024, 13836, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13895, 13749, 140);
 }
 if ((HEAP32[$0 + 32 >> 2] | 0) != (HEAP32[HEAP32[(HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + 32 >> 2] >> 2] | 0)) {
  _snprintf(25060, 1024, 13906, sp + 16 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13942, 13749, 141);
 }
 if (!$4) {
  STACKTOP = sp;
  return;
 }
 $21 = $0 + 16 | 0;
 $22 = $0 + 20 | 0;
 $$030 = 0;
 L13 : while (1) {
  $23 = HEAP32[$21 >> 2] | 0;
  $24 = $1 + ($$030 << 2) | 0;
  $25 = HEAP32[$24 >> 2] | 0;
  $28 = HEAP8[($25 & 63) + ($23 + 36) >> 0] | 0;
  $29 = $28 & 255;
  $30 = $23 + 28 | 0;
  if ((HEAP32[$30 >> 2] | 0) <= ($29 | 0)) {
   label = 11;
   break;
  }
  if (!($28 << 24 >> 24)) label = 14; else if ((HEAP32[(HEAP32[$23 + 32 >> 2] | 0) + ($29 << 4) >> 2] | 0) == ($25 | 0)) {
   $66 = $29;
   label = 19;
  } else label = 14;
  L18 : do if ((label | 0) == 14) {
   label = 0;
   $39 = HEAP32[$30 >> 2] | 0;
   if (($39 | 0) > 0) {
    $42 = HEAP32[$23 + 32 >> 2] | 0;
    $$020$i = 0;
    do {
     if ((HEAP32[$42 + ($$020$i << 4) >> 2] | 0) == ($25 | 0)) {
      $66 = $$020$i;
      label = 19;
      break L18;
     }
     $$020$i = $$020$i + 1 | 0;
    } while (($$020$i | 0) < ($39 | 0));
   }
   HEAP32[$2 + ($$030 << 2) >> 2] = -1;
   $$sink = 0;
  } while (0);
  do if ((label | 0) == 19) {
   label = 0;
   $49 = HEAP32[$24 >> 2] | 0;
   $51 = HEAP32[6067] | 0;
   if ((HEAP32[6068] | 0) - $51 >> 2 >>> 0 <= $49 >>> 0) {
    label = 20;
    break L13;
   }
   if (!(HEAP32[(HEAP32[$51 + ($49 << 2) >> 2] | 0) + 4 >> 2] & 2)) {
    HEAP32[$2 + ($$030 << 2) >> 2] = $66;
    $$sink = HEAP32[(HEAP32[(HEAP32[$21 >> 2] | 0) + 32 >> 2] | 0) + ($66 << 4) + 12 >> 2] | 0;
    break;
   } else {
    HEAP32[$2 + ($$030 << 2) >> 2] = HEAP32[(HEAP32[(HEAP32[$22 >> 2] | 0) + 20 >> 2] | 0) + (HEAP32[(HEAP32[(HEAP32[$21 >> 2] | 0) + 100 >> 2] | 0) + ($66 << 2) >> 2] << 2) >> 2];
    $$sink = 0;
    break;
   }
  } while (0);
  HEAP32[$3 + ($$030 << 2) >> 2] = $$sink;
  $$030 = $$030 + 1 | 0;
  if (($$030 | 0) == ($4 | 0)) {
   label = 9;
   break;
  }
 }
 if ((label | 0) == 9) {
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 11) {
  _snprintf(25060, 1024, 27124, $vararg_buffer5) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13990, 14007, 120);
 } else if ((label | 0) == 20) {
  _snprintf(25060, 1024, 27124, $vararg_buffer7) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
}

function __ZN10__cxxabiv112_GLOBAL__N_120parse_ctor_dtor_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$023 = 0, $12 = 0, $13 = 0, $21 = 0, $3 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $3 = sp + 40 | 0;
 $4 = sp + 24 | 0;
 $5 = sp;
 $6 = sp + 12 | 0;
 L1 : do if (($1 - $0 | 0) > 1) {
  $12 = $2 + 4 | 0;
  $13 = HEAP32[$12 >> 2] | 0;
  if ((HEAP32[$2 >> 2] | 0) == ($13 | 0)) $$023 = $0; else {
   switch (HEAP8[$0 >> 0] | 0) {
   case 67:
    {
     switch (HEAP8[$0 + 1 >> 0] | 0) {
     case 53:
     case 51:
     case 50:
     case 49:
      break;
     default:
      {
       $$023 = $0;
       break L1;
      }
     }
     __ZN10__cxxabiv112_GLOBAL__N_19base_nameINSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEEEET_RS9_($4, $13 + -24 | 0);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $4);
     $21 = HEAP32[$12 >> 2] | 0;
     if ($21 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($21, $3);
      HEAP32[$12 >> 2] = (HEAP32[$12 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     HEAP8[$2 + 60 >> 0] = 1;
     $$023 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 68:
    break;
   default:
    {
     $$023 = $0;
     break L1;
    }
   }
   switch (HEAP8[$0 + 1 >> 0] | 0) {
   case 53:
   case 50:
   case 49:
   case 48:
    break;
   default:
    {
     $$023 = $0;
     break L1;
    }
   }
   __ZN10__cxxabiv112_GLOBAL__N_19base_nameINSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEEEET_RS9_($6, $13 + -24 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($6, 0, 22347) | 0;
   HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
   HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
   HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
   $$0$i$i$i = 0;
   while (1) {
    if (($$0$i$i$i | 0) == 3) break;
    HEAP32[$6 + ($$0$i$i$i << 2) >> 2] = 0;
    $$0$i$i$i = $$0$i$i$i + 1 | 0;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $5);
   $36 = HEAP32[$12 >> 2] | 0;
   if ($36 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($36, $3);
    HEAP32[$12 >> 2] = (HEAP32[$12 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
   HEAP8[$2 + 60 >> 0] = 1;
   $$023 = $0 + 2 | 0;
  }
 } else $$023 = $0; while (0);
 STACKTOP = sp;
 return $$023 | 0;
}

function __ZN2ut4arch13EntityManagerD2Ev($0) {
 $0 = $0 | 0;
 var $$014$i$i = 0, $$014$i$i$i = 0, $$014$i$i$i$i$i$i$i$i$i = 0, $$06$i$i$i = 0, $11 = 0, $15 = 0, $16 = 0, $19 = 0, $2 = 0, $20 = 0, $23 = 0, $27 = 0, $28 = 0, $31 = 0, $36 = 0, $42 = 0, $46 = 0, $47 = 0, $49 = 0, $5 = 0, $50 = 0, $54 = 0, $65 = 0, $66 = 0, $67 = 0, $69 = 0, $70 = 0, $72 = 0, $73 = 0, $75 = 0, $$014$i$i$i$i$i$i$i$i$i$looptemp = 0, $$014$i$i$looptemp = 0, $$014$i$i$i$looptemp = 0;
 $2 = HEAP32[$0 + 136 >> 2] | 0;
 if ($2 | 0) {
  $$014$i$i = $2;
  do {
   $$014$i$i$looptemp = $$014$i$i;
   $$014$i$i = HEAP32[$$014$i$i >> 2] | 0;
   $5 = $$014$i$i$looptemp + 48 | 0;
   if ((HEAP8[$5 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$5 >> 2] | 0);
   $11 = HEAP32[$$014$i$i$looptemp + 36 >> 2] | 0;
   if ($11 | 0) {
    $$014$i$i$i$i$i$i$i$i$i = $11;
    do {
     $$014$i$i$i$i$i$i$i$i$i$looptemp = $$014$i$i$i$i$i$i$i$i$i;
     $$014$i$i$i$i$i$i$i$i$i = HEAP32[$$014$i$i$i$i$i$i$i$i$i >> 2] | 0;
     __ZdlPv($$014$i$i$i$i$i$i$i$i$i$looptemp);
    } while (($$014$i$i$i$i$i$i$i$i$i | 0) != 0);
   }
   $15 = $$014$i$i$looptemp + 28 | 0;
   $16 = HEAP32[$15 >> 2] | 0;
   HEAP32[$15 >> 2] = 0;
   if ($16 | 0) __ZdlPv($16);
   __ZdlPv($$014$i$i$looptemp);
  } while (($$014$i$i | 0) != 0);
 }
 $19 = $0 + 128 | 0;
 $20 = HEAP32[$19 >> 2] | 0;
 HEAP32[$19 >> 2] = 0;
 if ($20 | 0) __ZdlPv($20);
 $23 = HEAP32[$0 + 116 >> 2] | 0;
 if ($23 | 0) {
  $$014$i$i$i = $23;
  do {
   $$014$i$i$i$looptemp = $$014$i$i$i;
   $$014$i$i$i = HEAP32[$$014$i$i$i >> 2] | 0;
   __ZdlPv($$014$i$i$i$looptemp);
  } while (($$014$i$i$i | 0) != 0);
 }
 $27 = $0 + 108 | 0;
 $28 = HEAP32[$27 >> 2] | 0;
 HEAP32[$27 >> 2] = 0;
 if ($28 | 0) __ZdlPv($28);
 $31 = HEAP32[$0 + 96 >> 2] | 0;
 if ($31 | 0) {
  HEAP32[$0 + 100 >> 2] = $31;
  __ZdlPv($31);
 }
 $36 = HEAP32[$0 + 84 >> 2] | 0;
 if ($36 | 0) {
  HEAP32[$0 + 88 >> 2] = $36;
  __ZdlPv($36);
 }
 __ZN2ut4arch19EntityCommandBuffer10freeChunksEv($0 + 40 | 0);
 $42 = HEAP32[$0 + 72 >> 2] | 0;
 if ($42 | 0) {
  HEAP32[$0 + 76 >> 2] = $42;
  __ZdlPv($42);
 }
 $46 = $0 + 24 | 0;
 $47 = HEAP32[$46 >> 2] | 0;
 if ($47 | 0) {
  $49 = $0 + 28 | 0;
  $50 = HEAP32[$49 >> 2] | 0;
  if (($50 | 0) == ($47 | 0)) $65 = $47; else {
   $$06$i$i$i = $50;
   do {
    $54 = HEAP32[$$06$i$i$i + -8 >> 2] | 0;
    if (($$06$i$i$i + -24 | 0) == ($54 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$54 >> 2] | 0) + 16 >> 2] & 63]($54); else if ($54 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$54 >> 2] | 0) + 20 >> 2] & 63]($54);
    $$06$i$i$i = $$06$i$i$i + -32 | 0;
   } while (($$06$i$i$i | 0) != ($47 | 0));
   $65 = HEAP32[$46 >> 2] | 0;
  }
  HEAP32[$49 >> 2] = $47;
  __ZdlPv($65);
 }
 $66 = $0 + 12 | 0;
 $67 = HEAP32[$66 >> 2] | 0;
 HEAP32[$66 >> 2] = 0;
 if ($67 | 0) __ZdlPv($67);
 $69 = $0 + 8 | 0;
 $70 = HEAP32[$69 >> 2] | 0;
 HEAP32[$69 >> 2] = 0;
 if ($70 | 0) {
  __ZN2ut4arch17EntityDataManagerD2Ev($70);
  __ZdlPv($70);
 }
 $72 = $0 + 4 | 0;
 $73 = HEAP32[$72 >> 2] | 0;
 HEAP32[$72 >> 2] = 0;
 if ($73 | 0) {
  __ZN2ut4arch16ArchetypeManagerD2Ev($73);
  __ZdlPv($73);
 }
 $75 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = 0;
 if (!$75) return;
 __ZN2ut4arch26SharedComponentDataManagerD2Ev($75);
 __ZdlPv($75);
 return;
}

function __ZN2ut9SchedulerD2Ev($0) {
 $0 = $0 | 0;
 var $$014$i$i = 0, $$06$i$i$i = 0, $$06$i$i$i2 = 0, $1 = 0, $14 = 0, $16 = 0, $17 = 0, $2 = 0, $23 = 0, $29 = 0, $30 = 0, $31 = 0, $33 = 0, $34 = 0, $38 = 0, $4 = 0, $43 = 0, $45 = 0, $46 = 0, $5 = 0, $52 = 0, $58 = 0, $60 = 0, $64 = 0, $69 = 0, $71 = 0, $72 = 0, $78 = 0, $84 = 0, $85 = 0, $87 = 0, $9 = 0, $$014$i$i$looptemp = 0;
 $1 = $0 + 80 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if ($2 | 0) {
  $4 = $0 + 84 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) == ($2 | 0)) $29 = $2; else {
   $$06$i$i$i = $5;
   do {
    $9 = HEAP32[$$06$i$i$i + -16 >> 2] | 0;
    if ($9 | 0) {
     HEAP32[$$06$i$i$i + -12 >> 2] = $9;
     __ZdlPv($9);
    }
    $14 = HEAP32[$$06$i$i$i + -20 >> 2] | 0;
    if ($14 | 0) {
     $16 = $14 + 4 | 0;
     $17 = HEAP32[$16 >> 2] | 0;
     HEAP32[$16 >> 2] = $17 + -1;
     if (!$17) {
      FUNCTION_TABLE_vi[HEAP32[(HEAP32[$14 >> 2] | 0) + 8 >> 2] & 63]($14);
      __ZNSt3__219__shared_weak_count14__release_weakEv($14);
     }
    }
    $23 = $$06$i$i$i + -36 | 0;
    $$06$i$i$i = $$06$i$i$i + -40 | 0;
    if ((HEAP8[$23 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$23 >> 2] | 0);
   } while (($$06$i$i$i | 0) != ($2 | 0));
   $29 = HEAP32[$1 >> 2] | 0;
  }
  HEAP32[$4 >> 2] = $2;
  __ZdlPv($29);
 }
 $30 = $0 + 60 | 0;
 $31 = HEAP32[$30 >> 2] | 0;
 if ($31 | 0) {
  $33 = $0 + 64 | 0;
  $34 = HEAP32[$33 >> 2] | 0;
  if (($34 | 0) == ($31 | 0)) $58 = $31; else {
   $$06$i$i$i2 = $34;
   do {
    $38 = HEAP32[$$06$i$i$i2 + -16 >> 2] | 0;
    if ($38 | 0) {
     HEAP32[$$06$i$i$i2 + -12 >> 2] = $38;
     __ZdlPv($38);
    }
    $43 = HEAP32[$$06$i$i$i2 + -20 >> 2] | 0;
    if ($43 | 0) {
     $45 = $43 + 4 | 0;
     $46 = HEAP32[$45 >> 2] | 0;
     HEAP32[$45 >> 2] = $46 + -1;
     if (!$46) {
      FUNCTION_TABLE_vi[HEAP32[(HEAP32[$43 >> 2] | 0) + 8 >> 2] & 63]($43);
      __ZNSt3__219__shared_weak_count14__release_weakEv($43);
     }
    }
    $52 = $$06$i$i$i2 + -36 | 0;
    $$06$i$i$i2 = $$06$i$i$i2 + -40 | 0;
    if ((HEAP8[$52 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$52 >> 2] | 0);
   } while (($$06$i$i$i2 | 0) != ($31 | 0));
   $58 = HEAP32[$30 >> 2] | 0;
  }
  HEAP32[$33 >> 2] = $31;
  __ZdlPv($58);
 }
 $60 = HEAP32[$0 + 48 >> 2] | 0;
 if ($60 | 0) {
  $$014$i$i = $60;
  do {
   $$014$i$i$looptemp = $$014$i$i;
   $$014$i$i = HEAP32[$$014$i$i >> 2] | 0;
   $64 = HEAP32[$$014$i$i$looptemp + 36 >> 2] | 0;
   if ($64 | 0) {
    HEAP32[$$014$i$i$looptemp + 40 >> 2] = $64;
    __ZdlPv($64);
   }
   $69 = HEAP32[$$014$i$i$looptemp + 32 >> 2] | 0;
   if ($69 | 0) {
    $71 = $69 + 4 | 0;
    $72 = HEAP32[$71 >> 2] | 0;
    HEAP32[$71 >> 2] = $72 + -1;
    if (!$72) {
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$69 >> 2] | 0) + 8 >> 2] & 63]($69);
     __ZNSt3__219__shared_weak_count14__release_weakEv($69);
    }
   }
   $78 = $$014$i$i$looptemp + 16 | 0;
   if ((HEAP8[$78 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$78 >> 2] | 0);
   __ZdlPv($$014$i$i$looptemp);
  } while (($$014$i$i | 0) != 0);
 }
 $84 = $0 + 40 | 0;
 $85 = HEAP32[$84 >> 2] | 0;
 HEAP32[$84 >> 2] = 0;
 if ($85 | 0) __ZdlPv($85);
 $87 = $0 + 4 | 0;
 if ((HEAP8[$87 + 11 >> 0] | 0) >= 0) return;
 __ZdlPv(HEAP32[$87 >> 2] | 0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i20 = 0, $$018 = 0, $12 = 0, $18 = 0, $19 = 0, $32 = 0, $33 = 0, $34 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $4 = sp + 48 | 0;
 $5 = sp + 36 | 0;
 $6 = sp + 24 | 0;
 $7 = sp + 12 | 0;
 $8 = sp;
 $9 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($0, $1, $3) | 0;
 if (($9 | 0) == ($0 | 0)) $$018 = $0; else {
  $12 = $3 + 4 | 0;
  if ((HEAP32[$3 >> 2] | 0) == (HEAP32[$12 >> 2] | 0)) $$018 = $0; else {
   __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_($7, $2, 22277);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($8, (HEAP32[$12 >> 2] | 0) + -24 | 0);
   $18 = HEAP8[$8 + 11 >> 0] | 0;
   $19 = $18 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($7, $19 ? HEAP32[$8 >> 2] | 0 : $8, $19 ? HEAP32[$8 + 4 >> 2] | 0 : $18 & 255) | 0;
   HEAP32[$6 >> 2] = HEAP32[$7 >> 2];
   HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
   HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
   $$0$i$i$i = 0;
   while (1) {
    if (($$0$i$i$i | 0) == 3) break;
    HEAP32[$7 + ($$0$i$i$i << 2) >> 2] = 0;
    $$0$i$i$i = $$0$i$i$i + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($6, 22275) | 0;
   HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
   HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
   HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
   $$0$i$i$i20 = 0;
   while (1) {
    if (($$0$i$i$i20 | 0) == 3) break;
    HEAP32[$6 + ($$0$i$i$i20 << 2) >> 2] = 0;
    $$0$i$i$i20 = $$0$i$i$i20 + 1 | 0;
   }
   $32 = HEAP32[$12 >> 2] | 0;
   $33 = $32 + -24 | 0;
   $34 = $33 + 11 | 0;
   if ((HEAP8[$34 >> 0] | 0) < 0) {
    $37 = HEAP32[$33 >> 2] | 0;
    HEAP8[$4 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($37, $4);
    HEAP32[$32 + -20 >> 2] = 0;
   } else {
    HEAP8[$4 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($33, $4);
    HEAP8[$34 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEj($33);
   HEAP32[$33 >> 2] = HEAP32[$5 >> 2];
   HEAP32[$33 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
   HEAP32[$33 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
   $$0$i$i$i$i = 0;
   while (1) {
    if (($$0$i$i$i$i | 0) == 3) break;
    HEAP32[$5 + ($$0$i$i$i$i << 2) >> 2] = 0;
    $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
   $$018 = $9;
  }
 }
 STACKTOP = sp;
 return $$018 | 0;
}

function __ZNSt3__26vectorIN2ut9Scheduler15ScheduledSystemENS_9allocatorIS3_EEE7reserveEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$06$i$i = 0, $$pre = 0, $$pre$i = 0, $$pre22 = 0, $11 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $24 = 0, $26 = 0, $27 = 0, $29 = 0, $32 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $39 = 0, $4 = 0, $41 = 0, $51 = 0, $53 = 0, $58 = 0, $60 = 0, $61 = 0, $67 = 0, $74 = 0, $8 = 0, $9 = 0, $$06$i$i$looptemp = 0;
 $2 = $0 + 8 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $8 = $4;
 if ((((HEAP32[$2 >> 2] | 0) - $4 | 0) / 40 | 0) >>> 0 >= $1 >>> 0) return;
 $9 = $0 + 4 | 0;
 if ($1 >>> 0 > 107374182) _abort();
 $11 = HEAP32[$9 >> 2] | 0;
 $15 = __Znwj($1 * 40 | 0) | 0;
 $16 = $15 + ((($11 - $4 | 0) / 40 | 0) * 40 | 0) | 0;
 $17 = $16;
 $19 = $15 + ($1 * 40 | 0) | 0;
 $20 = $11;
 if (($20 | 0) == ($8 | 0)) {
  HEAP32[$0 >> 2] = $17;
  HEAP32[$9 >> 2] = $17;
  HEAP32[$2 >> 2] = $19;
  $74 = $4;
 } else {
  $$06$i$i = $20;
  $24 = $16;
  do {
   $$06$i$i$looptemp = $$06$i$i;
   $$06$i$i = $$06$i$i + -40 | 0;
   HEAP32[$24 + -40 >> 2] = HEAP32[$$06$i$i >> 2];
   $26 = $24 + -36 | 0;
   $27 = $$06$i$i$looptemp + -36 | 0;
   HEAP32[$26 >> 2] = HEAP32[$27 >> 2];
   HEAP32[$26 + 4 >> 2] = HEAP32[$27 + 4 >> 2];
   HEAP32[$26 + 8 >> 2] = HEAP32[$27 + 8 >> 2];
   HEAP32[$27 >> 2] = 0;
   HEAP32[$27 + 4 >> 2] = 0;
   HEAP32[$27 + 8 >> 2] = 0;
   $29 = $$06$i$i$looptemp + -24 | 0;
   HEAP32[$24 + -24 >> 2] = HEAP32[$29 >> 2];
   $32 = $$06$i$i$looptemp + -20 | 0;
   HEAP32[$24 + -20 >> 2] = HEAP32[$32 >> 2];
   HEAP32[$29 >> 2] = 0;
   HEAP32[$32 >> 2] = 0;
   $34 = $24 + -16 | 0;
   $35 = $$06$i$i$looptemp + -16 | 0;
   HEAP32[$34 >> 2] = 0;
   $36 = $24 + -12 | 0;
   HEAP32[$36 >> 2] = 0;
   $37 = $24 + -8 | 0;
   HEAP32[$37 >> 2] = 0;
   HEAP32[$34 >> 2] = HEAP32[$35 >> 2];
   $39 = $$06$i$i$looptemp + -12 | 0;
   HEAP32[$36 >> 2] = HEAP32[$39 >> 2];
   $41 = $$06$i$i$looptemp + -8 | 0;
   HEAP32[$37 >> 2] = HEAP32[$41 >> 2];
   HEAP32[$41 >> 2] = 0;
   HEAP32[$39 >> 2] = 0;
   HEAP32[$35 >> 2] = 0;
   HEAP8[$24 + -4 >> 0] = HEAP8[$$06$i$i$looptemp + -4 >> 0] | 0;
   $24 = $24 + -40 | 0;
  } while (($$06$i$i | 0) != ($8 | 0));
  $$pre$i = HEAP32[$0 >> 2] | 0;
  $$pre = HEAP32[$9 >> 2] | 0;
  $$pre22 = $$pre$i;
  HEAP32[$0 >> 2] = $24;
  HEAP32[$9 >> 2] = $17;
  HEAP32[$2 >> 2] = $19;
  if (($$pre | 0) == ($$pre22 | 0)) $74 = $$pre$i; else {
   $51 = $$pre;
   do {
    $53 = HEAP32[$51 + -16 >> 2] | 0;
    if ($53 | 0) {
     HEAP32[$51 + -12 >> 2] = $53;
     __ZdlPv($53);
    }
    $58 = HEAP32[$51 + -20 >> 2] | 0;
    if ($58 | 0) {
     $60 = $58 + 4 | 0;
     $61 = HEAP32[$60 >> 2] | 0;
     HEAP32[$60 >> 2] = $61 + -1;
     if (!$61) {
      FUNCTION_TABLE_vi[HEAP32[(HEAP32[$58 >> 2] | 0) + 8 >> 2] & 63]($58);
      __ZNSt3__219__shared_weak_count14__release_weakEv($58);
     }
    }
    $67 = $51 + -36 | 0;
    $51 = $51 + -40 | 0;
    if ((HEAP8[$67 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$67 >> 2] | 0);
   } while (($51 | 0) != ($$pre22 | 0));
   $74 = $$pre$i;
  }
 }
 if (!$74) return;
 __ZdlPv($74);
 return;
}

function __ZN2ut4arch13EntityManager27getComponentDataRawUnsafeROENS_6EntityEj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$02832$i$i$i = 0, $$02833$i$i$i = 0, $$02833$us$i$i$i = 0, $$2 = 0, $11 = 0, $13 = 0, $20 = 0, $21 = 0, $25 = 0, $26 = 0, $3 = 0, $34 = 0, $39 = 0, $44 = 0, $47 = 0, $57 = 0, $58 = 0, $63 = 0, $64 = 0, $7 = 0, $9 = 0, $tmpcast$byval_copy = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast$byval_copy = sp + 16 | 0;
 $vararg_buffer = sp + 8 | 0;
 $3 = sp;
 __ZN2ut4arch13EntityManager18assertEntityExistsERKNS_6EntityEjPKcS6_($0, $1, $2, 6673, 6701);
 __ZN2ut4arch13EntityManager24assertEntityHasComponentERKNS_6EntityEjPKc($0, $1, $2, 6673);
 L1 : do if ((HEAP32[$0 + 36 >> 2] | 0) > 0) {
  $7 = HEAP32[$1 >> 2] | 0;
  $9 = HEAP32[$0 + 132 >> 2] | 0;
  if ($9 | 0) {
   $11 = $9 + -1 | 0;
   $13 = ($11 & $9 | 0) == 0;
   if ($13) $20 = $11 & $7; else if ($7 >>> 0 < $9 >>> 0) $20 = $7; else $20 = ($7 >>> 0) % ($9 >>> 0) | 0;
   $21 = HEAP32[(HEAP32[$0 + 128 >> 2] | 0) + ($20 << 2) >> 2] | 0;
   if ($21 | 0) {
    $$02832$i$i$i = HEAP32[$21 >> 2] | 0;
    if ($$02832$i$i$i | 0) {
     L11 : do if ($13) {
      $$02833$us$i$i$i = $$02832$i$i$i;
      while (1) {
       $25 = HEAP32[$$02833$us$i$i$i + 4 >> 2] | 0;
       $26 = ($25 | 0) == ($7 | 0);
       if (!($26 | ($25 & $11 | 0) == ($20 | 0))) break L1;
       if ($26) if ((HEAP32[$$02833$us$i$i$i + 8 >> 2] | 0) == ($7 | 0)) break L11;
       $$02833$us$i$i$i = HEAP32[$$02833$us$i$i$i >> 2] | 0;
       if (!$$02833$us$i$i$i) break L1;
      }
     } else {
      $$02833$i$i$i = $$02832$i$i$i;
      while (1) {
       $34 = HEAP32[$$02833$i$i$i + 4 >> 2] | 0;
       if (($34 | 0) == ($7 | 0)) {
        if ((HEAP32[$$02833$i$i$i + 8 >> 2] | 0) == ($7 | 0)) break L11;
       } else {
        if ($34 >>> 0 < $9 >>> 0) $39 = $34; else $39 = ($34 >>> 0) % ($9 >>> 0) | 0;
        if (($39 | 0) != ($20 | 0)) break L1;
       }
       $$02833$i$i$i = HEAP32[$$02833$i$i$i >> 2] | 0;
       if (!$$02833$i$i$i) break L1;
      }
     } while (0);
     $44 = __ZN2ut4arch13EntityManager26getFreshComponentDataRawROERKNS_6EntityEj($0, $1, $2) | 0;
     if ($44 | 0) {
      $$2 = $44;
      STACKTOP = sp;
      return $$2 | 0;
     }
     $47 = HEAP32[6067] | 0;
     if ((HEAP32[6068] | 0) - $47 >> 2 >>> 0 <= $2 >>> 0) {
      _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
      HEAP8[26083] = 0;
      __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
     }
     $$2 = HEAP32[(HEAP32[$47 + ($2 << 2) >> 2] | 0) + 24 >> 2] | 0;
     STACKTOP = sp;
     return $$2 | 0;
    }
   }
  }
 } while (0);
 $57 = HEAP32[$0 + 8 >> 2] | 0;
 $58 = $1;
 $63 = HEAP32[$58 + 4 >> 2] | 0;
 $64 = $3;
 HEAP32[$64 >> 2] = HEAP32[$58 >> 2];
 HEAP32[$64 + 4 >> 2] = $63;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$3 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 $$2 = __ZN2ut4arch17EntityDataManager26getComponentDataWithTypeROENS_6EntityEj($57, $tmpcast$byval_copy, $2) | 0;
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_alignof_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i25 = 0, $$1 = 0, $16 = 0, $17 = 0, $20 = 0, $21 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $3 = sp + 36 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 12 | 0;
 $6 = sp;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 97) if ((HEAP8[$0 + 1 >> 0] | 0) == 122) {
  $16 = $0 + 2 | 0;
  $17 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($16, $1, $2) | 0;
  if (($17 | 0) == ($16 | 0)) $$1 = $0; else {
   $20 = $2 + 4 | 0;
   $21 = HEAP32[$20 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($21 | 0)) $$1 = $0; else {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($6, $21 + -24 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($6, 0, 23456) | 0;
    HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
    HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
    HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$6 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($5, 22275) | 0;
    HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
    $$0$i$i$i25 = 0;
    while (1) {
     if (($$0$i$i$i25 | 0) == 3) break;
     HEAP32[$5 + ($$0$i$i$i25 << 2) >> 2] = 0;
     $$0$i$i$i25 = $$0$i$i$i25 + 1 | 0;
    }
    $30 = HEAP32[$20 >> 2] | 0;
    $31 = $30 + -24 | 0;
    $32 = $31 + 11 | 0;
    if ((HEAP8[$32 >> 0] | 0) < 0) {
     $35 = HEAP32[$31 >> 2] | 0;
     HEAP8[$3 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc($35, $3);
     HEAP32[$30 + -20 >> 2] = 0;
    } else {
     HEAP8[$3 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc($31, $3);
     HEAP8[$32 >> 0] = 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEj($31);
    HEAP32[$31 >> 2] = HEAP32[$4 >> 2];
    HEAP32[$31 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
    HEAP32[$31 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
    $$0$i$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i$i | 0) == 3) break;
     HEAP32[$4 + ($$0$i$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
    $$1 = $17;
   }
  }
 } else $$1 = $0; else $$1 = $0; else $$1 = $0;
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_alignof_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i25 = 0, $$1 = 0, $16 = 0, $17 = 0, $20 = 0, $21 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $3 = sp + 36 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 12 | 0;
 $6 = sp;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 97) if ((HEAP8[$0 + 1 >> 0] | 0) == 116) {
  $16 = $0 + 2 | 0;
  $17 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($16, $1, $2) | 0;
  if (($17 | 0) == ($16 | 0)) $$1 = $0; else {
   $20 = $2 + 4 | 0;
   $21 = HEAP32[$20 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($21 | 0)) $$1 = $0; else {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($6, $21 + -24 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($6, 0, 23456) | 0;
    HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
    HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
    HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$6 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($5, 22275) | 0;
    HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
    $$0$i$i$i25 = 0;
    while (1) {
     if (($$0$i$i$i25 | 0) == 3) break;
     HEAP32[$5 + ($$0$i$i$i25 << 2) >> 2] = 0;
     $$0$i$i$i25 = $$0$i$i$i25 + 1 | 0;
    }
    $30 = HEAP32[$20 >> 2] | 0;
    $31 = $30 + -24 | 0;
    $32 = $31 + 11 | 0;
    if ((HEAP8[$32 >> 0] | 0) < 0) {
     $35 = HEAP32[$31 >> 2] | 0;
     HEAP8[$3 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc($35, $3);
     HEAP32[$30 + -20 >> 2] = 0;
    } else {
     HEAP8[$3 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc($31, $3);
     HEAP8[$32 >> 0] = 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEj($31);
    HEAP32[$31 >> 2] = HEAP32[$4 >> 2];
    HEAP32[$31 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
    HEAP32[$31 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
    $$0$i$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i$i | 0) == 3) break;
     HEAP32[$4 + ($$0$i$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
    $$1 = $17;
   }
  }
 } else $$1 = $0; else $$1 = $0; else $$1 = $0;
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7replaceEjjPKcj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$014 = 0, $$069 = 0, $$070 = 0, $$074 = 0, $$215 = 0, $$3 = 0, $$316 = 0, $$373 = 0, $$377 = 0, $$4 = 0, $$sroa$speculated18 = 0, $15 = 0, $17 = 0, $2 = 0, $21 = 0, $25 = 0, $3 = 0, $34 = 0, $4 = 0, $41 = 0, $5 = 0, $6 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = $0 + 11 | 0;
 $4 = HEAP8[$3 >> 0] | 0;
 $5 = $4 << 24 >> 24 < 0;
 if ($5) {
  $9 = HEAP32[$0 + 4 >> 2] | 0;
  $$sroa$speculated18 = $9 >>> 0 < 11 ? $9 : 11;
  $15 = $9;
  $17 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  $6 = $4 & 255;
  $$sroa$speculated18 = $6 >>> 0 < 11 ? $6 : 11;
  $15 = $6;
  $17 = 10;
 }
 if (($$sroa$speculated18 - $15 + $17 | 0) >>> 0 < $1 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc($0, $17, $1 - $$sroa$speculated18 + $15 - $17 | 0, $15, 0, $$sroa$speculated18, $1, 23696); else {
  if ($5) $25 = HEAP32[$0 >> 2] | 0; else $25 = $0;
  do if (($$sroa$speculated18 | 0) == ($1 | 0)) {
   $$215 = $1;
   $$3 = 0;
   $$373 = 23696;
   $$377 = $1;
   label = 17;
  } else {
   $21 = $15 - $$sroa$speculated18 | 0;
   if (!$21) {
    $$215 = $$sroa$speculated18;
    $$3 = 0;
    $$373 = 23696;
    $$377 = $1;
    label = 17;
   } else {
    if ($$sroa$speculated18 >>> 0 > $1 >>> 0) {
     __ZNSt3__211char_traitsIcE4moveEPcPKcj($25, 23696, $1) | 0;
     __ZNSt3__211char_traitsIcE4moveEPcPKcj($25 + $1 | 0, $25 + $$sroa$speculated18 | 0, $21) | 0;
     $$316 = $$sroa$speculated18;
     $$4 = $1;
     break;
    }
    do if ($25 >>> 0 < 23696 >>> 0 & ($25 + $15 | 0) >>> 0 > 23696 >>> 0) if (($25 + $$sroa$speculated18 | 0) >>> 0 > 23696 >>> 0) {
     __ZNSt3__211char_traitsIcE4moveEPcPKcj($25, 23696, $$sroa$speculated18) | 0;
     $$014 = 0;
     $$069 = $$sroa$speculated18;
     $$070 = 23696 + $1 | 0;
     $$074 = $1 - $$sroa$speculated18 | 0;
     break;
    } else {
     $$014 = $$sroa$speculated18;
     $$069 = 0;
     $$070 = 23696 + ($1 - $$sroa$speculated18) | 0;
     $$074 = $1;
     break;
    } else {
     $$014 = $$sroa$speculated18;
     $$069 = 0;
     $$070 = 23696;
     $$074 = $1;
    } while (0);
    $34 = $25 + $$069 | 0;
    __ZNSt3__211char_traitsIcE4moveEPcPKcj($34 + $$074 | 0, $34 + $$014 | 0, $21) | 0;
    $$215 = $$014;
    $$3 = $$069;
    $$373 = $$070;
    $$377 = $$074;
    label = 17;
   }
  } while (0);
  if ((label | 0) == 17) {
   __ZNSt3__211char_traitsIcE4moveEPcPKcj($25 + $$3 | 0, $$373, $$377) | 0;
   $$316 = $$215;
   $$4 = $$377;
  }
  $41 = $$4 - $$316 + $15 | 0;
  if ((HEAP8[$3 >> 0] | 0) < 0) HEAP32[$0 + 4 >> 2] = $41; else HEAP8[$3 >> 0] = $41;
  HEAP8[$2 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($25 + $41 | 0, $2);
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__27__sort5IRNS_6__lessIN2ut4arch13ComponentSpecES4_EEPS4_EEjT0_S8_S8_S8_S8_T_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $107 = 0, $109 = 0, $112 = 0, $113 = 0, $118 = 0, $119 = 0, $123 = 0, $16 = 0, $18 = 0, $21 = 0, $22 = 0, $27 = 0, $28 = 0, $32 = 0, $36 = 0, $37 = 0, $38 = 0, $46 = 0, $48 = 0, $51 = 0, $52 = 0, $57 = 0, $58 = 0, $6 = 0, $62 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, $76 = 0, $78 = 0, $8 = 0, $81 = 0, $82 = 0, $87 = 0, $88 = 0, $92 = 0, $96 = 0, $97 = 0, $98 = 0;
 $6 = __ZNSt3__27__sort4IRNS_6__lessIN2ut4arch13ComponentSpecES4_EEPS4_EEjT0_S8_S8_S8_T_($0, $1, $2, $3, $5) | 0;
 $7 = HEAP32[$4 >> 2] | 0;
 $8 = HEAP32[$3 >> 2] | 0;
 if (($7 | 0) == ($8 | 0)) {
  if ((HEAP32[$4 + 4 >> 2] | 0) >= (HEAP32[$3 + 4 >> 2] | 0)) {
   $$0 = $6;
   return $$0 | 0;
  }
 } else if ($7 >>> 0 >= $8 >>> 0) {
  $$0 = $6;
  return $$0 | 0;
 }
 $16 = $3;
 $18 = HEAP32[$16 >> 2] | 0;
 $21 = HEAP32[$16 + 4 >> 2] | 0;
 $22 = $4;
 $27 = HEAP32[$22 + 4 >> 2] | 0;
 $28 = $3;
 HEAP32[$28 >> 2] = HEAP32[$22 >> 2];
 HEAP32[$28 + 4 >> 2] = $27;
 $32 = $4;
 HEAP32[$32 >> 2] = $18;
 HEAP32[$32 + 4 >> 2] = $21;
 $36 = $6 + 1 | 0;
 $37 = HEAP32[$3 >> 2] | 0;
 $38 = HEAP32[$2 >> 2] | 0;
 if (($37 | 0) == ($38 | 0)) {
  if ((HEAP32[$3 + 4 >> 2] | 0) >= (HEAP32[$2 + 4 >> 2] | 0)) {
   $$0 = $36;
   return $$0 | 0;
  }
 } else if ($37 >>> 0 >= $38 >>> 0) {
  $$0 = $36;
  return $$0 | 0;
 }
 $46 = $2;
 $48 = HEAP32[$46 >> 2] | 0;
 $51 = HEAP32[$46 + 4 >> 2] | 0;
 $52 = $3;
 $57 = HEAP32[$52 + 4 >> 2] | 0;
 $58 = $2;
 HEAP32[$58 >> 2] = HEAP32[$52 >> 2];
 HEAP32[$58 + 4 >> 2] = $57;
 $62 = $3;
 HEAP32[$62 >> 2] = $48;
 HEAP32[$62 + 4 >> 2] = $51;
 $66 = $6 + 2 | 0;
 $67 = HEAP32[$2 >> 2] | 0;
 $68 = HEAP32[$1 >> 2] | 0;
 if (($67 | 0) == ($68 | 0)) {
  if ((HEAP32[$2 + 4 >> 2] | 0) >= (HEAP32[$1 + 4 >> 2] | 0)) {
   $$0 = $66;
   return $$0 | 0;
  }
 } else if ($67 >>> 0 >= $68 >>> 0) {
  $$0 = $66;
  return $$0 | 0;
 }
 $76 = $1;
 $78 = HEAP32[$76 >> 2] | 0;
 $81 = HEAP32[$76 + 4 >> 2] | 0;
 $82 = $2;
 $87 = HEAP32[$82 + 4 >> 2] | 0;
 $88 = $1;
 HEAP32[$88 >> 2] = HEAP32[$82 >> 2];
 HEAP32[$88 + 4 >> 2] = $87;
 $92 = $2;
 HEAP32[$92 >> 2] = $78;
 HEAP32[$92 + 4 >> 2] = $81;
 $96 = $6 + 3 | 0;
 $97 = HEAP32[$1 >> 2] | 0;
 $98 = HEAP32[$0 >> 2] | 0;
 if (($97 | 0) == ($98 | 0)) {
  if ((HEAP32[$1 + 4 >> 2] | 0) >= (HEAP32[$0 + 4 >> 2] | 0)) {
   $$0 = $96;
   return $$0 | 0;
  }
 } else if ($97 >>> 0 >= $98 >>> 0) {
  $$0 = $96;
  return $$0 | 0;
 }
 $107 = $0;
 $109 = HEAP32[$107 >> 2] | 0;
 $112 = HEAP32[$107 + 4 >> 2] | 0;
 $113 = $1;
 $118 = HEAP32[$113 + 4 >> 2] | 0;
 $119 = $0;
 HEAP32[$119 >> 2] = HEAP32[$113 >> 2];
 HEAP32[$119 + 4 >> 2] = $118;
 $123 = $1;
 HEAP32[$123 >> 2] = $109;
 HEAP32[$123 + 4 >> 2] = $112;
 $$0 = $6 + 4 | 0;
 return $$0 | 0;
}

function __ZN2ut8PtrTable7persistINS_12ManagerWorldEEEPT_RKNSt3__210shared_ptrIS3_EE($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$02832$i = 0, $$02833$i = 0, $$02833$us$i = 0, $$sroa$0$0$i = 0, $1 = 0, $11 = 0, $15 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $25 = 0, $31 = 0, $32 = 0, $36 = 0, $37 = 0, $45 = 0, $50 = 0, $55 = 0, $58 = 0, $6 = 0, $62 = 0, $64 = 0, $68 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = HEAP32[$0 >> 2] | 0;
 if (!$2) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (!(HEAP8[24152] | 0)) {
  HEAP32[6070] = 0;
  HEAP32[6071] = 0;
  HEAP32[6072] = 0;
  HEAP32[6073] = 0;
  HEAP32[6074] = 1065353216;
  $6 = 24152;
  HEAP32[$6 >> 2] = 1;
  HEAP32[$6 + 4 >> 2] = 0;
 }
 $11 = Math_imul($2, 1540483477) | 0;
 $15 = (Math_imul($11 >>> 24 ^ $11, 1540483477) | 0) ^ 1866966612;
 $18 = Math_imul($15 >>> 13 ^ $15, 1540483477) | 0;
 $20 = $18 >>> 15 ^ $18;
 $21 = HEAP32[6071] | 0;
 L7 : do if ($21 | 0) {
  $23 = $21 + -1 | 0;
  $25 = ($23 & $21 | 0) == 0;
  if ($25) $31 = $23 & $20; else if ($20 >>> 0 < $21 >>> 0) $31 = $20; else $31 = ($20 >>> 0) % ($21 >>> 0) | 0;
  $32 = HEAP32[(HEAP32[6070] | 0) + ($31 << 2) >> 2] | 0;
  if ($32 | 0) {
   $$02832$i = HEAP32[$32 >> 2] | 0;
   if ($$02832$i | 0) {
    L16 : do if ($25) {
     $$02833$us$i = $$02832$i;
     while (1) {
      $36 = HEAP32[$$02833$us$i + 4 >> 2] | 0;
      $37 = ($36 | 0) == ($20 | 0);
      if (!($37 | ($36 & $23 | 0) == ($31 | 0))) break L7;
      if ($37) if ((HEAP32[$$02833$us$i + 8 >> 2] | 0) == ($2 | 0)) {
       $$sroa$0$0$i = $$02833$us$i;
       break L16;
      }
      $$02833$us$i = HEAP32[$$02833$us$i >> 2] | 0;
      if (!$$02833$us$i) break L7;
     }
    } else {
     $$02833$i = $$02832$i;
     while (1) {
      $45 = HEAP32[$$02833$i + 4 >> 2] | 0;
      if (($45 | 0) == ($20 | 0)) {
       if ((HEAP32[$$02833$i + 8 >> 2] | 0) == ($2 | 0)) {
        $$sroa$0$0$i = $$02833$i;
        break L16;
       }
      } else {
       if ($45 >>> 0 < $21 >>> 0) $50 = $45; else $50 = ($45 >>> 0) % ($21 >>> 0) | 0;
       if (($50 | 0) != ($31 | 0)) break L7;
      }
      $$02833$i = HEAP32[$$02833$i >> 2] | 0;
      if (!$$02833$i) break L7;
     }
    } while (0);
    $55 = $$sroa$0$0$i + 12 | 0;
    HEAP32[$55 >> 2] = (HEAP32[$55 >> 2] | 0) + 1;
    $$0 = $2;
    STACKTOP = sp;
    return $$0 | 0;
   }
  }
 } while (0);
 $58 = __Znwj(8) | 0;
 HEAP32[$58 >> 2] = HEAP32[$0 >> 2];
 $62 = HEAP32[$0 + 4 >> 2] | 0;
 HEAP32[$58 + 4 >> 2] = $62;
 if ($62 | 0) {
  $64 = $62 + 4 | 0;
  HEAP32[$64 >> 2] = (HEAP32[$64 >> 2] | 0) + 1;
 }
 HEAP32[$1 >> 2] = $2;
 $68 = __ZNSt3__213unordered_mapIPvNS_4pairIiS1_EENS_4hashIS1_EENS_8equal_toIS1_EENS_9allocatorINS2_IKS1_S3_EEEEEixEOS1_(24280, $1) | 0;
 HEAP32[$68 >> 2] = 1;
 HEAP32[$68 + 4 >> 2] = $58;
 $$0 = $2;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN2ut8PtrTable7persistI14UpdateFnSystemEEPT_RKNSt3__210shared_ptrIS3_EE($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$02832$i = 0, $$02833$i = 0, $$02833$us$i = 0, $$sroa$0$0$i = 0, $1 = 0, $11 = 0, $15 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $25 = 0, $31 = 0, $32 = 0, $36 = 0, $37 = 0, $45 = 0, $50 = 0, $55 = 0, $58 = 0, $6 = 0, $62 = 0, $64 = 0, $68 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = HEAP32[$0 >> 2] | 0;
 if (!$2) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (!(HEAP8[24152] | 0)) {
  HEAP32[6070] = 0;
  HEAP32[6071] = 0;
  HEAP32[6072] = 0;
  HEAP32[6073] = 0;
  HEAP32[6074] = 1065353216;
  $6 = 24152;
  HEAP32[$6 >> 2] = 1;
  HEAP32[$6 + 4 >> 2] = 0;
 }
 $11 = Math_imul($2, 1540483477) | 0;
 $15 = (Math_imul($11 >>> 24 ^ $11, 1540483477) | 0) ^ 1866966612;
 $18 = Math_imul($15 >>> 13 ^ $15, 1540483477) | 0;
 $20 = $18 >>> 15 ^ $18;
 $21 = HEAP32[6071] | 0;
 L7 : do if ($21 | 0) {
  $23 = $21 + -1 | 0;
  $25 = ($23 & $21 | 0) == 0;
  if ($25) $31 = $23 & $20; else if ($20 >>> 0 < $21 >>> 0) $31 = $20; else $31 = ($20 >>> 0) % ($21 >>> 0) | 0;
  $32 = HEAP32[(HEAP32[6070] | 0) + ($31 << 2) >> 2] | 0;
  if ($32 | 0) {
   $$02832$i = HEAP32[$32 >> 2] | 0;
   if ($$02832$i | 0) {
    L16 : do if ($25) {
     $$02833$us$i = $$02832$i;
     while (1) {
      $36 = HEAP32[$$02833$us$i + 4 >> 2] | 0;
      $37 = ($36 | 0) == ($20 | 0);
      if (!($37 | ($36 & $23 | 0) == ($31 | 0))) break L7;
      if ($37) if ((HEAP32[$$02833$us$i + 8 >> 2] | 0) == ($2 | 0)) {
       $$sroa$0$0$i = $$02833$us$i;
       break L16;
      }
      $$02833$us$i = HEAP32[$$02833$us$i >> 2] | 0;
      if (!$$02833$us$i) break L7;
     }
    } else {
     $$02833$i = $$02832$i;
     while (1) {
      $45 = HEAP32[$$02833$i + 4 >> 2] | 0;
      if (($45 | 0) == ($20 | 0)) {
       if ((HEAP32[$$02833$i + 8 >> 2] | 0) == ($2 | 0)) {
        $$sroa$0$0$i = $$02833$i;
        break L16;
       }
      } else {
       if ($45 >>> 0 < $21 >>> 0) $50 = $45; else $50 = ($45 >>> 0) % ($21 >>> 0) | 0;
       if (($50 | 0) != ($31 | 0)) break L7;
      }
      $$02833$i = HEAP32[$$02833$i >> 2] | 0;
      if (!$$02833$i) break L7;
     }
    } while (0);
    $55 = $$sroa$0$0$i + 12 | 0;
    HEAP32[$55 >> 2] = (HEAP32[$55 >> 2] | 0) + 1;
    $$0 = $2;
    STACKTOP = sp;
    return $$0 | 0;
   }
  }
 } while (0);
 $58 = __Znwj(8) | 0;
 HEAP32[$58 >> 2] = HEAP32[$0 >> 2];
 $62 = HEAP32[$0 + 4 >> 2] | 0;
 HEAP32[$58 + 4 >> 2] = $62;
 if ($62 | 0) {
  $64 = $62 + 4 | 0;
  HEAP32[$64 >> 2] = (HEAP32[$64 >> 2] | 0) + 1;
 }
 HEAP32[$1 >> 2] = $2;
 $68 = __ZNSt3__213unordered_mapIPvNS_4pairIiS1_EENS_4hashIS1_EENS_8equal_toIS1_EENS_9allocatorINS2_IKS1_S3_EEEEEixEOS1_(24280, $1) | 0;
 HEAP32[$68 >> 2] = 1;
 HEAP32[$68 + 4 >> 2] = $58;
 $$0 = $2;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN2ut8PtrTable7persistI14DelegateSystemEEPT_RKNSt3__210shared_ptrIS3_EE($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$02832$i = 0, $$02833$i = 0, $$02833$us$i = 0, $$sroa$0$0$i = 0, $1 = 0, $11 = 0, $15 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $25 = 0, $31 = 0, $32 = 0, $36 = 0, $37 = 0, $45 = 0, $50 = 0, $55 = 0, $58 = 0, $6 = 0, $62 = 0, $64 = 0, $68 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = HEAP32[$0 >> 2] | 0;
 if (!$2) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (!(HEAP8[24152] | 0)) {
  HEAP32[6070] = 0;
  HEAP32[6071] = 0;
  HEAP32[6072] = 0;
  HEAP32[6073] = 0;
  HEAP32[6074] = 1065353216;
  $6 = 24152;
  HEAP32[$6 >> 2] = 1;
  HEAP32[$6 + 4 >> 2] = 0;
 }
 $11 = Math_imul($2, 1540483477) | 0;
 $15 = (Math_imul($11 >>> 24 ^ $11, 1540483477) | 0) ^ 1866966612;
 $18 = Math_imul($15 >>> 13 ^ $15, 1540483477) | 0;
 $20 = $18 >>> 15 ^ $18;
 $21 = HEAP32[6071] | 0;
 L7 : do if ($21 | 0) {
  $23 = $21 + -1 | 0;
  $25 = ($23 & $21 | 0) == 0;
  if ($25) $31 = $23 & $20; else if ($20 >>> 0 < $21 >>> 0) $31 = $20; else $31 = ($20 >>> 0) % ($21 >>> 0) | 0;
  $32 = HEAP32[(HEAP32[6070] | 0) + ($31 << 2) >> 2] | 0;
  if ($32 | 0) {
   $$02832$i = HEAP32[$32 >> 2] | 0;
   if ($$02832$i | 0) {
    L16 : do if ($25) {
     $$02833$us$i = $$02832$i;
     while (1) {
      $36 = HEAP32[$$02833$us$i + 4 >> 2] | 0;
      $37 = ($36 | 0) == ($20 | 0);
      if (!($37 | ($36 & $23 | 0) == ($31 | 0))) break L7;
      if ($37) if ((HEAP32[$$02833$us$i + 8 >> 2] | 0) == ($2 | 0)) {
       $$sroa$0$0$i = $$02833$us$i;
       break L16;
      }
      $$02833$us$i = HEAP32[$$02833$us$i >> 2] | 0;
      if (!$$02833$us$i) break L7;
     }
    } else {
     $$02833$i = $$02832$i;
     while (1) {
      $45 = HEAP32[$$02833$i + 4 >> 2] | 0;
      if (($45 | 0) == ($20 | 0)) {
       if ((HEAP32[$$02833$i + 8 >> 2] | 0) == ($2 | 0)) {
        $$sroa$0$0$i = $$02833$i;
        break L16;
       }
      } else {
       if ($45 >>> 0 < $21 >>> 0) $50 = $45; else $50 = ($45 >>> 0) % ($21 >>> 0) | 0;
       if (($50 | 0) != ($31 | 0)) break L7;
      }
      $$02833$i = HEAP32[$$02833$i >> 2] | 0;
      if (!$$02833$i) break L7;
     }
    } while (0);
    $55 = $$sroa$0$0$i + 12 | 0;
    HEAP32[$55 >> 2] = (HEAP32[$55 >> 2] | 0) + 1;
    $$0 = $2;
    STACKTOP = sp;
    return $$0 | 0;
   }
  }
 } while (0);
 $58 = __Znwj(8) | 0;
 HEAP32[$58 >> 2] = HEAP32[$0 >> 2];
 $62 = HEAP32[$0 + 4 >> 2] | 0;
 HEAP32[$58 + 4 >> 2] = $62;
 if ($62 | 0) {
  $64 = $62 + 4 | 0;
  HEAP32[$64 >> 2] = (HEAP32[$64 >> 2] | 0) + 1;
 }
 HEAP32[$1 >> 2] = $2;
 $68 = __ZNSt3__213unordered_mapIPvNS_4pairIiS1_EENS_4hashIS1_EENS_8equal_toIS1_EENS_9allocatorINS2_IKS1_S3_EEEEEixEOS1_(24280, $1) | 0;
 HEAP32[$68 >> 2] = 1;
 HEAP32[$68 + 4 >> 2] = $58;
 $$0 = $2;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN2ut8PtrTable7persistINS_6SystemEEEPT_RKNSt3__210shared_ptrIS3_EE($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$02832$i = 0, $$02833$i = 0, $$02833$us$i = 0, $$sroa$0$0$i = 0, $1 = 0, $11 = 0, $15 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $25 = 0, $31 = 0, $32 = 0, $36 = 0, $37 = 0, $45 = 0, $50 = 0, $55 = 0, $58 = 0, $6 = 0, $62 = 0, $64 = 0, $68 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = HEAP32[$0 >> 2] | 0;
 if (!$2) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (!(HEAP8[24152] | 0)) {
  HEAP32[6070] = 0;
  HEAP32[6071] = 0;
  HEAP32[6072] = 0;
  HEAP32[6073] = 0;
  HEAP32[6074] = 1065353216;
  $6 = 24152;
  HEAP32[$6 >> 2] = 1;
  HEAP32[$6 + 4 >> 2] = 0;
 }
 $11 = Math_imul($2, 1540483477) | 0;
 $15 = (Math_imul($11 >>> 24 ^ $11, 1540483477) | 0) ^ 1866966612;
 $18 = Math_imul($15 >>> 13 ^ $15, 1540483477) | 0;
 $20 = $18 >>> 15 ^ $18;
 $21 = HEAP32[6071] | 0;
 L7 : do if ($21 | 0) {
  $23 = $21 + -1 | 0;
  $25 = ($23 & $21 | 0) == 0;
  if ($25) $31 = $23 & $20; else if ($20 >>> 0 < $21 >>> 0) $31 = $20; else $31 = ($20 >>> 0) % ($21 >>> 0) | 0;
  $32 = HEAP32[(HEAP32[6070] | 0) + ($31 << 2) >> 2] | 0;
  if ($32 | 0) {
   $$02832$i = HEAP32[$32 >> 2] | 0;
   if ($$02832$i | 0) {
    L16 : do if ($25) {
     $$02833$us$i = $$02832$i;
     while (1) {
      $36 = HEAP32[$$02833$us$i + 4 >> 2] | 0;
      $37 = ($36 | 0) == ($20 | 0);
      if (!($37 | ($36 & $23 | 0) == ($31 | 0))) break L7;
      if ($37) if ((HEAP32[$$02833$us$i + 8 >> 2] | 0) == ($2 | 0)) {
       $$sroa$0$0$i = $$02833$us$i;
       break L16;
      }
      $$02833$us$i = HEAP32[$$02833$us$i >> 2] | 0;
      if (!$$02833$us$i) break L7;
     }
    } else {
     $$02833$i = $$02832$i;
     while (1) {
      $45 = HEAP32[$$02833$i + 4 >> 2] | 0;
      if (($45 | 0) == ($20 | 0)) {
       if ((HEAP32[$$02833$i + 8 >> 2] | 0) == ($2 | 0)) {
        $$sroa$0$0$i = $$02833$i;
        break L16;
       }
      } else {
       if ($45 >>> 0 < $21 >>> 0) $50 = $45; else $50 = ($45 >>> 0) % ($21 >>> 0) | 0;
       if (($50 | 0) != ($31 | 0)) break L7;
      }
      $$02833$i = HEAP32[$$02833$i >> 2] | 0;
      if (!$$02833$i) break L7;
     }
    } while (0);
    $55 = $$sroa$0$0$i + 12 | 0;
    HEAP32[$55 >> 2] = (HEAP32[$55 >> 2] | 0) + 1;
    $$0 = $2;
    STACKTOP = sp;
    return $$0 | 0;
   }
  }
 } while (0);
 $58 = __Znwj(8) | 0;
 HEAP32[$58 >> 2] = HEAP32[$0 >> 2];
 $62 = HEAP32[$0 + 4 >> 2] | 0;
 HEAP32[$58 + 4 >> 2] = $62;
 if ($62 | 0) {
  $64 = $62 + 4 | 0;
  HEAP32[$64 >> 2] = (HEAP32[$64 >> 2] | 0) + 1;
 }
 HEAP32[$1 >> 2] = $2;
 $68 = __ZNSt3__213unordered_mapIPvNS_4pairIiS1_EENS_4hashIS1_EENS_8equal_toIS1_EENS_9allocatorINS2_IKS1_S3_EEEEEixEOS1_(24280, $1) | 0;
 HEAP32[$68 >> 2] = 1;
 HEAP32[$68 + 4 >> 2] = $58;
 $$0 = $2;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__210shared_ptrI14UpdateFnSystemE11make_sharedIJRPKcEEES2_DpOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$016$i$i$i$i$i = 0, $$017$i$i$i$i$i = 0, $$pre$i = 0, $$pre$i$pr = 0, $$pre$phi2$i$i$iZ2D = 0, $$pre1$pre$phi$i$i$iZZ2D = 0, $12 = 0, $13 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 $4 = __Znwj(80) | 0;
 $5 = $4 + 4 | 0;
 HEAP32[$5 >> 2] = 0;
 $6 = $4 + 8 | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$4 >> 2] = 3288;
 $7 = HEAP32[$1 >> 2] | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 $8 = _strlen($7) | 0;
 if ($8 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($3);
 if ($8 >>> 0 < 11) {
  $18 = $3 + 11 | 0;
  HEAP8[$18 >> 0] = $8;
  if (!$8) {
   $$017$i$i$i$i$i = $3;
   $$pre$phi2$i$i$iZ2D = $18;
  } else {
   $$016$i$i$i$i$i = $3;
   $$pre1$pre$phi$i$i$iZZ2D = $18;
   label = 6;
  }
 } else {
  $12 = $8 + 16 & -16;
  $13 = __Znwj($12) | 0;
  HEAP32[$3 >> 2] = $13;
  HEAP32[$3 + 8 >> 2] = $12 | -2147483648;
  HEAP32[$3 + 4 >> 2] = $8;
  $$016$i$i$i$i$i = $13;
  $$pre1$pre$phi$i$i$iZZ2D = $3 + 11 | 0;
  label = 6;
 }
 if ((label | 0) == 6) {
  _memcpy($$016$i$i$i$i$i | 0, $7 | 0, $8 | 0) | 0;
  $$017$i$i$i$i$i = $$016$i$i$i$i$i;
  $$pre$phi2$i$i$iZ2D = $$pre1$pre$phi$i$i$iZZ2D;
 }
 HEAP8[$$017$i$i$i$i$i + $8 >> 0] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($2, $3);
 $21 = $4 + 20 | 0;
 HEAP32[$21 >> 2] = 0;
 $22 = $4 + 24 | 0;
 HEAP32[$22 >> 2] = 0;
 $23 = $4 + 16 | 0;
 $24 = $4 + 28 | 0;
 HEAP32[$24 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$24 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$24 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
 $25 = $4 + 40 | 0;
 HEAP32[$25 >> 2] = 0;
 HEAP32[$25 + 4 >> 2] = 0;
 HEAP32[$25 + 8 >> 2] = 0;
 HEAP8[$25 + 12 >> 0] = 0;
 HEAP32[$23 >> 2] = 3316;
 HEAP32[$4 + 72 >> 2] = 0;
 if ((HEAP8[$$pre$phi2$i$i$iZ2D >> 0] | 0) < 0) {
  __ZdlPv(HEAP32[$3 >> 2] | 0);
  $$pre$i$pr = HEAP32[$22 >> 2] | 0;
 } else $$pre$i$pr = 0;
 HEAP32[$0 >> 2] = $23;
 HEAP32[$0 + 4 >> 2] = $4;
 if (!$$pre$i$pr) $$pre$i = 0; else if ((HEAP32[$$pre$i$pr + 4 >> 2] | 0) == -1) $$pre$i = $$pre$i$pr; else {
  STACKTOP = sp;
  return;
 }
 HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 1;
 HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 1;
 HEAP32[$21 >> 2] = $23;
 HEAP32[$22 >> 2] = $4;
 if ($$pre$i | 0) __ZNSt3__219__shared_weak_count14__release_weakEv($$pre$i);
 $42 = HEAP32[$5 >> 2] | 0;
 HEAP32[$5 >> 2] = $42 + -1;
 if ($42 | 0) {
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$4 >> 2] | 0) + 8 >> 2] & 63]($4);
 __ZNSt3__219__shared_weak_count14__release_weakEv($4);
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIeNS0_2DbEEEPKcS4_S4_RT0_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $$049$idx = 0, $$050 = 0, $$07$i$i = 0, $$247$ph = 0, $$3 = 0, $11 = 0, $12 = 0, $17 = 0, $25 = 0, $27 = 0, $3 = 0, $31 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $vararg_buffer = sp + 8 | 0;
 $3 = sp;
 $4 = sp + 48 | 0;
 $5 = sp + 32 | 0;
 L1 : do if (($1 - $0 | 0) >>> 0 > 20) {
  $$049$idx = 0;
  $$050 = $3;
  while (1) {
   $11 = HEAP8[$0 + $$049$idx >> 0] | 0;
   $12 = $11 << 24 >> 24;
   if (($$049$idx | 0) == 20) {
    label = 6;
    break;
   }
   if (!(_isxdigit($12) | 0)) break;
   $17 = HEAP8[$0 + ($$049$idx | 1) >> 0] | 0;
   HEAP8[$$050 >> 0] = ((($12 + -48 | 0) >>> 0 < 10 ? 0 : 9) + $12 << 4) + $17 + (($17 + -48 | 0) >>> 0 < 10 ? 208 : 169);
   $$049$idx = $$049$idx + 2 | 0;
   $$050 = $$050 + 1 | 0;
  }
  do if ((label | 0) == 6) {
   if ($11 << 24 >> 24 == 69) {
    L11 : do if (($$050 | 0) != ($3 | 0)) {
     $$0$i$i = $$050;
     $$07$i$i = $3;
     while (1) {
      $25 = $$0$i$i + -1 | 0;
      if ($$07$i$i >>> 0 >= $25 >>> 0) break L11;
      $27 = HEAP8[$$07$i$i >> 0] | 0;
      HEAP8[$$07$i$i >> 0] = HEAP8[$25 >> 0] | 0;
      HEAP8[$25 >> 0] = $27;
      $$0$i$i = $25;
      $$07$i$i = $$07$i$i + 1 | 0;
     }
    } while (0);
    dest = $4;
    stop = dest + 40 | 0;
    do {
     HEAP8[dest >> 0] = 0;
     dest = dest + 1 | 0;
    } while ((dest | 0) < (stop | 0));
    HEAPF64[$vararg_buffer >> 3] = +HEAPF64[$3 >> 3];
    $31 = _snprintf($4, 40, 23581, $vararg_buffer) | 0;
    if ($31 >>> 0 > 39) break;
    HEAP32[$5 >> 2] = 0;
    HEAP32[$5 + 4 >> 2] = 0;
    HEAP32[$5 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($5, $4, $31);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($vararg_buffer, $5);
    $33 = $2 + 4 | 0;
    $34 = HEAP32[$33 >> 2] | 0;
    if ($34 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($34, $vararg_buffer);
     HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $vararg_buffer);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($vararg_buffer);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    $$247$ph = $0 + 21 | 0;
   } else $$247$ph = $0;
   $$3 = $$247$ph;
   break L1;
  } while (0);
  $$3 = $0;
 } else $$3 = $0; while (0);
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIdNS0_2DbEEEPKcS4_S4_RT0_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $$049$idx = 0, $$050 = 0, $$07$i$i = 0, $$247$ph = 0, $$3 = 0, $11 = 0, $12 = 0, $17 = 0, $25 = 0, $27 = 0, $3 = 0, $31 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $vararg_buffer = sp + 8 | 0;
 $3 = sp;
 $4 = sp + 48 | 0;
 $5 = sp + 32 | 0;
 L1 : do if (($1 - $0 | 0) >>> 0 > 16) {
  $$049$idx = 0;
  $$050 = $3;
  while (1) {
   $11 = HEAP8[$0 + $$049$idx >> 0] | 0;
   $12 = $11 << 24 >> 24;
   if (($$049$idx | 0) == 16) {
    label = 6;
    break;
   }
   if (!(_isxdigit($12) | 0)) break;
   $17 = HEAP8[$0 + ($$049$idx | 1) >> 0] | 0;
   HEAP8[$$050 >> 0] = ((($12 + -48 | 0) >>> 0 < 10 ? 0 : 9) + $12 << 4) + $17 + (($17 + -48 | 0) >>> 0 < 10 ? 208 : 169);
   $$049$idx = $$049$idx + 2 | 0;
   $$050 = $$050 + 1 | 0;
  }
  do if ((label | 0) == 6) {
   if ($11 << 24 >> 24 == 69) {
    L11 : do if (($$050 | 0) != ($3 | 0)) {
     $$0$i$i = $$050;
     $$07$i$i = $3;
     while (1) {
      $25 = $$0$i$i + -1 | 0;
      if ($$07$i$i >>> 0 >= $25 >>> 0) break L11;
      $27 = HEAP8[$$07$i$i >> 0] | 0;
      HEAP8[$$07$i$i >> 0] = HEAP8[$25 >> 0] | 0;
      HEAP8[$25 >> 0] = $27;
      $$0$i$i = $25;
      $$07$i$i = $$07$i$i + 1 | 0;
     }
    } while (0);
    dest = $4;
    stop = dest + 32 | 0;
    do {
     HEAP8[dest >> 0] = 0;
     dest = dest + 1 | 0;
    } while ((dest | 0) < (stop | 0));
    HEAPF64[$vararg_buffer >> 3] = +HEAPF64[$3 >> 3];
    $31 = _snprintf($4, 32, 23586, $vararg_buffer) | 0;
    if ($31 >>> 0 > 31) break;
    HEAP32[$5 >> 2] = 0;
    HEAP32[$5 + 4 >> 2] = 0;
    HEAP32[$5 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($5, $4, $31);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($vararg_buffer, $5);
    $33 = $2 + 4 | 0;
    $34 = HEAP32[$33 >> 2] | 0;
    if ($34 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($34, $vararg_buffer);
     HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $vararg_buffer);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($vararg_buffer);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    $$247$ph = $0 + 17 | 0;
   } else $$247$ph = $0;
   $$3 = $$247$ph;
   break L1;
  } while (0);
  $$3 = $0;
 } else $$3 = $0; while (0);
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIfNS0_2DbEEEPKcS4_S4_RT0_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $$049$idx = 0, $$050 = 0, $$07$i$i = 0, $$247$ph = 0, $$3 = 0, $11 = 0, $12 = 0, $17 = 0, $25 = 0, $27 = 0, $3 = 0, $32 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $vararg_buffer = sp;
 $3 = sp + 36 | 0;
 $4 = sp + 40 | 0;
 $5 = sp + 24 | 0;
 L1 : do if (($1 - $0 | 0) >>> 0 > 8) {
  $$049$idx = 0;
  $$050 = $3;
  while (1) {
   $11 = HEAP8[$0 + $$049$idx >> 0] | 0;
   $12 = $11 << 24 >> 24;
   if (($$049$idx | 0) == 8) {
    label = 6;
    break;
   }
   if (!(_isxdigit($12) | 0)) break;
   $17 = HEAP8[$0 + ($$049$idx | 1) >> 0] | 0;
   HEAP8[$$050 >> 0] = ((($12 + -48 | 0) >>> 0 < 10 ? 0 : 9) + $12 << 4) + $17 + (($17 + -48 | 0) >>> 0 < 10 ? 208 : 169);
   $$049$idx = $$049$idx + 2 | 0;
   $$050 = $$050 + 1 | 0;
  }
  do if ((label | 0) == 6) {
   if ($11 << 24 >> 24 == 69) {
    L11 : do if (($$050 | 0) != ($3 | 0)) {
     $$0$i$i = $$050;
     $$07$i$i = $3;
     while (1) {
      $25 = $$0$i$i + -1 | 0;
      if ($$07$i$i >>> 0 >= $25 >>> 0) break L11;
      $27 = HEAP8[$$07$i$i >> 0] | 0;
      HEAP8[$$07$i$i >> 0] = HEAP8[$25 >> 0] | 0;
      HEAP8[$25 >> 0] = $27;
      $$0$i$i = $25;
      $$07$i$i = $$07$i$i + 1 | 0;
     }
    } while (0);
    dest = $4;
    stop = dest + 24 | 0;
    do {
     HEAP8[dest >> 0] = 0;
     dest = dest + 1 | 0;
    } while ((dest | 0) < (stop | 0));
    HEAPF64[$vararg_buffer >> 3] = +HEAPF32[$3 >> 2];
    $32 = _snprintf($4, 24, 23589, $vararg_buffer) | 0;
    if ($32 >>> 0 > 23) break;
    HEAP32[$5 >> 2] = 0;
    HEAP32[$5 + 4 >> 2] = 0;
    HEAP32[$5 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($5, $4, $32);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($vararg_buffer, $5);
    $34 = $2 + 4 | 0;
    $35 = HEAP32[$34 >> 2] | 0;
    if ($35 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($35, $vararg_buffer);
     HEAP32[$34 >> 2] = (HEAP32[$34 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $vararg_buffer);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($vararg_buffer);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    $$247$ph = $0 + 9 | 0;
   } else $$247$ph = $0;
   $$3 = $$247$ph;
   break L1;
  } while (0);
  $$3 = $0;
 } else $$3 = $0; while (0);
 STACKTOP = sp;
 return $$3 | 0;
}

function _pop_arg($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $108 = 0, $109 = 0.0, $115 = 0, $116 = 0.0, $16 = 0, $17 = 0, $20 = 0, $29 = 0, $30 = 0, $31 = 0, $40 = 0, $41 = 0, $43 = 0, $46 = 0, $47 = 0, $56 = 0, $57 = 0, $59 = 0, $62 = 0, $71 = 0, $72 = 0, $73 = 0, $82 = 0, $83 = 0, $85 = 0, $88 = 0, $9 = 0, $97 = 0, $98 = 0, $99 = 0;
 L1 : do if ($1 >>> 0 <= 20) do switch ($1 | 0) {
 case 9:
  {
   $9 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $10 = HEAP32[$9 >> 2] | 0;
   HEAP32[$2 >> 2] = $9 + 4;
   HEAP32[$0 >> 2] = $10;
   break L1;
   break;
  }
 case 10:
  {
   $16 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $17 = HEAP32[$16 >> 2] | 0;
   HEAP32[$2 >> 2] = $16 + 4;
   $20 = $0;
   HEAP32[$20 >> 2] = $17;
   HEAP32[$20 + 4 >> 2] = (($17 | 0) < 0) << 31 >> 31;
   break L1;
   break;
  }
 case 11:
  {
   $29 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $30 = HEAP32[$29 >> 2] | 0;
   HEAP32[$2 >> 2] = $29 + 4;
   $31 = $0;
   HEAP32[$31 >> 2] = $30;
   HEAP32[$31 + 4 >> 2] = 0;
   break L1;
   break;
  }
 case 12:
  {
   $40 = (HEAP32[$2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   $41 = $40;
   $43 = HEAP32[$41 >> 2] | 0;
   $46 = HEAP32[$41 + 4 >> 2] | 0;
   HEAP32[$2 >> 2] = $40 + 8;
   $47 = $0;
   HEAP32[$47 >> 2] = $43;
   HEAP32[$47 + 4 >> 2] = $46;
   break L1;
   break;
  }
 case 13:
  {
   $56 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $57 = HEAP32[$56 >> 2] | 0;
   HEAP32[$2 >> 2] = $56 + 4;
   $59 = ($57 & 65535) << 16 >> 16;
   $62 = $0;
   HEAP32[$62 >> 2] = $59;
   HEAP32[$62 + 4 >> 2] = (($59 | 0) < 0) << 31 >> 31;
   break L1;
   break;
  }
 case 14:
  {
   $71 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $72 = HEAP32[$71 >> 2] | 0;
   HEAP32[$2 >> 2] = $71 + 4;
   $73 = $0;
   HEAP32[$73 >> 2] = $72 & 65535;
   HEAP32[$73 + 4 >> 2] = 0;
   break L1;
   break;
  }
 case 15:
  {
   $82 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $83 = HEAP32[$82 >> 2] | 0;
   HEAP32[$2 >> 2] = $82 + 4;
   $85 = ($83 & 255) << 24 >> 24;
   $88 = $0;
   HEAP32[$88 >> 2] = $85;
   HEAP32[$88 + 4 >> 2] = (($85 | 0) < 0) << 31 >> 31;
   break L1;
   break;
  }
 case 16:
  {
   $97 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $98 = HEAP32[$97 >> 2] | 0;
   HEAP32[$2 >> 2] = $97 + 4;
   $99 = $0;
   HEAP32[$99 >> 2] = $98 & 255;
   HEAP32[$99 + 4 >> 2] = 0;
   break L1;
   break;
  }
 case 17:
  {
   $108 = (HEAP32[$2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   $109 = +HEAPF64[$108 >> 3];
   HEAP32[$2 >> 2] = $108 + 8;
   HEAPF64[$0 >> 3] = $109;
   break L1;
   break;
  }
 case 18:
  {
   $115 = (HEAP32[$2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   $116 = +HEAPF64[$115 >> 3];
   HEAP32[$2 >> 2] = $115 + 8;
   HEAPF64[$0 >> 3] = $116;
   break L1;
   break;
  }
 default:
  break L1;
 } while (0); while (0);
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiN2ut9Scheduler15ScheduledSystemEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS5_NS_8equal_toIiEELb1EEENS_9allocatorIS5_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeIS5_PvEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $10 = 0, $15 = 0, $16 = 0, $18 = 0, $2 = 0, $23 = 0, $28 = 0, $3 = 0, $31 = 0, $36 = 0, $39 = 0, $40 = 0, $42 = 0, $43 = 0, $48 = 0, $5 = 0, $51 = 0, $52 = 0, $57 = 0, $62 = 0, $64 = 0, $65 = 0, $7 = 0, $71 = 0, $76 = 0, $8 = 0, label = 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $5 = HEAP32[$0 + 4 >> 2] | 0;
 $7 = HEAP32[$2 + 4 >> 2] | 0;
 $8 = $5 + -1 | 0;
 $10 = ($8 & $5 | 0) == 0;
 if ($10) $16 = $8 & $7; else if ($7 >>> 0 < $5 >>> 0) $16 = $7; else $16 = ($7 >>> 0) % ($5 >>> 0) | 0;
 $15 = (HEAP32[$0 >> 2] | 0) + ($16 << 2) | 0;
 $$0$i = HEAP32[$15 >> 2] | 0;
 while (1) {
  $18 = HEAP32[$$0$i >> 2] | 0;
  if (($18 | 0) == ($2 | 0)) break; else $$0$i = $18;
 }
 if (($$0$i | 0) == ($0 + 8 | 0)) label = 13; else {
  $23 = HEAP32[$$0$i + 4 >> 2] | 0;
  if ($10) $28 = $23 & $8; else if ($23 >>> 0 < $5 >>> 0) $28 = $23; else $28 = ($23 >>> 0) % ($5 >>> 0) | 0;
  if (($28 | 0) == ($16 | 0)) {
   $39 = $3;
   label = 21;
  } else label = 13;
 }
 do if ((label | 0) == 13) {
  if ($3 | 0) {
   $31 = HEAP32[$3 + 4 >> 2] | 0;
   if ($10) $36 = $31 & $8; else if ($31 >>> 0 < $5 >>> 0) $36 = $31; else $36 = ($31 >>> 0) % ($5 >>> 0) | 0;
   if (($36 | 0) == ($16 | 0)) {
    $42 = $3;
    $76 = $3;
    label = 22;
    break;
   }
  }
  HEAP32[$15 >> 2] = 0;
  $39 = HEAP32[$2 >> 2] | 0;
  label = 21;
 } while (0);
 if ((label | 0) == 21) {
  $40 = $39;
  if (!$39) $51 = $40; else {
   $42 = $39;
   $76 = $40;
   label = 22;
  }
 }
 if ((label | 0) == 22) {
  $43 = HEAP32[$42 + 4 >> 2] | 0;
  if ($10) $48 = $43 & $8; else if ($43 >>> 0 < $5 >>> 0) $48 = $43; else $48 = ($43 >>> 0) % ($5 >>> 0) | 0;
  if (($48 | 0) == ($16 | 0)) $51 = $76; else {
   HEAP32[(HEAP32[$0 >> 2] | 0) + ($48 << 2) >> 2] = $$0$i;
   $51 = HEAP32[$2 >> 2] | 0;
  }
 }
 HEAP32[$$0$i >> 2] = $51;
 HEAP32[$2 >> 2] = 0;
 $52 = $0 + 12 | 0;
 HEAP32[$52 >> 2] = (HEAP32[$52 >> 2] | 0) + -1;
 if (!$2) return $3 | 0;
 $57 = HEAP32[$2 + 36 >> 2] | 0;
 if ($57 | 0) {
  HEAP32[$2 + 40 >> 2] = $57;
  __ZdlPv($57);
 }
 $62 = HEAP32[$2 + 32 >> 2] | 0;
 if ($62 | 0) {
  $64 = $62 + 4 | 0;
  $65 = HEAP32[$64 >> 2] | 0;
  HEAP32[$64 >> 2] = $65 + -1;
  if (!$65) {
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$62 >> 2] | 0) + 8 >> 2] & 63]($62);
   __ZNSt3__219__shared_weak_count14__release_weakEv($62);
  }
 }
 $71 = $2 + 16 | 0;
 if ((HEAP8[$71 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$71 >> 2] | 0);
 __ZdlPv($2);
 return $3 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_125parse_noexcept_expressionINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i18 = 0, $$016 = 0, $10 = 0, $11 = 0, $20 = 0, $21 = 0, $22 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $3 = sp + 36 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 12 | 0;
 $6 = sp;
 $7 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
 if (($7 | 0) == ($0 | 0)) $$016 = $0; else {
  $10 = $2 + 4 | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  if ((HEAP32[$2 >> 2] | 0) == ($11 | 0)) $$016 = $0; else {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($6, $11 + -24 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($6, 0, 22548) | 0;
   HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
   HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
   HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
   $$0$i$i$i = 0;
   while (1) {
    if (($$0$i$i$i | 0) == 3) break;
    HEAP32[$6 + ($$0$i$i$i << 2) >> 2] = 0;
    $$0$i$i$i = $$0$i$i$i + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($5, 22275) | 0;
   HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
   HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
   HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
   $$0$i$i$i18 = 0;
   while (1) {
    if (($$0$i$i$i18 | 0) == 3) break;
    HEAP32[$5 + ($$0$i$i$i18 << 2) >> 2] = 0;
    $$0$i$i$i18 = $$0$i$i$i18 + 1 | 0;
   }
   $20 = HEAP32[$10 >> 2] | 0;
   $21 = $20 + -24 | 0;
   $22 = $21 + 11 | 0;
   if ((HEAP8[$22 >> 0] | 0) < 0) {
    $25 = HEAP32[$21 >> 2] | 0;
    HEAP8[$3 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($25, $3);
    HEAP32[$20 + -20 >> 2] = 0;
   } else {
    HEAP8[$3 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($21, $3);
    HEAP8[$22 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEj($21);
   HEAP32[$21 >> 2] = HEAP32[$4 >> 2];
   HEAP32[$21 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
   HEAP32[$21 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
   $$0$i$i$i$i = 0;
   while (1) {
    if (($$0$i$i$i$i | 0) == 3) break;
    HEAP32[$4 + ($$0$i$i$i$i << 2) >> 2] = 0;
    $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
   $$016 = $7;
  }
 }
 STACKTOP = sp;
 return $$016 | 0;
}

function __ZN2ut4arch13EntityManager13stopBufferingENS0_13BufferingModeE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$014$i$i = 0, $$014$i$i$i = 0, $$014$i$i$i$i$i$i$i$i$i = 0, $$07$i$i = 0, $$07$i$i3 = 0, $11 = 0, $12 = 0, $17 = 0, $19 = 0, $23 = 0, $26 = 0, $27 = 0, $3 = 0, $30 = 0, $36 = 0, $4 = 0, $40 = 0, $41 = 0, $45 = 0, $47 = 0, $51 = 0, $52 = 0, $8 = 0, $$014$i$i$i$looptemp = 0, $$014$i$i$i$i$i$i$i$i$i$looptemp = 0, $$014$i$i$looptemp = 0;
 if (($1 | 0) == 1) return;
 $3 = $0 + 36 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = $4 + -1;
 if (($4 | 0) > 1) return;
 HEAP8[$0 + 148 >> 0] = 0;
 $8 = $0 + 120 | 0;
 if (HEAP32[$8 >> 2] | 0) {
  $11 = $0 + 116 | 0;
  $12 = HEAP32[$11 >> 2] | 0;
  if ($12 | 0) {
   $$014$i$i$i = $12;
   do {
    $$014$i$i$i$looptemp = $$014$i$i$i;
    $$014$i$i$i = HEAP32[$$014$i$i$i >> 2] | 0;
    __ZdlPv($$014$i$i$i$looptemp);
   } while (($$014$i$i$i | 0) != 0);
  }
  HEAP32[$11 >> 2] = 0;
  $17 = HEAP32[$0 + 112 >> 2] | 0;
  if ($17 | 0) {
   $19 = $0 + 108 | 0;
   $$07$i$i = 0;
   do {
    HEAP32[(HEAP32[$19 >> 2] | 0) + ($$07$i$i << 2) >> 2] = 0;
    $$07$i$i = $$07$i$i + 1 | 0;
   } while (($$07$i$i | 0) != ($17 | 0));
  }
  HEAP32[$8 >> 2] = 0;
 }
 $23 = $0 + 140 | 0;
 if (HEAP32[$23 >> 2] | 0) {
  $26 = $0 + 136 | 0;
  $27 = HEAP32[$26 >> 2] | 0;
  if ($27 | 0) {
   $$014$i$i = $27;
   do {
    $$014$i$i$looptemp = $$014$i$i;
    $$014$i$i = HEAP32[$$014$i$i >> 2] | 0;
    $30 = $$014$i$i$looptemp + 48 | 0;
    if ((HEAP8[$30 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$30 >> 2] | 0);
    $36 = HEAP32[$$014$i$i$looptemp + 36 >> 2] | 0;
    if ($36 | 0) {
     $$014$i$i$i$i$i$i$i$i$i = $36;
     do {
      $$014$i$i$i$i$i$i$i$i$i$looptemp = $$014$i$i$i$i$i$i$i$i$i;
      $$014$i$i$i$i$i$i$i$i$i = HEAP32[$$014$i$i$i$i$i$i$i$i$i >> 2] | 0;
      __ZdlPv($$014$i$i$i$i$i$i$i$i$i$looptemp);
     } while (($$014$i$i$i$i$i$i$i$i$i | 0) != 0);
    }
    $40 = $$014$i$i$looptemp + 28 | 0;
    $41 = HEAP32[$40 >> 2] | 0;
    HEAP32[$40 >> 2] = 0;
    if ($41 | 0) __ZdlPv($41);
    __ZdlPv($$014$i$i$looptemp);
   } while (($$014$i$i | 0) != 0);
  }
  HEAP32[$26 >> 2] = 0;
  $45 = HEAP32[$0 + 132 >> 2] | 0;
  if ($45 | 0) {
   $47 = $0 + 128 | 0;
   $$07$i$i3 = 0;
   do {
    HEAP32[(HEAP32[$47 >> 2] | 0) + ($$07$i$i3 << 2) >> 2] = 0;
    $$07$i$i3 = $$07$i$i3 + 1 | 0;
   } while (($$07$i$i3 | 0) != ($45 | 0));
  }
  HEAP32[$23 >> 2] = 0;
 }
 $51 = $0 + 40 | 0;
 __ZN2ut4arch19EntityCommandBuffer8playbackEPNS0_13EntityManagerE($51, $0);
 __ZN2ut4arch19EntityCommandBuffer10freeChunksEv($51);
 $52 = $0 + 56 | 0;
 HEAP32[$52 >> 2] = 0;
 HEAP32[$52 + 4 >> 2] = 0;
 HEAP32[$52 + 8 >> 2] = 0;
 HEAP8[$52 + 12 >> 0] = 0;
 HEAP32[$0 + 76 >> 2] = HEAP32[$0 + 72 >> 2];
 return;
}

function __ZN2ut4arch22ArchetypeChunkIterator30getBasePointersAndSizesInOrderEPjPPvPij($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$023 = 0, $$sink27 = 0, $21 = 0, $22 = 0, $24 = 0, $37 = 0, $39 = 0, $47 = 0, $49 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer9 = sp + 40 | 0;
 $vararg_buffer7 = sp + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 if (!(HEAP8[$0 + 28 >> 0] | 0)) {
  _snprintf(25060, 1024, 13714, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13735, 13749, 196);
 }
 if (HEAP8[$0 + 29 >> 0] | 0) {
  _snprintf(25060, 1024, 13836, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13895, 13749, 197);
 }
 if ((HEAP32[$0 + 32 >> 2] | 0) != (HEAP32[HEAP32[(HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + 32 >> 2] >> 2] | 0)) {
  _snprintf(25060, 1024, 13906, sp + 16 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13942, 13749, 198);
 }
 if (($4 | 0) <= 0) {
  STACKTOP = sp;
  return;
 }
 $$023 = 0;
 while (1) {
  $21 = $1 + ($$023 << 2) | 0;
  $22 = HEAP32[$21 >> 2] | 0;
  $24 = HEAP32[6067] | 0;
  if ((HEAP32[6068] | 0) - $24 >> 2 >>> 0 <= $22 >>> 0) {
   label = 11;
   break;
  }
  if (!(HEAP32[(HEAP32[$24 + ($22 << 2) >> 2] | 0) + 4 >> 2] & 2)) {
   HEAP32[$2 + ($$023 << 2) >> 2] = __ZN2ut4arch22ArchetypeChunkIterator7rawDataEj($0, $22) | 0;
   $47 = HEAP32[$21 >> 2] | 0;
   $49 = HEAP32[6067] | 0;
   if ((HEAP32[6068] | 0) - $49 >> 2 >>> 0 <= $47 >>> 0) {
    label = 17;
    break;
   }
   $$sink27 = $49 + ($47 << 2) | 0;
  } else {
   HEAP32[$2 + ($$023 << 2) >> 2] = __ZN2ut4arch22ArchetypeChunkIterator13rawSharedDataEj($0, $22) | 0;
   $37 = HEAP32[$21 >> 2] | 0;
   $39 = HEAP32[6067] | 0;
   if ((HEAP32[6068] | 0) - $39 >> 2 >>> 0 <= $37 >>> 0) {
    label = 14;
    break;
   }
   $$sink27 = $39 + ($37 << 2) | 0;
  }
  HEAP32[$3 + ($$023 << 2) >> 2] = HEAP32[(HEAP32[$$sink27 >> 2] | 0) + 16 >> 2];
  $$023 = $$023 + 1 | 0;
  if (($$023 | 0) == ($4 | 0)) {
   label = 9;
   break;
  }
 }
 if ((label | 0) == 9) {
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 11) {
  _snprintf(25060, 1024, 27124, $vararg_buffer5) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 } else if ((label | 0) == 14) {
  _snprintf(25060, 1024, 27124, $vararg_buffer7) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 } else if ((label | 0) == 17) {
  _snprintf(25060, 1024, 27124, $vararg_buffer9) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
}

function __ZN2ut9Scheduler9removeAllEv($0) {
 $0 = $0 | 0;
 var $$014$i$i = 0, $$07$i$i = 0, $$sroa$05$010 = 0, $$sroa$05$09 = 0, $1 = 0, $10 = 0, $13 = 0, $17 = 0, $2 = 0, $22 = 0, $24 = 0, $25 = 0, $31 = 0, $38 = 0, $4 = 0, $40 = 0, $44 = 0, $47 = 0, $5 = 0, $53 = 0, $56 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0, $$014$i$i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $1 = sp;
 $2 = $0 + 48 | 0;
 $$sroa$05$09 = HEAP32[$2 >> 2] | 0;
 if ($$sroa$05$09 | 0) {
  $4 = $1 + 20 | 0;
  $5 = $1 + 28 | 0;
  $6 = $1 + 24 | 0;
  $7 = $1 + 32 | 0;
  $8 = $1 + 8 | 0;
  $9 = $8 + 11 | 0;
  $$sroa$05$010 = $$sroa$05$09;
  do {
   __ZNSt3__24pairIKiN2ut9Scheduler15ScheduledSystemEEC2ERKS5_($1, $$sroa$05$010 + 8 | 0);
   $47 = HEAP32[$4 >> 2] | 0;
   if ($47 | 0) FUNCTION_TABLE_viii[HEAP32[(HEAP32[$47 >> 2] | 0) + 16 >> 2] & 31]($47, $0, HEAP32[$0 >> 2] | 0);
   $53 = HEAP32[$5 >> 2] | 0;
   if ($53 | 0) {
    HEAP32[$7 >> 2] = $53;
    __ZdlPv($53);
   }
   $56 = HEAP32[$6 >> 2] | 0;
   if ($56 | 0) {
    $58 = $56 + 4 | 0;
    $59 = HEAP32[$58 >> 2] | 0;
    HEAP32[$58 >> 2] = $59 + -1;
    if (!$59) {
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$56 >> 2] | 0) + 8 >> 2] & 63]($56);
     __ZNSt3__219__shared_weak_count14__release_weakEv($56);
    }
   }
   if ((HEAP8[$9 >> 0] | 0) < 0) __ZdlPv(HEAP32[$8 >> 2] | 0);
   $$sroa$05$010 = HEAP32[$$sroa$05$010 >> 2] | 0;
  } while (($$sroa$05$010 | 0) != 0);
 }
 $10 = $0 + 52 | 0;
 if (!(HEAP32[$10 >> 2] | 0)) {
  $44 = $0 + 72 | 0;
  HEAP8[$44 >> 0] = 1;
  STACKTOP = sp;
  return;
 }
 $13 = HEAP32[$2 >> 2] | 0;
 if ($13 | 0) {
  $$014$i$i = $13;
  do {
   $$014$i$i$looptemp = $$014$i$i;
   $$014$i$i = HEAP32[$$014$i$i >> 2] | 0;
   $17 = HEAP32[$$014$i$i$looptemp + 36 >> 2] | 0;
   if ($17 | 0) {
    HEAP32[$$014$i$i$looptemp + 40 >> 2] = $17;
    __ZdlPv($17);
   }
   $22 = HEAP32[$$014$i$i$looptemp + 32 >> 2] | 0;
   if ($22 | 0) {
    $24 = $22 + 4 | 0;
    $25 = HEAP32[$24 >> 2] | 0;
    HEAP32[$24 >> 2] = $25 + -1;
    if (!$25) {
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$22 >> 2] | 0) + 8 >> 2] & 63]($22);
     __ZNSt3__219__shared_weak_count14__release_weakEv($22);
    }
   }
   $31 = $$014$i$i$looptemp + 16 | 0;
   if ((HEAP8[$31 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$31 >> 2] | 0);
   __ZdlPv($$014$i$i$looptemp);
  } while (($$014$i$i | 0) != 0);
 }
 HEAP32[$2 >> 2] = 0;
 $38 = HEAP32[$0 + 44 >> 2] | 0;
 if ($38 | 0) {
  $40 = $0 + 40 | 0;
  $$07$i$i = 0;
  do {
   HEAP32[(HEAP32[$40 >> 2] | 0) + ($$07$i$i << 2) >> 2] = 0;
   $$07$i$i = $$07$i$i + 1 | 0;
  } while (($$07$i$i | 0) != ($38 | 0));
 }
 HEAP32[$10 >> 2] = 0;
 $44 = $0 + 72 | 0;
 HEAP8[$44 >> 0] = 1;
 STACKTOP = sp;
 return;
}

function __ZN2ut4arch17EntityDataManager27setSharedComponentDataIndexENS_6EntityEji($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$020$i = 0, $12 = 0, $13 = 0, $14 = 0, $23 = 0, $26 = 0, $35 = 0, $36 = 0, $38 = 0, $4 = 0, $41 = 0, $43 = 0, $48 = 0, $5 = 0, $51 = 0, $53 = 0, $54 = 0, $59 = 0, $60 = 0, $64 = 0, $7 = 0, $9 = 0, $tmpcast$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast$byval_copy = sp + 16 | 0;
 $4 = sp;
 $5 = $0 + 20 | 0;
 $7 = HEAP32[$1 >> 2] | 0;
 $9 = HEAP32[(HEAP32[$5 >> 2] | 0) + ($7 << 4) + 8 >> 2] | 0;
 $12 = HEAP8[($2 & 63) + ($9 + 36) >> 0] | 0;
 $13 = $12 & 255;
 $14 = $9 + 28 | 0;
 if ((HEAP32[$14 >> 2] | 0) <= ($13 | 0)) {
  _snprintf(25060, 1024, 27124, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13990, 14007, 120);
 }
 if (!($12 << 24 >> 24)) label = 5; else if ((HEAP32[(HEAP32[$9 + 32 >> 2] | 0) + ($13 << 4) >> 2] | 0) == ($2 | 0)) $35 = $13; else label = 5;
 L6 : do if ((label | 0) == 5) {
  $23 = HEAP32[$14 >> 2] | 0;
  if (($23 | 0) > 0) {
   $26 = HEAP32[$9 + 32 >> 2] | 0;
   $$020$i = 0;
   while (1) {
    if ((HEAP32[$26 + ($$020$i << 4) >> 2] | 0) == ($2 | 0)) {
     $35 = $$020$i;
     break L6;
    }
    $$020$i = $$020$i + 1 | 0;
    if (($$020$i | 0) >= ($23 | 0)) {
     $35 = -1;
     break;
    }
   }
  } else $35 = -1;
 } while (0);
 $36 = HEAP32[(HEAP32[$9 + 100 >> 2] | 0) + ($35 << 2) >> 2] | 0;
 $38 = HEAP32[$9 + 104 >> 2] | 0;
 $41 = HEAP32[(HEAP32[$5 >> 2] | 0) + ($7 << 4) + 12 >> 2] | 0;
 $43 = HEAP32[$41 + 20 >> 2] | 0;
 if ((HEAP32[$43 + ($36 << 2) >> 2] | 0) == ($3 | 0)) {
  STACKTOP = sp;
  return;
 }
 $48 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * ($38 << 2) | 0) + 15 & -16) | 0;
 __ZN2ut4arch16ArchetypeManager33copySharedComponentDataIndexArrayEPiPKii($48, $43, $38);
 HEAP32[$48 + ($36 << 2) >> 2] = $3;
 $51 = __ZN2ut4arch16ArchetypeManager22getChunkWithEmptySlotsEPNS0_9ArchetypeEPi(HEAP32[$0 >> 2] | 0, $9, $48) | 0;
 $53 = __ZN2ut4arch16ArchetypeManager17allocateIntoChunkEPNS0_5ChunkE(HEAP32[$0 >> 2] | 0, $51) | 0;
 __ZN2ut4arch17EntityDataManager30incrementComponentOrderVersionEPNS0_9ArchetypeEPNS0_5ChunkE($0, $9, $41);
 $54 = $1;
 $59 = HEAP32[$54 + 4 >> 2] | 0;
 $60 = $4;
 HEAP32[$60 >> 2] = HEAP32[$54 >> 2];
 HEAP32[$60 + 4 >> 2] = $59;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$4 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 __ZN2ut4arch17EntityDataManager17moveEntityToChunkENS_6EntityEPNS0_5ChunkEi($0, $tmpcast$byval_copy, $51, $53);
 $64 = $9 + 16 | 0;
 HEAP32[$64 >> 2] = (HEAP32[$64 >> 2] | 0) + -1;
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_117parse_typeid_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i30 = 0, $$025 = 0, $$127 = 0, $14 = 0, $16 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $3 = sp + 40 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 12 | 0;
 $6 = sp;
 L1 : do if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 116) {
  $14 = HEAP8[$0 + 1 >> 0] | 0;
  switch ($14 << 24 >> 24) {
  case 105:
  case 101:
   break;
  default:
   {
    $$127 = $0;
    break L1;
   }
  }
  $16 = $0 + 2 | 0;
  if ($14 << 24 >> 24 == 101) $$025 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($16, $1, $2) | 0; else $$025 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($16, $1, $2) | 0;
  if (($$025 | 0) == ($16 | 0)) $$127 = $0; else {
   $21 = $2 + 4 | 0;
   $22 = HEAP32[$21 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($22 | 0)) $$127 = $0; else {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($6, $22 + -24 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($6, 0, 22480) | 0;
    HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
    HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
    HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$6 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($5, 22275) | 0;
    HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
    $$0$i$i$i30 = 0;
    while (1) {
     if (($$0$i$i$i30 | 0) == 3) break;
     HEAP32[$5 + ($$0$i$i$i30 << 2) >> 2] = 0;
     $$0$i$i$i30 = $$0$i$i$i30 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$21 >> 2] | 0) + -24 | 0, $3);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
    $$127 = $$025;
   }
  }
 } else $$127 = $0; else $$127 = $0; while (0);
 STACKTOP = sp;
 return $$127 | 0;
}

function __ZN2ut9loadArrayERNS_12ManagerWorldERKN9rapidjson12GenericValueINS2_4UTF8IcEENS2_19MemoryPoolAllocatorINS2_12CrtAllocatorEEEEERKNS_4meta10MemberDescEPv($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$lcssa = 0, $$03841 = 0, $$042 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $27 = 0, $28 = 0, $29 = 0, $31 = 0, $32 = 0, $33 = 0, $36 = 0, $4 = 0, $6 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer7 = sp + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 $4 = sp + 36 | 0;
 $6 = HEAP32[$2 + 8 >> 2] | 0;
 if (!$6) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13122, 12969, 322);
 }
 if ((HEAP32[$6 + 16 >> 2] | 0) != 1) {
  _snprintf(25060, 1024, 27124, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13188, 12969, 323);
 }
 $14 = HEAP32[(HEAP32[$6 + 12 >> 2] | 0) + 8 >> 2] | 0;
 $16 = HEAP32[$6 + 8 >> 2] | 0;
 $17 = $14 + 8 | 0;
 $18 = HEAP32[$17 >> 2] | 0;
 $19 = ($16 | 0) / ($18 | 0) | 0;
 if ($16 - (Math_imul($19, $18) | 0) | 0) {
  _snprintf(25060, 1024, 27124, sp + 16 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 16475, 12969, 326);
 }
 if ((HEAP16[$1 + 18 >> 1] | 0) != 4) ___assert_fail(15929, 15939, 1638, 15993);
 $27 = HEAP32[$1 + 8 >> 2] | 0;
 $28 = HEAP32[$1 >> 2] | 0;
 $29 = $27 + ($28 * 24 | 0) | 0;
 do if (!$28) $$0$lcssa = 0; else {
  $31 = $4 + 4 | 0;
  $32 = $4 + 8 | 0;
  $33 = $2 + 4 | 0;
  $36 = (($28 << 3) + -8 | 0) >>> 3;
  $$03841 = $27;
  $$042 = 0;
  while (1) {
   if (($$042 | 0) >= ($19 | 0)) {
    label = 14;
    break;
   }
   HEAP32[$4 >> 2] = 0;
   HEAP32[$31 >> 2] = 0;
   HEAP32[$32 >> 2] = $14;
   __ZN2ut10loadMemberERNS_12ManagerWorldERKN9rapidjson12GenericValueINS2_4UTF8IcEENS2_19MemoryPoolAllocatorINS2_12CrtAllocatorEEEEERKNS_4meta10MemberDescEPv($0, $$03841, $4, $3 + ((Math_imul(HEAP32[$17 >> 2] | 0, $$042) | 0) + (HEAP32[$33 >> 2] | 0)) | 0);
   $$03841 = $$03841 + 24 | 0;
   if (($$03841 | 0) == ($29 | 0)) {
    label = 11;
    break;
   } else $$042 = $$042 + 1 | 0;
  }
  if ((label | 0) == 11) {
   $$0$lcssa = $36 + 1 | 0;
   break;
  } else if ((label | 0) == 14) {
   _snprintf(25060, 1024, 27124, $vararg_buffer5) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 16514, 12969, 330);
  }
 } while (0);
 if (($$0$lcssa | 0) == ($19 | 0)) {
  STACKTOP = sp;
  return;
 } else {
  _snprintf(25060, 1024, 27124, $vararg_buffer7) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 16523, 12969, 334);
 }
}

function __ZN2ut10saveMemberIN9rapidjson12PrettyWriterINS1_19GenericStringBufferINS1_4UTF8IcEENS1_12CrtAllocatorEEES5_S5_S6_Lj0EEEEEvRT_RKNS_4meta10MemberDescEPKv($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$06$i$i$i = 0, $13 = 0, $15 = 0, $19 = 0, $20 = 0, $23 = 0, $25 = 0, $26 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $4 = HEAP32[$1 + 8 >> 2] | 0;
 if (!$4) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13122, 12969, 133);
 }
 switch (HEAP32[$4 >> 2] | 0) {
 case 0:
  {
   __ZN2ut8saveDataIN9rapidjson12PrettyWriterINS1_19GenericStringBufferINS1_4UTF8IcEENS1_12CrtAllocatorEEES5_S5_S6_Lj0EEEEEvRT_RKNS_4meta10MemberDescEPKv($0, $1, $2);
   STACKTOP = sp;
   return;
  }
 case 1:
  {
   _snprintf(25060, 1024, 13134, sp + 8 | 0) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 23477, 12969, 139);
   break;
  }
 case 2:
  {
   __ZN2ut9saveArrayIN9rapidjson12PrettyWriterINS1_19GenericStringBufferINS1_4UTF8IcEENS1_12CrtAllocatorEEES5_S5_S6_Lj0EEEEEvRT_RKNS_4meta10MemberDescEPKv($0, $1, $2);
   STACKTOP = sp;
   return;
  }
 case 3:
  {
   __ZN2ut10saveBufferIN9rapidjson12PrettyWriterINS1_19GenericStringBufferINS1_4UTF8IcEENS1_12CrtAllocatorEEES5_S5_S6_Lj0EEEEEvRT_RKNS_4meta10MemberDescEPKv($0, $1, $2);
   STACKTOP = sp;
   return;
  }
 case 5:
 case 4:
  {
   __ZN2ut8saveTypeIN9rapidjson12PrettyWriterINS1_19GenericStringBufferINS1_4UTF8IcEENS1_12CrtAllocatorEEES5_S5_S6_Lj0EEEEEvRT_PKNS_4meta8TypeDescEPKv($0, $4, $2 + (HEAP32[$1 + 4 >> 2] | 0) | 0);
   STACKTOP = sp;
   return;
  }
 case 6:
  {
   $13 = HEAP32[$2 + (HEAP32[$1 + 4 >> 2] | 0) >> 2] | 0;
   __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, 6);
   $15 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, 11) | 0;
   if (($13 | 0) < 0) {
    HEAP8[$15 >> 0] = 45;
    $$0$i$i$i = 0 - $13 | 0;
    $$06$i$i$i = $15 + 1 | 0;
   } else {
    $$0$i$i$i = $13;
    $$06$i$i$i = $15;
   }
   $19 = __ZN9rapidjson8internal6u32toaEjPc($$0$i$i$i, $$06$i$i$i) | 0;
   $20 = HEAP32[$0 >> 2] | 0;
   $23 = $15 - $19 | 0;
   $25 = $20 + 12 | 0;
   $26 = HEAP32[$25 >> 2] | 0;
   if (($26 - (HEAP32[$20 + 8 >> 2] | 0) | 0) >>> 0 < ($23 + 11 | 0) >>> 0) ___assert_fail(5737, 5657, 137, 5768);
   HEAP32[$25 >> 2] = $26 + (-11 - $23);
   STACKTOP = sp;
   return;
  }
 default:
  {
   _snprintf(25060, 1024, 13169, sp + 16 | 0) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 23477, 12969, 155);
  }
 }
}

function __ZNSt3__26vectorINS_4pairIbNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS5_IS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$06$i$i = 0, $$pre = 0, $$pre$i20 = 0, $$ptr24 = 0, $11 = 0, $14 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $25 = 0, $26 = 0, $28 = 0, $29 = 0, $30 = 0, $38 = 0, $4 = 0, $41 = 0, $43 = 0, $44 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $9 = 0, $spec$select$i = 0, $$06$i$i$looptemp = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $6 = (HEAP32[$2 >> 2] | 0) - $4 >> 4;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 268435455) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 3;
 $spec$select$i = $11 >> 4 >>> 0 < 134217727 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 268435455;
 do if (!$spec$select$i) $21 = 0; else if ($spec$select$i >>> 0 > 268435455) _abort(); else {
  $21 = __Znwj($spec$select$i << 4) | 0;
  break;
 } while (0);
 $20 = $21 + ($6 << 4) | 0;
 $23 = $21 + ($spec$select$i << 4) | 0;
 HEAP8[$20 >> 0] = HEAP8[$1 >> 0] | 0;
 $25 = $21 + ($6 << 4) + 4 | 0;
 $26 = $1 + 4 | 0;
 HEAP32[$25 >> 2] = HEAP32[$26 >> 2];
 HEAP32[$25 + 4 >> 2] = HEAP32[$26 + 4 >> 2];
 HEAP32[$25 + 8 >> 2] = HEAP32[$26 + 8 >> 2];
 HEAP32[$26 >> 2] = 0;
 HEAP32[$26 + 4 >> 2] = 0;
 HEAP32[$26 + 8 >> 2] = 0;
 $28 = $20 + 16 | 0;
 $29 = HEAP32[$0 >> 2] | 0;
 $30 = HEAP32[$2 >> 2] | 0;
 if (($30 | 0) == ($29 | 0)) {
  HEAP32[$0 >> 2] = $20;
  HEAP32[$2 >> 2] = $28;
  HEAP32[$9 >> 2] = $23;
  $$ptr24 = $29;
 } else {
  $38 = $6 + -1 - (($30 + -16 - $29 | 0) >>> 4) | 0;
  $$06$i$i = $30;
  $41 = $20;
  while (1) {
   $$06$i$i$looptemp = $$06$i$i;
   $$06$i$i = $$06$i$i + -16 | 0;
   HEAP8[$41 + -16 >> 0] = HEAP8[$$06$i$i >> 0] | 0;
   $43 = $41 + -12 | 0;
   $44 = $$06$i$i$looptemp + -12 | 0;
   HEAP32[$43 >> 2] = HEAP32[$44 >> 2];
   HEAP32[$43 + 4 >> 2] = HEAP32[$44 + 4 >> 2];
   HEAP32[$43 + 8 >> 2] = HEAP32[$44 + 8 >> 2];
   HEAP32[$44 >> 2] = 0;
   HEAP32[$44 + 4 >> 2] = 0;
   HEAP32[$44 + 8 >> 2] = 0;
   if (($$06$i$i | 0) == ($29 | 0)) break; else $41 = $41 + -16 | 0;
  }
  $$pre$i20 = HEAP32[$0 >> 2] | 0;
  $$pre = HEAP32[$2 >> 2] | 0;
  HEAP32[$0 >> 2] = $21 + ($38 << 4);
  HEAP32[$2 >> 2] = $28;
  HEAP32[$9 >> 2] = $23;
  if (($$pre | 0) == ($$pre$i20 | 0)) $$ptr24 = $$pre$i20; else {
   $50 = $$pre;
   do {
    $51 = $50 + -12 | 0;
    $50 = $50 + -16 | 0;
    if ((HEAP8[$51 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$51 >> 2] | 0);
   } while (($50 | 0) != ($$pre$i20 | 0));
   $$ptr24 = $$pre$i20;
  }
 }
 if (!$$ptr24) return;
 __ZdlPv($$ptr24);
 return;
}

function __ZN2ut4arch22ArchetypeChunkIterator13rawSharedDataEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$020$i = 0, $$1 = 0, $14 = 0, $15 = 0, $18 = 0, $19 = 0, $20 = 0, $29 = 0, $32 = 0, $42 = 0, $49 = 0, $57 = 0, $60 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer7 = sp + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 if (!(HEAP8[$0 + 28 >> 0] | 0)) {
  _snprintf(25060, 1024, 13714, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13735, 13749, 229);
 }
 if ((HEAP32[$0 + 32 >> 2] | 0) != (HEAP32[HEAP32[(HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + 32 >> 2] >> 2] | 0)) {
  _snprintf(25060, 1024, 13906, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13942, 13749, 230);
 }
 $14 = $0 + 16 | 0;
 $15 = HEAP32[$14 >> 2] | 0;
 $18 = HEAP8[($1 & 63) + ($15 + 36) >> 0] | 0;
 $19 = $18 & 255;
 $20 = $15 + 28 | 0;
 if ((HEAP32[$20 >> 2] | 0) <= ($19 | 0)) {
  _snprintf(25060, 1024, 27124, sp + 16 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13990, 14007, 120);
 }
 if (!($18 << 24 >> 24)) label = 9; else if ((HEAP32[(HEAP32[$15 + 32 >> 2] | 0) + ($19 << 4) >> 2] | 0) == ($1 | 0)) $42 = $19; else label = 9;
 L12 : do if ((label | 0) == 9) {
  $29 = HEAP32[$20 >> 2] | 0;
  if (($29 | 0) <= 0) {
   $$1 = 0;
   STACKTOP = sp;
   return $$1 | 0;
  }
  $32 = HEAP32[$15 + 32 >> 2] | 0;
  $$020$i = 0;
  while (1) {
   if ((HEAP32[$32 + ($$020$i << 4) >> 2] | 0) == ($1 | 0)) {
    $42 = $$020$i;
    break L12;
   }
   $$020$i = $$020$i + 1 | 0;
   if (($$020$i | 0) >= ($29 | 0)) {
    $$1 = 0;
    break;
   }
  }
  STACKTOP = sp;
  return $$1 | 0;
 } while (0);
 if (!(HEAP32[(HEAP32[(HEAP32[$14 >> 2] | 0) + 32 >> 2] | 0) + ($42 << 4) + 4 >> 2] & 2)) {
  _snprintf(25060, 1024, 27124, $vararg_buffer5) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 19134, 13749, 236);
 }
 $49 = HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 20 >> 2] | 0;
 if ($49 | 0) {
  $57 = HEAP32[$49 + (HEAP32[(HEAP32[(HEAP32[$14 >> 2] | 0) + 100 >> 2] | 0) + ($42 << 2) >> 2] << 2) >> 2] | 0;
  if ($57 | 0) {
   $$1 = HEAP32[(HEAP32[(HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] | 0) + 36 >> 2] | 0) + ($57 << 2) >> 2] | 0;
   STACKTOP = sp;
   return $$1 | 0;
  }
 }
 $60 = HEAP32[6067] | 0;
 if ((HEAP32[6068] | 0) - $60 >> 2 >>> 0 <= $1 >>> 0) {
  _snprintf(25060, 1024, 27124, $vararg_buffer7) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
 $$1 = HEAP32[(HEAP32[$60 + ($1 << 2) >> 2] | 0) + 24 >> 2] | 0;
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre$phiZ2D = 0, $$sink = 0, $$sink15 = 0, $10 = 0, $11 = 0, $14 = 0, $15 = 0, $18 = 0, $2 = 0, $3 = 0, $35 = 0, $38 = 0, $4 = 0, $43 = 0, $55 = 0, $58 = 0, $6 = 0, $62 = 0, $67 = 0, $9 = 0;
 $2 = $0 + 16 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $0 + 12 | 0;
 $6 = $3 - (HEAP32[$4 >> 2] | 0) | 0;
 if (!$6) {
  $67 = $0 + 32 | 0;
  if (HEAP8[$67 >> 0] | 0) ___assert_fail(15165, 5833, 229, 15152);
  HEAP8[$67 >> 0] = 1;
  return;
 }
 if ($6 >>> 0 <= 7) ___assert_fail(15105, 5657, 144, 15128);
 $9 = $3;
 $10 = $9 + -8 | 0;
 $11 = $9 + -4 | 0;
 $14 = HEAP32[$10 >> 2] | 0;
 $15 = ($14 | 0) != 0;
 if (!(HEAP8[$11 >> 0] | 0)) {
  do if ($15) {
   $43 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, 1) | 0;
   if (!($14 & 1)) {
    HEAP8[$43 >> 0] = 44;
    $$sink = 10;
    $$sink15 = $0;
    break;
   } else {
    HEAP8[$43 >> 0] = 58;
    $$sink = 32;
    $$sink15 = $0;
    break;
   }
  } else {
   $$sink = 10;
   $$sink15 = $0;
  } while (0);
  HEAP8[(__ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$$sink15 >> 2] | 0, 1) | 0) >> 0] = $$sink;
  if (!(HEAP32[$10 >> 2] & 1)) {
   $55 = Math_imul(((HEAP32[$2 >> 2] | 0) - (HEAP32[$4 >> 2] | 0) | 0) >>> 3, HEAP32[$0 + 36 >> 2] | 0) | 0;
   $58 = HEAP8[$0 + 33 >> 0] | 0;
   _memset(__ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, $55) | 0, $58 | 0, $55 | 0) | 0;
  }
 } else {
  if ($15) {
   HEAP8[(__ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, 1) | 0) >> 0] = 44;
   $18 = $0 + 40 | 0;
   if (!(HEAP32[$18 >> 2] & 1)) $$pre$phiZ2D = $18; else {
    HEAP8[(__ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, 1) | 0) >> 0] = 32;
    $$pre$phiZ2D = $18;
   }
  } else $$pre$phiZ2D = $0 + 40 | 0;
  if (!(HEAP32[$$pre$phiZ2D >> 2] & 1)) {
   HEAP8[(__ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, 1) | 0) >> 0] = 10;
   $35 = Math_imul(((HEAP32[$2 >> 2] | 0) - (HEAP32[$4 >> 2] | 0) | 0) >>> 3, HEAP32[$0 + 36 >> 2] | 0) | 0;
   $38 = HEAP8[$0 + 33 >> 0] | 0;
   _memset(__ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, $35) | 0, $38 | 0, $35 | 0) | 0;
  }
 }
 $62 = HEAP32[$10 >> 2] | 0;
 if (!(HEAP8[$11 >> 0] | 0)) if (!(($1 | 0) == 5 | ($62 & 1 | 0) != 0)) ___assert_fail(15132, 5833, 225, 15152);
 HEAP32[$10 >> 2] = $62 + 1;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i30 = 0, $$127 = 0, $16 = 0, $17 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $3 = sp + 40 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 12 | 0;
 $6 = sp;
 L1 : do if (($1 - $0 | 0) > 3) if ((HEAP8[$0 >> 0] | 0) == 68) {
  switch (HEAP8[$0 + 1 >> 0] | 0) {
  case 84:
  case 116:
   break;
  default:
   {
    $$127 = $0;
    break L1;
   }
  }
  $16 = $0 + 2 | 0;
  $17 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($16, $1, $2) | 0;
  if (($17 | 0) == ($16 | 0) | ($17 | 0) == ($1 | 0)) $$127 = $0; else if ((HEAP8[$17 >> 0] | 0) == 69) {
   $23 = $2 + 4 | 0;
   $24 = HEAP32[$23 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($24 | 0)) $$127 = $0; else {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($6, $24 + -24 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($6, 0, 23593) | 0;
    HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
    HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
    HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$6 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($5, 22275) | 0;
    HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
    $$0$i$i$i30 = 0;
    while (1) {
     if (($$0$i$i$i30 | 0) == 3) break;
     HEAP32[$5 + ($$0$i$i$i30 << 2) >> 2] = 0;
     $$0$i$i$i30 = $$0$i$i$i30 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$23 >> 2] | 0) + -24 | 0, $3);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
    $$127 = $17 + 1 | 0;
   }
  } else $$127 = $0;
 } else $$127 = $0; else $$127 = $0; while (0);
 STACKTOP = sp;
 return $$127 | 0;
}

function __ZN2ut12NativeBufferINS_12NativeStringEE6resizeEjS1_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$014$i = 0, $$019 = 0, $$05$i = 0, $$sroa$speculated = 0, $10 = 0, $15 = 0, $16 = 0, $20 = 0, $22 = 0, $23 = 0, $28 = 0, $3 = 0, $31 = 0, $37 = 0, $4 = 0, $41 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $51 = 0, $55 = 0, $7 = 0, $8 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $3 = $0 + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if ($4 >>> 0 > $1 >>> 0) {
  $7 = (HEAP32[$0 >> 2] | 0) + ($1 << 3) | 0;
  $8 = $4 - $1 | 0;
  if (!$8) {
   HEAP32[$3 >> 2] = $1;
   STACKTOP = sp;
   return;
  }
  $$05$i = 0;
  do {
   $10 = $7 + ($$05$i << 3) | 0;
   _free(HEAP32[$10 >> 2] | 0);
   HEAP32[$10 >> 2] = 0;
   HEAP32[$7 + ($$05$i << 3) + 4 >> 2] = 0;
   $$05$i = $$05$i + 1 | 0;
  } while (($$05$i | 0) != ($8 | 0));
  HEAP32[$3 >> 2] = $1;
  STACKTOP = sp;
  return;
 }
 if ($4 >>> 0 >= $1 >>> 0) {
  HEAP32[$3 >> 2] = $1;
  STACKTOP = sp;
  return;
 }
 $15 = $0 + 8 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 $20 = ($16 | 0) > -1 ? ($16 << 1) + 10 | 0 : -1;
 $$sroa$speculated = $20 >>> 0 > $1 >>> 0 ? $20 : $1;
 $22 = HEAP32[$0 >> 2] | 0;
 $23 = _llvm_ctlz_i64($$sroa$speculated | 0, 0, 0) | 0;
 if ((68 - $23 | 0) >>> 0 >= 33) {
  _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8102, 8155, 32);
 }
 $28 = _malloc($$sroa$speculated << 3) | 0;
 if ($4 | 0) {
  $$014$i = 0;
  do {
   $31 = $22 + ($$014$i << 3) | 0;
   HEAP32[$28 + ($$014$i << 3) >> 2] = HEAP32[$31 >> 2];
   HEAP32[$28 + ($$014$i << 3) + 4 >> 2] = HEAP32[$22 + ($$014$i << 3) + 4 >> 2];
   $$014$i = $$014$i + 1 | 0;
   $37 = $31;
   HEAP32[$37 >> 2] = 0;
   HEAP32[$37 + 4 >> 2] = 0;
  } while (($$014$i | 0) != ($4 | 0));
 }
 _free($22);
 HEAP32[$0 >> 2] = $28;
 $41 = HEAP32[$3 >> 2] | 0;
 L21 : do if ($41 >>> 0 < $1 >>> 0) {
  $43 = $2 + 4 | 0;
  $$019 = $41;
  $45 = $28;
  while (1) {
   $44 = $45 + ($$019 << 3) | 0;
   $46 = HEAP32[$43 >> 2] | 0;
   HEAP32[$45 + ($$019 << 3) + 4 >> 2] = $46;
   if (!$46) HEAP32[$44 >> 2] = 0; else {
    $51 = _malloc((HEAP32[$43 >> 2] | 0) + 1 | 0) | 0;
    HEAP32[$44 >> 2] = $51;
    _memcpy($51 | 0, HEAP32[$2 >> 2] | 0, (HEAP32[$43 >> 2] | 0) + 1 | 0) | 0;
   }
   $55 = $$019 + 1 | 0;
   if (($55 | 0) == ($1 | 0)) break L21;
   $$019 = $55;
   $45 = HEAP32[$0 >> 2] | 0;
  }
 } while (0);
 HEAP32[$15 >> 2] = $$sroa$speculated;
 HEAP32[$3 >> 2] = $1;
 STACKTOP = sp;
 return;
}

function __ZN2ut12ManagerWorldC2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $11 = 0, $13 = 0, $16 = 0, $17 = 0, $2 = 0, $21 = 0, $26 = 0, $3 = 0, $30 = 0, $32 = 0, $35 = 0, $36 = 0, $40 = 0, $45 = 0, $8 = 0, $tmpcast3$byval_copy = 0, dest = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast3$byval_copy = sp + 16 | 0;
 $1 = sp + 8 | 0;
 $2 = sp + 24 | 0;
 $3 = sp;
 __ZN2ut4arch13EntityManagerC2Ev($0);
 HEAP32[$0 + 32920 >> 2] = 0;
 HEAP32[$0 + 32924 >> 2] = 0;
 __ZN2ut9SchedulerC2ERNS_12ManagerWorldE($0 + 32928 | 0, $0);
 HEAP32[$tmpcast3$byval_copy >> 2] = __ZN2ut15InitComponentIdINS_17EntityInformationEEEjv() | 0;
 $8 = __ZN2ut4arch13EntityManager15createArchetypeEPKjj($0, $tmpcast3$byval_copy, 1) | 0;
 HEAP32[$0 + 33024 >> 2] = $8;
 __ZN2ut4arch13EntityManager12createEntityEPNS0_9ArchetypeE($tmpcast3$byval_copy, $0, $8);
 $11 = $tmpcast3$byval_copy;
 $13 = HEAP32[$11 >> 2] | 0;
 $16 = HEAP32[$11 + 4 >> 2] | 0;
 $17 = $0 + 33028 | 0;
 HEAP32[$17 >> 2] = $13;
 HEAP32[$17 + 4 >> 2] = $16;
 $21 = $1;
 HEAP32[$21 >> 2] = $13;
 HEAP32[$21 + 4 >> 2] = $16;
 HEAP32[$2 + 4 >> 2] = 15;
 $26 = _malloc(16) | 0;
 HEAP32[$2 >> 2] = $26;
 dest = $26;
 src = 17764;
 stop = dest + 15 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP8[$26 + 15 >> 0] = 0;
 HEAP32[$tmpcast3$byval_copy >> 2] = HEAP32[$1 >> 2];
 HEAP32[$tmpcast3$byval_copy + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 __ZN2ut4arch13EntityManager21setEntityNameInternalENS_6EntityERKNS_12NativeStringE($0, $tmpcast3$byval_copy, $2);
 _free(HEAP32[$2 >> 2] | 0);
 __ZN2ut4arch13EntityManager12createEntityEPNS0_9ArchetypeE($tmpcast3$byval_copy, $0, 0);
 $30 = $tmpcast3$byval_copy;
 $32 = HEAP32[$30 >> 2] | 0;
 $35 = HEAP32[$30 + 4 >> 2] | 0;
 $36 = $0 + 33036 | 0;
 HEAP32[$36 >> 2] = $32;
 HEAP32[$36 + 4 >> 2] = $35;
 $40 = $3;
 HEAP32[$40 >> 2] = $32;
 HEAP32[$40 + 4 >> 2] = $35;
 HEAP32[$2 + 4 >> 2] = 13;
 $45 = _malloc(14) | 0;
 HEAP32[$2 >> 2] = $45;
 dest = $45;
 src = 17780;
 stop = dest + 13 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP8[$45 + 13 >> 0] = 0;
 HEAP32[$tmpcast3$byval_copy >> 2] = HEAP32[$3 >> 2];
 HEAP32[$tmpcast3$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZN2ut4arch13EntityManager21setEntityNameInternalENS_6EntityERKNS_12NativeStringE($0, $tmpcast3$byval_copy, $2);
 _free(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function __ZN20ComponentDataCommand13createCommandEPN2ut4arch19EntityCommandBufferENS1_15EntityCommandOpENS0_6EntityEjiPPv($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0$i$i = 0, $$0$i$i$i = 0, $$sink = 0, $$sink30 = 0, $$sroa$speculated$i$i$i = 0, $15 = 0, $18 = 0, $19 = 0, $20 = 0, $29 = 0, $30 = 0, $32 = 0, $35 = 0, $39 = 0, $44 = 0, $45 = 0, $48 = 0, $55 = 0, $60 = 0, $61 = 0, $7 = 0, $73 = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $7 = HEAP32[6067] | 0;
 if ((HEAP32[6068] | 0) - $7 >> 2 >>> 0 <= $3 >>> 0) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
 $15 = HEAP32[(HEAP32[$7 + ($3 << 2) >> 2] | 0) + 8 >> 2] | 0;
 $18 = $4 + 42 + $15 & -16;
 $19 = $0 + 8 | 0;
 $20 = HEAP32[$19 >> 2] | 0;
 if (!$20) label = 5; else if (((HEAP32[$20 + 4 >> 2] | 0) - (HEAP32[$20 + 8 >> 2] | 0) | 0) > ($18 | 0)) $$0$i$i = $20; else label = 5;
 if ((label | 0) == 5) {
  $29 = $18 | 12;
  $30 = HEAP32[$0 + 12 >> 2] | 0;
  $$sroa$speculated$i$i$i = ($30 | 0) < ($29 | 0) ? $29 : $30;
  $32 = _aligned_alloc(16, $$sroa$speculated$i$i$i) | 0;
  HEAP32[$32 >> 2] = 0;
  HEAP32[$32 + 4 >> 2] = $$sroa$speculated$i$i$i;
  HEAP32[$32 + 8 >> 2] = 12;
  $35 = $0 + 4 | 0;
  if (!(HEAP32[$35 >> 2] | 0)) {
   $$sink = $19;
   $$sink30 = $35;
  } else {
   $$sink = HEAP32[$19 >> 2] | 0;
   $$sink30 = $19;
  }
  HEAP32[$$sink >> 2] = $32;
  HEAP32[$$sink30 >> 2] = $32;
  $$0$i$i = $32;
 }
 $39 = $0 + 16 | 0;
 HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 1;
 $44 = $$0$i$i + 8 | 0;
 $45 = HEAP32[$44 >> 2] | 0;
 $48 = $$0$i$i + $45 | 0;
 if (((HEAP32[$$0$i$i + 4 >> 2] | 0) - $45 | 0) < ($18 | 0)) $$0$i$i$i = 0; else {
  HEAP32[$44 >> 2] = $45 + $18;
  HEAP32[$48 + 4 >> 2] = $18;
  $$0$i$i$i = $48;
 }
 if ($$0$i$i$i & 3 | 0) {
  _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8661, 6212, 111);
 }
 HEAP32[$$0$i$i$i >> 2] = $1;
 $55 = $2;
 $60 = HEAP32[$55 + 4 >> 2] | 0;
 $61 = $$0$i$i$i + 8 | 0;
 HEAP32[$61 >> 2] = HEAP32[$55 >> 2];
 HEAP32[$61 + 4 >> 2] = $60;
 HEAP32[$$0$i$i$i + 16 >> 2] = $3;
 HEAP32[$$0$i$i$i + 20 >> 2] = $4;
 $73 = $15 + -1 + ($$0$i$i$i + 28) & 0 - $15;
 HEAP32[$$0$i$i$i + 24 >> 2] = $73;
 if (!$5) {
  STACKTOP = sp;
  return $$0$i$i$i | 0;
 }
 HEAP32[$5 >> 2] = $73;
 STACKTOP = sp;
 return $$0$i$i$i | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_137parse_sizeof_function_param_pack_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i28 = 0, $$125 = 0, $16 = 0, $19 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $3 = sp + 40 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 12 | 0;
 $6 = sp;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 115) if ((HEAP8[$0 + 1 >> 0] | 0) == 90) {
  $16 = $0 + 2 | 0;
  if ((HEAP8[$16 >> 0] | 0) == 102) {
   $19 = __ZN10__cxxabiv112_GLOBAL__N_120parse_function_paramINS0_2DbEEEPKcS4_S4_RT_($16, $1, $2) | 0;
   if (($19 | 0) == ($16 | 0)) $$125 = $0; else {
    $22 = $2 + 4 | 0;
    $23 = HEAP32[$22 >> 2] | 0;
    if ((HEAP32[$2 >> 2] | 0) == ($23 | 0)) $$125 = $0; else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($6, $23 + -24 | 0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($6, 0, 22488) | 0;
     HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
     HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
     HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
     $$0$i$i$i = 0;
     while (1) {
      if (($$0$i$i$i | 0) == 3) break;
      HEAP32[$6 + ($$0$i$i$i << 2) >> 2] = 0;
      $$0$i$i$i = $$0$i$i$i + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($5, 22275) | 0;
     HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
     HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
     HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
     $$0$i$i$i28 = 0;
     while (1) {
      if (($$0$i$i$i28 | 0) == 3) break;
      HEAP32[$5 + ($$0$i$i$i28 << 2) >> 2] = 0;
      $$0$i$i$i28 = $$0$i$i$i28 + 1 | 0;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $4);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$22 >> 2] | 0) + -24 | 0, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
     $$125 = $19;
    }
   }
  } else $$125 = $0;
 } else $$125 = $0; else $$125 = $0; else $$125 = $0;
 STACKTOP = sp;
 return $$125 | 0;
}

function __ZN2ut4arch5Chunk20initializeComponentsEii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$04650 = 0, $$04650$us = 0, $$04748$us = 0, $$049$us = 0, $14 = 0, $17 = 0, $23 = 0, $25 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $42 = 0, $54 = 0, $6 = 0, $8 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $4 = HEAP32[$0 + 16 >> 2] | 0;
 $6 = HEAP32[$4 + 28 >> 2] | 0;
 $8 = HEAP32[$4 + 32 >> 2] | 0;
 if (($6 | 0) == 1) {
  STACKTOP = sp;
  return;
 }
 if (($2 | 0) <= 0) {
  $$04650 = 1;
  while (1) {
   $42 = HEAP32[$8 + ($$04650 << 4) + 12 >> 2] | 0;
   if (!(HEAP32[$8 + ($$04650 << 4) + 4 >> 2] & 4)) {
    $54 = Math_imul($42, $1) | 0;
    _memset($54 + (HEAP32[$8 + ($$04650 << 4) + 8 >> 2] | 0) + ($0 + 48) | 0, 0, Math_imul($42, $2) | 0) | 0;
   } else if ((HEAP32[6068] | 0) - (HEAP32[6067] | 0) >> 2 >>> 0 <= (HEAP32[$8 + ($$04650 << 4) >> 2] | 0) >>> 0) {
    label = 15;
    break;
   }
   $$04650 = $$04650 + 1 | 0;
   if (($$04650 | 0) == ($6 | 0)) {
    label = 12;
    break;
   }
  }
  if ((label | 0) == 12) {
   STACKTOP = sp;
   return;
  } else if ((label | 0) == 15) {
   _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
  }
 }
 $$04650$us = 1;
 while (1) {
  $14 = HEAP32[$8 + ($$04650$us << 4) + 12 >> 2] | 0;
  $17 = (Math_imul($14, $1) | 0) + (HEAP32[$8 + ($$04650$us << 4) + 8 >> 2] | 0) + ($0 + 48) | 0;
  if (!(HEAP32[$8 + ($$04650$us << 4) + 4 >> 2] & 4)) _memset($17 | 0, 0, Math_imul($14, $2) | 0) | 0; else {
   $23 = HEAP32[$8 + ($$04650$us << 4) >> 2] | 0;
   $25 = HEAP32[6067] | 0;
   if ((HEAP32[6068] | 0) - $25 >> 2 >>> 0 <= $23 >>> 0) {
    label = 7;
    break;
   }
   $31 = HEAP32[$25 + ($23 << 2) >> 2] | 0;
   $32 = $31 + 28 | 0;
   $33 = $31 + 12 | 0;
   $$04748$us = $17;
   $$049$us = 0;
   while (1) {
    FUNCTION_TABLE_vii[HEAP32[$32 >> 2] & 15]($$04748$us, HEAP32[$33 >> 2] | 0);
    $$049$us = $$049$us + 1 | 0;
    if (($$049$us | 0) == ($2 | 0)) break; else $$04748$us = $$04748$us + $14 | 0;
   }
  }
  $$04650$us = $$04650$us + 1 | 0;
  if (($$04650$us | 0) == ($6 | 0)) {
   label = 12;
   break;
  }
 }
 if ((label | 0) == 7) {
  _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 } else if ((label | 0) == 12) {
  STACKTOP = sp;
  return;
 }
}

function __ZN9rapidjson4UTF8IcE6EncodeINS_25GenericInsituStringStreamIS1_EEEEvRT_j($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sink34 = 0, $$sink35 = 0, $$sink36 = 0, $14 = 0, $19 = 0, $20 = 0, $26 = 0, $3 = 0, $33 = 0, $38 = 0, $39 = 0, $4 = 0, $45 = 0, $52 = 0, $59 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0;
 if ($1 >>> 0 < 128) {
  $3 = $0 + 4 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if (!$4) ___assert_fail(17584, 17594, 155, 17646); else {
   $$sink34 = $3;
   $$sink35 = $4;
   $$sink36 = $1;
   $63 = $$sink36 & 255;
   $64 = $$sink35 + 1 | 0;
   HEAP32[$$sink34 >> 2] = $64;
   HEAP8[$$sink35 >> 0] = $63;
   return;
  }
 }
 if ($1 >>> 0 < 2048) {
  $7 = $0 + 4 | 0;
  $8 = HEAP32[$7 >> 2] | 0;
  if (!$8) ___assert_fail(17584, 17594, 155, 17646);
  HEAP32[$7 >> 2] = $8 + 1;
  HEAP8[$8 >> 0] = $1 >>> 6 | 192;
  $14 = HEAP32[$7 >> 2] | 0;
  if (!$14) ___assert_fail(17584, 17594, 155, 17646);
  $$sink34 = $7;
  $$sink35 = $14;
  $$sink36 = $1 & 63 | 128;
  $63 = $$sink36 & 255;
  $64 = $$sink35 + 1 | 0;
  HEAP32[$$sink34 >> 2] = $64;
  HEAP8[$$sink35 >> 0] = $63;
  return;
 }
 if ($1 >>> 0 < 65536) {
  $19 = $0 + 4 | 0;
  $20 = HEAP32[$19 >> 2] | 0;
  if (!$20) ___assert_fail(17584, 17594, 155, 17646);
  HEAP32[$19 >> 2] = $20 + 1;
  HEAP8[$20 >> 0] = $1 >>> 12 | 224;
  $26 = HEAP32[$19 >> 2] | 0;
  if (!$26) ___assert_fail(17584, 17594, 155, 17646);
  HEAP32[$19 >> 2] = $26 + 1;
  HEAP8[$26 >> 0] = $1 >>> 6 & 63 | 128;
  $33 = HEAP32[$19 >> 2] | 0;
  if (!$33) ___assert_fail(17584, 17594, 155, 17646);
  $$sink34 = $19;
  $$sink35 = $33;
  $$sink36 = $1 & 63 | 128;
  $63 = $$sink36 & 255;
  $64 = $$sink35 + 1 | 0;
  HEAP32[$$sink34 >> 2] = $64;
  HEAP8[$$sink35 >> 0] = $63;
  return;
 }
 if ($1 >>> 0 >= 1114112) ___assert_fail(17670, 17692, 115, 17747);
 $38 = $0 + 4 | 0;
 $39 = HEAP32[$38 >> 2] | 0;
 if (!$39) ___assert_fail(17584, 17594, 155, 17646);
 HEAP32[$38 >> 2] = $39 + 1;
 HEAP8[$39 >> 0] = $1 >>> 18 | 240;
 $45 = HEAP32[$38 >> 2] | 0;
 if (!$45) ___assert_fail(17584, 17594, 155, 17646);
 HEAP32[$38 >> 2] = $45 + 1;
 HEAP8[$45 >> 0] = $1 >>> 12 & 63 | 128;
 $52 = HEAP32[$38 >> 2] | 0;
 if (!$52) ___assert_fail(17584, 17594, 155, 17646);
 HEAP32[$38 >> 2] = $52 + 1;
 HEAP8[$52 >> 0] = $1 >>> 6 & 63 | 128;
 $59 = HEAP32[$38 >> 2] | 0;
 if (!$59) ___assert_fail(17584, 17594, 155, 17646);
 $$sink34 = $38;
 $$sink35 = $59;
 $$sink36 = $1 & 63 | 128;
 $63 = $$sink36 & 255;
 $64 = $$sink35 + 1 | 0;
 HEAP32[$$sink34 >> 2] = $64;
 HEAP8[$$sink35 >> 0] = $63;
 return;
}

function _memchr($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$lcssa = 0, $$035$lcssa = 0, $$035$lcssa65 = 0, $$03555 = 0, $$036$lcssa = 0, $$036$lcssa64 = 0, $$03654 = 0, $$046 = 0, $$137$lcssa = 0, $$137$lcssa66 = 0, $$13745 = 0, $$140 = 0, $$23839 = 0, $$in = 0, $$lcssa = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $20 = 0, $23 = 0, $29 = 0, $3 = 0, $30 = 0, $39 = 0, $7 = 0, $8 = 0, label = 0;
 $3 = $1 & 255;
 $7 = ($2 | 0) != 0;
 L1 : do if ($7 & ($0 & 3 | 0) != 0) {
  $8 = $1 & 255;
  $$03555 = $0;
  $$03654 = $2;
  while (1) {
   if ((HEAP8[$$03555 >> 0] | 0) == $8 << 24 >> 24) {
    $$035$lcssa65 = $$03555;
    $$036$lcssa64 = $$03654;
    label = 6;
    break L1;
   }
   $11 = $$03555 + 1 | 0;
   $12 = $$03654 + -1 | 0;
   $16 = ($12 | 0) != 0;
   if ($16 & ($11 & 3 | 0) != 0) {
    $$03555 = $11;
    $$03654 = $12;
   } else {
    $$035$lcssa = $11;
    $$036$lcssa = $12;
    $$lcssa = $16;
    label = 5;
    break;
   }
  }
 } else {
  $$035$lcssa = $0;
  $$036$lcssa = $2;
  $$lcssa = $7;
  label = 5;
 } while (0);
 if ((label | 0) == 5) if ($$lcssa) {
  $$035$lcssa65 = $$035$lcssa;
  $$036$lcssa64 = $$036$lcssa;
  label = 6;
 } else label = 16;
 L8 : do if ((label | 0) == 6) {
  $18 = $1 & 255;
  if ((HEAP8[$$035$lcssa65 >> 0] | 0) == $18 << 24 >> 24) if (!$$036$lcssa64) {
   label = 16;
   break;
  } else {
   $39 = $$035$lcssa65;
   break;
  }
  $20 = Math_imul($3, 16843009) | 0;
  L13 : do if ($$036$lcssa64 >>> 0 > 3) {
   $$046 = $$035$lcssa65;
   $$13745 = $$036$lcssa64;
   while (1) {
    $23 = HEAP32[$$046 >> 2] ^ $20;
    if (($23 & -2139062144 ^ -2139062144) & $23 + -16843009 | 0) {
     $$137$lcssa66 = $$13745;
     $$in = $$046;
     break L13;
    }
    $29 = $$046 + 4 | 0;
    $30 = $$13745 + -4 | 0;
    if ($30 >>> 0 > 3) {
     $$046 = $29;
     $$13745 = $30;
    } else {
     $$0$lcssa = $29;
     $$137$lcssa = $30;
     label = 11;
     break;
    }
   }
  } else {
   $$0$lcssa = $$035$lcssa65;
   $$137$lcssa = $$036$lcssa64;
   label = 11;
  } while (0);
  if ((label | 0) == 11) if (!$$137$lcssa) {
   label = 16;
   break;
  } else {
   $$137$lcssa66 = $$137$lcssa;
   $$in = $$0$lcssa;
  }
  $$140 = $$in;
  $$23839 = $$137$lcssa66;
  while (1) {
   if ((HEAP8[$$140 >> 0] | 0) == $18 << 24 >> 24) {
    $39 = $$140;
    break L8;
   }
   $$23839 = $$23839 + -1 | 0;
   if (!$$23839) {
    label = 16;
    break;
   } else $$140 = $$140 + 1 | 0;
  }
 } while (0);
 if ((label | 0) == 16) $39 = 0;
 return $39 | 0;
}

function __ZN2ut10loadNumberIfEEvRNS_12ManagerWorldERKN9rapidjson12GenericValueINS3_4UTF8IcEENS3_19MemoryPoolAllocatorINS3_12CrtAllocatorEEEEERKNS_4meta10MemberDescEPv($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i = 0.0, $$sroa$017$0 = 0, $10 = 0, $24 = 0, $33 = 0, $49 = 0, $5 = 0, $51 = 0, $52 = 0, $55 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $5 = HEAP16[$1 + 18 >> 1] | 0;
 if ($5 & 512) {
  if (!($5 & 16)) ___assert_fail(16752, 15939, 1654, 16763);
  $10 = $5 & 65535;
  do if (!($10 & 512)) {
   if ($10 & 32 | 0) {
    $$0$i = +(HEAP32[$1 >> 2] | 0);
    break;
   }
   if ($10 & 64 | 0) {
    $$0$i = +((HEAP32[$1 >> 2] | 0) >>> 0);
    break;
   }
   if ($10 & 128 | 0) {
    $24 = $1;
    $$0$i = +((HEAP32[$24 >> 2] | 0) >>> 0) + 4294967296.0 * +(HEAP32[$24 + 4 >> 2] | 0);
    break;
   }
   if (!($10 & 256)) ___assert_fail(16773, 15939, 1659, 16763); else {
    $33 = $1;
    $$0$i = +((HEAP32[$33 >> 2] | 0) >>> 0) + 4294967296.0 * +((HEAP32[$33 + 4 >> 2] | 0) >>> 0);
    break;
   }
  } else $$0$i = +HEAPF64[$1 >> 3]; while (0);
  HEAPF32[$3 + (HEAP32[$2 + 4 >> 2] | 0) >> 2] = $$0$i;
  STACKTOP = sp;
  return;
 }
 if (!($5 & 1024)) {
  _snprintf(25060, 1024, 16823, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 23477, 12969, 267);
 }
 if (!($5 & 4096)) {
  $49 = HEAP32[$1 + 8 >> 2] | 0;
  if (!$49) $$sroa$017$0 = 0; else {
   $51 = $49;
   label = 20;
  }
 } else {
  $51 = $1;
  label = 20;
 }
 if ((label | 0) == 20) {
  $52 = _strlen($51) | 0;
  if (!$52) $$sroa$017$0 = 0; else {
   $55 = _malloc($52 + 1 | 0) | 0;
   _memcpy($55 | 0, $51 | 0, $52 | 0) | 0;
   HEAP8[$55 + $52 >> 0] = 0;
   $$sroa$017$0 = $55;
  }
 }
 do if (!(_strcmp($$sroa$017$0, 13221) | 0)) HEAP32[$3 + (HEAP32[$2 + 4 >> 2] | 0) >> 2] = 2143289344; else {
  if (!(_strcmp($$sroa$017$0, 13235) | 0)) {
   HEAP32[$3 + (HEAP32[$2 + 4 >> 2] | 0) >> 2] = 2139095040;
   break;
  }
  if (!(_strcmp($$sroa$017$0, 13225) | 0)) {
   HEAP32[$3 + (HEAP32[$2 + 4 >> 2] | 0) >> 2] = -8388608;
   break;
  } else {
   _snprintf(25060, 1024, 16808, $vararg_buffer) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 23477, 12969, 264);
  }
 } while (0);
 _free($$sroa$017$0);
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_122parse_sizeof_expr_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i27 = 0, $$124 = 0, $16 = 0, $17 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $3 = sp + 40 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 12 | 0;
 $6 = sp;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 115) if ((HEAP8[$0 + 1 >> 0] | 0) == 122) {
  $16 = $0 + 2 | 0;
  $17 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($16, $1, $2) | 0;
  if (($17 | 0) == ($16 | 0)) $$124 = $0; else {
   $20 = $2 + 4 | 0;
   $21 = HEAP32[$20 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($21 | 0)) $$124 = $0; else {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($6, $21 + -24 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($6, 0, 22502) | 0;
    HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
    HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
    HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$6 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($5, 22275) | 0;
    HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
    $$0$i$i$i27 = 0;
    while (1) {
     if (($$0$i$i$i27 | 0) == 3) break;
     HEAP32[$5 + ($$0$i$i$i27 << 2) >> 2] = 0;
     $$0$i$i$i27 = $$0$i$i$i27 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$20 >> 2] | 0) + -24 | 0, $3);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
    $$124 = $17;
   }
  }
 } else $$124 = $0; else $$124 = $0; else $$124 = $0;
 STACKTOP = sp;
 return $$124 | 0;
}

function __ZNSt3__210shared_ptrIN2ut12SimpleSystemEE11make_sharedIJRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_8functionIFvPNS1_9SchedulerEPNS1_12ManagerWorldEEEEEEES3_DpOT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$pre$i = 0, $$pre$phi$i$i$iZ2D = 0, $10 = 0, $12 = 0, $14 = 0, $22 = 0, $23 = 0, $3 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $3 = sp + 24 | 0;
 $4 = sp;
 $5 = __Znwj(104) | 0;
 $6 = $5 + 4 | 0;
 HEAP32[$6 >> 2] = 0;
 $7 = $5 + 8 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$5 >> 2] = 3836;
 $8 = $5 + 16 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3, $1);
 $10 = HEAP32[$2 + 16 >> 2] | 0;
 do if (!$10) {
  $12 = $4 + 16 | 0;
  HEAP32[$12 >> 2] = 0;
  $$pre$phi$i$i$iZ2D = $12;
 } else if (($2 | 0) == ($10 | 0)) {
  $14 = $4 + 16 | 0;
  HEAP32[$14 >> 2] = $4;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 15]($10, $4);
  $$pre$phi$i$i$iZ2D = $14;
  break;
 } else {
  $22 = $4 + 16 | 0;
  HEAP32[$22 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 8 >> 2] & 7]($10) | 0;
  $$pre$phi$i$i$iZ2D = $22;
  break;
 } while (0);
 __ZN2ut12SimpleSystemC2ENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_8functionIFvPNS_9SchedulerEPNS_12ManagerWorldEEEE($8, $3, $4);
 $23 = HEAP32[$$pre$phi$i$i$iZ2D >> 2] | 0;
 if (($4 | 0) == ($23 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$23 >> 2] | 0) + 16 >> 2] & 63]($23); else if ($23 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$23 >> 2] | 0) + 20 >> 2] & 63]($23);
 if ((HEAP8[$3 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$3 >> 2] | 0);
 HEAP32[$0 >> 2] = $8;
 HEAP32[$0 + 4 >> 2] = $5;
 $37 = $5 + 20 | 0;
 $38 = $5 + 24 | 0;
 $39 = HEAP32[$38 >> 2] | 0;
 if (!$39) $$pre$i = 0; else if ((HEAP32[$39 + 4 >> 2] | 0) == -1) $$pre$i = $39; else {
  STACKTOP = sp;
  return;
 }
 HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 1;
 HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + 1;
 HEAP32[$37 >> 2] = $8;
 HEAP32[$38 >> 2] = $5;
 if ($$pre$i | 0) __ZNSt3__219__shared_weak_count14__release_weakEv($$pre$i);
 $51 = HEAP32[$6 >> 2] | 0;
 HEAP32[$6 >> 2] = $51 + -1;
 if ($51 | 0) {
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$5 >> 2] | 0) + 8 >> 2] & 63]($5);
 __ZNSt3__219__shared_weak_count14__release_weakEv($5);
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_122parse_sizeof_type_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i27 = 0, $$124 = 0, $16 = 0, $17 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $3 = sp + 40 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 12 | 0;
 $6 = sp;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 115) if ((HEAP8[$0 + 1 >> 0] | 0) == 116) {
  $16 = $0 + 2 | 0;
  $17 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($16, $1, $2) | 0;
  if (($17 | 0) == ($16 | 0)) $$124 = $0; else {
   $20 = $2 + 4 | 0;
   $21 = HEAP32[$20 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($21 | 0)) $$124 = $0; else {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($6, $21 + -24 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($6, 0, 22502) | 0;
    HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
    HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
    HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$6 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($5, 22275) | 0;
    HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
    $$0$i$i$i27 = 0;
    while (1) {
     if (($$0$i$i$i27 | 0) == 3) break;
     HEAP32[$5 + ($$0$i$i$i27 << 2) >> 2] = 0;
     $$0$i$i$i27 = $$0$i$i$i27 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$20 >> 2] | 0) + -24 | 0, $3);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
    $$124 = $17;
   }
  }
 } else $$124 = $0; else $$124 = $0; else $$124 = $0;
 STACKTOP = sp;
 return $$124 | 0;
}

function __ZN2ut4arch13EntityManager17createFreshEntityERKNS_6EntityEb($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$02832$i$i = 0, $$02833$i$i = 0, $$02833$us$i$i = 0, $11 = 0, $17 = 0, $18 = 0, $22 = 0, $23 = 0, $3 = 0, $31 = 0, $36 = 0, $4 = 0, $41 = 0, $42 = 0, $47 = 0, $48 = 0, $5 = 0, $53 = 0, $7 = 0, $9 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $3 = $2 & 1;
 $4 = $0 + 128 | 0;
 $5 = HEAP32[$1 >> 2] | 0;
 $7 = HEAP32[$0 + 132 >> 2] | 0;
 L1 : do if ($7 | 0) {
  $9 = $7 + -1 | 0;
  $11 = ($9 & $7 | 0) == 0;
  if ($11) $17 = $9 & $5; else if ($5 >>> 0 < $7 >>> 0) $17 = $5; else $17 = ($5 >>> 0) % ($7 >>> 0) | 0;
  $18 = HEAP32[(HEAP32[$4 >> 2] | 0) + ($17 << 2) >> 2] | 0;
  if ($18 | 0) {
   $$02832$i$i = HEAP32[$18 >> 2] | 0;
   if ($$02832$i$i | 0) {
    if ($11) {
     $$02833$us$i$i = $$02832$i$i;
     while (1) {
      $22 = HEAP32[$$02833$us$i$i + 4 >> 2] | 0;
      $23 = ($22 | 0) == ($5 | 0);
      if (!($23 | ($22 & $9 | 0) == ($17 | 0))) break L1;
      if ($23) if ((HEAP32[$$02833$us$i$i + 8 >> 2] | 0) == ($5 | 0)) break;
      $$02833$us$i$i = HEAP32[$$02833$us$i$i >> 2] | 0;
      if (!$$02833$us$i$i) break L1;
     }
     _snprintf(25060, 1024, 8436, $vararg_buffer) | 0;
     HEAP8[26083] = 0;
     __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8490, 6920, 180);
    }
    $$02833$i$i = $$02832$i$i;
    while (1) {
     $31 = HEAP32[$$02833$i$i + 4 >> 2] | 0;
     if (($31 | 0) == ($5 | 0)) {
      if ((HEAP32[$$02833$i$i + 8 >> 2] | 0) == ($5 | 0)) break;
     } else {
      if ($31 >>> 0 < $7 >>> 0) $36 = $31; else $36 = ($31 >>> 0) % ($7 >>> 0) | 0;
      if (($36 | 0) != ($17 | 0)) break L1;
     }
     $$02833$i$i = HEAP32[$$02833$i$i >> 2] | 0;
     if (!$$02833$i$i) break L1;
    }
    _snprintf(25060, 1024, 8436, $vararg_buffer) | 0;
    HEAP8[26083] = 0;
    __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8490, 6920, 180);
   }
  }
 } while (0);
 $41 = __ZNSt3__213unordered_mapIiN2ut4arch13EntityManager11FreshEntityENS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS4_EEEEEixERSB_($4, $1) | 0;
 $42 = $1;
 $47 = HEAP32[$42 + 4 >> 2] | 0;
 $48 = $41;
 HEAP32[$48 >> 2] = HEAP32[$42 >> 2];
 HEAP32[$48 + 4 >> 2] = $47;
 $53 = $41 + 8 | 0;
 HEAP32[$53 >> 2] = 0;
 HEAP32[$53 + 4 >> 2] = 0;
 HEAP8[$41 + 48 >> 0] = $3;
 STACKTOP = sp;
 return $41 | 0;
}

function __ZN2ut10loadNumberIdEEvRNS_12ManagerWorldERKN9rapidjson12GenericValueINS3_4UTF8IcEENS3_19MemoryPoolAllocatorINS3_12CrtAllocatorEEEEERKNS_4meta10MemberDescEPv($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i = 0.0, $$sroa$0$0 = 0, $10 = 0, $24 = 0, $33 = 0, $48 = 0, $5 = 0, $50 = 0, $51 = 0, $54 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $5 = HEAP16[$1 + 18 >> 1] | 0;
 if ($5 & 512) {
  if (!($5 & 16)) ___assert_fail(16752, 15939, 1654, 16763);
  $10 = $5 & 65535;
  do if (!($10 & 512)) {
   if ($10 & 32 | 0) {
    $$0$i = +(HEAP32[$1 >> 2] | 0);
    break;
   }
   if ($10 & 64 | 0) {
    $$0$i = +((HEAP32[$1 >> 2] | 0) >>> 0);
    break;
   }
   if ($10 & 128 | 0) {
    $24 = $1;
    $$0$i = +((HEAP32[$24 >> 2] | 0) >>> 0) + 4294967296.0 * +(HEAP32[$24 + 4 >> 2] | 0);
    break;
   }
   if (!($10 & 256)) ___assert_fail(16773, 15939, 1659, 16763); else {
    $33 = $1;
    $$0$i = +((HEAP32[$33 >> 2] | 0) >>> 0) + 4294967296.0 * +((HEAP32[$33 + 4 >> 2] | 0) >>> 0);
    break;
   }
  } else $$0$i = +HEAPF64[$1 >> 3]; while (0);
  HEAPF64[$3 + (HEAP32[$2 + 4 >> 2] | 0) >> 3] = $$0$i;
  STACKTOP = sp;
  return;
 }
 if (!($5 & 1024)) {
  _snprintf(25060, 1024, 16823, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 23477, 12969, 267);
 }
 if (!($5 & 4096)) {
  $48 = HEAP32[$1 + 8 >> 2] | 0;
  if (!$48) $$sroa$0$0 = 0; else {
   $50 = $48;
   label = 20;
  }
 } else {
  $50 = $1;
  label = 20;
 }
 if ((label | 0) == 20) {
  $51 = _strlen($50) | 0;
  if (!$51) $$sroa$0$0 = 0; else {
   $54 = _malloc($51 + 1 | 0) | 0;
   _memcpy($54 | 0, $50 | 0, $51 | 0) | 0;
   HEAP8[$54 + $51 >> 0] = 0;
   $$sroa$0$0 = $54;
  }
 }
 do if (!(_strcmp($$sroa$0$0, 13221) | 0)) HEAPF64[$3 + (HEAP32[$2 + 4 >> 2] | 0) >> 3] = nan; else {
  if (!(_strcmp($$sroa$0$0, 13235) | 0)) {
   HEAPF64[$3 + (HEAP32[$2 + 4 >> 2] | 0) >> 3] = inf;
   break;
  }
  if (!(_strcmp($$sroa$0$0, 13225) | 0)) {
   HEAPF64[$3 + (HEAP32[$2 + 4 >> 2] | 0) >> 3] = -inf;
   break;
  } else {
   _snprintf(25060, 1024, 16808, $vararg_buffer) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 23477, 12969, 264);
  }
 } while (0);
 _free($$sroa$0$0);
 STACKTOP = sp;
 return;
}

function __ZN2ut4arch5Chunk8moveDataEPS1_iS2_ii($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$060 = 0, $11 = 0, $13 = 0, $14 = 0, $30 = 0, $31 = 0, $32 = 0, $34 = 0, $36 = 0, $39 = 0, $42 = 0, $43 = 0, $6 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer9 = sp + 40 | 0;
 $6 = HEAP32[$0 + 16 >> 2] | 0;
 if (($6 | 0) != (HEAP32[$2 + 16 >> 2] | 0)) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9525, 9568, 12);
 }
 $11 = HEAP32[$6 + 28 >> 2] | 0;
 $13 = HEAP32[$6 + 32 >> 2] | 0;
 $14 = $0 + 24 | 0;
 if ((HEAP32[$14 >> 2] | 0) > (HEAP32[$0 + 28 >> 2] | 0)) {
  _snprintf(25060, 1024, 27124, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9638, 9568, 20);
 }
 if ((HEAP32[$2 + 24 >> 2] | 0) > (HEAP32[$2 + 28 >> 2] | 0)) {
  _snprintf(25060, 1024, 27124, sp + 16 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9676, 9568, 21);
 }
 if ((HEAP32[$14 >> 2] | 0) <= ($1 | 0)) {
  _snprintf(25060, 1024, 27124, sp + 24 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9714, 9568, 23);
 }
 if ((HEAP32[$6 + 20 >> 2] | 0) <= ($3 | 0)) {
  _snprintf(25060, 1024, 27124, sp + 32 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9741, 9568, 24);
 }
 if (($11 | 0) <= 0) {
  STACKTOP = sp;
  return;
 }
 $30 = $2 + 16384 | 0;
 $31 = $0 + 40 | 0;
 $32 = $2 + 40 | 0;
 $$060 = 0;
 while (1) {
  $34 = HEAP32[$13 + ($$060 << 4) + 8 >> 2] | 0;
  $36 = HEAP32[$13 + ($$060 << 4) + 12 >> 2] | 0;
  $39 = (Math_imul($36, $1) | 0) + $34 + ($0 + 48) | 0;
  $42 = (Math_imul($36, $3) | 0) + $34 + ($2 + 48) | 0;
  $43 = Math_imul($36, $4) | 0;
  if (($42 + $43 | 0) >>> 0 > $30 >>> 0) {
   label = 15;
   break;
  }
  _memmove($42 | 0, $39 | 0, $43 | 0) | 0;
  HEAP32[(HEAP32[$32 >> 2] | 0) + ($$060 << 2) >> 2] = HEAP32[(HEAP32[$31 >> 2] | 0) + ($$060 << 2) >> 2];
  $$060 = $$060 + 1 | 0;
  if (($$060 | 0) == ($11 | 0)) {
   label = 13;
   break;
  }
 }
 if ((label | 0) == 13) {
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 15) {
  _snprintf(25060, 1024, 27124, $vararg_buffer9) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9772, 9568, 31);
 }
}

function __ZN2ut9Scheduler9isEnabledEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$02832$i$i = 0, $$02833$i$i = 0, $$02833$us$i$i = 0, $15 = 0, $16 = 0, $2 = 0, $20 = 0, $21 = 0, $29 = 0, $3 = 0, $34 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $7 = 0, $9 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $2 = sp + 4 | 0;
 HEAP32[$2 >> 2] = $1;
 $3 = $0 + 40 | 0;
 $5 = HEAP32[$0 + 44 >> 2] | 0;
 L1 : do if ($5 | 0) {
  $7 = $5 + -1 | 0;
  $9 = ($7 & $5 | 0) == 0;
  if ($9) $15 = $7 & $1; else if ($5 >>> 0 > $1 >>> 0) $15 = $1; else $15 = ($1 >>> 0) % ($5 >>> 0) | 0;
  $16 = HEAP32[(HEAP32[$3 >> 2] | 0) + ($15 << 2) >> 2] | 0;
  if ($16 | 0) {
   $$02832$i$i = HEAP32[$16 >> 2] | 0;
   if ($$02832$i$i | 0) {
    if ($9) {
     $$02833$us$i$i = $$02832$i$i;
     while (1) {
      $20 = HEAP32[$$02833$us$i$i + 4 >> 2] | 0;
      $21 = ($20 | 0) == ($1 | 0);
      if (!($21 | ($20 & $7 | 0) == ($15 | 0))) break L1;
      if ($21) if ((HEAP32[$$02833$us$i$i + 8 >> 2] | 0) == ($1 | 0)) break;
      $$02833$us$i$i = HEAP32[$$02833$us$i$i >> 2] | 0;
      if (!$$02833$us$i$i) break L1;
     }
     $39 = __ZNSt3__213unordered_mapIiN2ut9Scheduler15ScheduledSystemENS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS3_EEEEEixERSA_($3, $2) | 0;
     $40 = $39 + 36 | 0;
     $41 = HEAP8[$40 >> 0] | 0;
     $42 = $41 << 24 >> 24 != 0;
     STACKTOP = sp;
     return $42 | 0;
    }
    $$02833$i$i = $$02832$i$i;
    while (1) {
     $29 = HEAP32[$$02833$i$i + 4 >> 2] | 0;
     if (($29 | 0) == ($1 | 0)) {
      if ((HEAP32[$$02833$i$i + 8 >> 2] | 0) == ($1 | 0)) break;
     } else {
      if ($29 >>> 0 < $5 >>> 0) $34 = $29; else $34 = ($29 >>> 0) % ($5 >>> 0) | 0;
      if (($34 | 0) != ($15 | 0)) break L1;
     }
     $$02833$i$i = HEAP32[$$02833$i$i >> 2] | 0;
     if (!$$02833$i$i) break L1;
    }
    $39 = __ZNSt3__213unordered_mapIiN2ut9Scheduler15ScheduledSystemENS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS3_EEEEEixERSA_($3, $2) | 0;
    $40 = $39 + 36 | 0;
    $41 = HEAP8[$40 >> 0] | 0;
    $42 = $41 << 24 >> 24 != 0;
    STACKTOP = sp;
    return $42 | 0;
   }
  }
 } while (0);
 _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
 HEAP8[26083] = 0;
 __ZN2ut12assertFailedEPKcS1_S1_j(25060, 18693, 17842, 157);
 return 0;
}

function __ZN2ut4arch13EntityManager6existsENS_6EntityE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$02832$i$i = 0, $$02833$i$i = 0, $$02833$us$i$i = 0, $$1 = 0, $$sroa$0$0$i$i = 0, $11 = 0, $18 = 0, $19 = 0, $23 = 0, $24 = 0, $32 = 0, $37 = 0, $5 = 0, $51 = 0, $52 = 0, $54 = 0, $7 = 0, $9 = 0;
 L1 : do if ((HEAP32[$0 + 36 >> 2] | 0) > 0) {
  $5 = HEAP32[$1 >> 2] | 0;
  $7 = HEAP32[$0 + 132 >> 2] | 0;
  if ($7 | 0) {
   $9 = $7 + -1 | 0;
   $11 = ($9 & $7 | 0) == 0;
   if ($11) $18 = $9 & $5; else if ($5 >>> 0 < $7 >>> 0) $18 = $5; else $18 = ($5 >>> 0) % ($7 >>> 0) | 0;
   $19 = HEAP32[(HEAP32[$0 + 128 >> 2] | 0) + ($18 << 2) >> 2] | 0;
   if ($19 | 0) {
    $$02832$i$i = HEAP32[$19 >> 2] | 0;
    if ($$02832$i$i | 0) {
     L11 : do if ($11) {
      $$02833$us$i$i = $$02832$i$i;
      while (1) {
       $23 = HEAP32[$$02833$us$i$i + 4 >> 2] | 0;
       $24 = ($23 | 0) == ($5 | 0);
       if (!($24 | ($23 & $9 | 0) == ($18 | 0))) break L1;
       if ($24) if ((HEAP32[$$02833$us$i$i + 8 >> 2] | 0) == ($5 | 0)) {
        $$sroa$0$0$i$i = $$02833$us$i$i;
        break L11;
       }
       $$02833$us$i$i = HEAP32[$$02833$us$i$i >> 2] | 0;
       if (!$$02833$us$i$i) break L1;
      }
     } else {
      $$02833$i$i = $$02832$i$i;
      while (1) {
       $32 = HEAP32[$$02833$i$i + 4 >> 2] | 0;
       if (($32 | 0) == ($5 | 0)) {
        if ((HEAP32[$$02833$i$i + 8 >> 2] | 0) == ($5 | 0)) {
         $$sroa$0$0$i$i = $$02833$i$i;
         break L11;
        }
       } else {
        if ($32 >>> 0 < $7 >>> 0) $37 = $32; else $37 = ($32 >>> 0) % ($7 >>> 0) | 0;
        if (($37 | 0) != ($18 | 0)) break L1;
       }
       $$02833$i$i = HEAP32[$$02833$i$i >> 2] | 0;
       if (!$$02833$i$i) break L1;
      }
     } while (0);
     if ((HEAP32[$$sroa$0$0$i$i + 12 >> 2] | 0) != ($5 | 0)) {
      $$1 = 0;
      return $$1 | 0;
     }
     $$1 = (HEAP32[$$sroa$0$0$i$i + 16 >> 2] | 0) == (HEAP32[$1 + 4 >> 2] | 0);
     return $$1 | 0;
    }
   }
  }
 } while (0);
 $51 = HEAP32[$0 + 8 >> 2] | 0;
 $52 = $1;
 $54 = HEAP32[$52 >> 2] | 0;
 if (($54 | 0) <= -1) {
  $$1 = 0;
  return $$1 | 0;
 }
 if ((HEAP32[$51 + 24 >> 2] | 0) <= ($54 | 0)) {
  $$1 = 0;
  return $$1 | 0;
 }
 $$1 = (HEAP32[(HEAP32[$51 + 20 >> 2] | 0) + ($54 << 4) >> 2] | 0) == (HEAP32[$52 + 4 >> 2] | 0);
 return $$1 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE23__append_forward_unsafeIPKcEERS7_T_SC_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$040 = 0, $15 = 0, $22 = 0, $23 = 0, $26 = 0, $27 = 0, $3 = 0, $35 = 0, $36 = 0, $4 = 0, $44 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $scevgep5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = $1;
 $4 = sp;
 $5 = $0 + 11 | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 $7 = $6 << 24 >> 24 < 0;
 if ($7) {
  $35 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
  $36 = HEAP32[$0 + 4 >> 2] | 0;
 } else {
  $35 = 10;
  $36 = $6 & 255;
 }
 $15 = $2 - $3 | 0;
 do if ($15 | 0) {
  if ($7) {
   $22 = HEAP32[$0 >> 2] | 0;
   $23 = HEAP32[$0 + 4 >> 2] | 0;
  } else {
   $22 = $0;
   $23 = $6 & 255;
  }
  if (__ZNSt3__214__ptr_in_rangeIcEEbPKT_S3_S3_($1, $22, $22 + $23 | 0) | 0) {
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_($4, $1, $2);
   $26 = HEAP8[$4 + 11 >> 0] | 0;
   $27 = $26 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($0, $27 ? HEAP32[$4 >> 2] | 0 : $4, $27 ? HEAP32[$4 + 4 >> 2] | 0 : $26 & 255) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
   break;
  }
  if (($35 - $36 | 0) >>> 0 < $15 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEjjjjjj($0, $35, $36 + $15 - $35 | 0, $36, $36, 0);
  if ((HEAP8[$5 >> 0] | 0) < 0) $44 = HEAP32[$0 >> 2] | 0; else $44 = $0;
  $scevgep5 = $2 + ($36 - $3) | 0;
  $$0 = $44 + $36 | 0;
  $$040 = $1;
  while (1) {
   if (($$040 | 0) == ($2 | 0)) break;
   __ZNSt3__211char_traitsIcE6assignERcRKc($$0, $$040);
   $$0 = $$0 + 1 | 0;
   $$040 = $$040 + 1 | 0;
  }
  HEAP8[$4 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($44 + $scevgep5 | 0, $4);
  $49 = $36 + $15 | 0;
  if ((HEAP8[$5 >> 0] | 0) < 0) {
   HEAP32[$0 + 4 >> 2] = $49;
   break;
  } else {
   HEAP8[$5 >> 0] = $49;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZN2ut9Scheduler7disableEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$02832$i$i = 0, $$02833$i$i = 0, $$02833$us$i$i = 0, $15 = 0, $16 = 0, $2 = 0, $20 = 0, $21 = 0, $29 = 0, $3 = 0, $34 = 0, $39 = 0, $40 = 0, $41 = 0, $5 = 0, $7 = 0, $9 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $2 = sp + 4 | 0;
 HEAP32[$2 >> 2] = $1;
 $3 = $0 + 40 | 0;
 $5 = HEAP32[$0 + 44 >> 2] | 0;
 L1 : do if ($5 | 0) {
  $7 = $5 + -1 | 0;
  $9 = ($7 & $5 | 0) == 0;
  if ($9) $15 = $7 & $1; else if ($5 >>> 0 > $1 >>> 0) $15 = $1; else $15 = ($1 >>> 0) % ($5 >>> 0) | 0;
  $16 = HEAP32[(HEAP32[$3 >> 2] | 0) + ($15 << 2) >> 2] | 0;
  if ($16 | 0) {
   $$02832$i$i = HEAP32[$16 >> 2] | 0;
   if ($$02832$i$i | 0) {
    if ($9) {
     $$02833$us$i$i = $$02832$i$i;
     while (1) {
      $20 = HEAP32[$$02833$us$i$i + 4 >> 2] | 0;
      $21 = ($20 | 0) == ($1 | 0);
      if (!($21 | ($20 & $7 | 0) == ($15 | 0))) break L1;
      if ($21) if ((HEAP32[$$02833$us$i$i + 8 >> 2] | 0) == ($1 | 0)) break;
      $$02833$us$i$i = HEAP32[$$02833$us$i$i >> 2] | 0;
      if (!$$02833$us$i$i) break L1;
     }
     $39 = __ZNSt3__213unordered_mapIiN2ut9Scheduler15ScheduledSystemENS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS3_EEEEEixERSA_($3, $2) | 0;
     $40 = $39 + 36 | 0;
     HEAP8[$40 >> 0] = 0;
     $41 = $0 + 72 | 0;
     HEAP8[$41 >> 0] = 1;
     STACKTOP = sp;
     return;
    }
    $$02833$i$i = $$02832$i$i;
    while (1) {
     $29 = HEAP32[$$02833$i$i + 4 >> 2] | 0;
     if (($29 | 0) == ($1 | 0)) {
      if ((HEAP32[$$02833$i$i + 8 >> 2] | 0) == ($1 | 0)) break;
     } else {
      if ($29 >>> 0 < $5 >>> 0) $34 = $29; else $34 = ($29 >>> 0) % ($5 >>> 0) | 0;
      if (($34 | 0) != ($15 | 0)) break L1;
     }
     $$02833$i$i = HEAP32[$$02833$i$i >> 2] | 0;
     if (!$$02833$i$i) break L1;
    }
    $39 = __ZNSt3__213unordered_mapIiN2ut9Scheduler15ScheduledSystemENS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS3_EEEEEixERSA_($3, $2) | 0;
    $40 = $39 + 36 | 0;
    HEAP8[$40 >> 0] = 0;
    $41 = $0 + 72 | 0;
    HEAP8[$41 >> 0] = 1;
    STACKTOP = sp;
    return;
   }
  }
 } while (0);
 _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
 HEAP8[26083] = 0;
 __ZN2ut12assertFailedEPKcS1_S1_j(25060, 18693, 17842, 149);
}

function __ZN2ut9Scheduler6enableEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$02832$i$i = 0, $$02833$i$i = 0, $$02833$us$i$i = 0, $15 = 0, $16 = 0, $2 = 0, $20 = 0, $21 = 0, $29 = 0, $3 = 0, $34 = 0, $39 = 0, $40 = 0, $41 = 0, $5 = 0, $7 = 0, $9 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $2 = sp + 4 | 0;
 HEAP32[$2 >> 2] = $1;
 $3 = $0 + 40 | 0;
 $5 = HEAP32[$0 + 44 >> 2] | 0;
 L1 : do if ($5 | 0) {
  $7 = $5 + -1 | 0;
  $9 = ($7 & $5 | 0) == 0;
  if ($9) $15 = $7 & $1; else if ($5 >>> 0 > $1 >>> 0) $15 = $1; else $15 = ($1 >>> 0) % ($5 >>> 0) | 0;
  $16 = HEAP32[(HEAP32[$3 >> 2] | 0) + ($15 << 2) >> 2] | 0;
  if ($16 | 0) {
   $$02832$i$i = HEAP32[$16 >> 2] | 0;
   if ($$02832$i$i | 0) {
    if ($9) {
     $$02833$us$i$i = $$02832$i$i;
     while (1) {
      $20 = HEAP32[$$02833$us$i$i + 4 >> 2] | 0;
      $21 = ($20 | 0) == ($1 | 0);
      if (!($21 | ($20 & $7 | 0) == ($15 | 0))) break L1;
      if ($21) if ((HEAP32[$$02833$us$i$i + 8 >> 2] | 0) == ($1 | 0)) break;
      $$02833$us$i$i = HEAP32[$$02833$us$i$i >> 2] | 0;
      if (!$$02833$us$i$i) break L1;
     }
     $39 = __ZNSt3__213unordered_mapIiN2ut9Scheduler15ScheduledSystemENS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS3_EEEEEixERSA_($3, $2) | 0;
     $40 = $39 + 36 | 0;
     HEAP8[$40 >> 0] = 1;
     $41 = $0 + 72 | 0;
     HEAP8[$41 >> 0] = 1;
     STACKTOP = sp;
     return;
    }
    $$02833$i$i = $$02832$i$i;
    while (1) {
     $29 = HEAP32[$$02833$i$i + 4 >> 2] | 0;
     if (($29 | 0) == ($1 | 0)) {
      if ((HEAP32[$$02833$i$i + 8 >> 2] | 0) == ($1 | 0)) break;
     } else {
      if ($29 >>> 0 < $5 >>> 0) $34 = $29; else $34 = ($29 >>> 0) % ($5 >>> 0) | 0;
      if (($34 | 0) != ($15 | 0)) break L1;
     }
     $$02833$i$i = HEAP32[$$02833$i$i >> 2] | 0;
     if (!$$02833$i$i) break L1;
    }
    $39 = __ZNSt3__213unordered_mapIiN2ut9Scheduler15ScheduledSystemENS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS3_EEEEEixERSA_($3, $2) | 0;
    $40 = $39 + 36 | 0;
    HEAP8[$40 >> 0] = 1;
    $41 = $0 + 72 | 0;
    HEAP8[$41 >> 0] = 1;
    STACKTOP = sp;
    return;
   }
  }
 } while (0);
 _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
 HEAP8[26083] = 0;
 __ZN2ut12assertFailedEPKcS1_S1_j(25060, 18693, 17842, 141);
}

function __ZN10__cxxabiv112_GLOBAL__N_116parse_dot_suffixINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i16 = 0, $$014 = 0, $10 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $3 = sp + 24 | 0;
 $4 = sp + 12 | 0;
 $5 = sp;
 if (($0 | 0) == ($1 | 0)) $$014 = $0; else if ((HEAP8[$0 >> 0] | 0) == 46) {
  $10 = $2 + 4 | 0;
  if ((HEAP32[$2 >> 2] | 0) == (HEAP32[$10 >> 2] | 0)) $$014 = $0; else {
   HEAP32[$5 >> 2] = 0;
   HEAP32[$5 + 4 >> 2] = 0;
   HEAP32[$5 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_($5, $0, $1);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($5, 0, 22272) | 0;
   HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
   HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
   HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
   $$0$i$i$i = 0;
   while (1) {
    if (($$0$i$i$i | 0) == 3) break;
    HEAP32[$5 + ($$0$i$i$i << 2) >> 2] = 0;
    $$0$i$i$i = $$0$i$i$i + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($4, 22275) | 0;
   HEAP32[$3 >> 2] = HEAP32[$4 >> 2];
   HEAP32[$3 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
   HEAP32[$3 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
   $$0$i$i$i16 = 0;
   while (1) {
    if (($$0$i$i$i16 | 0) == 3) break;
    HEAP32[$4 + ($$0$i$i$i16 << 2) >> 2] = 0;
    $$0$i$i$i16 = $$0$i$i$i16 + 1 | 0;
   }
   $22 = HEAP8[$3 + 11 >> 0] | 0;
   $23 = $22 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[$10 >> 2] | 0) + -24 | 0, $23 ? HEAP32[$3 >> 2] | 0 : $3, $23 ? HEAP32[$3 + 4 >> 2] | 0 : $22 & 255) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
   $$014 = $1;
  }
 } else $$014 = $0;
 STACKTOP = sp;
 return $$014 | 0;
}

function __ZN2ut4arch13EntityManager35assertInvalidForIterationComponentsEPKNS0_13ComponentSpecEj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$012 = 0, $$02832$i$i = 0, $$02833$i$i = 0, $$02833$us$i$i = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $21 = 0, $22 = 0, $26 = 0, $27 = 0, $35 = 0, $40 = 0, $7 = 0, $8 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 if (!((HEAP32[$0 + 36 >> 2] | 0) > 0 & ($2 | 0) != 0)) {
  STACKTOP = sp;
  return;
 }
 $7 = $0 + 112 | 0;
 $8 = $0 + 108 | 0;
 $$012 = 0;
 L4 : while (1) {
  $10 = HEAP32[$1 + ($$012 << 3) >> 2] | 0;
  $11 = HEAP32[$7 >> 2] | 0;
  L6 : do if ($11 | 0) {
   $13 = $11 + -1 | 0;
   $15 = ($13 & $11 | 0) == 0;
   if ($15) $21 = $13 & $10; else if ($10 >>> 0 < $11 >>> 0) $21 = $10; else $21 = ($10 >>> 0) % ($11 >>> 0) | 0;
   $22 = HEAP32[(HEAP32[$8 >> 2] | 0) + ($21 << 2) >> 2] | 0;
   if ($22 | 0) {
    $$02832$i$i = HEAP32[$22 >> 2] | 0;
    if ($$02832$i$i | 0) {
     if ($15) {
      $$02833$us$i$i = $$02832$i$i;
      while (1) {
       $26 = HEAP32[$$02833$us$i$i + 4 >> 2] | 0;
       $27 = ($26 | 0) == ($10 | 0);
       if (!($27 | ($26 & $13 | 0) == ($21 | 0))) break L6;
       if ($27) if ((HEAP32[$$02833$us$i$i + 8 >> 2] | 0) == ($10 | 0)) {
        label = 23;
        break L4;
       }
       $$02833$us$i$i = HEAP32[$$02833$us$i$i >> 2] | 0;
       if (!$$02833$us$i$i) break L6;
      }
     }
     $$02833$i$i = $$02832$i$i;
     do {
      $35 = HEAP32[$$02833$i$i + 4 >> 2] | 0;
      if (($35 | 0) == ($10 | 0)) {
       if ((HEAP32[$$02833$i$i + 8 >> 2] | 0) == ($10 | 0)) {
        label = 23;
        break L4;
       }
      } else {
       if ($35 >>> 0 < $11 >>> 0) $40 = $35; else $40 = ($35 >>> 0) % ($11 >>> 0) | 0;
       if (($40 | 0) != ($21 | 0)) break L6;
      }
      $$02833$i$i = HEAP32[$$02833$i$i >> 2] | 0;
     } while (($$02833$i$i | 0) != 0);
    }
   }
  } while (0);
  $$012 = $$012 + 1 | 0;
  if (($$012 | 0) == ($2 | 0)) {
   label = 25;
   break;
  }
 }
 if ((label | 0) == 23) {
  _snprintf(25060, 1024, 14654, $vararg_buffer) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14754, 6920, 624);
 } else if ((label | 0) == 25) {
  STACKTOP = sp;
  return;
 }
}

function __ZN2ut4arch13EntityManager23findOrCreateFreshEntityERKNS_6EntityE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$02832$i$i$i = 0, $$02833$i$i$i = 0, $$02833$us$i$i$i = 0, $$sroa$0$0$i$i$i = 0, $10 = 0, $12 = 0, $14 = 0, $2 = 0, $20 = 0, $21 = 0, $25 = 0, $26 = 0, $34 = 0, $39 = 0, $8 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $2 = HEAP32[$1 >> 2] | 0;
 if (!$2) if (!(HEAP32[$1 + 4 >> 2] | 0)) {
  _snprintf(25060, 1024, 8379, $vararg_buffer) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8419, 6920, 169);
 } else $14 = 0; else $14 = $2;
 $8 = HEAP32[$0 + 132 >> 2] | 0;
 L5 : do if ($8 | 0) {
  $10 = $8 + -1 | 0;
  $12 = ($10 & $8 | 0) == 0;
  if ($12) $20 = $10 & $14; else if ($14 >>> 0 < $8 >>> 0) $20 = $14; else $20 = ($14 >>> 0) % ($8 >>> 0) | 0;
  $21 = HEAP32[(HEAP32[$0 + 128 >> 2] | 0) + ($20 << 2) >> 2] | 0;
  if ($21 | 0) {
   $$02832$i$i$i = HEAP32[$21 >> 2] | 0;
   if ($$02832$i$i$i | 0) {
    L14 : do if ($12) {
     $$02833$us$i$i$i = $$02832$i$i$i;
     while (1) {
      $25 = HEAP32[$$02833$us$i$i$i + 4 >> 2] | 0;
      $26 = ($25 | 0) == ($14 | 0);
      if (!($26 | ($25 & $10 | 0) == ($20 | 0))) break L5;
      if ($26) if ((HEAP32[$$02833$us$i$i$i + 8 >> 2] | 0) == ($14 | 0)) {
       $$sroa$0$0$i$i$i = $$02833$us$i$i$i;
       break L14;
      }
      $$02833$us$i$i$i = HEAP32[$$02833$us$i$i$i >> 2] | 0;
      if (!$$02833$us$i$i$i) break L5;
     }
    } else {
     $$02833$i$i$i = $$02832$i$i$i;
     while (1) {
      $34 = HEAP32[$$02833$i$i$i + 4 >> 2] | 0;
      if (($34 | 0) == ($14 | 0)) {
       if ((HEAP32[$$02833$i$i$i + 8 >> 2] | 0) == ($14 | 0)) {
        $$sroa$0$0$i$i$i = $$02833$i$i$i;
        break L14;
       }
      } else {
       if ($34 >>> 0 < $8 >>> 0) $39 = $34; else $39 = ($34 >>> 0) % ($8 >>> 0) | 0;
       if (($39 | 0) != ($20 | 0)) break L5;
      }
      $$02833$i$i$i = HEAP32[$$02833$i$i$i >> 2] | 0;
      if (!$$02833$i$i$i) break L5;
     }
    } while (0);
    $$0 = $$sroa$0$0$i$i$i + 12 | 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
  }
 } while (0);
 $$0 = __ZN2ut4arch13EntityManager17createFreshEntityERKNS_6EntityEb($0, $1, 0) | 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN2ut4arch13EntityManager18assertEntityExistsERKNS_6EntityEjPKcS6_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $14 = 0, $15 = 0, $20 = 0, $25 = 0, $26 = 0, $30 = 0, $34 = 0, $35 = 0, $39 = 0, $40 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $tmpcast5$byval_copy = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $tmpcast5$byval_copy = sp + 60 | 0;
 $vararg_buffer = sp + 16 | 0;
 $5 = sp + 8 | 0;
 $6 = sp + 48 | 0;
 $7 = sp;
 $8 = sp + 36 | 0;
 $9 = $1;
 $14 = HEAP32[$9 + 4 >> 2] | 0;
 $15 = $5;
 HEAP32[$15 >> 2] = HEAP32[$9 >> 2];
 HEAP32[$15 + 4 >> 2] = $14;
 HEAP32[$tmpcast5$byval_copy >> 2] = HEAP32[$5 >> 2];
 HEAP32[$tmpcast5$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 if (__ZN2ut4arch13EntityManager6existsENS_6EntityE($0, $tmpcast5$byval_copy) | 0) {
  STACKTOP = sp;
  return;
 }
 $20 = $1;
 $25 = HEAP32[$20 + 4 >> 2] | 0;
 $26 = $7;
 HEAP32[$26 >> 2] = HEAP32[$20 >> 2];
 HEAP32[$26 + 4 >> 2] = $25;
 HEAP32[$tmpcast5$byval_copy >> 2] = HEAP32[$7 >> 2];
 HEAP32[$tmpcast5$byval_copy + 4 >> 2] = HEAP32[$7 + 4 >> 2];
 __ZN2ut4arch13EntityManager12formatEntityENS_6EntityE($6, $0, $tmpcast5$byval_copy);
 $30 = $6 + 11 | 0;
 $34 = (HEAP8[$30 >> 0] | 0) < 0 ? HEAP32[$6 >> 2] | 0 : $6;
 __ZN2ut4arch13EntityManager15formatComponentEj($tmpcast5$byval_copy, $0, $2);
 $35 = $tmpcast5$byval_copy + 11 | 0;
 $39 = (HEAP8[$35 >> 0] | 0) < 0 ? HEAP32[$tmpcast5$byval_copy >> 2] | 0 : $tmpcast5$byval_copy;
 __ZN2ut20getUserCodeCallstackEv($8);
 $40 = $8 + 11 | 0;
 $44 = (HEAP8[$40 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8;
 HEAP32[$vararg_buffer >> 2] = $3;
 HEAP32[$vararg_buffer + 4 >> 2] = $34;
 HEAP32[$vararg_buffer + 8 >> 2] = $4;
 HEAP32[$vararg_buffer + 12 >> 2] = $39;
 HEAP32[$vararg_buffer + 16 >> 2] = $44;
 _snprintf(25060, 1024, 7418, $vararg_buffer) | 0;
 if ((HEAP8[$40 >> 0] | 0) < 0) __ZdlPv(HEAP32[$8 >> 2] | 0);
 if ((HEAP8[$35 >> 0] | 0) < 0) __ZdlPv(HEAP32[$tmpcast5$byval_copy >> 2] | 0);
 if ((HEAP8[$30 >> 0] | 0) >= 0) {
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 7490, 7505, 14);
 }
 __ZdlPv(HEAP32[$6 >> 2] | 0);
 HEAP8[26083] = 0;
 __ZN2ut12assertFailedEPKcS1_S1_j(25060, 7490, 7505, 14);
}

function __ZN2ut4arch13EntityManager19assertEntitiesExistEPKNS_6EntityEiPKc($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$013 = 0, $10 = 0, $11 = 0, $16 = 0, $17 = 0, $22 = 0, $27 = 0, $28 = 0, $35 = 0, $39 = 0, $4 = 0, $46 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, $tmpcast10$byval_copy = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $tmpcast10$byval_copy = sp + 44 | 0;
 $vararg_buffer = sp + 16 | 0;
 $4 = sp + 8 | 0;
 $5 = sp + 32 | 0;
 $6 = sp;
 if (($2 | 0) <= 0) {
  STACKTOP = sp;
  return;
 }
 $8 = $5 + 11 | 0;
 $9 = $tmpcast10$byval_copy + 11 | 0;
 $$013 = 0;
 while (1) {
  $10 = $1 + ($$013 << 3) | 0;
  $11 = $10;
  $16 = HEAP32[$11 + 4 >> 2] | 0;
  $17 = $4;
  HEAP32[$17 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$17 + 4 >> 2] = $16;
  HEAP32[$tmpcast10$byval_copy >> 2] = HEAP32[$4 >> 2];
  HEAP32[$tmpcast10$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  if (!(__ZN2ut4arch13EntityManager6existsENS_6EntityE($0, $tmpcast10$byval_copy) | 0)) break;
  $46 = $$013 + 1 | 0;
  if (($46 | 0) == ($2 | 0)) {
   label = 3;
   break;
  } else $$013 = $46;
 }
 if ((label | 0) == 3) {
  STACKTOP = sp;
  return;
 }
 $22 = $10;
 $27 = HEAP32[$22 + 4 >> 2] | 0;
 $28 = $6;
 HEAP32[$28 >> 2] = HEAP32[$22 >> 2];
 HEAP32[$28 + 4 >> 2] = $27;
 HEAP32[$tmpcast10$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$tmpcast10$byval_copy + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 __ZN2ut4arch13EntityManager12formatEntityENS_6EntityE($5, $0, $tmpcast10$byval_copy);
 $35 = (HEAP8[$8 >> 0] | 0) < 0 ? HEAP32[$5 >> 2] | 0 : $5;
 __ZN2ut20getUserCodeCallstackEv($tmpcast10$byval_copy);
 $39 = (HEAP8[$9 >> 0] | 0) < 0 ? HEAP32[$tmpcast10$byval_copy >> 2] | 0 : $tmpcast10$byval_copy;
 HEAP32[$vararg_buffer >> 2] = $3;
 HEAP32[$vararg_buffer + 4 >> 2] = $35;
 HEAP32[$vararg_buffer + 8 >> 2] = $$013;
 HEAP32[$vararg_buffer + 12 >> 2] = $39;
 _snprintf(25060, 1024, 7883, $vararg_buffer) | 0;
 if ((HEAP8[$9 >> 0] | 0) < 0) __ZdlPv(HEAP32[$tmpcast10$byval_copy >> 2] | 0);
 if ((HEAP8[$8 >> 0] | 0) >= 0) {
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8003, 7505, 43);
 }
 __ZdlPv(HEAP32[$5 >> 2] | 0);
 HEAP8[26083] = 0;
 __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8003, 7505, 43);
}

function __ZN2ut8saveTypeIN9rapidjson12PrettyWriterINS1_19GenericStringBufferINS1_4UTF8IcEENS1_12CrtAllocatorEEES5_S5_S6_Lj0EEEEEvRT_PKNS_4meta8TypeDescEPKv($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $$026 = 0, $11 = 0, $12 = 0, $14 = 0, $16 = 0, $19 = 0, $22 = 0, $4 = 0, $9 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, 3);
 $4 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushINS_6WriterINS_19GenericStringBufferINS_4UTF8IcEES2_EES8_S8_S2_Lj0EE5LevelEEEPT_j($0 + 4 | 0, 1) | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP8[$4 + 4 >> 0] = 0;
 HEAP8[(__ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, 1) | 0) >> 0] = 123;
 $9 = HEAP32[$1 + 12 >> 2] | 0;
 $11 = HEAP32[$1 + 16 >> 2] | 0;
 $12 = $9 + ($11 * 12 | 0) | 0;
 if (!$11) {
  __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE9EndObjectEj($0, 0) | 0;
  STACKTOP = sp;
  return;
 }
 $14 = $1 + 4 | 0;
 $$026 = $9;
 do {
  $16 = HEAP32[$$026 + 8 >> 2] | 0;
  if (!$16) {
   $19 = HEAP32[$$026 >> 2] | 0;
   HEAP32[$vararg_buffer >> 2] = HEAP32[$14 >> 2];
   HEAP32[$vararg_buffer + 4 >> 2] = $19;
   _printf(13039, $vararg_buffer) | 0;
  } else if ((HEAP32[$16 >> 2] | 0) != 1) {
   $22 = HEAP32[$$026 >> 2] | 0;
   $$0$i$i = $22;
   while (1) if (!(HEAP8[$$0$i$i >> 0] | 0)) break; else $$0$i$i = $$0$i$i + 1 | 0;
   __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, 5);
   __ZN9rapidjson6WriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE11WriteStringEPKcj($0, $22, $$0$i$i - $22 | 0) | 0;
   __ZN2ut10saveMemberIN9rapidjson12PrettyWriterINS1_19GenericStringBufferINS1_4UTF8IcEENS1_12CrtAllocatorEEES5_S5_S6_Lj0EEEEEvRT_RKNS_4meta10MemberDescEPKv($0, $$026, $2);
  }
  $$026 = $$026 + 12 | 0;
 } while (($$026 | 0) != ($12 | 0));
 __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE9EndObjectEj($0, 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEj($0) {
 $0 = $0 | 0;
 var $$017$off022 = 0, $$01918 = 0, $$020153134 = 0, $$02016 = 0, $$pre$phi37Z2D = 0, $$pre$phiZ2D = 0, $1 = 0, $10 = 0, $11 = 0, $15 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $28 = 0, $3 = 0, $spec$select$i = 0, label = 0;
 $1 = $0 + 11 | 0;
 $2 = HEAP8[$1 >> 0] | 0;
 $3 = $2 << 24 >> 24 < 0;
 if ($3) {
  $11 = HEAP32[$0 + 4 >> 2] | 0;
  $15 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  $11 = $2 & 255;
  $15 = 10;
 }
 $10 = $11 >>> 0 < 11;
 $spec$select$i = $10 ? 10 : ($11 + 16 & -16) + -1 | 0;
 L5 : do if (($spec$select$i | 0) != ($15 | 0)) {
  do if ($10) {
   $23 = HEAP32[$0 >> 2] | 0;
   if ($3) {
    $$017$off022 = 0;
    $$01918 = $23;
    $$02016 = $0;
    label = 12;
   } else {
    __ZNSt3__211char_traitsIcE4copyEPcPKcj($0, $23, ($2 & 255) + 1 | 0) | 0;
    __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcj($23);
    label = 15;
   }
  } else {
   $17 = $spec$select$i + 1 | 0;
   $18 = __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEj($17) | 0;
   if ($spec$select$i >>> 0 <= $15 >>> 0 & ($18 | 0) == 0) break L5;
   $20 = HEAP8[$1 >> 0] | 0;
   if ($20 << 24 >> 24 < 0) {
    $$017$off022 = 1;
    $$01918 = HEAP32[$0 >> 2] | 0;
    $$02016 = $18;
    label = 12;
    break;
   } else {
    __ZNSt3__211char_traitsIcE4copyEPcPKcj($18, $0, ($20 & 255) + 1 | 0) | 0;
    $$020153134 = $18;
    $$pre$phi37Z2D = $17;
    $$pre$phiZ2D = $0 + 4 | 0;
    label = 14;
    break;
   }
  } while (0);
  if ((label | 0) == 12) {
   $28 = $0 + 4 | 0;
   __ZNSt3__211char_traitsIcE4copyEPcPKcj($$02016, $$01918, (HEAP32[$28 >> 2] | 0) + 1 | 0) | 0;
   __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcj($$01918);
   if ($$017$off022) {
    $$020153134 = $$02016;
    $$pre$phi37Z2D = $spec$select$i + 1 | 0;
    $$pre$phiZ2D = $28;
    label = 14;
   } else label = 15;
  }
  if ((label | 0) == 14) {
   HEAP32[$0 + 8 >> 2] = $$pre$phi37Z2D | -2147483648;
   HEAP32[$$pre$phiZ2D >> 2] = $11;
   HEAP32[$0 >> 2] = $$020153134;
   break;
  } else if ((label | 0) == 15) {
   HEAP8[$1 >> 0] = $11;
   break;
  }
 } while (0);
 return;
}

function __ZN2ut4arch13EntityManager32assertEntityDoesNotHaveComponentERKNS_6EntityEjPKc($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $13 = 0, $14 = 0, $19 = 0, $24 = 0, $25 = 0, $29 = 0, $33 = 0, $34 = 0, $38 = 0, $39 = 0, $4 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $tmpcast5$byval_copy = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $tmpcast5$byval_copy = sp + 56 | 0;
 $vararg_buffer = sp + 16 | 0;
 $4 = sp + 8 | 0;
 $5 = sp + 44 | 0;
 $6 = sp;
 $7 = sp + 32 | 0;
 $8 = $1;
 $13 = HEAP32[$8 + 4 >> 2] | 0;
 $14 = $4;
 HEAP32[$14 >> 2] = HEAP32[$8 >> 2];
 HEAP32[$14 + 4 >> 2] = $13;
 HEAP32[$tmpcast5$byval_copy >> 2] = HEAP32[$4 >> 2];
 HEAP32[$tmpcast5$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 if (!(__ZN2ut4arch13EntityManager15hasComponentRawENS_6EntityEj($0, $tmpcast5$byval_copy, $2) | 0)) {
  STACKTOP = sp;
  return;
 }
 $19 = $1;
 $24 = HEAP32[$19 + 4 >> 2] | 0;
 $25 = $6;
 HEAP32[$25 >> 2] = HEAP32[$19 >> 2];
 HEAP32[$25 + 4 >> 2] = $24;
 HEAP32[$tmpcast5$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$tmpcast5$byval_copy + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 __ZN2ut4arch13EntityManager12formatEntityENS_6EntityE($5, $0, $tmpcast5$byval_copy);
 $29 = $5 + 11 | 0;
 $33 = (HEAP8[$29 >> 0] | 0) < 0 ? HEAP32[$5 >> 2] | 0 : $5;
 __ZN2ut4arch13EntityManager15formatComponentEj($tmpcast5$byval_copy, $0, $2);
 $34 = $tmpcast5$byval_copy + 11 | 0;
 $38 = (HEAP8[$34 >> 0] | 0) < 0 ? HEAP32[$tmpcast5$byval_copy >> 2] | 0 : $tmpcast5$byval_copy;
 __ZN2ut20getUserCodeCallstackEv($7);
 $39 = $7 + 11 | 0;
 $43 = (HEAP8[$39 >> 0] | 0) < 0 ? HEAP32[$7 >> 2] | 0 : $7;
 HEAP32[$vararg_buffer >> 2] = $3;
 HEAP32[$vararg_buffer + 4 >> 2] = $33;
 HEAP32[$vararg_buffer + 8 >> 2] = $38;
 HEAP32[$vararg_buffer + 12 >> 2] = $43;
 _snprintf(25060, 1024, 11672, $vararg_buffer) | 0;
 if ((HEAP8[$39 >> 0] | 0) < 0) __ZdlPv(HEAP32[$7 >> 2] | 0);
 if ((HEAP8[$34 >> 0] | 0) < 0) __ZdlPv(HEAP32[$tmpcast5$byval_copy >> 2] | 0);
 if ((HEAP8[$29 >> 0] | 0) >= 0) {
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 12069, 7505, 26);
 }
 __ZdlPv(HEAP32[$5 >> 2] | 0);
 HEAP8[26083] = 0;
 __ZN2ut12assertFailedEPKcS1_S1_j(25060, 12069, 7505, 26);
}

function ___stdio_write($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$04756 = 0, $$04855 = 0, $$04954 = 0, $$051 = 0, $$1 = 0, $$150 = 0, $12 = 0, $13 = 0, $17 = 0, $20 = 0, $25 = 0, $27 = 0, $3 = 0, $37 = 0, $38 = 0, $4 = 0, $44 = 0, $5 = 0, $7 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $3 = sp + 32 | 0;
 $4 = $0 + 28 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 HEAP32[$3 >> 2] = $5;
 $7 = $0 + 20 | 0;
 $9 = (HEAP32[$7 >> 2] | 0) - $5 | 0;
 HEAP32[$3 + 4 >> 2] = $9;
 HEAP32[$3 + 8 >> 2] = $1;
 HEAP32[$3 + 12 >> 2] = $2;
 $12 = $9 + $2 | 0;
 $13 = $0 + 60 | 0;
 HEAP32[$vararg_buffer >> 2] = HEAP32[$13 >> 2];
 HEAP32[$vararg_buffer + 4 >> 2] = $3;
 HEAP32[$vararg_buffer + 8 >> 2] = 2;
 $17 = ___syscall_ret(___syscall146(146, $vararg_buffer | 0) | 0) | 0;
 L1 : do if (($12 | 0) == ($17 | 0)) label = 3; else {
  $$04756 = 2;
  $$04855 = $12;
  $$04954 = $3;
  $27 = $17;
  while (1) {
   if (($27 | 0) < 0) break;
   $$04855 = $$04855 - $27 | 0;
   $37 = HEAP32[$$04954 + 4 >> 2] | 0;
   $38 = $27 >>> 0 > $37 >>> 0;
   $$150 = $38 ? $$04954 + 8 | 0 : $$04954;
   $$1 = $$04756 + ($38 << 31 >> 31) | 0;
   $$0 = $27 - ($38 ? $37 : 0) | 0;
   HEAP32[$$150 >> 2] = (HEAP32[$$150 >> 2] | 0) + $$0;
   $44 = $$150 + 4 | 0;
   HEAP32[$44 >> 2] = (HEAP32[$44 >> 2] | 0) - $$0;
   HEAP32[$vararg_buffer3 >> 2] = HEAP32[$13 >> 2];
   HEAP32[$vararg_buffer3 + 4 >> 2] = $$150;
   HEAP32[$vararg_buffer3 + 8 >> 2] = $$1;
   $27 = ___syscall_ret(___syscall146(146, $vararg_buffer3 | 0) | 0) | 0;
   if (($$04855 | 0) == ($27 | 0)) {
    label = 3;
    break L1;
   } else {
    $$04756 = $$1;
    $$04954 = $$150;
   }
  }
  HEAP32[$0 + 16 >> 2] = 0;
  HEAP32[$4 >> 2] = 0;
  HEAP32[$7 >> 2] = 0;
  HEAP32[$0 >> 2] = HEAP32[$0 >> 2] | 32;
  if (($$04756 | 0) == 2) $$051 = 0; else $$051 = $2 - (HEAP32[$$04954 + 4 >> 2] | 0) | 0;
 } while (0);
 if ((label | 0) == 3) {
  $20 = HEAP32[$0 + 44 >> 2] | 0;
  HEAP32[$0 + 16 >> 2] = $20 + (HEAP32[$0 + 48 >> 2] | 0);
  $25 = $20;
  HEAP32[$4 >> 2] = $25;
  HEAP32[$7 >> 2] = $25;
  $$051 = $2;
 }
 STACKTOP = sp;
 return $$051 | 0;
}

function __ZN2ut4arch26SharedComponentDataManager16hashCodeForIndexEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$03143$i$i = 0, $$032$lcssa$i$i = 0, $$032$masked$i$i = 0, $$03242$i$i = 0, $$033$lcssa$i$i = 0, $$03341$i$i = 0, $$03540$i$i = 0, $$038$i$i = 0, $$13436$i$i = 0, $$137$i$i = 0, $11 = 0, $19 = 0, $23 = 0, $27 = 0, $31 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $5 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $5 = HEAP32[(HEAP32[$0 + 72 >> 2] | 0) + ($1 << 2) >> 2] | 0;
 $9 = HEAP32[(HEAP32[$0 + 36 >> 2] | 0) + ($1 << 2) >> 2] | 0;
 $11 = HEAP32[6067] | 0;
 if ((HEAP32[6068] | 0) - $11 >> 2 >>> 0 <= $5 >>> 0) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
 $19 = HEAP32[(HEAP32[$11 + ($5 << 2) >> 2] | 0) + 16 >> 2] | 0;
 if (($19 | 0) <= 1) {
  $$032$lcssa$i$i = 255;
  $$033$lcssa$i$i = 255;
  $40 = $$033$lcssa$i$i & 65535;
  $41 = $$033$lcssa$i$i >>> 16;
  $42 = $$032$lcssa$i$i << 16;
  $$032$masked$i$i = $$032$lcssa$i$i & -65536;
  $43 = $40 | $41;
  $44 = $43 | $$032$masked$i$i;
  $45 = $44 | $42;
  STACKTOP = sp;
  return $45 | 0;
 }
 $$03143$i$i = $9;
 $$03242$i$i = 255;
 $$03341$i$i = 255;
 $$03540$i$i = $19 >>> 1;
 while (1) {
  $23 = ($$03540$i$i | 0) < 359 ? $$03540$i$i : 359;
  $$038$i$i = 0;
  $$13436$i$i = $$03341$i$i;
  $$137$i$i = $$03242$i$i;
  do {
   $$13436$i$i = $$13436$i$i + (HEAPU16[$$03143$i$i + ($$038$i$i << 1) >> 1] | 0) | 0;
   $$137$i$i = $$13436$i$i + $$137$i$i | 0;
   $$038$i$i = $$038$i$i + 1 | 0;
  } while (($$038$i$i | 0) < ($23 | 0));
  $27 = ($$13436$i$i & 65535) + ($$13436$i$i >>> 16) | 0;
  $31 = ($$137$i$i & 65535) + ($$137$i$i >>> 16) | 0;
  $$03540$i$i = $$03540$i$i - $23 | 0;
  if (($$03540$i$i | 0) <= 0) {
   $$032$lcssa$i$i = $31;
   $$033$lcssa$i$i = $27;
   break;
  } else {
   $$03143$i$i = $$03143$i$i + ($23 << 1) | 0;
   $$03242$i$i = $31;
   $$03341$i$i = $27;
  }
 }
 $40 = $$033$lcssa$i$i & 65535;
 $41 = $$033$lcssa$i$i >>> 16;
 $42 = $$032$lcssa$i$i << 16;
 $$032$masked$i$i = $$032$lcssa$i$i & -65536;
 $43 = $40 | $41;
 $44 = $43 | $$032$masked$i$i;
 $45 = $44 | $42;
 STACKTOP = sp;
 return $45 | 0;
}

function __ZN2ut4arch13EntityManager24assertEntityHasComponentERKNS_6EntityEjPKc($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $13 = 0, $14 = 0, $19 = 0, $24 = 0, $25 = 0, $29 = 0, $33 = 0, $34 = 0, $38 = 0, $39 = 0, $4 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $tmpcast5$byval_copy = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $tmpcast5$byval_copy = sp + 56 | 0;
 $vararg_buffer = sp + 16 | 0;
 $4 = sp + 8 | 0;
 $5 = sp + 44 | 0;
 $6 = sp;
 $7 = sp + 32 | 0;
 $8 = $1;
 $13 = HEAP32[$8 + 4 >> 2] | 0;
 $14 = $4;
 HEAP32[$14 >> 2] = HEAP32[$8 >> 2];
 HEAP32[$14 + 4 >> 2] = $13;
 HEAP32[$tmpcast5$byval_copy >> 2] = HEAP32[$4 >> 2];
 HEAP32[$tmpcast5$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 if (__ZN2ut4arch13EntityManager15hasComponentRawENS_6EntityEj($0, $tmpcast5$byval_copy, $2) | 0) {
  STACKTOP = sp;
  return;
 }
 $19 = $1;
 $24 = HEAP32[$19 + 4 >> 2] | 0;
 $25 = $6;
 HEAP32[$25 >> 2] = HEAP32[$19 >> 2];
 HEAP32[$25 + 4 >> 2] = $24;
 HEAP32[$tmpcast5$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$tmpcast5$byval_copy + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 __ZN2ut4arch13EntityManager12formatEntityENS_6EntityE($5, $0, $tmpcast5$byval_copy);
 $29 = $5 + 11 | 0;
 $33 = (HEAP8[$29 >> 0] | 0) < 0 ? HEAP32[$5 >> 2] | 0 : $5;
 __ZN2ut4arch13EntityManager15formatComponentEj($tmpcast5$byval_copy, $0, $2);
 $34 = $tmpcast5$byval_copy + 11 | 0;
 $38 = (HEAP8[$34 >> 0] | 0) < 0 ? HEAP32[$tmpcast5$byval_copy >> 2] | 0 : $tmpcast5$byval_copy;
 __ZN2ut20getUserCodeCallstackEv($7);
 $39 = $7 + 11 | 0;
 $43 = (HEAP8[$39 >> 0] | 0) < 0 ? HEAP32[$7 >> 2] | 0 : $7;
 HEAP32[$vararg_buffer >> 2] = $3;
 HEAP32[$vararg_buffer + 4 >> 2] = $33;
 HEAP32[$vararg_buffer + 8 >> 2] = $38;
 HEAP32[$vararg_buffer + 12 >> 2] = $43;
 _snprintf(25060, 1024, 7782, $vararg_buffer) | 0;
 if ((HEAP8[$39 >> 0] | 0) < 0) __ZdlPv(HEAP32[$7 >> 2] | 0);
 if ((HEAP8[$34 >> 0] | 0) < 0) __ZdlPv(HEAP32[$tmpcast5$byval_copy >> 2] | 0);
 if ((HEAP8[$29 >> 0] | 0) >= 0) {
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 7853, 7505, 33);
 }
 __ZdlPv(HEAP32[$5 >> 2] | 0);
 HEAP8[26083] = 0;
 __ZN2ut12assertFailedEPKcS1_S1_j(25060, 7853, 7505, 33);
}

function __ZN2ut4meta11reflectTypeINS_12NativeStringEEEPKNS0_8TypeDescENS0_3TagINS_12NativeBufferIT_EEEE($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$pr = 0, $1 = 0, $12 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $29 = 0, $40 = 0, $5 = 0, dest = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $1 = sp + 12 | 0;
 $2 = sp;
 if (!(HEAP8[24168] | 0)) {
  HEAP32[6083] = 3480;
  $5 = 24168;
  HEAP32[$5 >> 2] = 1;
  HEAP32[$5 + 4 >> 2] = 0;
  $17 = 3480;
 } else {
  $$pr = HEAP32[6083] | 0;
  if (!$$pr) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  } else $17 = $$pr;
 }
 if (!(HEAP8[24176] | 0)) {
  $12 = __Znwj(32) | 0;
  HEAP32[$2 >> 2] = $12;
  HEAP32[$2 + 8 >> 2] = -2147483616;
  HEAP32[$2 + 4 >> 2] = 16;
  dest = $12;
  src = 5504;
  stop = dest + 16 | 0;
  do {
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   dest = dest + 1 | 0;
   src = src + 1 | 0;
  } while ((dest | 0) < (stop | 0));
  HEAP8[$12 + 16 >> 0] = 0;
  $19 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($2, HEAP32[$17 + 4 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = HEAP32[$19 >> 2];
  HEAP32[$1 + 4 >> 2] = HEAP32[$19 + 4 >> 2];
  HEAP32[$1 + 8 >> 2] = HEAP32[$19 + 8 >> 2];
  HEAP32[$19 >> 2] = 0;
  HEAP32[$19 + 4 >> 2] = 0;
  HEAP32[$19 + 8 >> 2] = 0;
  $20 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($1, 22313) | 0;
  HEAP32[6084] = HEAP32[$20 >> 2];
  HEAP32[6085] = HEAP32[$20 + 4 >> 2];
  HEAP32[6086] = HEAP32[$20 + 8 >> 2];
  HEAP32[$20 >> 2] = 0;
  HEAP32[$20 + 4 >> 2] = 0;
  HEAP32[$20 + 8 >> 2] = 0;
  if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$1 >> 2] | 0);
  if ((HEAP8[$2 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$2 >> 2] | 0);
  $29 = 24176;
  HEAP32[$29 >> 2] = 1;
  HEAP32[$29 + 4 >> 2] = 0;
 }
 if (HEAP8[24184] | 0) {
  $$0 = 24348;
  STACKTOP = sp;
  return $$0 | 0;
 }
 HEAP32[6087] = 3;
 HEAP32[6088] = (HEAP8[24347] | 0) < 0 ? HEAP32[6084] | 0 : 24336;
 HEAP32[6089] = 12;
 HEAP32[6092] = 0;
 HEAP32[6093] = 0;
 HEAP32[6094] = HEAP32[6083];
 HEAP32[6090] = 24368;
 HEAP32[6091] = 1;
 $40 = 24184;
 HEAP32[$40 >> 2] = 1;
 HEAP32[$40 + 4 >> 2] = 0;
 $$0 = 24348;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__227__insertion_sort_incompleteIRNS_6__lessIjjEEPjEEbT0_S5_T_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$lcssa = 0, $$062 = 0, $$064 = 0, $$069 = 0, $$069$phi = 0, $$165 = 0, $$170 = 0, $$170$phi = 0, $$5 = 0, $20 = 0, $24 = 0, $25 = 0, $27 = 0, $29 = 0, $32 = 0, $7 = 0, $8 = 0, $9 = 0;
 L1 : do switch ($1 - $0 >> 2 | 0) {
 case 1:
 case 0:
  {
   $$5 = 1;
   break;
  }
 case 2:
  {
   $7 = $1 + -4 | 0;
   $8 = HEAP32[$7 >> 2] | 0;
   $9 = HEAP32[$0 >> 2] | 0;
   if ($8 >>> 0 < $9 >>> 0) {
    HEAP32[$0 >> 2] = $8;
    HEAP32[$7 >> 2] = $9;
    $$5 = 1;
   } else $$5 = 1;
   break;
  }
 case 3:
  {
   __ZNSt3__27__sort3IRNS_6__lessIjjEEPjEEjT0_S5_S5_T_($0, $0 + 4 | 0, $1 + -4 | 0, $2) | 0;
   $$5 = 1;
   break;
  }
 case 4:
  {
   __ZNSt3__27__sort4IRNS_6__lessIjjEEPjEEjT0_S5_S5_S5_T_($0, $0 + 4 | 0, $0 + 8 | 0, $1 + -4 | 0, $2) | 0;
   $$5 = 1;
   break;
  }
 case 5:
  {
   __ZNSt3__27__sort5IRNS_6__lessIjjEEPjEEjT0_S5_S5_S5_S5_T_($0, $0 + 4 | 0, $0 + 8 | 0, $0 + 12 | 0, $1 + -4 | 0, $2) | 0;
   $$5 = 1;
   break;
  }
 default:
  {
   $20 = $0 + 8 | 0;
   __ZNSt3__27__sort3IRNS_6__lessIjjEEPjEEjT0_S5_S5_T_($0, $0 + 4 | 0, $20, $2) | 0;
   $$062 = $0 + 12 | 0;
   $$064 = 0;
   $$069 = $20;
   while (1) {
    if (($$062 | 0) == ($1 | 0)) {
     $$5 = 1;
     break L1;
    }
    $24 = HEAP32[$$062 >> 2] | 0;
    $25 = HEAP32[$$069 >> 2] | 0;
    if ($24 >>> 0 < $25 >>> 0) {
     $$0 = $$069;
     $$170 = $$062;
     $27 = $25;
     while (1) {
      HEAP32[$$170 >> 2] = $27;
      if (($$0 | 0) == ($0 | 0)) {
       $$0$lcssa = $0;
       break;
      }
      $29 = $$0 + -4 | 0;
      $27 = HEAP32[$29 >> 2] | 0;
      if ($24 >>> 0 >= $27 >>> 0) {
       $$0$lcssa = $$0;
       break;
      } else {
       $$170$phi = $$0;
       $$0 = $29;
       $$170 = $$170$phi;
      }
     }
     HEAP32[$$0$lcssa >> 2] = $24;
     $32 = $$064 + 1 | 0;
     if (($32 | 0) == 8) break; else $$165 = $32;
    } else $$165 = $$064;
    $$069$phi = $$062;
    $$062 = $$062 + 4 | 0;
    $$064 = $$165;
    $$069 = $$069$phi;
   }
   $$5 = ($$062 + 4 | 0) == ($1 | 0);
  }
 } while (0);
 return $$5 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$017$off042 = 0, $$01938 = 0, $$020355154 = 0, $$02036 = 0, $$pre$phi57Z2D = 0, $$pre$phiZ2D = 0, $$sroa$speculated = 0, $13 = 0, $14 = 0, $18 = 0, $19 = 0, $20 = 0, $22 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $spec$select$i = 0, label = 0;
 if ($1 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 $3 = $0 + 11 | 0;
 $4 = HEAP8[$3 >> 0] | 0;
 $5 = $4 << 24 >> 24 < 0;
 if ($5) {
  $13 = HEAP32[$0 + 4 >> 2] | 0;
  $18 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  $13 = $4 & 255;
  $18 = 10;
 }
 $$sroa$speculated = $13 >>> 0 > $1 >>> 0 ? $13 : $1;
 $14 = $$sroa$speculated >>> 0 < 11;
 $spec$select$i = $14 ? 10 : ($$sroa$speculated + 16 & -16) + -1 | 0;
 do if (($spec$select$i | 0) != ($18 | 0)) {
  do if ($14) {
   $22 = HEAP32[$0 >> 2] | 0;
   if ($5) {
    $$017$off042 = 0;
    $$01938 = $22;
    $$02036 = $0;
    label = 13;
   } else {
    __ZNSt3__211char_traitsIcE4copyEPcPKcj($0, $22, ($4 & 255) + 1 | 0) | 0;
    __ZdlPv($22);
    label = 16;
   }
  } else {
   $19 = $spec$select$i + 1 | 0;
   $20 = __Znwj($19) | 0;
   if ($5) {
    $$017$off042 = 1;
    $$01938 = HEAP32[$0 >> 2] | 0;
    $$02036 = $20;
    label = 13;
    break;
   } else {
    __ZNSt3__211char_traitsIcE4copyEPcPKcj($20, $0, ($4 & 255) + 1 | 0) | 0;
    $$020355154 = $20;
    $$pre$phi57Z2D = $19;
    $$pre$phiZ2D = $0 + 4 | 0;
    label = 15;
    break;
   }
  } while (0);
  if ((label | 0) == 13) {
   $27 = $0 + 4 | 0;
   __ZNSt3__211char_traitsIcE4copyEPcPKcj($$02036, $$01938, (HEAP32[$27 >> 2] | 0) + 1 | 0) | 0;
   __ZdlPv($$01938);
   if ($$017$off042) {
    $$020355154 = $$02036;
    $$pre$phi57Z2D = $spec$select$i + 1 | 0;
    $$pre$phiZ2D = $27;
    label = 15;
   } else label = 16;
  }
  if ((label | 0) == 15) {
   HEAP32[$0 + 8 >> 2] = $$pre$phi57Z2D | -2147483648;
   HEAP32[$$pre$phiZ2D >> 2] = $13;
   HEAP32[$0 >> 2] = $$020355154;
   break;
  } else if ((label | 0) == 16) {
   HEAP8[$3 >> 0] = $13;
   break;
  }
 } while (0);
 return;
}

function _memcpy(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0, aligned_dest_end = 0, block_aligned_dest_end = 0, dest_end = 0;
 if ((num | 0) >= 8192) return _emscripten_memcpy_big(dest | 0, src | 0, num | 0) | 0;
 ret = dest | 0;
 dest_end = dest + num | 0;
 if ((dest & 3) == (src & 3)) {
  while (dest & 3) {
   if (!num) return ret | 0;
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   dest = dest + 1 | 0;
   src = src + 1 | 0;
   num = num - 1 | 0;
  }
  aligned_dest_end = dest_end & -4 | 0;
  block_aligned_dest_end = aligned_dest_end - 64 | 0;
  while ((dest | 0) <= (block_aligned_dest_end | 0)) {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   HEAP32[dest + 4 >> 2] = HEAP32[src + 4 >> 2];
   HEAP32[dest + 8 >> 2] = HEAP32[src + 8 >> 2];
   HEAP32[dest + 12 >> 2] = HEAP32[src + 12 >> 2];
   HEAP32[dest + 16 >> 2] = HEAP32[src + 16 >> 2];
   HEAP32[dest + 20 >> 2] = HEAP32[src + 20 >> 2];
   HEAP32[dest + 24 >> 2] = HEAP32[src + 24 >> 2];
   HEAP32[dest + 28 >> 2] = HEAP32[src + 28 >> 2];
   HEAP32[dest + 32 >> 2] = HEAP32[src + 32 >> 2];
   HEAP32[dest + 36 >> 2] = HEAP32[src + 36 >> 2];
   HEAP32[dest + 40 >> 2] = HEAP32[src + 40 >> 2];
   HEAP32[dest + 44 >> 2] = HEAP32[src + 44 >> 2];
   HEAP32[dest + 48 >> 2] = HEAP32[src + 48 >> 2];
   HEAP32[dest + 52 >> 2] = HEAP32[src + 52 >> 2];
   HEAP32[dest + 56 >> 2] = HEAP32[src + 56 >> 2];
   HEAP32[dest + 60 >> 2] = HEAP32[src + 60 >> 2];
   dest = dest + 64 | 0;
   src = src + 64 | 0;
  }
  while ((dest | 0) < (aligned_dest_end | 0)) {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
  }
 } else {
  aligned_dest_end = dest_end - 4 | 0;
  while ((dest | 0) < (aligned_dest_end | 0)) {
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   HEAP8[dest + 1 >> 0] = HEAP8[src + 1 >> 0] | 0;
   HEAP8[dest + 2 >> 0] = HEAP8[src + 2 >> 0] | 0;
   HEAP8[dest + 3 >> 0] = HEAP8[src + 3 >> 0] | 0;
   dest = dest + 4 | 0;
   src = src + 4 | 0;
  }
 }
 while ((dest | 0) < (dest_end | 0)) {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 }
 return ret | 0;
}

function __ZN2ut10saveBufferIN9rapidjson12PrettyWriterINS1_19GenericStringBufferINS1_4UTF8IcEENS1_12CrtAllocatorEEES5_S5_S6_Lj0EEEEEvRT_RKNS_4meta10MemberDescEPKv($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$019 = 0, $10 = 0, $18 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $3 = sp + 12 | 0;
 __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, 4);
 $5 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushINS_6WriterINS_19GenericStringBufferINS_4UTF8IcEES2_EES8_S8_S2_Lj0EE5LevelEEEPT_j($0 + 4 | 0, 1) | 0;
 HEAP32[$5 >> 2] = 0;
 HEAP8[$5 + 4 >> 0] = 1;
 HEAP8[(__ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, 1) | 0) >> 0] = 91;
 $10 = HEAP32[$1 + 8 >> 2] | 0;
 if (!$10) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13122, 12969, 119);
 }
 if ((HEAP32[$10 + 16 >> 2] | 0) != 1) {
  _snprintf(25060, 1024, 27124, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13188, 12969, 120);
 }
 $18 = HEAP32[(HEAP32[$10 + 12 >> 2] | 0) + 8 >> 2] | 0;
 $21 = $2 + (HEAP32[$1 + 4 >> 2] | 0) | 0;
 $22 = $21 + 4 | 0;
 if (!(HEAP32[$22 >> 2] | 0)) {
  __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE8EndArrayEj($0, 0) | 0;
  STACKTOP = sp;
  return;
 }
 $25 = $3 + 4 | 0;
 $26 = $3 + 8 | 0;
 $27 = $18 + 8 | 0;
 $$019 = 0;
 do {
  HEAP32[$3 >> 2] = 0;
  HEAP32[$25 >> 2] = 0;
  HEAP32[$26 >> 2] = $18;
  __ZN2ut10saveMemberIN9rapidjson12PrettyWriterINS1_19GenericStringBufferINS1_4UTF8IcEENS1_12CrtAllocatorEEES5_S5_S6_Lj0EEEEEvRT_RKNS_4meta10MemberDescEPKv($0, $3, (HEAP32[$21 >> 2] | 0) + (Math_imul(HEAP32[$27 >> 2] | 0, $$019) | 0) | 0);
  $$019 = $$019 + 1 | 0;
 } while ($$019 >>> 0 < (HEAP32[$22 >> 2] | 0) >>> 0);
 __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE8EndArrayEj($0, 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZN2ut9saveArrayIN9rapidjson12PrettyWriterINS1_19GenericStringBufferINS1_4UTF8IcEENS1_12CrtAllocatorEEES5_S5_S6_Lj0EEEEEvRT_RKNS_4meta10MemberDescEPKv($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$020 = 0, $10 = 0, $18 = 0, $21 = 0, $23 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $3 = sp + 12 | 0;
 __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, 4);
 $5 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushINS_6WriterINS_19GenericStringBufferINS_4UTF8IcEES2_EES8_S8_S2_Lj0EE5LevelEEEPT_j($0 + 4 | 0, 1) | 0;
 HEAP32[$5 >> 2] = 0;
 HEAP8[$5 + 4 >> 0] = 1;
 HEAP8[(__ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, 1) | 0) >> 0] = 91;
 $10 = HEAP32[$1 + 8 >> 2] | 0;
 if (!$10) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13122, 12969, 103);
 }
 if ((HEAP32[$10 + 16 >> 2] | 0) != 1) {
  _snprintf(25060, 1024, 27124, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13188, 12969, 104);
 }
 $18 = HEAP32[(HEAP32[$10 + 12 >> 2] | 0) + 8 >> 2] | 0;
 $21 = $18 + 8 | 0;
 $23 = (HEAP32[$10 + 8 >> 2] | 0) / (HEAP32[$21 >> 2] | 0) | 0;
 if (($23 | 0) <= 0) {
  __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE8EndArrayEj($0, 0) | 0;
  STACKTOP = sp;
  return;
 }
 $25 = $3 + 4 | 0;
 $26 = $3 + 8 | 0;
 $27 = $1 + 4 | 0;
 $$020 = 0;
 do {
  HEAP32[$3 >> 2] = 0;
  HEAP32[$25 >> 2] = 0;
  HEAP32[$26 >> 2] = $18;
  __ZN2ut10saveMemberIN9rapidjson12PrettyWriterINS1_19GenericStringBufferINS1_4UTF8IcEENS1_12CrtAllocatorEEES5_S5_S6_Lj0EEEEEvRT_RKNS_4meta10MemberDescEPKv($0, $3, $2 + ((Math_imul(HEAP32[$21 >> 2] | 0, $$020) | 0) + (HEAP32[$27 >> 2] | 0)) | 0);
  $$020 = $$020 + 1 | 0;
 } while (($$020 | 0) != ($23 | 0));
 __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE8EndArrayEj($0, 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZN2ut10loadVectorERNS_12ManagerWorldERKN9rapidjson12GenericValueINS2_4UTF8IcEENS2_19MemoryPoolAllocatorINS2_12CrtAllocatorEEEEERKNS_4meta10MemberDescEPv($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$04852 = 0, $$153 = 0, $11 = 0, $18 = 0, $19 = 0, $23 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $4 = sp + 12 | 0;
 $5 = $2 + 8 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (!$6) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13122, 12969, 340);
 }
 if ((HEAP32[$6 + 16 >> 2] | 0) != 1) {
  _snprintf(25060, 1024, 27124, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13188, 12969, 341);
 }
 $11 = $1 + 18 | 0;
 if ((HEAP16[$11 >> 1] | 0) != 4) ___assert_fail(15929, 15939, 1638, 15993);
 $18 = HEAP32[(HEAP32[(HEAP32[$5 >> 2] | 0) + 12 >> 2] | 0) + 8 >> 2] | 0;
 $19 = HEAP32[$1 >> 2] | 0;
 $23 = $3 + (HEAP32[$2 + 4 >> 2] | 0) | 0;
 if (($18 | 0) == 3480) {
  _ut_nativebuffer_nativestring_resize($23, $19) | 0;
  if (!(HEAP32[$23 + 4 >> 2] | 0)) $$0 = 0; else $$0 = HEAP32[$23 >> 2] | 0;
 } else {
  _ut_nativebuffer_pod_resize_uninitialized($23, $19, HEAP32[$18 + 8 >> 2] | 0) | 0;
  if (!(HEAP32[$23 + 4 >> 2] | 0)) $$0 = 0; else $$0 = HEAP32[$23 >> 2] | 0;
 }
 if ((HEAP16[$11 >> 1] | 0) != 4) ___assert_fail(15929, 15939, 1505, 16469);
 $37 = HEAP32[$1 + 8 >> 2] | 0;
 $38 = HEAP32[$1 >> 2] | 0;
 $39 = $37 + ($38 * 24 | 0) | 0;
 if (!$38) {
  STACKTOP = sp;
  return;
 }
 $41 = $4 + 4 | 0;
 $42 = $4 + 8 | 0;
 $43 = $18 + 8 | 0;
 $$04852 = $37;
 $$153 = $$0;
 while (1) {
  HEAP32[$4 >> 2] = 0;
  HEAP32[$41 >> 2] = 0;
  HEAP32[$42 >> 2] = $18;
  __ZN2ut10loadMemberERNS_12ManagerWorldERKN9rapidjson12GenericValueINS2_4UTF8IcEENS2_19MemoryPoolAllocatorINS2_12CrtAllocatorEEEEERKNS_4meta10MemberDescEPv($0, $$04852, $4, $$153);
  $$04852 = $$04852 + 24 | 0;
  if (($$04852 | 0) == ($39 | 0)) break; else $$153 = $$153 + (HEAP32[$43 >> 2] | 0) | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZN9rapidjson15GenericDocumentINS_4UTF8IcEENS_19MemoryPoolAllocatorINS_12CrtAllocatorEEES4_E9EndObjectEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$$i$i = 0, $$0$i$i = 0, $$pre$phi$i$iZ2D = 0, $11 = 0, $14 = 0, $16 = 0, $2 = 0, $21 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $30 = 0, $32 = 0, $35 = 0, $37 = 0, $39 = 0, $41 = 0, $44 = 0, $46 = 0, $5 = 0, $50 = 0, $7 = 0, label = 0;
 $2 = $0 + 44 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $5 = HEAP32[$0 + 40 >> 2] | 0;
 $7 = $1 * 48 | 0;
 if (($3 - $5 | 0) >>> 0 < $7 >>> 0) ___assert_fail(5737, 5657, 137, 5768);
 $11 = $3 + (0 - $7) | 0;
 HEAP32[$2 >> 2] = $11;
 if (($11 - $5 | 0) >>> 0 <= 23) ___assert_fail(15105, 5657, 144, 15128);
 $14 = $11 + -24 | 0;
 $16 = HEAP32[$0 + 24 >> 2] | 0;
 if (!$16) ___assert_fail(17275, 15939, 2309, 17286);
 HEAP16[$14 + 18 >> 1] = 3;
 if (!$1) {
  HEAP32[$14 + 8 >> 2] = 0;
  $50 = $14 + 4 | 0;
  HEAP32[$50 >> 2] = $1;
  HEAP32[$14 >> 2] = $1;
  return 1;
 }
 do if (!$7) $$0$i$i = 0; else {
  $21 = HEAP32[$16 >> 2] | 0;
  $23 = $21;
  if (!$21) label = 11; else {
   $24 = $21 + 4 | 0;
   $25 = HEAP32[$24 >> 2] | 0;
   if (($25 + $7 | 0) >>> 0 > (HEAP32[$21 >> 2] | 0) >>> 0) label = 11; else {
    $$pre$phi$i$iZ2D = $24;
    $44 = $21;
    $46 = $25;
   }
  }
  if ((label | 0) == 11) {
   $30 = HEAP32[$16 + 4 >> 2] | 0;
   $$$i$i = $30 >>> 0 > $7 >>> 0 ? $30 : $7;
   $32 = $16 + 12 | 0;
   if (!(HEAP32[$32 >> 2] | 0)) {
    $35 = __Znwj(1) | 0;
    HEAP32[$32 >> 2] = $35;
    HEAP32[$16 + 16 >> 2] = $35;
   }
   $37 = $$$i$i + 16 | 0;
   if (!$37) {
    $$0$i$i = 0;
    break;
   }
   $39 = _malloc($37) | 0;
   if (!$39) {
    $$0$i$i = 0;
    break;
   }
   HEAP32[$39 >> 2] = $$$i$i;
   $41 = $39 + 4 | 0;
   HEAP32[$41 >> 2] = 0;
   HEAP32[$39 + 8 >> 2] = $23;
   HEAP32[$16 >> 2] = $39;
   $$pre$phi$i$iZ2D = $41;
   $44 = $39;
   $46 = 0;
  }
  HEAP32[$$pre$phi$i$iZ2D >> 2] = $46 + $7;
  $$0$i$i = $44 + 16 + $46 | 0;
 } while (0);
 HEAP32[$14 + 8 >> 2] = $$0$i$i;
 _memcpy($$0$i$i | 0, $11 | 0, $7 | 0) | 0;
 $50 = $14 + 4 | 0;
 HEAP32[$50 >> 2] = $1;
 HEAP32[$14 >> 2] = $1;
 return 1;
}

function __ZN9rapidjson15GenericDocumentINS_4UTF8IcEENS_19MemoryPoolAllocatorINS_12CrtAllocatorEEES4_E8EndArrayEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$$i$i = 0, $$0$i$i = 0, $$pre$phi$i$iZ2D = 0, $11 = 0, $14 = 0, $16 = 0, $2 = 0, $21 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $30 = 0, $32 = 0, $35 = 0, $37 = 0, $39 = 0, $41 = 0, $44 = 0, $46 = 0, $5 = 0, $50 = 0, $7 = 0, label = 0;
 $2 = $0 + 44 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $5 = HEAP32[$0 + 40 >> 2] | 0;
 $7 = $1 * 24 | 0;
 if (($3 - $5 | 0) >>> 0 < $7 >>> 0) ___assert_fail(5737, 5657, 137, 5768);
 $11 = $3 + (0 - $7) | 0;
 HEAP32[$2 >> 2] = $11;
 if (($11 - $5 | 0) >>> 0 <= 23) ___assert_fail(15105, 5657, 144, 15128);
 $14 = $11 + -24 | 0;
 $16 = HEAP32[$0 + 24 >> 2] | 0;
 if (!$16) ___assert_fail(17275, 15939, 2309, 17286);
 HEAP16[$14 + 18 >> 1] = 4;
 if (!$1) {
  HEAP32[$14 + 8 >> 2] = 0;
  $50 = $14 + 4 | 0;
  HEAP32[$50 >> 2] = $1;
  HEAP32[$14 >> 2] = $1;
  return 1;
 }
 do if (!$7) $$0$i$i = 0; else {
  $21 = HEAP32[$16 >> 2] | 0;
  $23 = $21;
  if (!$21) label = 11; else {
   $24 = $21 + 4 | 0;
   $25 = HEAP32[$24 >> 2] | 0;
   if (($25 + $7 | 0) >>> 0 > (HEAP32[$21 >> 2] | 0) >>> 0) label = 11; else {
    $$pre$phi$i$iZ2D = $24;
    $44 = $21;
    $46 = $25;
   }
  }
  if ((label | 0) == 11) {
   $30 = HEAP32[$16 + 4 >> 2] | 0;
   $$$i$i = $30 >>> 0 > $7 >>> 0 ? $30 : $7;
   $32 = $16 + 12 | 0;
   if (!(HEAP32[$32 >> 2] | 0)) {
    $35 = __Znwj(1) | 0;
    HEAP32[$32 >> 2] = $35;
    HEAP32[$16 + 16 >> 2] = $35;
   }
   $37 = $$$i$i + 16 | 0;
   if (!$37) {
    $$0$i$i = 0;
    break;
   }
   $39 = _malloc($37) | 0;
   if (!$39) {
    $$0$i$i = 0;
    break;
   }
   HEAP32[$39 >> 2] = $$$i$i;
   $41 = $39 + 4 | 0;
   HEAP32[$41 >> 2] = 0;
   HEAP32[$39 + 8 >> 2] = $23;
   HEAP32[$16 >> 2] = $39;
   $$pre$phi$i$iZ2D = $41;
   $44 = $39;
   $46 = 0;
  }
  HEAP32[$$pre$phi$i$iZ2D >> 2] = $46 + $7;
  $$0$i$i = $44 + 16 + $46 | 0;
 } while (0);
 HEAP32[$14 + 8 >> 2] = $$0$i$i;
 _memcpy($$0$i$i | 0, $11 | 0, $7 | 0) | 0;
 $50 = $14 + 4 | 0;
 HEAP32[$50 >> 2] = $1;
 HEAP32[$14 >> 2] = $1;
 return 1;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_dot_star_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$idx$i = 0, $$3 = 0, $14 = 0, $15 = 0, $17 = 0, $19 = 0, $20 = 0, $27 = 0, $3 = 0, $33 = 0, $34 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $3 = sp + 12 | 0;
 $4 = sp;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 100) if ((HEAP8[$0 + 1 >> 0] | 0) == 115) {
  $14 = $0 + 2 | 0;
  $15 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($14, $1, $2) | 0;
  if (($15 | 0) == ($14 | 0)) $$3 = $0; else {
   $17 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($15, $1, $2) | 0;
   if (($17 | 0) == ($15 | 0)) $$3 = $0; else {
    $19 = $2 + 4 | 0;
    $20 = HEAP32[$19 >> 2] | 0;
    if ((($20 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$3 = $0; else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $20 + -24 | 0);
     $27 = HEAP32[$19 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($27 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$19 >> 2] = $27 + -24;
     __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($4, 22568, $3);
     $33 = HEAP8[$4 + 11 >> 0] | 0;
     $34 = $33 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[$19 >> 2] | 0) + -24 | 0, $34 ? HEAP32[$4 >> 2] | 0 : $4, $34 ? HEAP32[$4 + 4 >> 2] | 0 : $33 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$3 = $17;
    }
   }
  }
 } else $$3 = $0; else $$3 = $0; else $$3 = $0;
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_114parse_dot_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$idx$i = 0, $$3 = 0, $14 = 0, $15 = 0, $17 = 0, $19 = 0, $20 = 0, $27 = 0, $3 = 0, $33 = 0, $34 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $3 = sp + 12 | 0;
 $4 = sp;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 100) if ((HEAP8[$0 + 1 >> 0] | 0) == 116) {
  $14 = $0 + 2 | 0;
  $15 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($14, $1, $2) | 0;
  if (($15 | 0) == ($14 | 0)) $$3 = $0; else {
   $17 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($15, $1, $2) | 0;
   if (($17 | 0) == ($15 | 0)) $$3 = $0; else {
    $19 = $2 + 4 | 0;
    $20 = HEAP32[$19 >> 2] | 0;
    if ((($20 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$3 = $0; else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $20 + -24 | 0);
     $27 = HEAP32[$19 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($27 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$19 >> 2] = $27 + -24;
     __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($4, 22566, $3);
     $33 = HEAP8[$4 + 11 >> 0] | 0;
     $34 = $33 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[$19 >> 2] | 0) + -24 | 0, $34 ? HEAP32[$4 >> 2] | 0 : $4, $34 ? HEAP32[$4 + 4 >> 2] | 0 : $33 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$3 = $17;
    }
   }
  }
 } else $$3 = $0; else $$3 = $0; else $$3 = $0;
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZN2ut13loadComponentERNS_12ManagerWorldERNS_6EntityERKN9rapidjson12GenericValueINS4_4UTF8IcEENS4_19MemoryPoolAllocatorINS4_12CrtAllocatorEEEEESD_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$018$i = 0, $13 = 0, $14 = 0, $16 = 0, $19 = 0, $24 = 0, $25 = 0, $29 = 0, $30 = 0, $34 = 0, $35 = 0, $37 = 0, $39 = 0, $4 = 0, $40 = 0, $6 = 0, $tmpcast$byval_copy = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast$byval_copy = sp + 24 | 0;
 $vararg_buffer1 = sp + 16 | 0;
 $vararg_buffer = sp + 8 | 0;
 $4 = sp;
 $6 = HEAP16[$2 + 18 >> 1] | 0;
 if (!($6 & 1024)) ___assert_fail(16231, 15939, 1681, 16242);
 $13 = ($6 & 4096) == 0 ? HEAP32[$2 + 8 >> 2] | 0 : $2;
 $14 = __ZN2ut17ComponentRegistry10findByNameEPKc($13) | 0;
 if (!$14) {
  HEAP32[$vararg_buffer >> 2] = $13;
  _printf(16252, $vararg_buffer) | 0;
  STACKTOP = sp;
  return;
 }
 $16 = $14 + 68 | 0;
 if (!(HEAP32[$16 >> 2] | 0)) {
  STACKTOP = sp;
  return;
 }
 $19 = $1;
 $24 = HEAP32[$19 + 4 >> 2] | 0;
 $25 = $4;
 HEAP32[$25 >> 2] = HEAP32[$19 >> 2];
 HEAP32[$25 + 4 >> 2] = $24;
 $29 = HEAP32[$14 >> 2] | 0;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$4 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 $30 = __ZN2ut4arch13EntityManager25getComponentDataRawUnsafeENS_6EntityEj($0, $tmpcast$byval_copy, $29) | 0;
 if (!$30) {
  $34 = HEAP32[$14 + 52 >> 2] | 0;
  HEAP32[$vararg_buffer1 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$vararg_buffer1 + 4 >> 2] = $34;
  _printf(16304, $vararg_buffer1) | 0;
  STACKTOP = sp;
  return;
 }
 $35 = HEAP32[$16 >> 2] | 0;
 $37 = HEAP32[$35 + 12 >> 2] | 0;
 $39 = HEAP32[$35 + 16 >> 2] | 0;
 $40 = $37 + ($39 * 12 | 0) | 0;
 if (!$39) {
  STACKTOP = sp;
  return;
 }
 $$018$i = $37;
 do {
  __ZN2ut10loadMemberERNS_12ManagerWorldERKN9rapidjson12GenericValueINS2_4UTF8IcEENS2_19MemoryPoolAllocatorINS2_12CrtAllocatorEEEEERKNS_4meta10MemberDescEPv($0, $3, $$018$i, $30);
  $$018$i = $$018$i + 12 | 0;
 } while (($$018$i | 0) != ($40 | 0));
 STACKTOP = sp;
 return;
}

function __ZN2ut4arch17EntityDataManager30incrementComponentOrderVersionEPNS0_9ArchetypeEPNS0_5ChunkE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$010 = 0, $$011$i = 0, $12 = 0, $13 = 0, $14 = 0, $17 = 0, $19 = 0, $21 = 0, $23 = 0, $24 = 0, $29 = 0, $30 = 0, $36 = 0, $38 = 0, $4 = 0, $47 = 0, $5 = 0, $52 = 0, $53 = 0, $6 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2 + 20 >> 2] | 0;
 $5 = $1 + 104 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 L1 : do if (($6 | 0) > 0) {
  $8 = $0 + 4 | 0;
  $$010 = 0;
  $53 = $6;
  while (1) {
   $36 = HEAP32[$8 >> 2] | 0;
   $38 = HEAP32[$4 + ($$010 << 2) >> 2] | 0;
   if (!$38) $52 = $53; else {
    if (!(HEAP32[(HEAP32[$36 + 36 >> 2] | 0) + ($38 << 2) >> 2] | 0)) break;
    $47 = (HEAP32[$36 + 60 >> 2] | 0) + ($38 << 2) | 0;
    HEAP32[$47 >> 2] = (HEAP32[$47 >> 2] | 0) + 1;
    $52 = HEAP32[$5 >> 2] | 0;
   }
   $$010 = $$010 + 1 | 0;
   if (($$010 | 0) >= ($52 | 0)) break L1; else $53 = $52;
  }
  _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9170, 10927, 92);
 } while (0);
 $9 = $1 + 28 | 0;
 if ((HEAP32[$9 >> 2] | 0) <= 0) {
  STACKTOP = sp;
  return;
 }
 $12 = $1 + 32 | 0;
 $13 = $0 + 32 | 0;
 $14 = $0 + 36 | 0;
 $$011$i = 0;
 do {
  $17 = HEAP32[(HEAP32[$12 >> 2] | 0) + ($$011$i << 4) >> 2] | 0;
  $19 = HEAP32[$13 >> 2] | 0;
  $21 = (HEAP32[$14 >> 2] | 0) - $19 >> 2;
  $23 = $19;
  do if ($17 >>> 0 < $21 >>> 0) $30 = $23; else {
   $24 = $17 + 1 | 0;
   if ($24 >>> 0 > $21 >>> 0) {
    __ZNSt3__26vectorIjNS_9allocatorIjEEE8__appendEj($13, $24 - $21 | 0);
    $30 = HEAP32[$13 >> 2] | 0;
    break;
   }
   if ($24 >>> 0 < $21 >>> 0) {
    HEAP32[$14 >> 2] = $23 + ($24 << 2);
    $30 = $23;
   } else $30 = $23;
  } while (0);
  $29 = $30 + ($17 << 2) | 0;
  HEAP32[$29 >> 2] = (HEAP32[$29 >> 2] | 0) + 1;
  $$011$i = $$011$i + 1 | 0;
 } while (($$011$i | 0) < (HEAP32[$9 >> 2] | 0));
 STACKTOP = sp;
 return;
}

function __ZN2ut4arch26SharedComponentDataManagerC2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $15 = 0, $20 = 0, $25 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = 0;
 HEAP32[$0 + 20 >> 2] = 0;
 HEAP32[$0 + 24 >> 2] = 0;
 HEAP32[$0 + 28 >> 2] = 0;
 HEAP32[$0 + 32 >> 2] = 1065353216;
 $3 = $0 + 36 | 0;
 $4 = $0 + 48 | 0;
 $5 = $0 + 52 | 0;
 $6 = $0 + 56 | 0;
 $7 = $0 + 60 | 0;
 $8 = $0 + 64 | 0;
 $9 = $0 + 68 | 0;
 $10 = $0 + 72 | 0;
 $11 = $0 + 76 | 0;
 $12 = $0 + 80 | 0;
 dest = $3;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$1 >> 2] = 0;
 __ZNSt3__26vectorINS_10unique_ptrIA_hNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($3, $1);
 $13 = HEAP32[$1 >> 2] | 0;
 HEAP32[$1 >> 2] = 0;
 if ($13 | 0) __ZdaPv($13);
 HEAP32[$1 >> 2] = 1;
 $15 = HEAP32[$5 >> 2] | 0;
 if ($15 >>> 0 < (HEAP32[$6 >> 2] | 0) >>> 0) {
  HEAP32[$15 >> 2] = 1;
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 4;
 } else __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($4, $1);
 HEAP32[$1 >> 2] = -1;
 $20 = HEAP32[$8 >> 2] | 0;
 if ($20 >>> 0 < (HEAP32[$9 >> 2] | 0) >>> 0) {
  HEAP32[$20 >> 2] = -1;
  HEAP32[$8 >> 2] = (HEAP32[$8 >> 2] | 0) + 4;
 } else __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($7, $1);
 HEAP32[$1 >> 2] = 0;
 $25 = HEAP32[$11 >> 2] | 0;
 if ($25 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  HEAP32[$25 >> 2] = 0;
  HEAP32[$11 >> 2] = (HEAP32[$11 >> 2] | 0) + 4;
  $30 = $0 + 84 | 0;
  HEAP32[$30 >> 2] = -1;
  STACKTOP = sp;
  return;
 } else {
  __ZNSt3__26vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIjEEvOT_($10, $1);
  $30 = $0 + 84 | 0;
  HEAP32[$30 >> 2] = -1;
  STACKTOP = sp;
  return;
 }
}

function __ZN2ut4arch22ArchetypeChunkIterator7rawDataEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$020$i = 0, $14 = 0, $15 = 0, $18 = 0, $19 = 0, $20 = 0, $29 = 0, $32 = 0, $40 = 0, $42 = 0, $vararg_buffer5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 if (!(HEAP8[$0 + 28 >> 0] | 0)) {
  _snprintf(25060, 1024, 13714, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13735, 13749, 214);
 }
 if ((HEAP32[$0 + 32 >> 2] | 0) != (HEAP32[HEAP32[(HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + 32 >> 2] >> 2] | 0)) {
  _snprintf(25060, 1024, 13906, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13942, 13749, 215);
 }
 $14 = $0 + 16 | 0;
 $15 = HEAP32[$14 >> 2] | 0;
 $18 = HEAP8[($1 & 63) + ($15 + 36) >> 0] | 0;
 $19 = $18 & 255;
 $20 = $15 + 28 | 0;
 if ((HEAP32[$20 >> 2] | 0) <= ($19 | 0)) {
  _snprintf(25060, 1024, 27124, sp + 16 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13990, 14007, 120);
 }
 if (!($18 << 24 >> 24)) label = 9; else if ((HEAP32[(HEAP32[$15 + 32 >> 2] | 0) + ($19 << 4) >> 2] | 0) == ($1 | 0)) $42 = $19; else label = 9;
 L12 : do if ((label | 0) == 9) {
  $29 = HEAP32[$20 >> 2] | 0;
  if (($29 | 0) <= 0) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $32 = HEAP32[$15 + 32 >> 2] | 0;
  $$020$i = 0;
  while (1) {
   if ((HEAP32[$32 + ($$020$i << 4) >> 2] | 0) == ($1 | 0)) {
    $42 = $$020$i;
    break L12;
   }
   $$020$i = $$020$i + 1 | 0;
   if (($$020$i | 0) >= ($29 | 0)) {
    $$0 = 0;
    break;
   }
  }
  STACKTOP = sp;
  return $$0 | 0;
 } while (0);
 $40 = HEAP32[(HEAP32[$14 >> 2] | 0) + 32 >> 2] | 0;
 if (HEAP32[$40 + ($42 << 4) + 4 >> 2] & 2 | 0) {
  _snprintf(25060, 1024, 27124, $vararg_buffer5) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 18022, 13749, 221);
 }
 $$0 = (HEAP32[$40 + ($42 << 4) + 8 >> 2] | 0) + ((HEAP32[$0 + 20 >> 2] | 0) + 48) | 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function _internal_memalign($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0100 = 0, $$099 = 0, $$1 = 0, $$198 = 0, $14 = 0, $17 = 0, $19 = 0, $30 = 0, $32 = 0, $36 = 0, $38 = 0, $39 = 0, $40 = 0, $42 = 0, $48 = 0, $54 = 0, $63 = 0, $64 = 0, $67 = 0, $70 = 0, $71 = 0, $72 = 0, $79 = 0, $spec$select = 0;
 $spec$select = $0 >>> 0 > 16 ? $0 : 16;
 if (!($spec$select + -1 & $spec$select)) $$1 = $spec$select; else {
  $$099 = 16;
  while (1) if ($$099 >>> 0 < $spec$select >>> 0) $$099 = $$099 << 1; else {
   $$1 = $$099;
   break;
  }
 }
 if ((-64 - $$1 | 0) >>> 0 <= $1 >>> 0) {
  HEAP32[(___errno_location() | 0) >> 2] = 12;
  $$198 = 0;
  return $$198 | 0;
 }
 $14 = $1 >>> 0 < 11 ? 16 : $1 + 11 & -8;
 $17 = _malloc($14 + 12 + $$1 | 0) | 0;
 if (!$17) {
  $$198 = 0;
  return $$198 | 0;
 }
 $19 = $17 + -8 | 0;
 do if (!($$1 + -1 & $17)) {
  $$0100 = $19;
  $72 = $19;
 } else {
  $30 = ($17 + $$1 + -1 & 0 - $$1) + -8 | 0;
  $32 = $19;
  $36 = ($30 - $32 | 0) >>> 0 > 15 ? $30 : $30 + $$1 | 0;
  $38 = $36 - $32 | 0;
  $39 = $17 + -4 | 0;
  $40 = HEAP32[$39 >> 2] | 0;
  $42 = ($40 & -8) - $38 | 0;
  if (!($40 & 3)) {
   HEAP32[$36 >> 2] = (HEAP32[$19 >> 2] | 0) + $38;
   HEAP32[$36 + 4 >> 2] = $42;
   $$0100 = $36;
   $72 = $36;
   break;
  } else {
   $48 = $36 + 4 | 0;
   HEAP32[$48 >> 2] = $42 | HEAP32[$48 >> 2] & 1 | 2;
   $54 = $36 + $42 + 4 | 0;
   HEAP32[$54 >> 2] = HEAP32[$54 >> 2] | 1;
   HEAP32[$39 >> 2] = $38 | HEAP32[$39 >> 2] & 1 | 2;
   HEAP32[$48 >> 2] = HEAP32[$48 >> 2] | 1;
   _dispose_chunk($19, $38);
   $$0100 = $36;
   $72 = $36;
   break;
  }
 } while (0);
 $63 = $$0100 + 4 | 0;
 $64 = HEAP32[$63 >> 2] | 0;
 if ($64 & 3 | 0) {
  $67 = $64 & -8;
  if ($67 >>> 0 > ($14 + 16 | 0) >>> 0) {
   $70 = $67 - $14 | 0;
   $71 = $72 + $14 | 0;
   HEAP32[$63 >> 2] = $14 | $64 & 1 | 2;
   HEAP32[$71 + 4 >> 2] = $70 | 3;
   $79 = $72 + $67 + 4 | 0;
   HEAP32[$79 >> 2] = HEAP32[$79 >> 2] | 1;
   _dispose_chunk($71, $70);
  }
 }
 $$198 = $72 + 8 | 0;
 return $$198 | 0;
}

function __ZN2ut9Scheduler4findERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$02026$i51 = 0, $$02125$i52 = 0, $$027$i50 = 0, $$sroa$014$0 = 0, $$sroa$014$029 = 0, $$sroa$014$030 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $17 = 0, $18 = 0, $21 = 0, $24 = 0, $25 = 0, $27 = 0, $45 = 0, $5 = 0, $6 = 0, label = 0;
 $$sroa$014$029 = HEAP32[$0 + 48 >> 2] | 0;
 if (!$$sroa$014$029) {
  $45 = 0;
  return $45 | 0;
 }
 $5 = HEAP8[$1 + 11 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 $10 = $6 ? HEAP32[$1 + 4 >> 2] | 0 : $5 & 255;
 $12 = $6 ? HEAP32[$1 >> 2] | 0 : $1;
 $13 = ($10 | 0) == 0;
 $$sroa$014$030 = $$sroa$014$029;
 L4 : while (1) {
  $14 = $$sroa$014$030;
  $15 = $14 + 16 | 0;
  $17 = HEAP8[$15 + 11 >> 0] | 0;
  $18 = $17 << 24 >> 24 < 0;
  $21 = $17 & 255;
  do if ((($18 ? HEAP32[$14 + 20 >> 2] | 0 : $21) | 0) == ($10 | 0)) {
   $24 = HEAP32[$15 >> 2] | 0;
   $25 = $18 ? $24 : $15;
   $27 = $24 & 255;
   if ($18) {
    if ($13) {
     label = 11;
     break L4;
    }
    if (!(_memcmp($25, $12, $10) | 0)) {
     label = 14;
     break L4;
    } else break;
   }
   if ($13) {
    label = 11;
    break L4;
   }
   if ((HEAP8[$12 >> 0] | 0) == $27 << 24 >> 24) {
    $$02026$i51 = $15;
    $$02125$i52 = $21;
    $$027$i50 = $12;
    do {
     $$02125$i52 = $$02125$i52 + -1 | 0;
     $$02026$i51 = $$02026$i51 + 1 | 0;
     if (!$$02125$i52) {
      label = 11;
      break L4;
     }
     $$027$i50 = $$027$i50 + 1 | 0;
    } while ((HEAP8[$$02026$i51 >> 0] | 0) == (HEAP8[$$027$i50 >> 0] | 0));
   }
  } while (0);
  $$sroa$014$0 = HEAP32[$$sroa$014$030 >> 2] | 0;
  if (!$$sroa$014$0) {
   $45 = 0;
   label = 15;
   break;
  } else $$sroa$014$030 = $$sroa$014$0;
 }
 if ((label | 0) == 11) {
  $45 = HEAP32[$$sroa$014$030 + 12 >> 2] | 0;
  return $45 | 0;
 } else if ((label | 0) == 14) {
  $45 = HEAP32[$$sroa$014$030 + 12 >> 2] | 0;
  return $45 | 0;
 } else if ((label | 0) == 15) return $45 | 0;
 return 0;
}

function __ZN2ut4arch16ArchetypeManager25assertArchetypeAlignmentsEPKNS0_9ArchetypeE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$016 = 0, $10 = 0, $16 = 0, $19 = 0, $2 = 0, $25 = 0, $5 = 0, $6 = 0, $8 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $2 = $1 + 28 | 0;
 if ((HEAP32[$2 >> 2] | 0) <= 0) {
  STACKTOP = sp;
  return;
 }
 $5 = $1 + 32 | 0;
 $$016 = 0;
 while (1) {
  $6 = HEAP32[$5 >> 2] | 0;
  $8 = HEAP32[$6 + ($$016 << 4) >> 2] | 0;
  $10 = HEAP32[6067] | 0;
  if ((HEAP32[6068] | 0) - $10 >> 2 >>> 0 <= $8 >>> 0) {
   label = 5;
   break;
  }
  $16 = HEAP32[$10 + ($8 << 2) >> 2] | 0;
  $19 = $16 + 8 | 0;
  if ((HEAP32[$19 >> 2] | 0) + -1 & HEAP32[$6 + ($$016 << 4) + 8 >> 2] | 0) {
   label = 7;
   break;
  }
  $25 = HEAP32[$16 + 16 >> 2] | 0;
  if (($25 | 0) != (HEAP32[$6 + ($$016 << 4) + 12 >> 2] | 0)) {
   label = 9;
   break;
  }
  if ((HEAP32[$19 >> 2] | 0) + -1 & $25 | 0) {
   label = 11;
   break;
  }
  $$016 = $$016 + 1 | 0;
  if (($$016 | 0) >= (HEAP32[$2 >> 2] | 0)) {
   label = 3;
   break;
  }
 }
 if ((label | 0) == 3) {
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 5) {
  _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 } else if ((label | 0) == 7) {
  _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 10453, 9243, 58);
 } else if ((label | 0) == 9) {
  _snprintf(25060, 1024, 27124, $vararg_buffer3) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 10500, 9243, 59);
 } else if ((label | 0) == 11) {
  _snprintf(25060, 1024, 27124, $vararg_buffer5) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 10541, 9243, 60);
 }
}

function __ZNSt3__26vectorINS_10unique_ptrIA_hNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$06$i$i = 0, $$in = 0, $11 = 0, $14 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $24 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $35 = 0, $37 = 0, $39 = 0, $4 = 0, $42 = 0, $43 = 0, $45 = 0, $47 = 0, $48 = 0, $6 = 0, $7 = 0, $9 = 0, $spec$select$i = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $6 = (HEAP32[$2 >> 2] | 0) - $4 >> 2;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 1;
 $spec$select$i = $11 >> 2 >>> 0 < 536870911 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 1073741823;
 do if (!$spec$select$i) $21 = 0; else if ($spec$select$i >>> 0 > 1073741823) _abort(); else {
  $21 = __Znwj($spec$select$i << 2) | 0;
  break;
 } while (0);
 $20 = $21 + ($6 << 2) | 0;
 $23 = $21 + ($spec$select$i << 2) | 0;
 $24 = HEAP32[$1 >> 2] | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$20 >> 2] = $24;
 $26 = $20 + 4 | 0;
 $27 = HEAP32[$0 >> 2] | 0;
 $28 = $27;
 $29 = HEAP32[$2 >> 2] | 0;
 if (($29 | 0) == ($27 | 0)) {
  $$in = $20;
  $42 = $28;
  $45 = $27;
 } else {
  $35 = $6 + -1 - (($29 + -4 - $28 | 0) >>> 2) | 0;
  $$06$i$i = $29;
  $37 = $20;
  do {
   $37 = $37 + -4 | 0;
   $$06$i$i = $$06$i$i + -4 | 0;
   $39 = HEAP32[$$06$i$i >> 2] | 0;
   HEAP32[$$06$i$i >> 2] = 0;
   HEAP32[$37 >> 2] = $39;
  } while (($$06$i$i | 0) != ($27 | 0));
  $$in = $21 + ($35 << 2) | 0;
  $42 = HEAP32[$0 >> 2] | 0;
  $45 = HEAP32[$2 >> 2] | 0;
 }
 HEAP32[$0 >> 2] = $$in;
 HEAP32[$2 >> 2] = $26;
 HEAP32[$9 >> 2] = $23;
 $43 = $42;
 if (($45 | 0) != ($43 | 0)) {
  $47 = $45;
  do {
   $47 = $47 + -4 | 0;
   $48 = HEAP32[$47 >> 2] | 0;
   HEAP32[$47 >> 2] = 0;
   if ($48 | 0) __ZdaPv($48);
  } while (($47 | 0) != ($43 | 0));
 }
 if (!$42) return;
 __ZdlPv($42);
 return;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$037$off038 = 0, $13 = 0, $19 = 0, $22 = 0, $23 = 0, $25 = 0, $33 = 0, $43 = 0, $45 = 0, label = 0;
 do if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 + 8 >> 2] | 0, $4) | 0) __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0, $1, $2, $3); else {
  if (!(__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 >> 2] | 0, $4) | 0)) {
   $45 = HEAP32[$0 + 8 >> 2] | 0;
   FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$45 >> 2] | 0) + 24 >> 2] & 3]($45, $1, $2, $3, $4);
   break;
  }
  if ((HEAP32[$1 + 16 >> 2] | 0) != ($2 | 0)) {
   $13 = $1 + 20 | 0;
   if ((HEAP32[$13 >> 2] | 0) != ($2 | 0)) {
    HEAP32[$1 + 32 >> 2] = $3;
    $19 = $1 + 44 | 0;
    if ((HEAP32[$19 >> 2] | 0) == 4) break;
    $22 = $1 + 52 | 0;
    HEAP8[$22 >> 0] = 0;
    $23 = $1 + 53 | 0;
    HEAP8[$23 >> 0] = 0;
    $25 = HEAP32[$0 + 8 >> 2] | 0;
    FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$25 >> 2] | 0) + 20 >> 2] & 3]($25, $1, $2, $2, 1, $4);
    if (!(HEAP8[$23 >> 0] | 0)) {
     $$037$off038 = 0;
     label = 11;
    } else if (!(HEAP8[$22 >> 0] | 0)) {
     $$037$off038 = 1;
     label = 11;
    } else label = 15;
    do if ((label | 0) == 11) {
     HEAP32[$13 >> 2] = $2;
     $33 = $1 + 40 | 0;
     HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 1;
     if ((HEAP32[$1 + 36 >> 2] | 0) == 1) if ((HEAP32[$1 + 24 >> 2] | 0) == 2) {
      HEAP8[$1 + 54 >> 0] = 1;
      if ($$037$off038) {
       label = 15;
       break;
      } else {
       $43 = 4;
       break;
      }
     }
     if ($$037$off038) label = 15; else $43 = 4;
    } while (0);
    if ((label | 0) == 15) $43 = 3;
    HEAP32[$19 >> 2] = $43;
    break;
   }
  }
  if (($3 | 0) == 1) HEAP32[$1 + 32 >> 2] = 1;
 } while (0);
 return;
}

function _ut_nativebuffer_pod_copy_construct($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$sroa$speculated$i = 0, $10 = 0, $14 = 0, $15 = 0, $18 = 0, $20 = 0, $22 = 0, $24 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $7 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 HEAP32[$0 >> 2] = 0;
 $3 = $0 + 4 | 0;
 HEAP32[$3 >> 2] = 0;
 $4 = $0 + 8 | 0;
 HEAP32[$4 >> 2] = 0;
 $5 = $1 + 4 | 0;
 $7 = Math_imul(HEAP32[$5 >> 2] | 0, $2) | 0;
 do if (!$7) {
  HEAP32[$3 >> 2] = 0;
  $28 = 0;
 } else {
  $$sroa$speculated$i = $7 >>> 0 > 10 ? $7 : 10;
  $10 = _llvm_ctlz_i64($$sroa$speculated$i | 0, 0, 0) | 0;
  if ((65 - $10 | 0) >>> 0 >= 33) {
   _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8102, 8155, 32);
  }
  $14 = _realloc(0, $$sroa$speculated$i) | 0;
  HEAP32[$0 >> 2] = $14;
  $15 = HEAP32[$3 >> 2] | 0;
  if ($15 >>> 0 >= $7 >>> 0) {
   HEAP32[$4 >> 2] = $$sroa$speculated$i;
   HEAP32[$3 >> 2] = $7;
   $28 = $14;
   break;
  }
  HEAP8[$14 + $15 >> 0] = 0;
  $18 = $15 + 1 | 0;
  if (($18 | 0) != ($7 | 0)) {
   HEAP8[$14 + $18 >> 0] = 0;
   $20 = $15 + 2 | 0;
   if (($20 | 0) != ($7 | 0)) {
    $22 = $20;
    do {
     HEAP8[(HEAP32[$0 >> 2] | 0) + $22 >> 0] = 0;
     $22 = $22 + 1 | 0;
    } while (($22 | 0) != ($7 | 0));
   }
  }
  HEAP32[$4 >> 2] = $$sroa$speculated$i;
  HEAP32[$3 >> 2] = $7;
  $28 = HEAP32[$0 >> 2] | 0;
 } while (0);
 $24 = HEAP32[$5 >> 2] | 0;
 if (!$24) {
  $29 = 0;
  $27 = Math_imul($24, $2) | 0;
  _memcpy($28 | 0, $29 | 0, $27 | 0) | 0;
  $30 = HEAP32[$5 >> 2] | 0;
  HEAP32[$4 >> 2] = $30;
  HEAP32[$3 >> 2] = $30;
  STACKTOP = sp;
  return;
 }
 $29 = HEAP32[$1 >> 2] | 0;
 $27 = Math_imul($24, $2) | 0;
 _memcpy($28 | 0, $29 | 0, $27 | 0) | 0;
 $30 = HEAP32[$5 >> 2] | 0;
 HEAP32[$4 >> 2] = $30;
 HEAP32[$3 >> 2] = $30;
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_116parse_arrow_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$idx$i = 0, $$3 = 0, $13 = 0, $14 = 0, $16 = 0, $18 = 0, $19 = 0, $26 = 0, $3 = 0, $33 = 0, $34 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 112) if ((HEAP8[$0 + 1 >> 0] | 0) == 116) {
  $13 = $0 + 2 | 0;
  $14 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($13, $1, $2) | 0;
  if (($14 | 0) == ($13 | 0)) $$3 = $0; else {
   $16 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($14, $1, $2) | 0;
   if (($16 | 0) == ($14 | 0)) $$3 = $0; else {
    $18 = $2 + 4 | 0;
    $19 = HEAP32[$18 >> 2] | 0;
    if ((($19 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$3 = $0; else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $19 + -24 | 0);
     $26 = HEAP32[$18 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($26 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$18 >> 2] = $26 + -24;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($26 + -48 | 0, 22545) | 0;
     $33 = HEAP8[$3 + 11 >> 0] | 0;
     $34 = $33 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj((HEAP32[$18 >> 2] | 0) + -24 | 0, $34 ? HEAP32[$3 >> 2] | 0 : $3, $34 ? HEAP32[$3 + 4 >> 2] | 0 : $33 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$3 = $16;
    }
   }
  }
 } else $$3 = $0; else $$3 = $0; else $$3 = $0;
 STACKTOP = sp;
 return $$3 | 0;
}

function _ut_CoreService_CreateSystem($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$sroa_idx5 = 0, $10 = 0, $11 = 0, $13 = 0, $18 = 0, $19 = 0, $23 = 0, $24 = 0, $26 = 0, $28 = 0, $29 = 0, $35 = 0, $4 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 48 | 0;
 $6 = sp;
 $7 = $4 + 16 | 0;
 HEAP32[$4 >> 2] = 3800;
 $$sroa_idx5 = $4 + 4 | 0;
 HEAP32[$$sroa_idx5 >> 2] = 11;
 HEAP32[$4 + 8 >> 2] = $1;
 HEAP32[$7 >> 2] = $4;
 $8 = HEAP32[6120] | 0;
 if (!$8) {
  $10 = __Znwj(1) | 0;
  HEAP32[6120] = $10;
  $23 = $10;
 } else $23 = $8;
 $11 = $6 + 16 | 0;
 HEAP32[$11 >> 2] = $6;
 HEAP32[$6 >> 2] = 3800;
 $13 = $$sroa_idx5;
 $18 = HEAP32[$13 + 4 >> 2] | 0;
 $19 = $6 + 4 | 0;
 HEAP32[$19 >> 2] = HEAP32[$13 >> 2];
 HEAP32[$19 + 4 >> 2] = $18;
 __ZN2ut11CoreService12createSystemERKNS_12NativeStringENSt3__28functionIFvPNS_9SchedulerEPNS_12ManagerWorldEEEERKNS_12NativeBufferIS1_EESF_($5, $23, $0, $6, $2, $3);
 $24 = __ZN2ut8PtrTable7persistINS_6SystemEEEPT_RKNSt3__210shared_ptrIS3_EE($5) | 0;
 $26 = HEAP32[$5 + 4 >> 2] | 0;
 if ($26 | 0) {
  $28 = $26 + 4 | 0;
  $29 = HEAP32[$28 >> 2] | 0;
  HEAP32[$28 >> 2] = $29 + -1;
  if (!$29) {
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$26 >> 2] | 0) + 8 >> 2] & 63]($26);
   __ZNSt3__219__shared_weak_count14__release_weakEv($26);
  }
 }
 $35 = HEAP32[$11 >> 2] | 0;
 if (($6 | 0) == ($35 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$35 >> 2] | 0) + 16 >> 2] & 63]($35); else if ($35 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$35 >> 2] | 0) + 20 >> 2] & 63]($35);
 $44 = HEAP32[$7 >> 2] | 0;
 if (($4 | 0) == ($44 | 0)) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$44 >> 2] | 0) + 16 >> 2] & 63]($44);
  STACKTOP = sp;
  return $24 | 0;
 }
 if (!$44) {
  STACKTOP = sp;
  return $24 | 0;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$44 >> 2] | 0) + 20 >> 2] & 63]($44);
 STACKTOP = sp;
 return $24 | 0;
}

function ___stpcpy($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$lcssa = 0, $$025$lcssa = 0, $$02536 = 0, $$026$lcssa = 0, $$02642 = 0, $$027$lcssa = 0, $$02741 = 0, $$030 = 0, $$037 = 0, $$1 = 0, $$128 = 0, $$22934 = 0, $$235 = 0, $11 = 0, $12 = 0, $16 = 0, $2 = 0, $22 = 0, $23 = 0, $24 = 0, $31 = 0, $34 = 0, $35 = 0, $9 = 0, label = 0;
 $2 = $1;
 L1 : do if (!(($2 ^ $0) & 3)) {
  if (!($2 & 3)) {
   $$026$lcssa = $1;
   $$027$lcssa = $0;
  } else {
   $$02642 = $1;
   $$02741 = $0;
   while (1) {
    $9 = HEAP8[$$02642 >> 0] | 0;
    HEAP8[$$02741 >> 0] = $9;
    if (!($9 << 24 >> 24)) {
     $$030 = $$02741;
     break L1;
    }
    $11 = $$02642 + 1 | 0;
    $12 = $$02741 + 1 | 0;
    if (!($11 & 3)) {
     $$026$lcssa = $11;
     $$027$lcssa = $12;
     break;
    } else {
     $$02642 = $11;
     $$02741 = $12;
    }
   }
  }
  $16 = HEAP32[$$026$lcssa >> 2] | 0;
  if (!(($16 & -2139062144 ^ -2139062144) & $16 + -16843009)) {
   $$02536 = $$027$lcssa;
   $$037 = $$026$lcssa;
   $24 = $16;
   while (1) {
    $22 = $$037 + 4 | 0;
    $23 = $$02536 + 4 | 0;
    HEAP32[$$02536 >> 2] = $24;
    $24 = HEAP32[$22 >> 2] | 0;
    if (($24 & -2139062144 ^ -2139062144) & $24 + -16843009 | 0) {
     $$0$lcssa = $22;
     $$025$lcssa = $23;
     break;
    } else {
     $$02536 = $23;
     $$037 = $22;
    }
   }
  } else {
   $$0$lcssa = $$026$lcssa;
   $$025$lcssa = $$027$lcssa;
  }
  $$1 = $$0$lcssa;
  $$128 = $$025$lcssa;
  label = 10;
 } else {
  $$1 = $1;
  $$128 = $0;
  label = 10;
 } while (0);
 if ((label | 0) == 10) {
  $31 = HEAP8[$$1 >> 0] | 0;
  HEAP8[$$128 >> 0] = $31;
  if (!($31 << 24 >> 24)) $$030 = $$128; else {
   $$22934 = $$128;
   $$235 = $$1;
   while (1) {
    $$235 = $$235 + 1 | 0;
    $34 = $$22934 + 1 | 0;
    $35 = HEAP8[$$235 >> 0] | 0;
    HEAP8[$34 >> 0] = $35;
    if (!($35 << 24 >> 24)) {
     $$030 = $34;
     break;
    } else $$22934 = $34;
   }
  }
 }
 return $$030 | 0;
}

function __ZN2ut4arch16ArchetypeManager25assertArchetypeComponentsERKNSt3__26vectorIjNS2_9allocatorIjEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$010 = 0, $13 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $24 = 0, $25 = 0, $26 = 0, $30 = 0, $31 = 0, $4 = 0, $40 = 0, $7 = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $2 = $1 + 4 | 0;
 $4 = HEAP32[$1 >> 2] | 0;
 if ((HEAP32[$2 >> 2] | 0) == ($4 | 0)) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 10580, 9243, 40);
 }
 $7 = HEAP32[$4 >> 2] | 0;
 if (!(HEAP8[24208] | 0)) {
  if (!(HEAP8[24216] | 0)) {
   $13 = HEAP32[(__ZN2ut20InitComponentInfoForINS_6EntityEEERNS_13ComponentInfoEv() | 0) >> 2] | 0;
   HEAP32[6115] = $13;
   $14 = 24216;
   HEAP32[$14 >> 2] = 1;
   HEAP32[$14 + 4 >> 2] = 0;
   $18 = $13;
  } else $18 = HEAP32[6115] | 0;
  HEAP32[6114] = $18;
  $19 = 24208;
  HEAP32[$19 >> 2] = 1;
  HEAP32[$19 + 4 >> 2] = 0;
  $24 = $18;
 } else $24 = HEAP32[6114] | 0;
 if (($7 | 0) != ($24 | 0)) {
  _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 10598, 9243, 42);
 }
 $25 = HEAP32[$2 >> 2] | 0;
 $26 = HEAP32[$1 >> 2] | 0;
 if ($25 - $26 >> 2 >>> 0 <= 1) {
  STACKTOP = sp;
  return;
 }
 $$010 = 1;
 $30 = $26;
 $40 = $25;
 while (1) {
  $31 = $30;
  if ((HEAP32[$31 + ($$010 + -1 << 2) >> 2] | 0) >>> 0 >= (HEAP32[$31 + ($$010 << 2) >> 2] | 0) >>> 0) {
   label = 15;
   break;
  }
  $$010 = $$010 + 1 | 0;
  if ($$010 >>> 0 >= $40 - $30 >> 2 >>> 0) {
   label = 13;
   break;
  }
 }
 if ((label | 0) == 13) {
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 15) {
  _snprintf(25060, 1024, 10632, $vararg_buffer3) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 10756, 9243, 49);
 }
}

function __ZN2ut4arch17EntityDataManager14createEntitiesEPNS0_9ArchetypeEPNS_6EntityEj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$011$i = 0, $$01718 = 0, $$019 = 0, $13 = 0, $17 = 0, $20 = 0, $21 = 0, $22 = 0, $25 = 0, $27 = 0, $29 = 0, $31 = 0, $32 = 0, $37 = 0, $38 = 0, $4 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 if ($3 | 0) {
  $$01718 = $3;
  $$019 = $2;
  while (1) {
   $7 = __ZN2ut4arch16ArchetypeManager22getChunkWithEmptySlotsEPNS0_9ArchetypeEPi(HEAP32[$0 >> 2] | 0, $1, 0) | 0;
   $9 = __ZN2ut4arch16ArchetypeManager17allocateIntoChunkEPNS0_5ChunkEiPi(HEAP32[$0 >> 2] | 0, $7, $$01718, $4) | 0;
   __ZN2ut4arch17EntityDataManager16allocateEntitiesEPNS0_9ArchetypeEPNS0_5ChunkEiiPNS_6EntityE($0, $1, $7, $9, HEAP32[$4 >> 2] | 0, $$019);
   __ZN2ut4arch5Chunk20initializeComponentsEii($7, $9, HEAP32[$4 >> 2] | 0);
   $13 = HEAP32[$4 >> 2] | 0;
   $$01718 = $$01718 - $13 | 0;
   if (!$$01718) break; else $$019 = ($$019 | 0) == 0 ? 0 : $$019 + ($13 << 3) | 0;
  }
 }
 $17 = $1 + 28 | 0;
 if ((HEAP32[$17 >> 2] | 0) <= 0) {
  STACKTOP = sp;
  return;
 }
 $20 = $1 + 32 | 0;
 $21 = $0 + 32 | 0;
 $22 = $0 + 36 | 0;
 $$011$i = 0;
 do {
  $25 = HEAP32[(HEAP32[$20 >> 2] | 0) + ($$011$i << 4) >> 2] | 0;
  $27 = HEAP32[$21 >> 2] | 0;
  $29 = (HEAP32[$22 >> 2] | 0) - $27 >> 2;
  $31 = $27;
  do if ($25 >>> 0 < $29 >>> 0) $38 = $31; else {
   $32 = $25 + 1 | 0;
   if ($32 >>> 0 > $29 >>> 0) {
    __ZNSt3__26vectorIjNS_9allocatorIjEEE8__appendEj($21, $32 - $29 | 0);
    $38 = HEAP32[$21 >> 2] | 0;
    break;
   }
   if ($32 >>> 0 < $29 >>> 0) {
    HEAP32[$22 >> 2] = $31 + ($32 << 2);
    $38 = $31;
   } else $38 = $31;
  } while (0);
  $37 = $38 + ($25 << 2) | 0;
  HEAP32[$37 >> 2] = (HEAP32[$37 >> 2] | 0) + 1;
  $$011$i = $$011$i + 1 | 0;
 } while (($$011$i | 0) < (HEAP32[$17 >> 2] | 0));
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE24__emplace_back_slow_pathIJRNS2_5arenaILj4096EEEEEEvDpOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $15 = 0, $16 = 0, $2 = 0, $20 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 20 | 0;
 $3 = sp;
 $4 = $0 + 4 | 0;
 $9 = ((HEAP32[$4 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 4) + 1 | 0;
 $10 = __ZNKSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE8max_sizeEv($0) | 0;
 if ($10 >>> 0 < $9 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $15 = HEAP32[$0 >> 2] | 0;
  $16 = (HEAP32[$0 + 8 >> 2] | 0) - $15 | 0;
  $20 = $16 >> 3;
  __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEEC2EjjSB_($3, $16 >> 4 >>> 0 < $10 >>> 1 >>> 0 ? ($20 >>> 0 < $9 >>> 0 ? $9 : $20) : $10, (HEAP32[$4 >> 2] | 0) - $15 >> 4, $0 + 12 | 0);
  $25 = $3 + 8 | 0;
  $26 = HEAP32[$25 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lj4096EEEEELj4096EEC2ERNS0_5arenaILj4096EEE($2, $1);
  HEAP32[$26 >> 2] = 0;
  HEAP32[$26 + 4 >> 2] = 0;
  HEAP32[$26 + 8 >> 2] = 0;
  HEAP32[$26 + 12 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$25 >> 2] = $26 + 16;
  __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE($0, $3);
  __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE6assignIPiEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $13 = 0, $14 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $25 = 0, $3 = 0, $33 = 0, $37 = 0, $39 = 0, $4 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, $spec$select$i = 0;
 $3 = $2;
 $4 = $1;
 $5 = $3 - $4 | 0;
 $6 = $5 >> 2;
 $7 = $0 + 8 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = HEAP32[$0 >> 2] | 0;
 $13 = $9;
 if ($6 >>> 0 <= $8 - $9 >> 2 >>> 0) {
  $14 = $0 + 4 | 0;
  $17 = (HEAP32[$14 >> 2] | 0) - $9 >> 2;
  $18 = $6 >>> 0 > $17 >>> 0;
  $spec$select = $18 ? $1 + ($17 << 2) | 0 : $2;
  $20 = $spec$select;
  $21 = $20 - $4 | 0;
  if ($21 | 0) _memmove($9 | 0, $1 | 0, $21 | 0) | 0;
  if (!$18) {
   HEAP32[$14 >> 2] = $13 + ($21 >> 2 << 2);
   return;
  }
  $25 = $3 - $20 | 0;
  if (($25 | 0) <= 0) return;
  _memcpy(HEAP32[$14 >> 2] | 0, $spec$select | 0, $25 | 0) | 0;
  HEAP32[$14 >> 2] = (HEAP32[$14 >> 2] | 0) + ($25 >>> 2 << 2);
  return;
 }
 if (!$9) $37 = $8; else {
  $33 = $0 + 4 | 0;
  HEAP32[$33 >> 2] = $9;
  __ZdlPv($9);
  HEAP32[$7 >> 2] = 0;
  HEAP32[$33 >> 2] = 0;
  HEAP32[$0 >> 2] = 0;
  $37 = 0;
 }
 if ($6 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $39 = $37 >> 1;
 $spec$select$i = $37 >> 2 >>> 0 < 536870911 ? ($39 >>> 0 < $6 >>> 0 ? $6 : $39) : 1073741823;
 if ($spec$select$i >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $43 = __Znwj($spec$select$i << 2) | 0;
 $44 = $0 + 4 | 0;
 HEAP32[$44 >> 2] = $43;
 HEAP32[$0 >> 2] = $43;
 HEAP32[$7 >> 2] = $43 + ($spec$select$i << 2);
 if (($5 | 0) <= 0) return;
 _memcpy($43 | 0, $1 | 0, $5 | 0) | 0;
 HEAP32[$44 >> 2] = $43 + ($5 >>> 2 << 2);
 return;
}

function __ZN2ut4arch13EntityManager31toTypeInArchetypeListWithEntityEPKjj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i$i = 0, $$014 = 0, $11 = 0, $13 = 0, $23 = 0, $24 = 0, $28 = 0, $29 = 0, $34 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, sp = 0, $$014$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 $5 = $3 + 1 | 0;
 HEAP32[$0 >> 2] = 0;
 $6 = $0 + 4 | 0;
 HEAP32[$6 >> 2] = 0;
 $7 = $0 + 8 | 0;
 HEAP32[$7 >> 2] = 0;
 if ($5 | 0) {
  if ($5 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
  $11 = __Znwj($5 << 2) | 0;
  HEAP32[$6 >> 2] = $11;
  HEAP32[$0 >> 2] = $11;
  HEAP32[$7 >> 2] = $11 + ($5 << 2);
  $$0$i$i = $5;
  $13 = $11;
  do {
   HEAP32[$13 >> 2] = 0;
   $13 = (HEAP32[$6 >> 2] | 0) + 4 | 0;
   HEAP32[$6 >> 2] = $13;
   $$0$i$i = $$0$i$i + -1 | 0;
  } while (($$0$i$i | 0) != 0);
 }
 if (!(HEAP8[24208] | 0)) {
  if (!(HEAP8[24216] | 0)) {
   $23 = HEAP32[(__ZN2ut20InitComponentInfoForINS_6EntityEEERNS_13ComponentInfoEv() | 0) >> 2] | 0;
   HEAP32[6115] = $23;
   $24 = 24216;
   HEAP32[$24 >> 2] = 1;
   HEAP32[$24 + 4 >> 2] = 0;
   $28 = $23;
  } else $28 = HEAP32[6115] | 0;
  HEAP32[6114] = $28;
  $29 = 24208;
  HEAP32[$29 >> 2] = 1;
  HEAP32[$29 + 4 >> 2] = 0;
  $34 = $28;
 } else $34 = HEAP32[6114] | 0;
 HEAP32[HEAP32[$0 >> 2] >> 2] = $34;
 if (!$3) {
  $36 = HEAP32[$0 >> 2] | 0;
  $37 = HEAP32[$6 >> 2] | 0;
  __ZNSt3__26__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_($36, $37, $4);
  STACKTOP = sp;
  return;
 }
 $$014 = 0;
 do {
  $$014$looptemp = $$014;
  $$014 = $$014 + 1 | 0;
  HEAP32[(HEAP32[$0 >> 2] | 0) + ($$014 << 2) >> 2] = HEAP32[$2 + ($$014$looptemp << 2) >> 2];
 } while (($$014 | 0) != ($3 | 0));
 $36 = HEAP32[$0 >> 2] | 0;
 $37 = HEAP32[$6 >> 2] | 0;
 __ZNSt3__26__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_($36, $37, $4);
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE21__push_back_slow_pathIS6_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $15 = 0, $19 = 0, $2 = 0, $24 = 0, $25 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $34 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp;
 $3 = $0 + 4 | 0;
 $8 = ((HEAP32[$3 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 4) + 1 | 0;
 $9 = __ZNKSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE8max_sizeEv($0) | 0;
 if ($9 >>> 0 < $8 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $14 = HEAP32[$0 >> 2] | 0;
  $15 = (HEAP32[$0 + 8 >> 2] | 0) - $14 | 0;
  $19 = $15 >> 3;
  __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($2, $15 >> 4 >>> 0 < $9 >>> 1 >>> 0 ? ($19 >>> 0 < $8 >>> 0 ? $8 : $19) : $9, (HEAP32[$3 >> 2] | 0) - $14 >> 4, $0 + 12 | 0);
  $24 = $2 + 8 | 0;
  $25 = HEAP32[$24 >> 2] | 0;
  HEAP32[$25 >> 2] = 0;
  $27 = $25 + 4 | 0;
  HEAP32[$27 >> 2] = 0;
  $28 = $25 + 8 | 0;
  HEAP32[$28 >> 2] = 0;
  HEAP32[$25 + 12 >> 2] = HEAP32[$1 + 12 >> 2];
  HEAP32[$25 >> 2] = HEAP32[$1 >> 2];
  $32 = $1 + 4 | 0;
  HEAP32[$27 >> 2] = HEAP32[$32 >> 2];
  $34 = $1 + 8 | 0;
  HEAP32[$28 >> 2] = HEAP32[$34 >> 2];
  HEAP32[$34 >> 2] = 0;
  HEAP32[$32 >> 2] = 0;
  HEAP32[$1 >> 2] = 0;
  HEAP32[$24 >> 2] = $25 + 16;
  __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($0, $2);
  __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($2);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $15 = 0, $16 = 0, $2 = 0, $20 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 20 | 0;
 $3 = sp;
 $4 = $0 + 4 | 0;
 $9 = ((HEAP32[$4 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 4) + 1 | 0;
 $10 = __ZNKSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE8max_sizeEv($0) | 0;
 if ($10 >>> 0 < $9 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $15 = HEAP32[$0 >> 2] | 0;
  $16 = (HEAP32[$0 + 8 >> 2] | 0) - $15 | 0;
  $20 = $16 >> 3;
  __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEEC2EjjSB_($3, $16 >> 4 >>> 0 < $10 >>> 1 >>> 0 ? ($20 >>> 0 < $9 >>> 0 ? $9 : $20) : $10, (HEAP32[$4 >> 2] | 0) - $15 >> 4, $0 + 12 | 0);
  $25 = $3 + 8 | 0;
  $26 = HEAP32[$25 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lj4096EEEEELj4096EEC2IS4_EERKNS1_IT_Lj4096EEE($2, $1);
  HEAP32[$26 >> 2] = 0;
  HEAP32[$26 + 4 >> 2] = 0;
  HEAP32[$26 + 8 >> 2] = 0;
  HEAP32[$26 + 12 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$25 >> 2] = $26 + 16;
  __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE($0, $3);
  __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__26vectorIN2ut9Scheduler15ScheduledSystemENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_j($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$07$i = 0, $15 = 0, $17 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $27 = 0, $28 = 0, $31 = 0, $33 = 0, $36 = 0, $4 = 0, $7 = 0, label = 0;
 $4 = $0 + 4 | 0;
 if (($1 | 0) == ($2 | 0)) return;
 $$07$i = $1;
 $7 = HEAP32[$4 >> 2] | 0;
 while (1) {
  HEAP32[$7 >> 2] = HEAP32[$$07$i >> 2];
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($7 + 4 | 0, $$07$i + 4 | 0);
  HEAP32[$7 + 16 >> 2] = HEAP32[$$07$i + 16 >> 2];
  $15 = HEAP32[$$07$i + 20 >> 2] | 0;
  HEAP32[$7 + 20 >> 2] = $15;
  if ($15 | 0) {
   $17 = $15 + 4 | 0;
   HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + 1;
  }
  $20 = $7 + 24 | 0;
  $21 = $$07$i + 24 | 0;
  HEAP32[$20 >> 2] = 0;
  $22 = $7 + 28 | 0;
  HEAP32[$22 >> 2] = 0;
  $23 = $7 + 32 | 0;
  HEAP32[$23 >> 2] = 0;
  $24 = $$07$i + 28 | 0;
  $27 = (HEAP32[$24 >> 2] | 0) - (HEAP32[$21 >> 2] | 0) | 0;
  $28 = $27 >> 2;
  if ($27 | 0) {
   if ($28 >>> 0 > 1073741823) {
    label = 7;
    break;
   }
   $31 = __Znwj($27) | 0;
   HEAP32[$22 >> 2] = $31;
   HEAP32[$20 >> 2] = $31;
   HEAP32[$23 >> 2] = $31 + ($28 << 2);
   $33 = HEAP32[$21 >> 2] | 0;
   $36 = (HEAP32[$24 >> 2] | 0) - $33 | 0;
   if (($36 | 0) > 0) {
    _memcpy($31 | 0, $33 | 0, $36 | 0) | 0;
    HEAP32[$22 >> 2] = $31 + ($36 >>> 2 << 2);
   }
  }
  HEAP8[$7 + 36 >> 0] = HEAP8[$$07$i + 36 >> 0] | 0;
  $$07$i = $$07$i + 40 | 0;
  $7 = (HEAP32[$4 >> 2] | 0) + 40 | 0;
  HEAP32[$4 >> 2] = $7;
  if (($$07$i | 0) == ($2 | 0)) {
   label = 11;
   break;
  }
 }
 if ((label | 0) == 7) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($20); else if ((label | 0) == 11) return;
}

function __ZNSt3__28functionIFvvEE4swapERS2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $18 = 0, $2 = 0, $22 = 0, $35 = 0, $39 = 0, $4 = 0, $41 = 0, $46 = 0, $5 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 if (($1 | 0) == ($0 | 0)) {
  STACKTOP = sp;
  return;
 }
 $4 = $0 + 16 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $7 = $5;
 $8 = $1 + 16 | 0;
 if (($5 | 0) == ($0 | 0)) if ((HEAP32[$8 >> 2] | 0) == ($1 | 0)) {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$5 >> 2] | 0) + 12 >> 2] & 15]($5, $2);
  $14 = HEAP32[$4 >> 2] | 0;
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$14 >> 2] | 0) + 16 >> 2] & 63]($14);
  HEAP32[$4 >> 2] = 0;
  $18 = HEAP32[$8 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$18 >> 2] | 0) + 12 >> 2] & 15]($18, $0);
  $22 = HEAP32[$8 >> 2] | 0;
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$22 >> 2] | 0) + 16 >> 2] & 63]($22);
  HEAP32[$8 >> 2] = 0;
  HEAP32[$4 >> 2] = $0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$2 >> 2] | 0) + 12 >> 2] & 15]($2, $1);
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 16 >> 2] & 63]($2);
  HEAP32[$8 >> 2] = $1;
  STACKTOP = sp;
  return;
 } else {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$5 >> 2] | 0) + 12 >> 2] & 15]($5, $1);
  $35 = HEAP32[$4 >> 2] | 0;
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$35 >> 2] | 0) + 16 >> 2] & 63]($35);
  $39 = $1 + 16 | 0;
  HEAP32[$4 >> 2] = HEAP32[$39 >> 2];
  HEAP32[$39 >> 2] = $1;
  STACKTOP = sp;
  return;
 } else {
  $41 = HEAP32[$8 >> 2] | 0;
  if (($1 | 0) == ($41 | 0)) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$41 >> 2] | 0) + 12 >> 2] & 15]($41, $0);
   $46 = HEAP32[$8 >> 2] | 0;
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$46 >> 2] | 0) + 16 >> 2] & 63]($46);
   HEAP32[$8 >> 2] = HEAP32[$4 >> 2];
   HEAP32[$4 >> 2] = $0;
   STACKTOP = sp;
   return;
  } else {
   HEAP32[$4 >> 2] = $41;
   HEAP32[$8 >> 2] = $7;
   STACKTOP = sp;
   return;
  }
 }
}

function __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE6DoubleEd($0, $1) {
 $0 = $0 | 0;
 $1 = +$1;
 var $$0$i = 0, $$0$i2 = 0, $$014$i = 0, $$015$i = 0.0, $$1$i = 0, $11 = 0, $13 = 0, $2 = 0, $3 = 0, $30 = 0, $33 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp + 4 | 0;
 $3 = sp;
 __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE12PrettyPrefixENS_4TypeE($0, 6);
 HEAPF64[tempDoublePtr >> 3] = $1;
 $4 = HEAP32[tempDoublePtr >> 2] | 0;
 $5 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 if (0 == 0 & ($5 & 2146435072 | 0) == 2146435072) {
  $$0$i = 0;
  STACKTOP = sp;
  return $$0$i | 0;
 }
 $11 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, 25) | 0;
 $13 = HEAP32[$0 + 28 >> 2] | 0;
 if (($13 | 0) <= 0) ___assert_fail(13264, 13286, 217, 13345);
 if (($4 | 0) == 0 & ($5 & 2147483647 | 0) == 0) {
  if (($5 | 0) < 0) {
   HEAP8[$11 >> 0] = 45;
   $$014$i = $11 + 1 | 0;
  } else $$014$i = $11;
  HEAP8[$$014$i >> 0] = 48;
  HEAP8[$$014$i + 1 >> 0] = 46;
  HEAP8[$$014$i + 2 >> 0] = 48;
  $$0$i2 = $$014$i + 3 | 0;
 } else {
  if ($1 < 0.0) {
   HEAP8[$11 >> 0] = 45;
   $$015$i = -$1;
   $$1$i = $11 + 1 | 0;
  } else {
   $$015$i = $1;
   $$1$i = $11;
  }
  __ZN9rapidjson8internal6Grisu2EdPcPiS2_($$015$i, $$1$i, $2, $3);
  $$0$i2 = __ZN9rapidjson8internal8PrettifyEPciii($$1$i, HEAP32[$2 >> 2] | 0, HEAP32[$3 >> 2] | 0, $13) | 0;
 }
 $30 = HEAP32[$0 >> 2] | 0;
 $33 = $11 - $$0$i2 | 0;
 $35 = $30 + 12 | 0;
 $36 = HEAP32[$35 >> 2] | 0;
 if (($36 - (HEAP32[$30 + 8 >> 2] | 0) | 0) >>> 0 < ($33 + 25 | 0) >>> 0) ___assert_fail(5737, 5657, 137, 5768);
 HEAP32[$35 >> 2] = $36 + (-25 - $33);
 $$0$i = 1;
 STACKTOP = sp;
 return $$0$i | 0;
}

function _ut_CoreService_GetSupportedLocales($0) {
 $0 = $0 | 0;
 var $$05$i$i$i$i = 0, $$05$i$i$i$i3 = 0, $$pre = 0, $$pre$phi11Z2D = 0, $$pre10 = 0, $$pre9 = 0, $1 = 0, $13 = 0, $15 = 0, $17 = 0, $21 = 0, $25 = 0, $6 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 if (!(HEAP32[6120] | 0)) HEAP32[6120] = __Znwj(1) | 0;
 __ZN2ut11CoreService19getSupportedLocalesEv($1);
 $$pre = HEAP32[$0 >> 2] | 0;
 if (($1 | 0) == ($0 | 0)) {
  $$pre9 = HEAP32[$0 + 4 >> 2] | 0;
  $$pre10 = $1 + 4 | 0;
  if (!$$pre9) {
   $$pre$phi11Z2D = $$pre10;
   $25 = $$pre;
   HEAP32[$$pre$phi11Z2D >> 2] = 0;
   _free($25);
   STACKTOP = sp;
   return;
  }
  $$05$i$i$i$i3 = 0;
  do {
   $21 = $$pre + ($$05$i$i$i$i3 << 3) | 0;
   _free(HEAP32[$21 >> 2] | 0);
   HEAP32[$21 >> 2] = 0;
   HEAP32[$$pre + ($$05$i$i$i$i3 << 3) + 4 >> 2] = 0;
   $$05$i$i$i$i3 = $$05$i$i$i$i3 + 1 | 0;
  } while (($$05$i$i$i$i3 | 0) != ($$pre9 | 0));
  $$pre$phi11Z2D = $$pre10;
  $25 = HEAP32[$1 >> 2] | 0;
  HEAP32[$$pre$phi11Z2D >> 2] = 0;
  _free($25);
  STACKTOP = sp;
  return;
 }
 $6 = $0 + 4 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 if (!$7) $13 = $$pre; else {
  $$05$i$i$i$i = 0;
  do {
   $9 = $$pre + ($$05$i$i$i$i << 3) | 0;
   _free(HEAP32[$9 >> 2] | 0);
   HEAP32[$9 >> 2] = 0;
   HEAP32[$$pre + ($$05$i$i$i$i << 3) + 4 >> 2] = 0;
   $$05$i$i$i$i = $$05$i$i$i$i + 1 | 0;
  } while (($$05$i$i$i$i | 0) != ($7 | 0));
  $13 = HEAP32[$0 >> 2] | 0;
 }
 HEAP32[$6 >> 2] = 0;
 _free($13);
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 $15 = $1 + 4 | 0;
 HEAP32[$6 >> 2] = HEAP32[$15 >> 2];
 $17 = $1 + 8 | 0;
 HEAP32[$0 + 8 >> 2] = HEAP32[$17 >> 2];
 HEAP32[$1 >> 2] = 0;
 HEAP32[$17 >> 2] = 0;
 HEAP32[$15 >> 2] = 0;
 $$pre$phi11Z2D = $15;
 $25 = 0;
 HEAP32[$$pre$phi11Z2D >> 2] = 0;
 _free($25);
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_116parse_throw_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$1 = 0, $15 = 0, $16 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $3 = sp + 24 | 0;
 $4 = sp;
 $5 = sp + 12 | 0;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 116) if ((HEAP8[$0 + 1 >> 0] | 0) == 119) {
  $15 = $0 + 2 | 0;
  $16 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($15, $1, $2) | 0;
  if (($16 | 0) == ($15 | 0)) $$1 = $0; else {
   $19 = $2 + 4 | 0;
   $20 = HEAP32[$19 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($20 | 0)) $$1 = $0; else {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($5, $20 + -24 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($5, 0, 22473) | 0;
    HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$5 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$19 >> 2] | 0) + -24 | 0, $3);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    $$1 = $16;
   }
  }
 } else $$1 = $0; else $$1 = $0; else $$1 = $0;
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZN2ut4arch19EntityCommandBuffer27instantiateDeferredEntitiesENS_6EntityEPS2_j($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i$i$i = 0, $$011 = 0, $$0710 = 0, $$sink = 0, $$sink12 = 0, $$sroa$speculated$i$i$i$i = 0, $10 = 0, $11 = 0, $20 = 0, $22 = 0, $25 = 0, $29 = 0, $32 = 0, $33 = 0, $34 = 0, $38 = 0, $4 = 0, $44 = 0, $45 = 0, $6 = 0, $9 = 0, label = 0;
 $4 = $1;
 $6 = HEAP32[$4 >> 2] | 0;
 $9 = HEAP32[$4 + 4 >> 2] | 0;
 $10 = $0 + 8 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 if (!$11) label = 3; else if (((HEAP32[$11 + 4 >> 2] | 0) - (HEAP32[$11 + 8 >> 2] | 0) | 0) > 32) $$0$i$i$i = $11; else label = 3;
 if ((label | 0) == 3) {
  $20 = HEAP32[$0 + 12 >> 2] | 0;
  $$sroa$speculated$i$i$i$i = ($20 | 0) > 44 ? $20 : 44;
  $22 = _aligned_alloc(16, $$sroa$speculated$i$i$i$i) | 0;
  HEAP32[$22 >> 2] = 0;
  HEAP32[$22 + 4 >> 2] = $$sroa$speculated$i$i$i$i;
  HEAP32[$22 + 8 >> 2] = 12;
  $25 = $0 + 4 | 0;
  if (!(HEAP32[$25 >> 2] | 0)) {
   $$sink = $10;
   $$sink12 = $25;
  } else {
   $$sink = HEAP32[$10 >> 2] | 0;
   $$sink12 = $10;
  }
  HEAP32[$$sink >> 2] = $22;
  HEAP32[$$sink12 >> 2] = $22;
  $$0$i$i$i = $22;
 }
 $29 = $0 + 16 | 0;
 HEAP32[$29 >> 2] = (HEAP32[$29 >> 2] | 0) + 1;
 $32 = $$0$i$i$i + 8 | 0;
 $33 = HEAP32[$32 >> 2] | 0;
 $34 = $$0$i$i$i + $33 | 0;
 HEAP32[$32 >> 2] = $33 + 32;
 HEAP32[$34 + 4 >> 2] = 32;
 HEAP32[$34 >> 2] = 3;
 $38 = $34 + 8 | 0;
 HEAP32[$38 >> 2] = $6;
 HEAP32[$38 + 4 >> 2] = $9;
 HEAP32[$34 + 16 >> 2] = $3;
 if (!$3) return;
 $44 = $0 + 20 | 0;
 $$011 = $2;
 $$0710 = $3;
 while (1) {
  $45 = HEAP32[$44 >> 2] | 0;
  HEAP32[$44 >> 2] = $45 + 1;
  HEAP32[$$011 >> 2] = ~$45;
  HEAP32[$$011 + 4 >> 2] = 0;
  $$0710 = $$0710 + -1 | 0;
  if (!$$0710) break; else $$011 = $$011 + 8 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_18demangleINS0_2DbEEEvPKcS4_RT_Ri($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $13 = 0, $14 = 0, $27 = 0, $28 = 0, label = 0;
 L1 : do if ($0 >>> 0 < $1 >>> 0) {
  L3 : do if ((HEAP8[$0 >> 0] | 0) == 95) {
   if (($1 - $0 | 0) <= 3) {
    HEAP32[$3 >> 2] = -2;
    break L1;
   }
   switch (HEAP8[$0 + 1 >> 0] | 0) {
   case 90:
    {
     $13 = $0 + 2 | 0;
     $14 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($13, $1, $2) | 0;
     if (($14 | 0) == ($13 | 0) | ($14 | 0) == ($1 | 0)) $$0 = $14; else if ((HEAP8[$14 >> 0] | 0) == 46) $$0 = __ZN10__cxxabiv112_GLOBAL__N_116parse_dot_suffixINS0_2DbEEEPKcS4_S4_RT_($14, $1, $2) | 0; else $$0 = $14;
     if (($$0 | 0) == ($1 | 0)) break L3;
     HEAP32[$3 >> 2] = -2;
     break L1;
     break;
    }
   case 95:
    {
     label = 11;
     break;
    }
   default:
    {}
   }
   if ((label | 0) == 11) if ((HEAP8[$0 + 2 >> 0] | 0) == 95) if ((HEAP8[$0 + 3 >> 0] | 0) == 90) {
    $27 = $0 + 4 | 0;
    $28 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($27, $1, $2) | 0;
    if (($28 | 0) == ($27 | 0) | ($28 | 0) == ($1 | 0)) {
     HEAP32[$3 >> 2] = -2;
     break L1;
    }
    if ((__ZN10__cxxabiv112_GLOBAL__N_118parse_block_invokeINS0_2DbEEEPKcS4_S4_RT_($28, $1, $2) | 0) == ($1 | 0)) break;
    HEAP32[$3 >> 2] = -2;
    break L1;
   }
   HEAP32[$3 >> 2] = -2;
   break L1;
  } else if ((__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0) != ($1 | 0)) {
   HEAP32[$3 >> 2] = -2;
   break L1;
  } while (0);
  if (!(HEAP32[$3 >> 2] | 0)) if ((HEAP32[$2 >> 2] | 0) == (HEAP32[$2 + 4 >> 2] | 0)) HEAP32[$3 >> 2] = -2;
 } else HEAP32[$3 >> 2] = -2; while (0);
 return;
}

function __ZN2ut4arch17EntityDataManager19assertEntitiesExistEPKNS_6EntityEj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$013 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 if (!$2) {
  STACKTOP = sp;
  return;
 }
 $4 = $0 + 24 | 0;
 $5 = $0 + 20 | 0;
 $$013 = 0;
 while (1) {
  $6 = $1 + ($$013 << 3) | 0;
  if ((HEAP32[$6 >> 2] | 0) <= -1) {
   label = 5;
   break;
  }
  $9 = $1 + ($$013 << 3) + 4 | 0;
  if (!(HEAP32[$9 >> 2] | 0)) {
   label = 7;
   break;
  }
  $12 = HEAP32[$6 >> 2] | 0;
  if ($12 >>> 0 >= (HEAP32[$4 >> 2] | 0) >>> 0) {
   label = 9;
   break;
  }
  if ((HEAP32[(HEAP32[$5 >> 2] | 0) + ($12 << 4) >> 2] | 0) != (HEAP32[$9 >> 2] | 0)) {
   label = 11;
   break;
  }
  $$013 = $$013 + 1 | 0;
  if (($$013 | 0) == ($2 | 0)) {
   label = 3;
   break;
  }
 }
 if ((label | 0) == 3) {
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 5) {
  _snprintf(25060, 1024, 11257, $vararg_buffer) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 11379, 9049, 391);
 } else if ((label | 0) == 7) {
  _snprintf(25060, 1024, 11392, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 11407, 9049, 392);
 } else if ((label | 0) == 9) {
  _snprintf(25060, 1024, 11422, $vararg_buffer3) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 11443, 9049, 393);
 } else if ((label | 0) == 11) {
  _snprintf(25060, 1024, 11479, $vararg_buffer5) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 11522, 9049, 394);
 }
}

function __ZN9rapidjson13GenericReaderINS_4UTF8IcEES2_NS_12CrtAllocatorEE9ParseHex4INS_25GenericInsituStringStreamIS2_EEEEjRT_j($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$sink = 0, $$sink44 = 0, $$sink45 = 0, $$sink46 = 0, $13 = 0, $14 = 0, $17 = 0, $20 = 0, $24 = 0, $25 = 0, $28 = 0, $3 = 0, $33 = 0, $34 = 0, $37 = 0, $4 = 0, $5 = 0, $9 = 0, label = 0;
 $3 = HEAP32[$1 >> 2] | 0;
 $4 = HEAP8[$3 >> 0] | 0;
 $5 = $4 << 24 >> 24;
 if (($4 + -48 & 255) < 10) {
  $$sink = -48;
  label = 6;
 } else if (($4 + -65 & 255) < 6) {
  $$sink = -55;
  label = 6;
 } else if (($4 + -97 & 255) < 6) {
  $$sink = -87;
  label = 6;
 }
 do if ((label | 0) == 6) {
  $13 = $3 + 1 | 0;
  HEAP32[$1 >> 2] = $13;
  $14 = HEAP8[$13 >> 0] | 0;
  $17 = ($$sink + $5 << 4) + ($14 << 24 >> 24) | 0;
  if (($14 + -48 & 255) < 10) $$sink44 = -48; else if (($14 + -65 & 255) < 6) $$sink44 = -55; else if (($14 + -97 & 255) < 6) $$sink44 = -87; else break;
  $24 = $3 + 2 | 0;
  HEAP32[$1 >> 2] = $24;
  $25 = HEAP8[$24 >> 0] | 0;
  $28 = ($17 + $$sink44 << 4) + ($25 << 24 >> 24) | 0;
  if (($25 + -48 & 255) < 10) $$sink45 = -48; else if (($25 + -65 & 255) < 6) $$sink45 = -55; else if (($25 + -97 & 255) < 6) $$sink45 = -87; else break;
  $33 = $3 + 3 | 0;
  HEAP32[$1 >> 2] = $33;
  $34 = HEAP8[$33 >> 0] | 0;
  $37 = ($28 + $$sink45 << 4) + ($34 << 24 >> 24) | 0;
  if (($34 + -48 & 255) < 10) $$sink46 = -48; else if (($34 + -65 & 255) < 6) $$sink46 = -55; else if (($34 + -97 & 255) < 6) $$sink46 = -87; else break;
  HEAP32[$1 >> 2] = $3 + 4;
  $20 = $37 + $$sink46 | 0;
  return $20 | 0;
 } while (0);
 $9 = $0 + 24 | 0;
 if (HEAP32[$9 >> 2] | 0) ___assert_fail(17049, 16987, 768, 17754);
 HEAP32[$9 >> 2] = 8;
 HEAP32[$0 + 28 >> 2] = $2;
 $20 = 0;
 return $20 | 0;
}

function __ZN2ut4arch22ArchetypeChunkIterator20rawSharedDataByIndexEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0$in = 0, $$pre = 0, $14 = 0, $25 = 0, $32 = 0, $37 = 0, $39 = 0, $vararg_buffer5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 if (!(HEAP8[$0 + 28 >> 0] | 0)) {
  _snprintf(25060, 1024, 13714, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13735, 13749, 253);
 }
 if ((HEAP32[$0 + 32 >> 2] | 0) != (HEAP32[HEAP32[(HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + 32 >> 2] >> 2] | 0)) {
  _snprintf(25060, 1024, 13906, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13942, 13749, 254);
 }
 $14 = $0 + 16 | 0;
 if (!(HEAP32[(HEAP32[(HEAP32[$14 >> 2] | 0) + 32 >> 2] | 0) + ($1 << 4) + 4 >> 2] & 2)) {
  _snprintf(25060, 1024, 27124, sp + 16 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 19134, 13749, 256);
 }
 $25 = HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + 20 >> 2] | 0;
 $$pre = HEAP32[$14 >> 2] | 0;
 if ($25 | 0) {
  $32 = HEAP32[$25 + (HEAP32[(HEAP32[$$pre + 100 >> 2] | 0) + ($1 << 2) >> 2] << 2) >> 2] | 0;
  if ($32 | 0) {
   $$0$in = (HEAP32[(HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] | 0) + 36 >> 2] | 0) + ($32 << 2) | 0;
   $$0 = HEAP32[$$0$in >> 2] | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 $37 = HEAP32[(HEAP32[$$pre + 32 >> 2] | 0) + ($1 << 4) >> 2] | 0;
 $39 = HEAP32[6067] | 0;
 if ((HEAP32[6068] | 0) - $39 >> 2 >>> 0 <= $37 >>> 0) {
  _snprintf(25060, 1024, 27124, $vararg_buffer5) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
 $$0$in = (HEAP32[$39 + ($37 << 2) >> 2] | 0) + 24 | 0;
 $$0 = HEAP32[$$0$in >> 2] | 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN2ut4arch17EntityDataManagerC2Ev($0) {
 $0 = $0 | 0;
 var $$lcssa = 0, $1 = 0, $13 = 0, $16 = 0, $2 = 0, $22 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $32 = 0, $35 = 0, $37 = 0, $39 = 0, $40 = 0, $6 = 0, $7 = 0, $8 = 0, $16$looptemp = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 $1 = $0 + 32 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $0 + 36 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$0 + 40 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = 1;
 HEAP32[$0 + 44 >> 2] = 0;
 $6 = $0 + 24 | 0;
 HEAP32[$6 >> 2] = 4096;
 $7 = _malloc(65536) | 0;
 $8 = $0 + 20 | 0;
 HEAP32[$8 >> 2] = $7;
 HEAP32[$0 + 28 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 1;
 HEAP32[$7 >> 2] = 1;
 HEAP32[(HEAP32[$8 >> 2] | 0) + 12 >> 2] = 0;
 $13 = HEAP32[$6 >> 2] | 0;
 if ($13 >>> 0 > 1) {
  $16 = 1;
  do {
   $16$looptemp = $16;
   $16 = $16 + 1 | 0;
   HEAP32[(HEAP32[$8 >> 2] | 0) + ($16$looptemp << 4) + 4 >> 2] = $16;
   HEAP32[(HEAP32[$8 >> 2] | 0) + ($16$looptemp << 4) >> 2] = 1;
   HEAP32[(HEAP32[$8 >> 2] | 0) + ($16$looptemp << 4) + 12 >> 2] = 0;
   $22 = HEAP32[$6 >> 2] | 0;
  } while ($16 >>> 0 < $22 >>> 0);
  $$lcssa = $22;
 } else $$lcssa = $13;
 HEAP32[(HEAP32[$8 >> 2] | 0) + ($$lcssa + -1 << 4) + 4 >> 2] = -1;
 $27 = HEAP32[$2 >> 2] | 0;
 $28 = HEAP32[$1 >> 2] | 0;
 $29 = $27 - $28 | 0;
 $30 = $29 >> 2;
 $32 = $28;
 if ($30 >>> 0 < 128) {
  __ZNSt3__26vectorIjNS_9allocatorIjEEE8__appendEj($1, 128 - $30 | 0);
  $37 = HEAP32[$1 >> 2] | 0;
  $40 = HEAP32[$2 >> 2] | 0;
 } else if (($29 | 0) == 512) {
  $37 = $32;
  $40 = $27;
 } else {
  $35 = $32 + 512 | 0;
  HEAP32[$2 >> 2] = $35;
  $37 = $32;
  $40 = $35;
 }
 $39 = $40 - $37 | 0;
 if (($39 | 0) <= 0) return;
 _memset($37 | 0, 0, $39 | 0) | 0;
 return;
}

function __ZN2ut4arch17EntityDataManager12setArchetypeENS_6EntityEPNS0_9ArchetypeEPi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $19 = 0, $24 = 0, $31 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0;
 $5 = __ZN2ut4arch16ArchetypeManager22getChunkWithEmptySlotsEPNS0_9ArchetypeEPi(HEAP32[$0 >> 2] | 0, $2, $3) | 0;
 $7 = __ZN2ut4arch16ArchetypeManager17allocateIntoChunkEPNS0_5ChunkE(HEAP32[$0 >> 2] | 0, $5) | 0;
 $8 = $0 + 20 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 $10 = HEAP32[$1 >> 2] | 0;
 $11 = $9 + ($10 << 4) + 8 | 0;
 $12 = HEAP32[$11 >> 2] | 0;
 $13 = $9 + ($10 << 4) + 12 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 $15 = $9 + ($10 << 4) + 4 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 __ZN2ut4arch5Chunk18moveAndConvertDataEPS1_iS2_i($14, $16, $5, $7);
 HEAP32[$11 >> 2] = $2;
 HEAP32[$13 >> 2] = $5;
 HEAP32[$15 >> 2] = $7;
 $19 = (HEAP32[$14 + 24 >> 2] | 0) + -1 | 0;
 if (($19 | 0) == ($16 | 0)) {
  $35 = $12 + 16 | 0;
  $36 = HEAP32[$35 >> 2] | 0;
  $37 = $36 + -1 | 0;
  HEAP32[$35 >> 2] = $37;
  $38 = HEAP32[$0 >> 2] | 0;
  __ZN2ut4arch16ArchetypeManager13setChunkCountEPNS0_5ChunkEi($38, $14, $19);
  return;
 }
 $24 = HEAP32[(HEAP32[$14 + 16 >> 2] | 0) + 32 >> 2] | 0;
 $31 = (Math_imul(HEAP32[$24 + 12 >> 2] | 0, $19) | 0) + (HEAP32[$24 + 8 >> 2] | 0) + ($14 + 48) | 0;
 HEAP32[(HEAP32[$8 >> 2] | 0) + (HEAP32[$31 >> 2] << 4) + 4 >> 2] = $16;
 __ZN2ut4arch5Chunk8moveDataEPS1_iS2_ii($14, $19, $14, $16, 1);
 $35 = $12 + 16 | 0;
 $36 = HEAP32[$35 >> 2] | 0;
 $37 = $36 + -1 | 0;
 HEAP32[$35 >> 2] = $37;
 $38 = HEAP32[$0 >> 2] | 0;
 __ZN2ut4arch16ArchetypeManager13setChunkCountEPNS0_5ChunkEi($38, $14, $19);
 return;
}

function __ZN2ut17InitComponentInfoEPKciiiijPvPFvS2_iES4_PFvPKvS2_iEPFvS2_S2_ES4_iiPKii($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = $10 | 0;
 $11 = $11 | 0;
 $12 = $12 | 0;
 $13 = $13 | 0;
 $14 = $14 | 0;
 $15 = $15 | 0;
 var $16 = 0, $17 = 0, $18 = 0, $23 = 0, $27 = 0, $31 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $16 = sp;
 $17 = __Znwj(76) | 0;
 dest = $17;
 stop = dest + 76 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$16 >> 2] = $17;
 $18 = HEAP32[6068] | 0;
 if ($18 >>> 0 < (HEAP32[6069] | 0) >>> 0) {
  HEAP32[$18 >> 2] = $17;
  $23 = (HEAP32[6068] | 0) + 4 | 0;
  HEAP32[6068] = $23;
  $27 = $23;
 } else {
  __ZNSt3__26vectorIPN2ut13ComponentInfoENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRS3_EEEvDpOT_(24268, $16);
  $27 = HEAP32[6068] | 0;
 }
 HEAP32[HEAP32[$16 >> 2] >> 2] = ($27 - (HEAP32[6067] | 0) >> 2) + -1;
 $31 = HEAP32[$16 >> 2] | 0;
 if ((HEAP32[$31 >> 2] | 0) >>> 0 > 256) _abort(); else {
  HEAP32[$31 + 52 >> 2] = $0;
  HEAP32[$31 + 12 >> 2] = $1;
  HEAP32[$31 + 16 >> 2] = $2;
  HEAP32[$31 + 20 >> 2] = $4;
  HEAP32[$31 + 8 >> 2] = $3;
  HEAP32[$31 + 4 >> 2] = $5;
  HEAP32[$31 + 24 >> 2] = $6;
  HEAP32[$31 + 28 >> 2] = $7;
  HEAP32[$31 + 32 >> 2] = $8;
  HEAP32[$31 + 48 >> 2] = $13;
  HEAP32[$31 + 36 >> 2] = $9;
  HEAP32[$31 + 44 >> 2] = $12;
  HEAP32[$31 + 40 >> 2] = $10;
  HEAP32[$31 + 72 >> 2] = $11;
  HEAP32[$31 + 60 >> 2] = $14;
  HEAP32[$31 + 56 >> 2] = $15;
  STACKTOP = sp;
  return $31 | 0;
 }
 return 0;
}

function __ZNK9rapidjson12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorINS_12CrtAllocatorEEEE9HasMemberEPKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i$i$i = 0, $$lcssa = 0, $$sroa$03$0$lcssa = 0, $$sroa$03$010 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $24 = 0, $34 = 0, $38 = 0, $8 = 0, label = 0;
 $$0$i$i$i$i = $1;
 while (1) if (!(HEAP8[$$0$i$i$i$i >> 0] | 0)) break; else $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
 if (!$1) ___assert_fail(16395, 15939, 315, 16402);
 $8 = $$0$i$i$i$i - $1 | 0;
 if ((HEAP16[$0 + 18 >> 1] | 0) != 3) ___assert_fail(16210, 15939, 1154, 16843);
 $13 = HEAP32[$0 + 8 >> 2] | 0;
 $14 = HEAP32[$0 >> 2] | 0;
 $16 = $13;
 L10 : do if (!$14) {
  $$lcssa = 0;
  $$sroa$03$0$lcssa = $13;
 } else {
  $17 = $16 + ($14 * 48 | 0) | 0;
  $$sroa$03$010 = $13;
  $19 = $16;
  while (1) {
   $20 = HEAP16[$19 + 18 >> 1] | 0;
   if (!($20 & 1024)) {
    label = 10;
    break;
   }
   $24 = ($20 & 4096) == 0;
   if (($8 | 0) == (($24 ? HEAP32[$19 >> 2] | 0 : 17 - (HEAP8[$19 + 17 >> 0] | 0) | 0) | 0)) {
    $34 = $24 ? HEAP32[$19 + 8 >> 2] | 0 : $19;
    if (($34 | 0) == ($1 | 0)) {
     $$lcssa = $14;
     $$sroa$03$0$lcssa = $$sroa$03$010;
     break L10;
    }
    if (!(_memcmp($1, $34, $8) | 0)) {
     $$lcssa = $14;
     $$sroa$03$0$lcssa = $$sroa$03$010;
     break L10;
    }
   }
   $38 = $19 + 48 | 0;
   if (($38 | 0) == ($17 | 0)) {
    label = 15;
    break;
   } else {
    $$sroa$03$010 = $38;
    $19 = $38;
   }
  }
  if ((label | 0) == 10) ___assert_fail(16892, 15939, 1993, 16880); else if ((label | 0) == 15) {
   $$lcssa = $14;
   $$sroa$03$0$lcssa = $38;
   break;
  }
 } while (0);
 return ($16 + ($$lcssa * 48 | 0) | 0) != ($$sroa$03$0$lcssa | 0) | 0;
}

function __ZN2ut9Scheduler9stringifyEc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$sroa$05$011 = 0, $10 = 0, $12 = 0, $13 = 0, $15 = 0, $17 = 0, $23 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 $4 = __ZN2ut9Scheduler7resolveEv($1) | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = $4 + 4 | 0;
 if (($5 | 0) == (HEAP32[$6 >> 2] | 0)) {
  $10 = 0;
  $12 = 0;
  $17 = 0;
 } else {
  $$sroa$05$011 = $5;
  do {
   if (!(HEAP8[$$sroa$05$011 + 36 >> 0] | 0)) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($3, 33);
   $23 = $$sroa$05$011 + 4 | 0;
   $25 = HEAP8[$23 + 11 >> 0] | 0;
   $26 = $25 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($3, $26 ? HEAP32[$23 >> 2] | 0 : $23, $26 ? HEAP32[$$sroa$05$011 + 8 >> 2] | 0 : $25 & 255) | 0;
   if (!(HEAP32[$$sroa$05$011 + 16 >> 2] | 0)) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($3, 18585) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($3, $2);
   $$sroa$05$011 = $$sroa$05$011 + 40 | 0;
  } while (($$sroa$05$011 | 0) != (HEAP32[$6 >> 2] | 0));
  $10 = HEAP8[$3 + 11 >> 0] | 0;
  $12 = HEAP32[$3 + 4 >> 2] | 0;
  $17 = HEAP32[$3 >> 2] | 0;
 }
 $9 = $10 << 24 >> 24 < 0;
 $13 = $9 ? $12 : $10 & 255;
 $15 = _malloc($13 + 1 | 0) | 0;
 HEAP32[$0 >> 2] = $15;
 HEAP32[$0 + 4 >> 2] = $13;
 _memcpy($15 | 0, ($9 ? $17 : $3) | 0, $13 | 0) | 0;
 HEAP8[$15 + $13 >> 0] = 0;
 if (!$9) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv($17);
 STACKTOP = sp;
 return;
}

function __ZN2ut4arch16ArchetypeManagerD2Ev($0) {
 $0 = $0 | 0;
 var $$014$i$i$i = 0, $$035 = 0, $$08$i$i = 0, $$in39 = 0, $11 = 0, $18 = 0, $19 = 0, $2 = 0, $26 = 0, $30 = 0, $35 = 0, $36 = 0, $7 = 0, $8 = 0, $$035$looptemp = 0, $$in39$looptemp = 0, $$08$i$i$looptemp = 0, $$014$i$i$i$looptemp = 0;
 $2 = HEAP32[$0 + 48 >> 2] | 0;
 if ($2 | 0) {
  $$035 = $2;
  do {
   $$035$looptemp = $$035;
   $$035 = HEAP32[$$035 + 108 >> 2] | 0;
   __ZN2ut4arch9Archetype13releaseMemoryEv($$035$looptemp) | 0;
  } while (($$035 | 0) != 0);
 }
 $7 = $0 + 52 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 L6 : do if ($8 | 0) {
  $11 = HEAP32[$8 + 4 >> 2] | 0;
  if (!(($11 | 0) == 0 | ($11 | 0) == ($8 | 0))) {
   $$in39 = $11;
   do {
    $$in39$looptemp = $$in39;
    $$in39 = HEAP32[$$in39 + 4 >> 2] | 0;
    _free($$in39$looptemp);
    if (!$$in39) break L6;
   } while (($$in39 | 0) != (HEAP32[$7 >> 2] | 0));
  }
 } while (0);
 $18 = $0 + 36 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 if ($19 | 0) {
  $$08$i$i = $19;
  do {
   $$08$i$i$looptemp = $$08$i$i;
   $$08$i$i = HEAP32[$$08$i$i >> 2] | 0;
   _free($$08$i$i$looptemp);
  } while (($$08$i$i | 0) != 0);
 }
 HEAP32[$0 + 40 >> 2] = 0;
 HEAP32[$18 >> 2] = 0;
 HEAP32[$0 + 44 >> 2] = 0;
 $26 = HEAP32[$0 + 24 >> 2] | 0;
 if ($26 | 0) {
  $$014$i$i$i = $26;
  do {
   $$014$i$i$i$looptemp = $$014$i$i$i;
   $$014$i$i$i = HEAP32[$$014$i$i$i >> 2] | 0;
   $30 = HEAP32[$$014$i$i$i$looptemp + 8 >> 2] | 0;
   if ($30 | 0) {
    HEAP32[$$014$i$i$i$looptemp + 12 >> 2] = $30;
    __ZdlPv($30);
   }
   __ZdlPv($$014$i$i$i$looptemp);
  } while (($$014$i$i$i | 0) != 0);
 }
 $35 = $0 + 16 | 0;
 $36 = HEAP32[$35 >> 2] | 0;
 HEAP32[$35 >> 2] = 0;
 if (!$36) return;
 __ZdlPv($36);
 return;
}

function _vfprintf($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$1 = 0, $13 = 0, $14 = 0, $19 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $35 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $spec$select = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $3 = sp + 120 | 0;
 $4 = sp + 80 | 0;
 $5 = sp;
 $6 = sp + 136 | 0;
 dest = $4;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$3 >> 2] = HEAP32[$2 >> 2];
 if ((_printf_core(0, $1, $3, $5, $4) | 0) < 0) $$0 = -1; else {
  if ((HEAP32[$0 + 76 >> 2] | 0) > -1) $40 = ___lockfile($0) | 0; else $40 = 0;
  $13 = HEAP32[$0 >> 2] | 0;
  $14 = $13 & 32;
  if ((HEAP8[$0 + 74 >> 0] | 0) < 1) HEAP32[$0 >> 2] = $13 & -33;
  $19 = $0 + 48 | 0;
  if (!(HEAP32[$19 >> 2] | 0)) {
   $23 = $0 + 44 | 0;
   $24 = HEAP32[$23 >> 2] | 0;
   HEAP32[$23 >> 2] = $6;
   $25 = $0 + 28 | 0;
   HEAP32[$25 >> 2] = $6;
   $26 = $0 + 20 | 0;
   HEAP32[$26 >> 2] = $6;
   HEAP32[$19 >> 2] = 80;
   $28 = $0 + 16 | 0;
   HEAP32[$28 >> 2] = $6 + 80;
   $29 = _printf_core($0, $1, $3, $5, $4) | 0;
   if (!$24) $$1 = $29; else {
    FUNCTION_TABLE_iiii[HEAP32[$0 + 36 >> 2] & 7]($0, 0, 0) | 0;
    $spec$select = (HEAP32[$26 >> 2] | 0) == 0 ? -1 : $29;
    HEAP32[$23 >> 2] = $24;
    HEAP32[$19 >> 2] = 0;
    HEAP32[$28 >> 2] = 0;
    HEAP32[$25 >> 2] = 0;
    HEAP32[$26 >> 2] = 0;
    $$1 = $spec$select;
   }
  } else $$1 = _printf_core($0, $1, $3, $5, $4) | 0;
  $35 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = $35 | $14;
  if ($40 | 0) ___unlockfile($0);
  $$0 = ($35 & 32 | 0) == 0 ? $$1 : -1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_template_argINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$051 = 0, $$4 = 0, $13 = 0, $17 = 0, $20 = 0, $24 = 0, $25 = 0, $6 = 0, $7 = 0;
 L1 : do if (($0 | 0) == ($1 | 0)) $$4 = $0; else switch (HEAP8[$0 >> 0] | 0) {
 case 88:
  {
   $6 = $0 + 1 | 0;
   $7 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($6, $1, $2) | 0;
   if (($7 | 0) == ($6 | 0) | ($7 | 0) == ($1 | 0)) {
    $$4 = $0;
    break L1;
   }
   $$4 = (HEAP8[$7 >> 0] | 0) == 69 ? $7 + 1 | 0 : $0;
   break L1;
   break;
  }
 case 74:
  {
   $13 = $0 + 1 | 0;
   if (($13 | 0) == ($1 | 0)) {
    $$4 = $0;
    break L1;
   }
   $$051 = $13;
   while (1) {
    if ((HEAP8[$$051 >> 0] | 0) == 69) break;
    $17 = __ZN10__cxxabiv112_GLOBAL__N_118parse_template_argINS0_2DbEEEPKcS4_S4_RT_($$051, $1, $2) | 0;
    if (($17 | 0) == ($$051 | 0)) {
     $$4 = $0;
     break L1;
    } else $$051 = $17;
   }
   $$4 = $$051 + 1 | 0;
   break L1;
   break;
  }
 case 76:
  {
   $20 = $0 + 1 | 0;
   if (($20 | 0) != ($1 | 0)) if ((HEAP8[$20 >> 0] | 0) == 90) {
    $24 = $0 + 2 | 0;
    $25 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($24, $1, $2) | 0;
    if (($25 | 0) == ($24 | 0) | ($25 | 0) == ($1 | 0)) {
     $$4 = $0;
     break L1;
    }
    $$4 = (HEAP8[$25 >> 0] | 0) == 69 ? $25 + 1 | 0 : $0;
    break L1;
   }
   $$4 = __ZN10__cxxabiv112_GLOBAL__N_118parse_expr_primaryINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
   break L1;
   break;
  }
 default:
  {
   $$4 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
   break L1;
  }
 } while (0);
 return $$4 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $10 = 0, $11 = 0, $12 = 0, $15 = 0, $2 = 0, $3 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = $0 + 11 | 0;
 if ((HEAP8[$3 >> 0] | 0) < 0) {
  $6 = HEAP32[$0 >> 2] | 0;
  HEAP8[$2 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($6, $2);
  HEAP32[$0 + 4 >> 2] = 0;
 } else {
  HEAP8[$2 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($0, $2);
  HEAP8[$3 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEj($0);
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 $$0$i$i$i$i = 0;
 while (1) {
  if (($$0$i$i$i$i | 0) == 3) break;
  HEAP32[$1 + ($$0$i$i$i$i << 2) >> 2] = 0;
  $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
 }
 $10 = $0 + 12 | 0;
 $11 = $1 + 12 | 0;
 $12 = $10 + 11 | 0;
 if ((HEAP8[$12 >> 0] | 0) < 0) {
  $15 = HEAP32[$10 >> 2] | 0;
  HEAP8[$2 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($15, $2);
  HEAP32[$0 + 16 >> 2] = 0;
 } else {
  HEAP8[$2 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($10, $2);
  HEAP8[$12 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEj($10);
 HEAP32[$10 >> 2] = HEAP32[$11 >> 2];
 HEAP32[$10 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
 HEAP32[$10 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
 $$0$i$i$i$i3 = 0;
 while (1) {
  if (($$0$i$i$i$i3 | 0) == 3) break;
  HEAP32[$11 + ($$0$i$i$i$i3 << 2) >> 2] = 0;
  $$0$i$i$i$i3 = $$0$i$i$i$i3 + 1 | 0;
 }
 STACKTOP = sp;
 return;
}

function ___mo_lookup($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$090 = 0, $$094 = 0, $$4 = 0, $10 = 0, $13 = 0, $17 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $31 = 0, $35 = 0, $4 = 0, $44 = 0, $46 = 0, $49 = 0, $53 = 0, $63 = 0, $7 = 0;
 $4 = (HEAP32[$0 >> 2] | 0) + 1794895138 | 0;
 $7 = _swapc(HEAP32[$0 + 8 >> 2] | 0, $4) | 0;
 $10 = _swapc(HEAP32[$0 + 12 >> 2] | 0, $4) | 0;
 $13 = _swapc(HEAP32[$0 + 16 >> 2] | 0, $4) | 0;
 L1 : do if ($7 >>> 0 < $1 >>> 2 >>> 0) {
  $17 = $1 - ($7 << 2) | 0;
  if ($10 >>> 0 < $17 >>> 0 & $13 >>> 0 < $17 >>> 0) if (!(($13 | $10) & 3)) {
   $23 = $10 >>> 2;
   $24 = $13 >>> 2;
   $$090 = 0;
   $$094 = $7;
   while (1) {
    $25 = $$094 >>> 1;
    $26 = $$090 + $25 | 0;
    $27 = $26 << 1;
    $28 = $27 + $23 | 0;
    $31 = _swapc(HEAP32[$0 + ($28 << 2) >> 2] | 0, $4) | 0;
    $35 = _swapc(HEAP32[$0 + ($28 + 1 << 2) >> 2] | 0, $4) | 0;
    if (!($35 >>> 0 < $1 >>> 0 & $31 >>> 0 < ($1 - $35 | 0) >>> 0)) {
     $$4 = 0;
     break L1;
    }
    if (HEAP8[$0 + ($35 + $31) >> 0] | 0) {
     $$4 = 0;
     break L1;
    }
    $44 = _strcmp($2, $0 + $35 | 0) | 0;
    if (!$44) break;
    $63 = ($44 | 0) < 0;
    if (($$094 | 0) == 1) {
     $$4 = 0;
     break L1;
    }
    $$090 = $63 ? $$090 : $26;
    $$094 = $63 ? $25 : $$094 - $25 | 0;
   }
   $46 = $27 + $24 | 0;
   $49 = _swapc(HEAP32[$0 + ($46 << 2) >> 2] | 0, $4) | 0;
   $53 = _swapc(HEAP32[$0 + ($46 + 1 << 2) >> 2] | 0, $4) | 0;
   if ($53 >>> 0 < $1 >>> 0 & $49 >>> 0 < ($1 - $53 | 0) >>> 0) $$4 = (HEAP8[$0 + ($53 + $49) >> 0] | 0) == 0 ? $0 + $53 | 0 : 0; else $$4 = 0;
  } else $$4 = 0; else $$4 = 0;
 } else $$4 = 0; while (0);
 return $$4 | 0;
}

function __ZN2ut4arch5Chunk26getComponentDataWithTypeRWEijj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$020$i = 0, $10 = 0, $19 = 0, $22 = 0, $31 = 0, $34 = 0, $4 = 0, $5 = 0, $8 = 0, $9 = 0, $phi$call = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $4 = $0 + 16 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $8 = HEAP8[($2 & 63) + ($5 + 36) >> 0] | 0;
 $9 = $8 & 255;
 $10 = $5 + 28 | 0;
 if ((HEAP32[$10 >> 2] | 0) <= ($9 | 0)) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13990, 14007, 120);
 }
 if (!($8 << 24 >> 24)) label = 5; else if ((HEAP32[(HEAP32[$5 + 32 >> 2] | 0) + ($9 << 4) >> 2] | 0) == ($2 | 0)) $31 = $9; else label = 5;
 L6 : do if ((label | 0) == 5) {
  $19 = HEAP32[$10 >> 2] | 0;
  if (($19 | 0) <= 0) {
   _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 7085, 7101, 78);
  }
  $22 = HEAP32[$5 + 32 >> 2] | 0;
  $$020$i = 0;
  do {
   if ((HEAP32[$22 + ($$020$i << 4) >> 2] | 0) == ($2 | 0)) {
    $31 = $$020$i;
    break L6;
   }
   $$020$i = $$020$i + 1 | 0;
  } while (($$020$i | 0) < ($19 | 0));
  _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 7085, 7101, 78);
 } while (0);
 HEAP32[(HEAP32[$0 + 40 >> 2] | 0) + ($31 << 2) >> 2] = $3;
 $34 = HEAP32[(HEAP32[$4 >> 2] | 0) + 32 >> 2] | 0;
 $phi$call = (Math_imul(HEAP32[$34 + ($31 << 4) + 12 >> 2] | 0, $1) | 0) + (HEAP32[$34 + ($31 << 4) + 8 >> 2] | 0) + ($0 + 48) | 0;
 STACKTOP = sp;
 return $phi$call | 0;
}

function ___dynamic_cast($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $4 = 0, $5 = 0, $8 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $4 = sp;
 $5 = HEAP32[$0 >> 2] | 0;
 $8 = $0 + (HEAP32[$5 + -8 >> 2] | 0) | 0;
 $10 = HEAP32[$5 + -4 >> 2] | 0;
 HEAP32[$4 >> 2] = $2;
 HEAP32[$4 + 4 >> 2] = $0;
 HEAP32[$4 + 8 >> 2] = $1;
 HEAP32[$4 + 12 >> 2] = $3;
 $14 = $4 + 16 | 0;
 $15 = $4 + 20 | 0;
 $16 = $4 + 24 | 0;
 $17 = $4 + 28 | 0;
 $18 = $4 + 32 | 0;
 $19 = $4 + 40 | 0;
 dest = $14;
 stop = dest + 36 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$14 + 36 >> 1] = 0;
 HEAP8[$14 + 38 >> 0] = 0;
 L1 : do if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($10, $2, 0) | 0) {
  HEAP32[$4 + 48 >> 2] = 1;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 3]($10, $4, $8, $8, 1, 0);
  $$0 = (HEAP32[$16 >> 2] | 0) == 1 ? $8 : 0;
 } else {
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 24 >> 2] & 3]($10, $4, $8, 1, 0);
  switch (HEAP32[$4 + 36 >> 2] | 0) {
  case 0:
   {
    $$0 = (HEAP32[$19 >> 2] | 0) == 1 & (HEAP32[$17 >> 2] | 0) == 1 & (HEAP32[$18 >> 2] | 0) == 1 ? HEAP32[$15 >> 2] | 0 : 0;
    break L1;
    break;
   }
  case 1:
   break;
  default:
   {
    $$0 = 0;
    break L1;
   }
  }
  if ((HEAP32[$16 >> 2] | 0) != 1) if (!((HEAP32[$19 >> 2] | 0) == 0 & (HEAP32[$17 >> 2] | 0) == 1 & (HEAP32[$18 >> 2] | 0) == 1)) {
   $$0 = 0;
   break;
  }
  $$0 = HEAP32[$14 >> 2] | 0;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$idx$i = 0, $$3 = 0, $10 = 0, $17 = 0, $22 = 0, $23 = 0, $3 = 0, $5 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 if (($0 | 0) == ($1 | 0)) $$3 = $0; else {
  $5 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
  if (($5 | 0) == ($0 | 0)) $$3 = $0; else {
   $7 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($5, $1, $2) | 0;
   if (($7 | 0) == ($5 | 0)) $$3 = $5; else {
    $9 = $2 + 4 | 0;
    $10 = HEAP32[$9 >> 2] | 0;
    if ((($10 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$3 = $0; else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $10 + -24 | 0);
     $17 = HEAP32[$9 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($17 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$9 >> 2] = $17 + -24;
     $22 = HEAP8[$3 + 11 >> 0] | 0;
     $23 = $22 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($17 + -48 | 0, $23 ? HEAP32[$3 >> 2] | 0 : $3, $23 ? HEAP32[$3 + 4 >> 2] | 0 : $22 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$3 = $7;
    }
   }
  }
 }
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZN20ComponentDataCommand4moveEPN2ut4arch19EntityCommandBufferENS1_15EntityCommandOpENS0_6EntityEjPviPS6_($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $19 = 0, $24 = 0, $25 = 0, $29 = 0, $31 = 0, $7 = 0, $9 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $tmpcast$byval_copy = sp + 32 | 0;
 $7 = sp;
 $9 = HEAP32[6067] | 0;
 if ((HEAP32[6068] | 0) - $9 >> 2 >>> 0 <= $3 >>> 0) {
  _snprintf(25060, 1024, 27124, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
 if (!(HEAP32[(HEAP32[$9 + ($3 << 2) >> 2] | 0) + 40 >> 2] | 0)) {
  _snprintf(25060, 1024, 8548, sp + 16 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8609, 6212, 128);
 }
 $19 = $2;
 $24 = HEAP32[$19 + 4 >> 2] | 0;
 $25 = $7;
 HEAP32[$25 >> 2] = HEAP32[$19 >> 2];
 HEAP32[$25 + 4 >> 2] = $24;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$7 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$7 + 4 >> 2];
 $29 = __ZN20ComponentDataCommand13createCommandEPN2ut4arch19EntityCommandBufferENS1_15EntityCommandOpENS0_6EntityEjiPPv($0, $1, $tmpcast$byval_copy, $3, $5, $6) | 0;
 $31 = HEAP32[6067] | 0;
 if ((HEAP32[6068] | 0) - $31 >> 2 >>> 0 > $3 >>> 0) {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$31 + ($3 << 2) >> 2] | 0) + 40 >> 2] & 15]($4, HEAP32[$29 + 24 >> 2] | 0);
  HEAP8[$0 + 28 >> 0] = 1;
  STACKTOP = sp;
  return;
 } else {
  _snprintf(25060, 1024, 27124, sp + 24 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
}

function __ZN2ut4arch19EntityCommandBuffer22createDeferredEntitiesEPNS0_9ArchetypeEPNS_6EntityEj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i$i$i = 0, $$010 = 0, $$089 = 0, $$sink = 0, $$sink11 = 0, $$sroa$speculated$i$i$i$i = 0, $14 = 0, $16 = 0, $19 = 0, $23 = 0, $26 = 0, $27 = 0, $28 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, label = 0;
 $4 = $0 + 8 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (!$5) label = 3; else if (((HEAP32[$5 + 4 >> 2] | 0) - (HEAP32[$5 + 8 >> 2] | 0) | 0) > 16) $$0$i$i$i = $5; else label = 3;
 if ((label | 0) == 3) {
  $14 = HEAP32[$0 + 12 >> 2] | 0;
  $$sroa$speculated$i$i$i$i = ($14 | 0) > 28 ? $14 : 28;
  $16 = _aligned_alloc(16, $$sroa$speculated$i$i$i$i) | 0;
  HEAP32[$16 >> 2] = 0;
  HEAP32[$16 + 4 >> 2] = $$sroa$speculated$i$i$i$i;
  HEAP32[$16 + 8 >> 2] = 12;
  $19 = $0 + 4 | 0;
  if (!(HEAP32[$19 >> 2] | 0)) {
   $$sink = $4;
   $$sink11 = $19;
  } else {
   $$sink = HEAP32[$4 >> 2] | 0;
   $$sink11 = $4;
  }
  HEAP32[$$sink >> 2] = $16;
  HEAP32[$$sink11 >> 2] = $16;
  $$0$i$i$i = $16;
 }
 $23 = $0 + 16 | 0;
 HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 1;
 $26 = $$0$i$i$i + 8 | 0;
 $27 = HEAP32[$26 >> 2] | 0;
 $28 = $$0$i$i$i + $27 | 0;
 HEAP32[$26 >> 2] = $27 + 16;
 HEAP32[$28 + 4 >> 2] = 16;
 HEAP32[$28 >> 2] = 1;
 HEAP32[$28 + 8 >> 2] = $1;
 HEAP32[$28 + 12 >> 2] = $3;
 if (!$3) return;
 $34 = $0 + 20 | 0;
 $$010 = $2;
 $$089 = $3;
 while (1) {
  $35 = HEAP32[$34 >> 2] | 0;
  HEAP32[$34 >> 2] = $35 + 1;
  HEAP32[$$010 >> 2] = ~$35;
  HEAP32[$$010 + 4 >> 2] = 0;
  $$089 = $$089 + -1 | 0;
  if (!$$089) break; else $$010 = $$010 + 8 | 0;
 }
 return;
}

function _ut_Scheduler_IsEnabledName($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$021$i$i1$i = 0, $$023$i$i$i = 0, $$1$lcssa$i$i$i = 0, $$122$i$i$i = 0, $11 = 0, $12 = 0, $2 = 0, $24 = 0, $3 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = HEAP32[$1 >> 2] | 0;
 if (!$3) {
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
 } else {
  $6 = HEAP32[$1 + 4 >> 2] | 0;
  $7 = $3 + $6 | 0;
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  if ($6 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($2);
  if ($6 >>> 0 < 11) {
   HEAP8[$2 + 11 >> 0] = $6;
   if (!$6) $$1$lcssa$i$i$i = $2; else {
    $$021$i$i1$i = $2;
    label = 7;
   }
  } else {
   $11 = $6 + 16 & -16;
   $12 = __Znwj($11) | 0;
   HEAP32[$2 >> 2] = $12;
   HEAP32[$2 + 8 >> 2] = $11 | -2147483648;
   HEAP32[$2 + 4 >> 2] = $6;
   $$021$i$i1$i = $12;
   label = 7;
  }
  if ((label | 0) == 7) {
   $$023$i$i$i = $3;
   $$122$i$i$i = $$021$i$i1$i;
   while (1) {
    HEAP8[$$122$i$i$i >> 0] = HEAP8[$$023$i$i$i >> 0] | 0;
    $$023$i$i$i = $$023$i$i$i + 1 | 0;
    if (($$023$i$i$i | 0) == ($7 | 0)) break; else $$122$i$i$i = $$122$i$i$i + 1 | 0;
   }
   $$1$lcssa$i$i$i = $$021$i$i1$i + $6 | 0;
  }
  HEAP8[$$1$lcssa$i$i$i >> 0] = 0;
 }
 $24 = __ZN2ut9Scheduler9isEnabledEi($0, __ZN2ut9Scheduler4findERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $2) | 0) | 0;
 if ((HEAP8[$2 + 11 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return $24 | 0;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return $24 | 0;
}

function __ZN2ut4arch13EntityManager25getComponentDataRawUnsafeENS_6EntityEj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$1 = 0, $14 = 0, $15 = 0, $20 = 0, $21 = 0, $3 = 0, $7 = 0, $tmpcast$byval_copy = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast$byval_copy = sp + 24 | 0;
 $vararg_buffer1 = sp + 16 | 0;
 $vararg_buffer = sp + 8 | 0;
 $3 = sp;
 __ZN2ut4arch13EntityManager18assertEntityExistsERKNS_6EntityEjPKcS6_($0, $1, $2, 6673, 6701);
 __ZN2ut4arch13EntityManager24assertEntityHasComponentERKNS_6EntityEjPKc($0, $1, $2, 6673);
 do if ((HEAP32[$0 + 36 >> 2] | 0) > 0) {
  $7 = __ZN2ut4arch13EntityManager25findFreshComponentDataRawERKNS_6EntityEjRb($0, $1, $2, $tmpcast$byval_copy) | 0;
  if (!(HEAP8[$tmpcast$byval_copy >> 0] | 0)) if ((HEAP32[$1 >> 2] | 0) > -1) break; else {
   _snprintf(25060, 1024, 6998, $vararg_buffer1) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 7067, 6920, 357);
  }
  if (!$7) {
   _snprintf(25060, 1024, 6705, $vararg_buffer) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 6906, 6920, 354);
  }
  $$1 = $7;
  STACKTOP = sp;
  return $$1 | 0;
 } while (0);
 $14 = HEAP32[$0 + 8 >> 2] | 0;
 $15 = $1;
 $20 = HEAP32[$15 + 4 >> 2] | 0;
 $21 = $3;
 HEAP32[$21 >> 2] = HEAP32[$15 >> 2];
 HEAP32[$21 + 4 >> 2] = $20;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$3 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 $$1 = __ZN2ut4arch17EntityDataManager24getComponentDataWithTypeENS_6EntityEj($14, $tmpcast$byval_copy, $2) | 0;
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZN2ut4arch13EntityManager19getComponentDataRawENS_6EntityEjPvj($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $17 = 0, $22 = 0, $23 = 0, $27 = 0, $29 = 0, $35 = 0, $37 = 0, $5 = 0, $7 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $tmpcast$byval_copy = sp + 32 | 0;
 $5 = sp;
 $7 = HEAP32[6067] | 0;
 if ((HEAP32[6068] | 0) - $7 >> 2 >>> 0 <= $2 >>> 0) {
  _snprintf(25060, 1024, 27124, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
 if ((HEAP32[(HEAP32[$7 + ($2 << 2) >> 2] | 0) + 16 >> 2] | 0) != ($4 | 0)) {
  _snprintf(25060, 1024, 27124, sp + 16 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 18129, 6920, 335);
 }
 $17 = $1;
 $22 = HEAP32[$17 + 4 >> 2] | 0;
 $23 = $5;
 HEAP32[$23 >> 2] = HEAP32[$17 >> 2];
 HEAP32[$23 + 4 >> 2] = $22;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$5 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 $27 = __ZN2ut4arch13EntityManager25getComponentDataRawUnsafeENS_6EntityEj($0, $tmpcast$byval_copy, $2) | 0;
 $29 = HEAP32[6067] | 0;
 if ((HEAP32[6068] | 0) - $29 >> 2 >>> 0 <= $2 >>> 0) {
  _snprintf(25060, 1024, 27124, sp + 24 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
 $35 = HEAP32[$29 + ($2 << 2) >> 2] | 0;
 $37 = HEAP32[$35 + 36 >> 2] | 0;
 if (!$37) {
  _memcpy($3 | 0, $27 | 0, $4 | 0) | 0;
  STACKTOP = sp;
  return;
 } else {
  FUNCTION_TABLE_viii[$37 & 31]($27, $3, HEAP32[$35 + 44 >> 2] | 0);
  STACKTOP = sp;
  return;
 }
}

function __ZN2ut4arch13EntityManager28getSharedComponentDataRawPtrENS_6EntityEj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i = 0, $$0$in$i = 0, $10 = 0, $15 = 0, $16 = 0, $20 = 0, $21 = 0, $25 = 0, $27 = 0, $3 = 0, $7 = 0, $9 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast$byval_copy = sp + 24 | 0;
 $3 = sp;
 if ((HEAP32[$0 + 36 >> 2] | 0) > 0) {
  _snprintf(25060, 1024, 10814, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 23477, 6920, 459);
 }
 $7 = $0 + 8 | 0;
 __ZN2ut4arch17EntityDataManager24assertEntityHasComponentERKNS_6EntityEj(HEAP32[$7 >> 2] | 0, $1, $2);
 $9 = HEAP32[$7 >> 2] | 0;
 $10 = $1;
 $15 = HEAP32[$10 + 4 >> 2] | 0;
 $16 = $3;
 HEAP32[$16 >> 2] = HEAP32[$10 >> 2];
 HEAP32[$16 + 4 >> 2] = $15;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$3 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 $20 = __ZN2ut4arch17EntityDataManager27getSharedComponentDataIndexENS_6EntityEj($9, $tmpcast$byval_copy, $2) | 0;
 $21 = HEAP32[$0 >> 2] | 0;
 if ($20 | 0) {
  $$0$in$i = (HEAP32[$21 + 36 >> 2] | 0) + ($20 << 2) | 0;
  $$0$i = HEAP32[$$0$in$i >> 2] | 0;
  STACKTOP = sp;
  return $$0$i | 0;
 }
 $25 = HEAP32[HEAP32[$21 + 72 >> 2] >> 2] | 0;
 $27 = HEAP32[6067] | 0;
 if ((HEAP32[6068] | 0) - $27 >> 2 >>> 0 <= $25 >>> 0) {
  _snprintf(25060, 1024, 27124, sp + 16 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
 $$0$in$i = (HEAP32[$27 + ($25 << 2) >> 2] | 0) + 24 | 0;
 $$0$i = HEAP32[$$0$in$i >> 2] | 0;
 STACKTOP = sp;
 return $$0$i | 0;
}

function _ut_World_World() {
 var $$pre$i$i$i = 0, $0 = 0, $1 = 0, $2 = 0, $20 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = __Znwj(33064) | 0;
 $2 = $1 + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $1 + 8 | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$1 >> 2] = 3768;
 $4 = $1 + 16 | 0;
 __ZN2ut12ManagerWorldC2Ev($4);
 $5 = $0 + 4 | 0;
 HEAP32[$0 >> 2] = $4;
 HEAP32[$5 >> 2] = $1;
 $6 = $1 + 32936 | 0;
 $7 = $1 + 32940 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if (!$8) {
  $$pre$i$i$i = 0;
  label = 3;
 } else if ((HEAP32[$8 + 4 >> 2] | 0) == -1) {
  $$pre$i$i$i = $8;
  label = 3;
 }
 if ((label | 0) == 3) {
  HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 1;
  HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + 1;
  HEAP32[$6 >> 2] = $4;
  HEAP32[$7 >> 2] = $1;
  if ($$pre$i$i$i | 0) __ZNSt3__219__shared_weak_count14__release_weakEv($$pre$i$i$i);
  $20 = HEAP32[$2 >> 2] | 0;
  HEAP32[$2 >> 2] = $20 + -1;
  if (!$20) {
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 63]($1);
   __ZNSt3__219__shared_weak_count14__release_weakEv($1);
  }
 }
 $26 = __ZN2ut8PtrTable7persistINS_12ManagerWorldEEEPT_RKNSt3__210shared_ptrIS3_EE($0) | 0;
 $27 = HEAP32[$5 >> 2] | 0;
 if (!$27) {
  STACKTOP = sp;
  return $26 | 0;
 }
 $29 = $27 + 4 | 0;
 $30 = HEAP32[$29 >> 2] | 0;
 HEAP32[$29 >> 2] = $30 + -1;
 if ($30 | 0) {
  STACKTOP = sp;
  return $26 | 0;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$27 >> 2] | 0) + 8 >> 2] & 63]($27);
 __ZNSt3__219__shared_weak_count14__release_weakEv($27);
 STACKTOP = sp;
 return $26 | 0;
}

function __ZN2ut4arch17EntityDataManager17moveEntityToChunkENS_6EntityEPNS0_5ChunkEi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $20 = 0, $22 = 0, $26 = 0, $33 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = $0 + 20 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = HEAP32[$1 >> 2] | 0;
 $8 = HEAP32[$5 + ($6 << 4) + 12 >> 2] | 0;
 $10 = HEAP32[$5 + ($6 << 4) + 4 >> 2] | 0;
 $11 = $8 + 16 | 0;
 if ((HEAP32[$11 >> 2] | 0) != (HEAP32[$2 + 16 >> 2] | 0)) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 10819, 9049, 553);
 }
 __ZN2ut4arch5Chunk8moveDataEPS1_iS2_ii($8, $10, $2, $3, 1);
 HEAP32[(HEAP32[$4 >> 2] | 0) + ($6 << 4) + 12 >> 2] = $2;
 HEAP32[(HEAP32[$4 >> 2] | 0) + ($6 << 4) + 4 >> 2] = $3;
 $20 = $8 + 24 | 0;
 $22 = (HEAP32[$20 >> 2] | 0) + -1 | 0;
 if (($22 | 0) == ($10 | 0)) {
  $$pre$phiZ2D = $22;
  $37 = HEAP32[$0 >> 2] | 0;
  __ZN2ut4arch16ArchetypeManager13setChunkCountEPNS0_5ChunkEi($37, $8, $$pre$phiZ2D);
  STACKTOP = sp;
  return;
 }
 $26 = HEAP32[(HEAP32[$11 >> 2] | 0) + 32 >> 2] | 0;
 $33 = (Math_imul(HEAP32[$26 + 12 >> 2] | 0, $22) | 0) + (HEAP32[$26 + 8 >> 2] | 0) + ($8 + 48) | 0;
 HEAP32[(HEAP32[$4 >> 2] | 0) + (HEAP32[$33 >> 2] << 4) + 4 >> 2] = $10;
 __ZN2ut4arch5Chunk8moveDataEPS1_iS2_ii($8, $22, $8, $10, 1);
 $$pre$phiZ2D = (HEAP32[$20 >> 2] | 0) + -1 | 0;
 $37 = HEAP32[$0 >> 2] | 0;
 __ZN2ut4arch16ArchetypeManager13setChunkCountEPNS0_5ChunkEi($37, $8, $$pre$phiZ2D);
 STACKTOP = sp;
 return;
}

function __ZN2ut12ManagerWorld16getConfigDataRawEjPvj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $12 = 0, $13 = 0, $18 = 0, $23 = 0, $24 = 0, $29 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $tmpcast10$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $tmpcast10$byval_copy = sp + 32 | 0;
 $4 = sp + 16 | 0;
 $5 = sp;
 $6 = $0 + 33028 | 0;
 $7 = $6;
 $12 = HEAP32[$7 + 4 >> 2] | 0;
 $13 = $4;
 HEAP32[$13 >> 2] = HEAP32[$7 >> 2];
 HEAP32[$13 + 4 >> 2] = $12;
 HEAP32[$tmpcast10$byval_copy >> 2] = HEAP32[$4 >> 2];
 HEAP32[$tmpcast10$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 if (__ZN2ut4arch13EntityManager15hasComponentRawENS_6EntityEj($0, $tmpcast10$byval_copy, $1) | 0) {
  $18 = $6;
  $23 = HEAP32[$18 + 4 >> 2] | 0;
  $24 = $5;
  HEAP32[$24 >> 2] = HEAP32[$18 >> 2];
  HEAP32[$24 + 4 >> 2] = $23;
  HEAP32[$tmpcast10$byval_copy >> 2] = HEAP32[$5 >> 2];
  HEAP32[$tmpcast10$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  __ZN2ut4arch13EntityManager19getComponentDataRawENS_6EntityEjPvj($0, $tmpcast10$byval_copy, $1, $2, $3);
  STACKTOP = sp;
  return;
 }
 $29 = HEAP32[6067] | 0;
 if ((HEAP32[6068] | 0) - $29 >> 2 >>> 0 <= $1 >>> 0) {
  _snprintf(25060, 1024, 27124, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
 $37 = HEAP32[(HEAP32[$29 + ($1 << 2) >> 2] | 0) + 24 >> 2] | 0;
 if (!$37) {
  _snprintf(25060, 1024, 27124, sp + 24 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 18079, 18097, 51);
 }
 _memcpy($2 | 0, $37 | 0, $3 | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $15 = 0, $19 = 0, $2 = 0, $24 = 0, $25 = 0, $3 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp;
 $3 = $0 + 4 | 0;
 $8 = ((HEAP32[$3 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 4) + 1 | 0;
 $9 = __ZNKSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE8max_sizeEv($0) | 0;
 if ($9 >>> 0 < $8 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $14 = HEAP32[$0 >> 2] | 0;
  $15 = (HEAP32[$0 + 8 >> 2] | 0) - $14 | 0;
  $19 = $15 >> 3;
  __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($2, $15 >> 4 >>> 0 < $9 >>> 1 >>> 0 ? ($19 >>> 0 < $8 >>> 0 ? $8 : $19) : $9, (HEAP32[$3 >> 2] | 0) - $14 >> 4, $0 + 12 | 0);
  $24 = $2 + 8 | 0;
  $25 = HEAP32[$24 >> 2] | 0;
  HEAP32[$25 >> 2] = 0;
  HEAP32[$25 + 4 >> 2] = 0;
  HEAP32[$25 + 8 >> 2] = 0;
  HEAP32[$25 + 12 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$24 >> 2] = $25 + 16;
  __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($0, $2);
  __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($2);
  STACKTOP = sp;
  return;
 }
}

function __ZNK2ut4arch5Chunk26getComponentDataWithTypeROEij($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$020$i = 0, $18 = 0, $21 = 0, $29 = 0, $3 = 0, $31 = 0, $4 = 0, $7 = 0, $8 = 0, $9 = 0, $phi$call = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $3 = $0 + 16 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $7 = HEAP8[($2 & 63) + ($4 + 36) >> 0] | 0;
 $8 = $7 & 255;
 $9 = $4 + 28 | 0;
 if ((HEAP32[$9 >> 2] | 0) <= ($8 | 0)) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13990, 14007, 120);
 }
 if (!($7 << 24 >> 24)) label = 5; else if ((HEAP32[(HEAP32[$4 + 32 >> 2] | 0) + ($8 << 4) >> 2] | 0) == ($2 | 0)) $31 = $8; else label = 5;
 L6 : do if ((label | 0) == 5) {
  $18 = HEAP32[$9 >> 2] | 0;
  if (($18 | 0) <= 0) {
   _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 7085, 7101, 71);
  }
  $21 = HEAP32[$4 + 32 >> 2] | 0;
  $$020$i = 0;
  do {
   if ((HEAP32[$21 + ($$020$i << 4) >> 2] | 0) == ($2 | 0)) {
    $31 = $$020$i;
    break L6;
   }
   $$020$i = $$020$i + 1 | 0;
  } while (($$020$i | 0) < ($18 | 0));
  _snprintf(25060, 1024, 27124, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 7085, 7101, 71);
 } while (0);
 $29 = HEAP32[(HEAP32[$3 >> 2] | 0) + 32 >> 2] | 0;
 $phi$call = (Math_imul(HEAP32[$29 + ($31 << 4) + 12 >> 2] | 0, $1) | 0) + (HEAP32[$29 + ($31 << 4) + 8 >> 2] | 0) + ($0 + 48) | 0;
 STACKTOP = sp;
 return $phi$call | 0;
}

function _ut_Scheduler_DisableName($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$021$i$i1$i = 0, $$023$i$i$i = 0, $$1$lcssa$i$i$i = 0, $$122$i$i$i = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = HEAP32[$1 >> 2] | 0;
 if (!$3) {
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
 } else {
  $6 = HEAP32[$1 + 4 >> 2] | 0;
  $7 = $3 + $6 | 0;
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  if ($6 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($2);
  if ($6 >>> 0 < 11) {
   HEAP8[$2 + 11 >> 0] = $6;
   if (!$6) $$1$lcssa$i$i$i = $2; else {
    $$021$i$i1$i = $2;
    label = 7;
   }
  } else {
   $11 = $6 + 16 & -16;
   $12 = __Znwj($11) | 0;
   HEAP32[$2 >> 2] = $12;
   HEAP32[$2 + 8 >> 2] = $11 | -2147483648;
   HEAP32[$2 + 4 >> 2] = $6;
   $$021$i$i1$i = $12;
   label = 7;
  }
  if ((label | 0) == 7) {
   $$023$i$i$i = $3;
   $$122$i$i$i = $$021$i$i1$i;
   while (1) {
    HEAP8[$$122$i$i$i >> 0] = HEAP8[$$023$i$i$i >> 0] | 0;
    $$023$i$i$i = $$023$i$i$i + 1 | 0;
    if (($$023$i$i$i | 0) == ($7 | 0)) break; else $$122$i$i$i = $$122$i$i$i + 1 | 0;
   }
   $$1$lcssa$i$i$i = $$021$i$i1$i + $6 | 0;
  }
  HEAP8[$$1$lcssa$i$i$i >> 0] = 0;
 }
 __ZN2ut9Scheduler7disableEi($0, __ZN2ut9Scheduler4findERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $2) | 0);
 if ((HEAP8[$2 + 11 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function _ut_Scheduler_RemoveName($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$021$i$i1$i = 0, $$023$i$i$i = 0, $$1$lcssa$i$i$i = 0, $$122$i$i$i = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = HEAP32[$1 >> 2] | 0;
 if (!$3) {
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
 } else {
  $6 = HEAP32[$1 + 4 >> 2] | 0;
  $7 = $3 + $6 | 0;
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  if ($6 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($2);
  if ($6 >>> 0 < 11) {
   HEAP8[$2 + 11 >> 0] = $6;
   if (!$6) $$1$lcssa$i$i$i = $2; else {
    $$021$i$i1$i = $2;
    label = 7;
   }
  } else {
   $11 = $6 + 16 & -16;
   $12 = __Znwj($11) | 0;
   HEAP32[$2 >> 2] = $12;
   HEAP32[$2 + 8 >> 2] = $11 | -2147483648;
   HEAP32[$2 + 4 >> 2] = $6;
   $$021$i$i1$i = $12;
   label = 7;
  }
  if ((label | 0) == 7) {
   $$023$i$i$i = $3;
   $$122$i$i$i = $$021$i$i1$i;
   while (1) {
    HEAP8[$$122$i$i$i >> 0] = HEAP8[$$023$i$i$i >> 0] | 0;
    $$023$i$i$i = $$023$i$i$i + 1 | 0;
    if (($$023$i$i$i | 0) == ($7 | 0)) break; else $$122$i$i$i = $$122$i$i$i + 1 | 0;
   }
   $$1$lcssa$i$i$i = $$021$i$i1$i + $6 | 0;
  }
  HEAP8[$$1$lcssa$i$i$i >> 0] = 0;
 }
 __ZN2ut9Scheduler6removeEi($0, __ZN2ut9Scheduler4findERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $2) | 0);
 if ((HEAP8[$2 + 11 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function _ut_Scheduler_EnableName($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$021$i$i1$i = 0, $$023$i$i$i = 0, $$1$lcssa$i$i$i = 0, $$122$i$i$i = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = HEAP32[$1 >> 2] | 0;
 if (!$3) {
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
 } else {
  $6 = HEAP32[$1 + 4 >> 2] | 0;
  $7 = $3 + $6 | 0;
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  if ($6 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($2);
  if ($6 >>> 0 < 11) {
   HEAP8[$2 + 11 >> 0] = $6;
   if (!$6) $$1$lcssa$i$i$i = $2; else {
    $$021$i$i1$i = $2;
    label = 7;
   }
  } else {
   $11 = $6 + 16 & -16;
   $12 = __Znwj($11) | 0;
   HEAP32[$2 >> 2] = $12;
   HEAP32[$2 + 8 >> 2] = $11 | -2147483648;
   HEAP32[$2 + 4 >> 2] = $6;
   $$021$i$i1$i = $12;
   label = 7;
  }
  if ((label | 0) == 7) {
   $$023$i$i$i = $3;
   $$122$i$i$i = $$021$i$i1$i;
   while (1) {
    HEAP8[$$122$i$i$i >> 0] = HEAP8[$$023$i$i$i >> 0] | 0;
    $$023$i$i$i = $$023$i$i$i + 1 | 0;
    if (($$023$i$i$i | 0) == ($7 | 0)) break; else $$122$i$i$i = $$122$i$i$i + 1 | 0;
   }
   $$1$lcssa$i$i$i = $$021$i$i1$i + $6 | 0;
  }
  HEAP8[$$1$lcssa$i$i$i >> 0] = 0;
 }
 __ZN2ut9Scheduler6enableEi($0, __ZN2ut9Scheduler4findERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $2) | 0);
 if ((HEAP8[$2 + 11 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function _ut_Scheduler_FindName($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$021$i$i1$i = 0, $$023$i$i$i = 0, $$1$lcssa$i$i$i = 0, $$122$i$i$i = 0, $11 = 0, $12 = 0, $2 = 0, $23 = 0, $3 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = HEAP32[$1 >> 2] | 0;
 if (!$3) {
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
 } else {
  $6 = HEAP32[$1 + 4 >> 2] | 0;
  $7 = $3 + $6 | 0;
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  if ($6 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($2);
  if ($6 >>> 0 < 11) {
   HEAP8[$2 + 11 >> 0] = $6;
   if (!$6) $$1$lcssa$i$i$i = $2; else {
    $$021$i$i1$i = $2;
    label = 7;
   }
  } else {
   $11 = $6 + 16 & -16;
   $12 = __Znwj($11) | 0;
   HEAP32[$2 >> 2] = $12;
   HEAP32[$2 + 8 >> 2] = $11 | -2147483648;
   HEAP32[$2 + 4 >> 2] = $6;
   $$021$i$i1$i = $12;
   label = 7;
  }
  if ((label | 0) == 7) {
   $$023$i$i$i = $3;
   $$122$i$i$i = $$021$i$i1$i;
   while (1) {
    HEAP8[$$122$i$i$i >> 0] = HEAP8[$$023$i$i$i >> 0] | 0;
    $$023$i$i$i = $$023$i$i$i + 1 | 0;
    if (($$023$i$i$i | 0) == ($7 | 0)) break; else $$122$i$i$i = $$122$i$i$i + 1 | 0;
   }
   $$1$lcssa$i$i$i = $$021$i$i1$i + $6 | 0;
  }
  HEAP8[$$1$lcssa$i$i$i >> 0] = 0;
 }
 $23 = __ZN2ut9Scheduler4findERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $2) | 0;
 if ((HEAP8[$2 + 11 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return $23 | 0;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return $23 | 0;
}

function __ZNSt3__24pairIKiN2ut9Scheduler15ScheduledSystemEEC2ERKS5_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $15 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $29 = 0, $31 = 0, $34 = 0, $38 = 0, $39 = 0, $40 = 0;
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0 + 8 | 0, $1 + 8 | 0);
 HEAP32[$0 + 20 >> 2] = HEAP32[$1 + 20 >> 2];
 $13 = HEAP32[$1 + 24 >> 2] | 0;
 HEAP32[$0 + 24 >> 2] = $13;
 if ($13 | 0) {
  $15 = $13 + 4 | 0;
  HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + 1;
 }
 $18 = $0 + 28 | 0;
 $19 = $1 + 28 | 0;
 HEAP32[$18 >> 2] = 0;
 $20 = $0 + 32 | 0;
 HEAP32[$20 >> 2] = 0;
 $21 = $0 + 36 | 0;
 HEAP32[$21 >> 2] = 0;
 $22 = $1 + 32 | 0;
 $25 = (HEAP32[$22 >> 2] | 0) - (HEAP32[$19 >> 2] | 0) | 0;
 $26 = $25 >> 2;
 if (!$25) {
  $38 = $0 + 40 | 0;
  $39 = $1 + 40 | 0;
  $40 = HEAP8[$39 >> 0] | 0;
  HEAP8[$38 >> 0] = $40;
  return;
 }
 if ($26 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($18);
 $29 = __Znwj($25) | 0;
 HEAP32[$20 >> 2] = $29;
 HEAP32[$18 >> 2] = $29;
 HEAP32[$21 >> 2] = $29 + ($26 << 2);
 $31 = HEAP32[$19 >> 2] | 0;
 $34 = (HEAP32[$22 >> 2] | 0) - $31 | 0;
 if (($34 | 0) <= 0) {
  $38 = $0 + 40 | 0;
  $39 = $1 + 40 | 0;
  $40 = HEAP8[$39 >> 0] | 0;
  HEAP8[$38 >> 0] = $40;
  return;
 }
 _memcpy($29 | 0, $31 | 0, $34 | 0) | 0;
 HEAP32[$20 >> 2] = $29 + ($34 >>> 2 << 2);
 $38 = $0 + 40 | 0;
 $39 = $1 + 40 | 0;
 $40 = HEAP8[$39 >> 0] | 0;
 HEAP8[$38 >> 0] = $40;
 return;
}

function __ZN2ut4arch19EntityCommandBuffer13setEntityNameENS_6EntityEPKc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$sink = 0, $$sink4 = 0, $$sroa$speculated$i$i$i$i = 0, $11 = 0, $12 = 0, $13 = 0, $22 = 0, $23 = 0, $25 = 0, $28 = 0, $3 = 0, $32 = 0, $35 = 0, $36 = 0, $37 = 0, $41 = 0, $45 = 0, $5 = 0, $8 = 0, label = 0;
 $3 = $1;
 $5 = HEAP32[$3 >> 2] | 0;
 $8 = HEAP32[$3 + 4 >> 2] | 0;
 $11 = (_strlen($2) | 0) + 36 & -16;
 $12 = $0 + 8 | 0;
 $13 = HEAP32[$12 >> 2] | 0;
 if (!$13) label = 3; else if (((HEAP32[$13 + 4 >> 2] | 0) - (HEAP32[$13 + 8 >> 2] | 0) | 0) > ($11 | 0)) $$0$i$i$i = $13; else label = 3;
 if ((label | 0) == 3) {
  $22 = $11 | 12;
  $23 = HEAP32[$0 + 12 >> 2] | 0;
  $$sroa$speculated$i$i$i$i = ($23 | 0) < ($22 | 0) ? $22 : $23;
  $25 = _aligned_alloc(16, $$sroa$speculated$i$i$i$i) | 0;
  HEAP32[$25 >> 2] = 0;
  HEAP32[$25 + 4 >> 2] = $$sroa$speculated$i$i$i$i;
  HEAP32[$25 + 8 >> 2] = 12;
  $28 = $0 + 4 | 0;
  if (!(HEAP32[$28 >> 2] | 0)) {
   $$sink = $12;
   $$sink4 = $28;
  } else {
   $$sink = HEAP32[$12 >> 2] | 0;
   $$sink4 = $12;
  }
  HEAP32[$$sink >> 2] = $25;
  HEAP32[$$sink4 >> 2] = $25;
  $$0$i$i$i = $25;
 }
 $32 = $0 + 16 | 0;
 HEAP32[$32 >> 2] = (HEAP32[$32 >> 2] | 0) + 1;
 $35 = $$0$i$i$i + 8 | 0;
 $36 = HEAP32[$35 >> 2] | 0;
 $37 = $$0$i$i$i + $36 | 0;
 HEAP32[$35 >> 2] = $36 + $11;
 HEAP32[$37 + 4 >> 2] = $11;
 HEAP32[$37 >> 2] = 12;
 $41 = $37 + 8 | 0;
 HEAP32[$41 >> 2] = $5;
 HEAP32[$41 + 4 >> 2] = $8;
 $45 = $37 + 20 | 0;
 HEAP32[$37 + 16 >> 2] = $45;
 _strcpy($45, $2) | 0;
 return;
}

function __ZN2ut4arch19EntityCommandBuffer19setComponentDataRawENS_6EntityEjPKvi($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $12 = 0, $13 = 0, $17 = 0, $19 = 0, $25 = 0, $28 = 0, $31 = 0, $36 = 0, $5 = 0, $6 = 0, $7 = 0, $tmpcast$i$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast$i$byval_copy = sp + 16 | 0;
 $5 = sp;
 $6 = sp + 12 | 0;
 HEAP32[$6 >> 2] = 0;
 $7 = $1;
 $12 = HEAP32[$7 + 4 >> 2] | 0;
 $13 = $5;
 HEAP32[$13 >> 2] = HEAP32[$7 >> 2];
 HEAP32[$13 + 4 >> 2] = $12;
 HEAP32[$tmpcast$i$byval_copy >> 2] = HEAP32[$5 >> 2];
 HEAP32[$tmpcast$i$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 $17 = __ZN20ComponentDataCommand13createCommandEPN2ut4arch19EntityCommandBufferENS1_15EntityCommandOpENS0_6EntityEjiPPv($0, 8, $tmpcast$i$byval_copy, $2, $4, $6) | 0;
 $19 = HEAP32[6067] | 0;
 if ((HEAP32[6068] | 0) - $19 >> 2 >>> 0 <= $2 >>> 0) {
  _snprintf(25060, 1024, 27124, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
 $25 = HEAP32[$19 + ($2 << 2) >> 2] | 0;
 if (!$3) {
  _memset(HEAP32[$17 + 24 >> 2] | 0, 0, $4 | 0) | 0;
  $36 = HEAP32[$6 >> 2] | 0;
  STACKTOP = sp;
  return $36 | 0;
 }
 $28 = HEAP32[$25 + 36 >> 2] | 0;
 $31 = HEAP32[$17 + 24 >> 2] | 0;
 if (!$28) {
  _memcpy($31 | 0, $3 | 0, $4 | 0) | 0;
  $36 = HEAP32[$6 >> 2] | 0;
  STACKTOP = sp;
  return $36 | 0;
 } else {
  FUNCTION_TABLE_viii[$28 & 31]($3, $31, HEAP32[$25 + 44 >> 2] | 0);
  $36 = HEAP32[$6 >> 2] | 0;
  STACKTOP = sp;
  return $36 | 0;
 }
 return 0;
}

function __ZN2ut4arch19EntityCommandBuffer19addComponentDataRawENS_6EntityEjPKvi($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $12 = 0, $13 = 0, $17 = 0, $19 = 0, $25 = 0, $28 = 0, $31 = 0, $36 = 0, $5 = 0, $6 = 0, $7 = 0, $tmpcast$i$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast$i$byval_copy = sp + 16 | 0;
 $5 = sp;
 $6 = sp + 12 | 0;
 HEAP32[$6 >> 2] = 0;
 $7 = $1;
 $12 = HEAP32[$7 + 4 >> 2] | 0;
 $13 = $5;
 HEAP32[$13 >> 2] = HEAP32[$7 >> 2];
 HEAP32[$13 + 4 >> 2] = $12;
 HEAP32[$tmpcast$i$byval_copy >> 2] = HEAP32[$5 >> 2];
 HEAP32[$tmpcast$i$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 $17 = __ZN20ComponentDataCommand13createCommandEPN2ut4arch19EntityCommandBufferENS1_15EntityCommandOpENS0_6EntityEjiPPv($0, 6, $tmpcast$i$byval_copy, $2, $4, $6) | 0;
 $19 = HEAP32[6067] | 0;
 if ((HEAP32[6068] | 0) - $19 >> 2 >>> 0 <= $2 >>> 0) {
  _snprintf(25060, 1024, 27124, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
 $25 = HEAP32[$19 + ($2 << 2) >> 2] | 0;
 if (!$3) {
  _memset(HEAP32[$17 + 24 >> 2] | 0, 0, $4 | 0) | 0;
  $36 = HEAP32[$6 >> 2] | 0;
  STACKTOP = sp;
  return $36 | 0;
 }
 $28 = HEAP32[$25 + 36 >> 2] | 0;
 $31 = HEAP32[$17 + 24 >> 2] | 0;
 if (!$28) {
  _memcpy($31 | 0, $3 | 0, $4 | 0) | 0;
  $36 = HEAP32[$6 >> 2] | 0;
  STACKTOP = sp;
  return $36 | 0;
 } else {
  FUNCTION_TABLE_viii[$28 & 31]($3, $31, HEAP32[$25 + 44 >> 2] | 0);
  $36 = HEAP32[$6 >> 2] | 0;
  STACKTOP = sp;
  return $36 | 0;
 }
 return 0;
}

function __ZN2ut4arch13EntityManager25getSharedComponentDataRawENS_6EntityEjPvj($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $28 = 0, $33 = 0, $34 = 0, $5 = 0, $7 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $tmpcast$byval_copy = sp + 40 | 0;
 $5 = sp;
 $7 = HEAP32[6067] | 0;
 if ((HEAP32[6068] | 0) - $7 >> 2 >>> 0 <= $2 >>> 0) {
  _snprintf(25060, 1024, 27124, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
 if (!(HEAP32[(HEAP32[$7 + ($2 << 2) >> 2] | 0) + 4 >> 2] & 2)) {
  _snprintf(25060, 1024, 27124, sp + 16 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 11562, 11602, 113);
 }
 if ((HEAP32[6068] | 0) - $7 >> 2 >>> 0 <= $2 >>> 0) {
  _snprintf(25060, 1024, 27124, sp + 24 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
 if ((HEAP32[(HEAP32[$7 + ($2 << 2) >> 2] | 0) + 12 >> 2] | 0) == ($4 | 0)) {
  $28 = $1;
  $33 = HEAP32[$28 + 4 >> 2] | 0;
  $34 = $5;
  HEAP32[$34 >> 2] = HEAP32[$28 >> 2];
  HEAP32[$34 + 4 >> 2] = $33;
  HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$5 >> 2];
  HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  _memcpy($3 | 0, __ZN2ut4arch13EntityManager28getSharedComponentDataRawPtrENS_6EntityEj($0, $tmpcast$byval_copy, $2) | 0, $4 | 0) | 0;
  STACKTOP = sp;
  return;
 } else {
  _snprintf(25060, 1024, 27124, sp + 32 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 17972, 11602, 114);
 }
}

function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE24__emplace_back_slow_pathIJEEEvDpOT_($0) {
 $0 = $0 | 0;
 var $1 = 0, $13 = 0, $15 = 0, $18 = 0, $2 = 0, $23 = 0, $24 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $1 = sp;
 $2 = $0 + 4 | 0;
 $7 = (((HEAP32[$2 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) | 0) / 24 | 0) + 1 | 0;
 $8 = __ZNKSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE8max_sizeEv($0) | 0;
 if ($8 >>> 0 < $7 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $13 = HEAP32[$0 >> 2] | 0;
  $15 = ((HEAP32[$0 + 8 >> 2] | 0) - $13 | 0) / 24 | 0;
  $18 = $15 << 1;
  __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($1, $15 >>> 0 < $8 >>> 1 >>> 0 ? ($18 >>> 0 < $7 >>> 0 ? $7 : $18) : $8, ((HEAP32[$2 >> 2] | 0) - $13 | 0) / 24 | 0, $0 + 12 | 0);
  $23 = $1 + 8 | 0;
  $24 = HEAP32[$23 >> 2] | 0;
  HEAP32[$24 >> 2] = 0;
  HEAP32[$24 + 4 >> 2] = 0;
  HEAP32[$24 + 8 >> 2] = 0;
  HEAP32[$24 + 12 >> 2] = 0;
  HEAP32[$24 + 16 >> 2] = 0;
  HEAP32[$24 + 20 >> 2] = 0;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2Ev($24);
  HEAP32[$23 >> 2] = $24 + 24;
  __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0, $1);
  __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($1);
  STACKTOP = sp;
  return;
 }
}

function __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushINS_6WriterINS_19GenericStringBufferINS_4UTF8IcEES2_EES8_S8_S2_Lj0EE5LevelEEEPT_j($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $17 = 0, $2 = 0, $21 = 0, $25 = 0, $26 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, $spec$select$i$i = 0;
 $2 = $0 + 12 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $1 << 3;
 $5 = $3 + $4 | 0;
 $6 = $0 + 16 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 $9 = $7;
 $10 = $3;
 if ($5 >>> 0 > $7 >>> 0) {
  $11 = $0 + 8 | 0;
  $12 = HEAP32[$11 >> 2] | 0;
  $14 = $12;
  if (!$12) {
   if (!(HEAP32[$0 >> 2] | 0)) {
    $17 = __Znwj(1) | 0;
    HEAP32[$0 >> 2] = $17;
    HEAP32[$0 + 4 >> 2] = $17;
   }
   $$0$i$i = HEAP32[$0 + 20 >> 2] | 0;
  } else {
   $21 = $9 - $14 | 0;
   $$0$i$i = (($21 + 1 | 0) >>> 1) + $21 | 0;
  }
  $25 = $10 - $14 | 0;
  $26 = $25 + $4 | 0;
  $spec$select$i$i = $$0$i$i >>> 0 < $26 >>> 0 ? $26 : $$0$i$i;
  if (!$spec$select$i$i) {
   _free($12);
   $$0$i$i$i$i = 0;
  } else $$0$i$i$i$i = _realloc($12, $spec$select$i$i) | 0;
  HEAP32[$11 >> 2] = $$0$i$i$i$i;
  $30 = $$0$i$i$i$i + $25 | 0;
  HEAP32[$2 >> 2] = $30;
  $31 = $$0$i$i$i$i + $spec$select$i$i | 0;
  HEAP32[$6 >> 2] = $31;
  $$pre$phiZ2D = $30 + $4 | 0;
  $33 = $31;
  $34 = $30;
 } else {
  $$pre$phiZ2D = $5;
  $33 = $7;
  $34 = $3;
 }
 if ($$pre$phiZ2D >>> 0 > $33 >>> 0) ___assert_fail(5614, 5657, 129, 5717); else {
  HEAP32[$2 >> 2] = $$pre$phiZ2D;
  return $34 | 0;
 }
 return 0;
}

function __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushINS_12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorIS2_EEEEEEPT_j($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $17 = 0, $2 = 0, $21 = 0, $25 = 0, $26 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, $spec$select$i$i = 0;
 $2 = $0 + 12 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $1 * 24 | 0;
 $5 = $3 + $4 | 0;
 $6 = $0 + 16 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 $9 = $7;
 $10 = $3;
 if ($5 >>> 0 > $7 >>> 0) {
  $11 = $0 + 8 | 0;
  $12 = HEAP32[$11 >> 2] | 0;
  $14 = $12;
  if (!$12) {
   if (!(HEAP32[$0 >> 2] | 0)) {
    $17 = __Znwj(1) | 0;
    HEAP32[$0 >> 2] = $17;
    HEAP32[$0 + 4 >> 2] = $17;
   }
   $$0$i$i = HEAP32[$0 + 20 >> 2] | 0;
  } else {
   $21 = $9 - $14 | 0;
   $$0$i$i = (($21 + 1 | 0) >>> 1) + $21 | 0;
  }
  $25 = $10 - $14 | 0;
  $26 = $25 + $4 | 0;
  $spec$select$i$i = $$0$i$i >>> 0 < $26 >>> 0 ? $26 : $$0$i$i;
  if (!$spec$select$i$i) {
   _free($12);
   $$0$i$i$i$i = 0;
  } else $$0$i$i$i$i = _realloc($12, $spec$select$i$i) | 0;
  HEAP32[$11 >> 2] = $$0$i$i$i$i;
  $30 = $$0$i$i$i$i + $25 | 0;
  HEAP32[$2 >> 2] = $30;
  $31 = $$0$i$i$i$i + $spec$select$i$i | 0;
  HEAP32[$6 >> 2] = $31;
  $$pre$phiZ2D = $30 + $4 | 0;
  $33 = $31;
  $34 = $30;
 } else {
  $$pre$phiZ2D = $5;
  $33 = $7;
  $34 = $3;
 }
 if ($$pre$phiZ2D >>> 0 > $33 >>> 0) ___assert_fail(5614, 5657, 129, 5717); else {
  HEAP32[$2 >> 2] = $$pre$phiZ2D;
  return $34 | 0;
 }
 return 0;
}

function _ut_System_UpdateBefore($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$021$i$i1$i = 0, $$023$i$i$i = 0, $$1$lcssa$i$i$i = 0, $$122$i$i$i = 0, $10 = 0, $14 = 0, $15 = 0, $2 = 0, $5 = 0, $6 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $5 = HEAP32[(HEAP32[$0 >> 2] | 0) + 20 >> 2] | 0;
 $6 = HEAP32[$1 >> 2] | 0;
 if (!$6) {
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
 } else {
  $9 = HEAP32[$1 + 4 >> 2] | 0;
  $10 = $6 + $9 | 0;
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  if ($9 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($2);
  if ($9 >>> 0 < 11) {
   HEAP8[$2 + 11 >> 0] = $9;
   if (!$9) $$1$lcssa$i$i$i = $2; else {
    $$021$i$i1$i = $2;
    label = 7;
   }
  } else {
   $14 = $9 + 16 & -16;
   $15 = __Znwj($14) | 0;
   HEAP32[$2 >> 2] = $15;
   HEAP32[$2 + 8 >> 2] = $14 | -2147483648;
   HEAP32[$2 + 4 >> 2] = $9;
   $$021$i$i1$i = $15;
   label = 7;
  }
  if ((label | 0) == 7) {
   $$023$i$i$i = $6;
   $$122$i$i$i = $$021$i$i1$i;
   while (1) {
    HEAP8[$$122$i$i$i >> 0] = HEAP8[$$023$i$i$i >> 0] | 0;
    $$023$i$i$i = $$023$i$i$i + 1 | 0;
    if (($$023$i$i$i | 0) == ($10 | 0)) break; else $$122$i$i$i = $$122$i$i$i + 1 | 0;
   }
   $$1$lcssa$i$i$i = $$021$i$i1$i + $9 | 0;
  }
  HEAP8[$$1$lcssa$i$i$i >> 0] = 0;
 }
 FUNCTION_TABLE_vii[$5 & 15]($0, $2);
 if ((HEAP8[$2 + 11 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function _ut_System_UpdateAfter($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$021$i$i1$i = 0, $$023$i$i$i = 0, $$1$lcssa$i$i$i = 0, $$122$i$i$i = 0, $10 = 0, $14 = 0, $15 = 0, $2 = 0, $5 = 0, $6 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $5 = HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] | 0;
 $6 = HEAP32[$1 >> 2] | 0;
 if (!$6) {
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
 } else {
  $9 = HEAP32[$1 + 4 >> 2] | 0;
  $10 = $6 + $9 | 0;
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  if ($9 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($2);
  if ($9 >>> 0 < 11) {
   HEAP8[$2 + 11 >> 0] = $9;
   if (!$9) $$1$lcssa$i$i$i = $2; else {
    $$021$i$i1$i = $2;
    label = 7;
   }
  } else {
   $14 = $9 + 16 & -16;
   $15 = __Znwj($14) | 0;
   HEAP32[$2 >> 2] = $15;
   HEAP32[$2 + 8 >> 2] = $14 | -2147483648;
   HEAP32[$2 + 4 >> 2] = $9;
   $$021$i$i1$i = $15;
   label = 7;
  }
  if ((label | 0) == 7) {
   $$023$i$i$i = $6;
   $$122$i$i$i = $$021$i$i1$i;
   while (1) {
    HEAP8[$$122$i$i$i >> 0] = HEAP8[$$023$i$i$i >> 0] | 0;
    $$023$i$i$i = $$023$i$i$i + 1 | 0;
    if (($$023$i$i$i | 0) == ($10 | 0)) break; else $$122$i$i$i = $$122$i$i$i + 1 | 0;
   }
   $$1$lcssa$i$i$i = $$021$i$i1$i + $9 | 0;
  }
  HEAP8[$$1$lcssa$i$i$i >> 0] = 0;
 }
 FUNCTION_TABLE_vii[$5 & 15]($0, $2);
 if ((HEAP8[$2 + 11 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function _ut_World_SetConfigDataRaw($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $13 = 0, $14 = 0, $19 = 0, $24 = 0, $25 = 0, $29 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $tmpcast7$i$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast7$i$byval_copy = sp + 24 | 0;
 $4 = sp + 16 | 0;
 $5 = sp + 8 | 0;
 $6 = sp;
 $7 = $0 + 33028 | 0;
 $8 = $7;
 $13 = HEAP32[$8 + 4 >> 2] | 0;
 $14 = $4;
 HEAP32[$14 >> 2] = HEAP32[$8 >> 2];
 HEAP32[$14 + 4 >> 2] = $13;
 HEAP32[$tmpcast7$i$byval_copy >> 2] = HEAP32[$4 >> 2];
 HEAP32[$tmpcast7$i$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 if (__ZN2ut4arch13EntityManager15hasComponentRawENS_6EntityEj($0, $tmpcast7$i$byval_copy, $1) | 0) {
  $19 = $7;
  $24 = HEAP32[$19 + 4 >> 2] | 0;
  $25 = $5;
  HEAP32[$25 >> 2] = HEAP32[$19 >> 2];
  HEAP32[$25 + 4 >> 2] = $24;
  HEAP32[$tmpcast7$i$byval_copy >> 2] = HEAP32[$5 >> 2];
  HEAP32[$tmpcast7$i$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  __ZN2ut4arch13EntityManager19setComponentDataRawENS_6EntityEjPKvj($0, $tmpcast7$i$byval_copy, $1, $2, $3);
  STACKTOP = sp;
  return;
 } else {
  $29 = $7;
  $34 = HEAP32[$29 + 4 >> 2] | 0;
  $35 = $6;
  HEAP32[$35 >> 2] = HEAP32[$29 >> 2];
  HEAP32[$35 + 4 >> 2] = $34;
  HEAP32[$tmpcast7$i$byval_copy >> 2] = HEAP32[$6 >> 2];
  HEAP32[$tmpcast7$i$byval_copy + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  __ZN2ut4arch13EntityManager19addComponentDataRawENS_6EntityEjPKvj($0, $tmpcast7$i$byval_copy, $1, $2, $3);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$sroa$speculated = 0, $16 = 0, $17 = 0, $22 = 0, $23 = 0, $25 = 0, $28 = 0, $29 = 0, $38 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $8 = sp;
 if ((-18 - $1 | 0) >>> 0 < $2 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ((HEAP8[$0 + 11 >> 0] | 0) < 0) $25 = HEAP32[$0 >> 2] | 0; else $25 = $0;
 if ($1 >>> 0 < 2147483623) {
  $16 = $2 + $1 | 0;
  $17 = $1 << 1;
  $$sroa$speculated = $16 >>> 0 < $17 >>> 0 ? $17 : $16;
  $22 = $$sroa$speculated >>> 0 < 11 ? 11 : $$sroa$speculated + 16 & -16;
 } else $22 = -17;
 $23 = __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEj($22) | 0;
 if ($4 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcj($23, $25, $4) | 0;
 if ($6 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcj($23 + $4 | 0, $7, $6) | 0;
 $28 = $3 - $5 | 0;
 $29 = $28 - $4 | 0;
 if ($29 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcj($23 + $4 + $6 | 0, $25 + $4 + $5 | 0, $29) | 0;
 if (($1 | 0) != 10) __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcj($25);
 HEAP32[$0 >> 2] = $23;
 HEAP32[$0 + 8 >> 2] = $22 | -2147483648;
 $38 = $28 + $6 | 0;
 HEAP32[$0 + 4 >> 2] = $38;
 HEAP8[$8 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($23 + $38 | 0, $8);
 STACKTOP = sp;
 return;
}

function __ZL25default_terminate_handlerv() {
 var $0 = 0, $1 = 0, $12 = 0, $22 = 0, $23 = 0, $25 = 0, $3 = 0, $30 = 0, $34 = 0, $7 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer10 = sp + 32 | 0;
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $0 = sp + 36 | 0;
 $1 = ___cxa_get_globals_fast() | 0;
 if ($1 | 0) {
  $3 = HEAP32[$1 >> 2] | 0;
  if ($3 | 0) {
   $7 = $3 + 48 | 0;
   $9 = HEAP32[$7 >> 2] | 0;
   $12 = HEAP32[$7 + 4 >> 2] | 0;
   if (!(($9 & -256 | 0) == 1126902528 & ($12 | 0) == 1129074247)) {
    HEAP32[$vararg_buffer7 >> 2] = 21891;
    _abort_message(21841, $vararg_buffer7);
   }
   if (($9 | 0) == 1126902529 & ($12 | 0) == 1129074247) $22 = HEAP32[$3 + 44 >> 2] | 0; else $22 = $3 + 80 | 0;
   HEAP32[$0 >> 2] = $22;
   $23 = HEAP32[$3 >> 2] | 0;
   $25 = HEAP32[$23 + 4 >> 2] | 0;
   if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[794] | 0) + 16 >> 2] & 7](3176, $23, $0) | 0) {
    $30 = HEAP32[$0 >> 2] | 0;
    $34 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 8 >> 2] & 7]($30) | 0;
    HEAP32[$vararg_buffer >> 2] = 21891;
    HEAP32[$vararg_buffer + 4 >> 2] = $25;
    HEAP32[$vararg_buffer + 8 >> 2] = $34;
    _abort_message(21755, $vararg_buffer);
   } else {
    HEAP32[$vararg_buffer3 >> 2] = 21891;
    HEAP32[$vararg_buffer3 + 4 >> 2] = $25;
    _abort_message(21800, $vararg_buffer3);
   }
  }
 }
 _abort_message(21879, $vararg_buffer10);
}

function __ZN2ut4arch17EntityDataManager24assertEntityHasComponentERKNS_6EntityEj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$020$i = 0, $10 = 0, $11 = 0, $12 = 0, $21 = 0, $24 = 0, $7 = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 __ZN2ut4arch17EntityDataManager19assertEntitiesExistEPKNS_6EntityEj($0, $1, 1);
 $7 = HEAP32[(HEAP32[$0 + 20 >> 2] | 0) + (HEAP32[$1 >> 2] << 4) + 8 >> 2] | 0;
 $10 = HEAP8[($2 & 63) + ($7 + 36) >> 0] | 0;
 $11 = $10 & 255;
 $12 = $7 + 28 | 0;
 if ((HEAP32[$12 >> 2] | 0) <= ($11 | 0)) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13990, 14007, 120);
 }
 if ($10 << 24 >> 24) if ((HEAP32[(HEAP32[$7 + 32 >> 2] | 0) + ($11 << 4) >> 2] | 0) == ($2 | 0)) {
  STACKTOP = sp;
  return;
 }
 $21 = HEAP32[$12 >> 2] | 0;
 if (($21 | 0) <= 0) {
  _snprintf(25060, 1024, 11152, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 11191, 9049, 402);
 }
 $24 = HEAP32[$7 + 32 >> 2] | 0;
 $$020$i = 0;
 while (1) {
  if ((HEAP32[$24 + ($$020$i << 4) >> 2] | 0) == ($2 | 0)) {
   label = 10;
   break;
  }
  $$020$i = $$020$i + 1 | 0;
  if (($$020$i | 0) >= ($21 | 0)) {
   label = 9;
   break;
  }
 }
 if ((label | 0) == 9) {
  _snprintf(25060, 1024, 11152, $vararg_buffer1) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 11191, 9049, 402);
 } else if ((label | 0) == 10) {
  STACKTOP = sp;
  return;
 }
}

function __ZN2ut4arch17EntityDataManager19instantiateEntitiesENS_6EntityEPS2_i($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$03031 = 0, $$032 = 0, $11 = 0, $13 = 0, $15 = 0, $18 = 0, $20 = 0, $24 = 0, $4 = 0, $6 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 $6 = HEAP32[$0 + 20 >> 2] | 0;
 $7 = HEAP32[$1 >> 2] | 0;
 $9 = HEAP32[$6 + ($7 << 4) + 4 >> 2] | 0;
 $11 = HEAP32[$6 + ($7 << 4) + 12 >> 2] | 0;
 $13 = HEAP32[$6 + ($7 << 4) + 8 >> 2] | 0;
 $15 = HEAP32[$11 + 20 >> 2] | 0;
 if (!$3) {
  __ZN2ut4arch17EntityDataManager30incrementComponentOrderVersionEPNS0_9ArchetypeEPNS0_5ChunkE($0, $13, $11);
  STACKTOP = sp;
  return;
 }
 $$03031 = $3;
 $$032 = $2;
 while (1) {
  $18 = __ZN2ut4arch16ArchetypeManager22getChunkWithEmptySlotsEPNS0_9ArchetypeEPi(HEAP32[$0 >> 2] | 0, $13, $15) | 0;
  $20 = __ZN2ut4arch16ArchetypeManager17allocateIntoChunkEPNS0_5ChunkEiPi(HEAP32[$0 >> 2] | 0, $18, $$03031, $4) | 0;
  __ZN2ut4arch5Chunk13replicateDataEPS1_iS2_ii($11, $9, $18, $20, HEAP32[$4 >> 2] | 0);
  __ZN2ut4arch17EntityDataManager16allocateEntitiesEPNS0_9ArchetypeEPNS0_5ChunkEiiPNS_6EntityE($0, $13, $18, $20, HEAP32[$4 >> 2] | 0, $$032);
  $24 = HEAP32[$4 >> 2] | 0;
  $$03031 = $$03031 - $24 | 0;
  if (!$$03031) break; else $$032 = ($$032 | 0) == 0 ? 0 : $$032 + ($24 << 3) | 0;
 }
 __ZN2ut4arch17EntityDataManager30incrementComponentOrderVersionEPNS0_9ArchetypeEPNS0_5ChunkE($0, $13, $11);
 STACKTOP = sp;
 return;
}

function __ZN2ut4arch13EntityManager24setBufferDataRawWithMoveENS_6EntityEjPNS_16NativeBufferBaseE($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $10 = 0, $11 = 0, $15 = 0, $17 = 0, $4 = 0, $5 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast$byval_copy = sp + 16 | 0;
 $4 = sp;
 __ZN2ut4arch13EntityManager19assertEntitiesExistEPKNS_6EntityEiPKc($0, $1, 1, 6651);
 __ZN2ut4arch13EntityManager24assertEntityHasComponentERKNS_6EntityEjPKc($0, $1, $2, 6651);
 $5 = $1;
 $10 = HEAP32[$5 + 4 >> 2] | 0;
 $11 = $4;
 HEAP32[$11 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$11 + 4 >> 2] = $10;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$4 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 $15 = __ZN2ut4arch13EntityManager25getComponentDataRawUnsafeENS_6EntityEj($0, $tmpcast$byval_copy, $2) | 0;
 $17 = HEAP32[6067] | 0;
 if ((HEAP32[6068] | 0) - $17 >> 2 >>> 0 > $2 >>> 0) {
  __ZN2ut25ComponentNativeBufferBase33freeNativeBufferWithComponentInfoEPNS_16NativeBufferBaseERKNS_13ComponentInfoE($15, HEAP32[$17 + ($2 << 2) >> 2] | 0);
  HEAP32[$15 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$15 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  HEAP32[$15 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
  HEAP32[$3 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  STACKTOP = sp;
  return;
 } else {
  _snprintf(25060, 1024, 27124, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
}

function __ZN2ut4arch13EntityManager25setSharedComponentDataRawENS_6EntityEjPKvj($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $16 = 0, $17 = 0, $18 = 0, $23 = 0, $24 = 0, $5 = 0, $9 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast$byval_copy = sp + 24 | 0;
 $5 = sp;
 if ((HEAP32[$0 + 36 >> 2] | 0) > 0) {
  _snprintf(25060, 1024, 10814, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 23477, 6920, 567);
 }
 $9 = $0 + 8 | 0;
 if ((HEAP32[(HEAP32[$9 >> 2] | 0) + 44 >> 2] | 0) > 0) {
  _snprintf(25060, 1024, 8878, sp + 16 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8949, 6920, 35);
 } else {
  __ZN2ut4arch17EntityDataManager24assertEntityHasComponentERKNS_6EntityEj(HEAP32[$9 >> 2] | 0, $1, $2);
  $16 = __ZN2ut4arch26SharedComponentDataManager28insertSharedComponentDataRawEjPKvj(HEAP32[$0 >> 2] | 0, $2, $3, $4) | 0;
  $17 = HEAP32[$9 >> 2] | 0;
  $18 = $1;
  $23 = HEAP32[$18 + 4 >> 2] | 0;
  $24 = $5;
  HEAP32[$24 >> 2] = HEAP32[$18 >> 2];
  HEAP32[$24 + 4 >> 2] = $23;
  HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$5 >> 2];
  HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  __ZN2ut4arch17EntityDataManager27setSharedComponentDataIndexENS_6EntityEji($17, $tmpcast$byval_copy, $2, $16);
  __ZN2ut4arch26SharedComponentDataManager15removeReferenceEi(HEAP32[$0 >> 2] | 0, $16);
  STACKTOP = sp;
  return;
 }
}

function __ZN2ut12NativeBufferINS_12NativeStringEEaSERKS2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$05$i = 0, $$07$i = 0, $11 = 0, $13 = 0, $14 = 0, $18 = 0, $20 = 0, $21 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $31 = 0, $4 = 0, $5 = 0, $7 = 0;
 if (($0 | 0) == ($1 | 0)) return $0 | 0;
 $3 = HEAP32[$0 >> 2] | 0;
 $4 = $0 + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if ($5 | 0) {
  $$05$i = 0;
  do {
   $7 = $3 + ($$05$i << 3) | 0;
   _free(HEAP32[$7 >> 2] | 0);
   HEAP32[$7 >> 2] = 0;
   HEAP32[$3 + ($$05$i << 3) + 4 >> 2] = 0;
   $$05$i = $$05$i + 1 | 0;
  } while (($$05$i | 0) != ($5 | 0));
 }
 $11 = $0 + 8 | 0;
 $13 = $1 + 4 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 if ((HEAP32[$11 >> 2] | 0) >>> 0 < $14 >>> 0) {
  $18 = _realloc(HEAP32[$0 >> 2] | 0, $14 << 3) | 0;
  HEAP32[$0 >> 2] = $18;
  HEAP32[$11 >> 2] = HEAP32[$13 >> 2];
  $20 = HEAP32[$13 >> 2] | 0;
  $24 = $18;
 } else {
  $20 = $14;
  $24 = HEAP32[$0 >> 2] | 0;
 }
 HEAP32[$4 >> 2] = $20;
 $21 = HEAP32[$1 >> 2] | 0;
 if (!$20) return $0 | 0;
 $$07$i = 0;
 do {
  $23 = $24 + ($$07$i << 3) | 0;
  $25 = $21 + ($$07$i << 3) + 4 | 0;
  $26 = HEAP32[$25 >> 2] | 0;
  HEAP32[$24 + ($$07$i << 3) + 4 >> 2] = $26;
  if (!$26) HEAP32[$23 >> 2] = 0; else {
   $31 = _malloc((HEAP32[$25 >> 2] | 0) + 1 | 0) | 0;
   HEAP32[$23 >> 2] = $31;
   _memcpy($31 | 0, HEAP32[$21 + ($$07$i << 3) >> 2] | 0, (HEAP32[$25 >> 2] | 0) + 1 | 0) | 0;
  }
  $$07$i = $$07$i + 1 | 0;
 } while (($$07$i | 0) != ($20 | 0));
 return $0 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIjN2ut4arch13EntityManager11FreshEntity13ComponentEditEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS7_NS_8equal_toIjEELb1EEENS_9allocatorIS7_EEE6rehashEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$sroa$speculated = 0, $22 = 0, $27 = 0, $30 = 0, $8 = 0;
 if (($1 | 0) == 1) $$0 = 2; else if (!($1 + -1 & $1)) $$0 = $1; else $$0 = __ZNSt3__212__next_primeEj($1) | 0;
 $8 = HEAP32[$0 + 4 >> 2] | 0;
 if ($$0 >>> 0 > $8 >>> 0) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIjN2ut4arch13EntityManager11FreshEntity13ComponentEditEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS7_NS_8equal_toIjEELb1EEENS_9allocatorIS7_EEE8__rehashEj($0, $$0);
  return;
 }
 if ($$0 >>> 0 >= $8 >>> 0) return;
 $22 = ~~+Math_ceil(+(+((HEAP32[$0 + 12 >> 2] | 0) >>> 0) / +HEAPF32[$0 + 16 >> 2])) >>> 0;
 if ($8 >>> 0 > 2 & ($8 + -1 & $8 | 0) == 0) {
  $27 = 1 << 32 - (Math_clz32($22 + -1 | 0) | 0);
  $30 = $22 >>> 0 < 2 ? $22 : $27;
 } else $30 = __ZNSt3__212__next_primeEj($22) | 0;
 $$sroa$speculated = $$0 >>> 0 < $30 >>> 0 ? $30 : $$0;
 if ($$sroa$speculated >>> 0 >= $8 >>> 0) return;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIjN2ut4arch13EntityManager11FreshEntity13ComponentEditEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS7_NS_8equal_toIjEELb1EEENS_9allocatorIS7_EEE8__rehashEj($0, $$sroa$speculated);
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeINS_6vectorIjNS_9allocatorIjEEEEPN2ut4arch9ArchetypeEEENS_22__unordered_map_hasherIS5_SA_NS_4hashIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_NS_8equal_toIS5_EELb1EEENS3_ISA_EEE6rehashEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$sroa$speculated = 0, $22 = 0, $27 = 0, $30 = 0, $8 = 0;
 if (($1 | 0) == 1) $$0 = 2; else if (!($1 + -1 & $1)) $$0 = $1; else $$0 = __ZNSt3__212__next_primeEj($1) | 0;
 $8 = HEAP32[$0 + 4 >> 2] | 0;
 if ($$0 >>> 0 > $8 >>> 0) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeINS_6vectorIjNS_9allocatorIjEEEEPN2ut4arch9ArchetypeEEENS_22__unordered_map_hasherIS5_SA_NS_4hashIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_NS_8equal_toIS5_EELb1EEENS3_ISA_EEE8__rehashEj($0, $$0);
  return;
 }
 if ($$0 >>> 0 >= $8 >>> 0) return;
 $22 = ~~+Math_ceil(+(+((HEAP32[$0 + 12 >> 2] | 0) >>> 0) / +HEAPF32[$0 + 16 >> 2])) >>> 0;
 if ($8 >>> 0 > 2 & ($8 + -1 & $8 | 0) == 0) {
  $27 = 1 << 32 - (Math_clz32($22 + -1 | 0) | 0);
  $30 = $22 >>> 0 < 2 ? $22 : $27;
 } else $30 = __ZNSt3__212__next_primeEj($22) | 0;
 $$sroa$speculated = $$0 >>> 0 < $30 >>> 0 ? $30 : $$0;
 if ($$sroa$speculated >>> 0 >= $8 >>> 0) return;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeINS_6vectorIjNS_9allocatorIjEEEEPN2ut4arch9ArchetypeEEENS_22__unordered_map_hasherIS5_SA_NS_4hashIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_NS_8equal_toIS5_EELb1EEENS3_ISA_EEE8__rehashEj($0, $$sroa$speculated);
 return;
}

function __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $13 = 0, $16 = 0, $2 = 0, $20 = 0, $24 = 0, $25 = 0, $29 = 0, $3 = 0, $30 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, $spec$select$i$i = 0;
 $2 = $0 + 12 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $3 + $1 | 0;
 $5 = $0 + 16 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $8 = $6;
 $9 = $3;
 if ($4 >>> 0 > $6 >>> 0) {
  $10 = $0 + 8 | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  $13 = $11;
  if (!$11) {
   if (!(HEAP32[$0 >> 2] | 0)) {
    $16 = __Znwj(1) | 0;
    HEAP32[$0 >> 2] = $16;
    HEAP32[$0 + 4 >> 2] = $16;
   }
   $$0$i$i = HEAP32[$0 + 20 >> 2] | 0;
  } else {
   $20 = $8 - $13 | 0;
   $$0$i$i = (($20 + 1 | 0) >>> 1) + $20 | 0;
  }
  $24 = $9 - $13 | 0;
  $25 = $24 + $1 | 0;
  $spec$select$i$i = $$0$i$i >>> 0 < $25 >>> 0 ? $25 : $$0$i$i;
  if (!$spec$select$i$i) {
   _free($11);
   $$0$i$i$i$i = 0;
  } else $$0$i$i$i$i = _realloc($11, $spec$select$i$i) | 0;
  HEAP32[$10 >> 2] = $$0$i$i$i$i;
  $29 = $$0$i$i$i$i + $24 | 0;
  HEAP32[$2 >> 2] = $29;
  $30 = $$0$i$i$i$i + $spec$select$i$i | 0;
  HEAP32[$5 >> 2] = $30;
  $$pre$phiZ2D = $29 + $1 | 0;
  $32 = $30;
  $33 = $29;
 } else {
  $$pre$phiZ2D = $4;
  $32 = $6;
  $33 = $3;
 }
 if ($$pre$phiZ2D >>> 0 > $32 >>> 0) ___assert_fail(5614, 5657, 129, 5717); else {
  HEAP32[$2 >> 2] = $$pre$phiZ2D;
  return $33 | 0;
 }
 return 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$1 = 0, $12 = 0, $17 = 0, $21 = 0, $23 = 0, $24 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 $5 = $0 + 11 | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 $7 = $6 << 24 >> 24 < 0;
 if ($7) $12 = HEAP32[$0 + 4 >> 2] | 0; else $12 = $6 & 255;
 if ($12 >>> 0 < $1 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv($0);
 if ($7) $17 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0; else $17 = 10;
 if (($17 - $12 | 0) >>> 0 < $3 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc($0, $17, $12 + $3 - $17 | 0, $12, $1, 0, $3, $2); else if ($3 | 0) {
  if ($7) $24 = HEAP32[$0 >> 2] | 0; else $24 = $0;
  $21 = $12 - $1 | 0;
  $23 = $24 + $1 | 0;
  if (!$21) $$1 = $2; else {
   __ZNSt3__211char_traitsIcE4moveEPcPKcj($23 + $3 | 0, $23, $21) | 0;
   $$1 = $23 >>> 0 <= $2 >>> 0 & ($24 + $12 | 0) >>> 0 > $2 >>> 0 ? $2 + $3 | 0 : $2;
  }
  __ZNSt3__211char_traitsIcE4moveEPcPKcj($23, $$1, $3) | 0;
  $30 = $12 + $3 | 0;
  if ((HEAP8[$5 >> 0] | 0) < 0) HEAP32[$0 + 4 >> 2] = $30; else HEAP8[$5 >> 0] = $30;
  HEAP8[$4 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($24 + $30 | 0, $4);
 }
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $2 = 0, $22 = 0, $24 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $$0$i = HEAP32[$3 >> 2] | 0;
 while (1) {
  if (($$0$i | 0) == ($2 | 0)) break;
  $7 = HEAP32[$5 >> 2] | 0;
  $8 = $7 + -16 | 0;
  $9 = $$0$i + -16 | 0;
  HEAP32[$8 >> 2] = 0;
  $11 = $7 + -12 | 0;
  HEAP32[$11 >> 2] = 0;
  $12 = $7 + -8 | 0;
  HEAP32[$12 >> 2] = 0;
  HEAP32[$7 + -4 >> 2] = HEAP32[$$0$i + -4 >> 2];
  HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
  $16 = $$0$i + -12 | 0;
  HEAP32[$11 >> 2] = HEAP32[$16 >> 2];
  $18 = $$0$i + -8 | 0;
  HEAP32[$12 >> 2] = HEAP32[$18 >> 2];
  HEAP32[$18 >> 2] = 0;
  HEAP32[$16 >> 2] = 0;
  HEAP32[$9 >> 2] = 0;
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -16;
  $$0$i = $9;
 }
 $22 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$5 >> 2] = $22;
 $24 = $1 + 8 | 0;
 $25 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = HEAP32[$24 >> 2];
 HEAP32[$24 >> 2] = $25;
 $27 = $0 + 8 | 0;
 $28 = $1 + 12 | 0;
 $29 = HEAP32[$27 >> 2] | 0;
 HEAP32[$27 >> 2] = HEAP32[$28 >> 2];
 HEAP32[$28 >> 2] = $29;
 HEAP32[$1 >> 2] = HEAP32[$5 >> 2];
 return;
}

function __ZN2ut4arch19EntityCommandBuffer15destroyEntitiesEPKNS_6EntityEj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$sink = 0, $$sink2 = 0, $$sroa$speculated$i$i$i$i = 0, $16 = 0, $17 = 0, $19 = 0, $22 = 0, $26 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $34 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0;
 $3 = $2 << 3;
 $5 = $3 + 31 & -16;
 $6 = $0 + 8 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 if (!$7) label = 3; else if (((HEAP32[$7 + 4 >> 2] | 0) - (HEAP32[$7 + 8 >> 2] | 0) | 0) > ($5 | 0)) $$0$i$i$i = $7; else label = 3;
 if ((label | 0) == 3) {
  $16 = $5 | 12;
  $17 = HEAP32[$0 + 12 >> 2] | 0;
  $$sroa$speculated$i$i$i$i = ($17 | 0) < ($16 | 0) ? $16 : $17;
  $19 = _aligned_alloc(16, $$sroa$speculated$i$i$i$i) | 0;
  HEAP32[$19 >> 2] = 0;
  HEAP32[$19 + 4 >> 2] = $$sroa$speculated$i$i$i$i;
  HEAP32[$19 + 8 >> 2] = 12;
  $22 = $0 + 4 | 0;
  if (!(HEAP32[$22 >> 2] | 0)) {
   $$sink = $6;
   $$sink2 = $22;
  } else {
   $$sink = HEAP32[$6 >> 2] | 0;
   $$sink2 = $6;
  }
  HEAP32[$$sink >> 2] = $19;
  HEAP32[$$sink2 >> 2] = $19;
  $$0$i$i$i = $19;
 }
 $26 = $0 + 16 | 0;
 HEAP32[$26 >> 2] = (HEAP32[$26 >> 2] | 0) + 1;
 $29 = $$0$i$i$i + 8 | 0;
 $30 = HEAP32[$29 >> 2] | 0;
 $31 = $$0$i$i$i + $30 | 0;
 HEAP32[$29 >> 2] = $30 + $5;
 HEAP32[$31 + 4 >> 2] = $5;
 HEAP32[$31 >> 2] = 4;
 $34 = $31 + 16 | 0;
 HEAP32[$31 + 8 >> 2] = $34;
 HEAP32[$31 + 12 >> 2] = $2;
 _memcpy($34 | 0, $1 | 0, $3 | 0) | 0;
 return;
}

function __ZNSt3__26vectorIN2ut4arch13ComponentSpecENS_9allocatorIS3_EEE8__appendEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $10 = 0, $11 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $24 = 0, $27 = 0, $3 = 0, $32 = 0, $34 = 0, $4 = 0, $42 = 0, $5 = 0, $spec$select$i = 0;
 $2 = $0 + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $0 + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if ($3 - $5 >> 3 >>> 0 >= $1 >>> 0) {
  $$0$i = $1;
  $10 = $5;
  do {
   $11 = $10;
   HEAP32[$11 >> 2] = 0;
   HEAP32[$11 + 4 >> 2] = 0;
   $10 = (HEAP32[$4 >> 2] | 0) + 8 | 0;
   HEAP32[$4 >> 2] = $10;
   $$0$i = $$0$i + -1 | 0;
  } while (($$0$i | 0) != 0);
  return;
 }
 $19 = HEAP32[$0 >> 2] | 0;
 $20 = $5 - $19 | 0;
 $21 = $20 >> 3;
 $22 = $21 + $1 | 0;
 if ($22 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $24 = $3 - $19 | 0;
 $27 = $24 >> 2;
 $spec$select$i = $24 >> 3 >>> 0 < 268435455 ? ($27 >>> 0 < $22 >>> 0 ? $22 : $27) : 536870911;
 do if (!$spec$select$i) {
  $34 = 0;
  $42 = 0;
 } else if ($spec$select$i >>> 0 > 536870911) _abort(); else {
  $32 = __Znwj($spec$select$i << 3) | 0;
  $34 = $32;
  $42 = $32;
  break;
 } while (0);
 _memset($34 + ($21 << 3) | 0, 0, $1 << 3 | 0) | 0;
 if (($20 | 0) > 0) _memcpy($42 | 0, $19 | 0, $20 | 0) | 0;
 HEAP32[$0 >> 2] = $34;
 HEAP32[$4 >> 2] = $34 + ($22 << 3);
 HEAP32[$2 >> 2] = $34 + ($spec$select$i << 3);
 if (!$19) return;
 __ZdlPv($19);
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiN2ut4arch13EntityManager11FreshEntityEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS_9allocatorIS6_EEE6rehashEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$sroa$speculated = 0, $22 = 0, $27 = 0, $30 = 0, $8 = 0;
 if (($1 | 0) == 1) $$0 = 2; else if (!($1 + -1 & $1)) $$0 = $1; else $$0 = __ZNSt3__212__next_primeEj($1) | 0;
 $8 = HEAP32[$0 + 4 >> 2] | 0;
 if ($$0 >>> 0 > $8 >>> 0) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIiN2ut4arch13EntityManager11FreshEntityEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS_9allocatorIS6_EEE8__rehashEj($0, $$0);
  return;
 }
 if ($$0 >>> 0 >= $8 >>> 0) return;
 $22 = ~~+Math_ceil(+(+((HEAP32[$0 + 12 >> 2] | 0) >>> 0) / +HEAPF32[$0 + 16 >> 2])) >>> 0;
 if ($8 >>> 0 > 2 & ($8 + -1 & $8 | 0) == 0) {
  $27 = 1 << 32 - (Math_clz32($22 + -1 | 0) | 0);
  $30 = $22 >>> 0 < 2 ? $22 : $27;
 } else $30 = __ZNSt3__212__next_primeEj($22) | 0;
 $$sroa$speculated = $$0 >>> 0 < $30 >>> 0 ? $30 : $$0;
 if ($$sroa$speculated >>> 0 >= $8 >>> 0) return;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIiN2ut4arch13EntityManager11FreshEntityEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS_9allocatorIS6_EEE8__rehashEj($0, $$sroa$speculated);
 return;
}

function __ZN2ut4arch19EntityCommandBuffer19instantiateEntitiesENS_6EntityEj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$sink = 0, $$sink3 = 0, $$sroa$speculated$i$i$i$i = 0, $10 = 0, $19 = 0, $21 = 0, $24 = 0, $28 = 0, $3 = 0, $31 = 0, $32 = 0, $33 = 0, $37 = 0, $5 = 0, $8 = 0, $9 = 0, label = 0;
 $3 = $1;
 $5 = HEAP32[$3 >> 2] | 0;
 $8 = HEAP32[$3 + 4 >> 2] | 0;
 $9 = $0 + 8 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if (!$10) label = 3; else if (((HEAP32[$10 + 4 >> 2] | 0) - (HEAP32[$10 + 8 >> 2] | 0) | 0) > 32) $$0$i$i$i = $10; else label = 3;
 if ((label | 0) == 3) {
  $19 = HEAP32[$0 + 12 >> 2] | 0;
  $$sroa$speculated$i$i$i$i = ($19 | 0) > 44 ? $19 : 44;
  $21 = _aligned_alloc(16, $$sroa$speculated$i$i$i$i) | 0;
  HEAP32[$21 >> 2] = 0;
  HEAP32[$21 + 4 >> 2] = $$sroa$speculated$i$i$i$i;
  HEAP32[$21 + 8 >> 2] = 12;
  $24 = $0 + 4 | 0;
  if (!(HEAP32[$24 >> 2] | 0)) {
   $$sink = $9;
   $$sink3 = $24;
  } else {
   $$sink = HEAP32[$9 >> 2] | 0;
   $$sink3 = $9;
  }
  HEAP32[$$sink >> 2] = $21;
  HEAP32[$$sink3 >> 2] = $21;
  $$0$i$i$i = $21;
 }
 $28 = $0 + 16 | 0;
 HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + 1;
 $31 = $$0$i$i$i + 8 | 0;
 $32 = HEAP32[$31 >> 2] | 0;
 $33 = $$0$i$i$i + $32 | 0;
 HEAP32[$31 >> 2] = $32 + 32;
 HEAP32[$33 + 4 >> 2] = 32;
 HEAP32[$33 >> 2] = 2;
 $37 = $33 + 8 | 0;
 HEAP32[$37 >> 2] = $5;
 HEAP32[$37 + 4 >> 2] = $8;
 HEAP32[$33 + 16 >> 2] = $2;
 return;
}

function __ZN2ut4arch19EntityCommandBuffer18removeComponentRawENS_6EntityEj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$sink = 0, $$sink3 = 0, $$sroa$speculated$i$i$i$i = 0, $10 = 0, $19 = 0, $21 = 0, $24 = 0, $28 = 0, $3 = 0, $31 = 0, $32 = 0, $33 = 0, $37 = 0, $5 = 0, $8 = 0, $9 = 0, label = 0;
 $3 = $1;
 $5 = HEAP32[$3 >> 2] | 0;
 $8 = HEAP32[$3 + 4 >> 2] | 0;
 $9 = $0 + 8 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if (!$10) label = 3; else if (((HEAP32[$10 + 4 >> 2] | 0) - (HEAP32[$10 + 8 >> 2] | 0) | 0) > 32) $$0$i$i$i = $10; else label = 3;
 if ((label | 0) == 3) {
  $19 = HEAP32[$0 + 12 >> 2] | 0;
  $$sroa$speculated$i$i$i$i = ($19 | 0) > 44 ? $19 : 44;
  $21 = _aligned_alloc(16, $$sroa$speculated$i$i$i$i) | 0;
  HEAP32[$21 >> 2] = 0;
  HEAP32[$21 + 4 >> 2] = $$sroa$speculated$i$i$i$i;
  HEAP32[$21 + 8 >> 2] = 12;
  $24 = $0 + 4 | 0;
  if (!(HEAP32[$24 >> 2] | 0)) {
   $$sink = $9;
   $$sink3 = $24;
  } else {
   $$sink = HEAP32[$9 >> 2] | 0;
   $$sink3 = $9;
  }
  HEAP32[$$sink >> 2] = $21;
  HEAP32[$$sink3 >> 2] = $21;
  $$0$i$i$i = $21;
 }
 $28 = $0 + 16 | 0;
 HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + 1;
 $31 = $$0$i$i$i + 8 | 0;
 $32 = HEAP32[$31 >> 2] | 0;
 $33 = $$0$i$i$i + $32 | 0;
 HEAP32[$31 >> 2] = $32 + 32;
 HEAP32[$33 + 4 >> 2] = 32;
 HEAP32[$33 >> 2] = 10;
 $37 = $33 + 8 | 0;
 HEAP32[$37 >> 2] = $5;
 HEAP32[$37 + 4 >> 2] = $8;
 HEAP32[$33 + 16 >> 2] = $2;
 return;
}

function __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $2 = 0, $22 = 0, $24 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $$0$i = HEAP32[$3 >> 2] | 0;
 while (1) {
  if (($$0$i | 0) == ($2 | 0)) break;
  $7 = HEAP32[$5 >> 2] | 0;
  $8 = $7 + -16 | 0;
  $9 = $$0$i + -16 | 0;
  HEAP32[$8 >> 2] = 0;
  $11 = $7 + -12 | 0;
  HEAP32[$11 >> 2] = 0;
  $12 = $7 + -8 | 0;
  HEAP32[$12 >> 2] = 0;
  HEAP32[$7 + -4 >> 2] = HEAP32[$$0$i + -4 >> 2];
  HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
  $16 = $$0$i + -12 | 0;
  HEAP32[$11 >> 2] = HEAP32[$16 >> 2];
  $18 = $$0$i + -8 | 0;
  HEAP32[$12 >> 2] = HEAP32[$18 >> 2];
  HEAP32[$18 >> 2] = 0;
  HEAP32[$16 >> 2] = 0;
  HEAP32[$9 >> 2] = 0;
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -16;
  $$0$i = $9;
 }
 $22 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$5 >> 2] = $22;
 $24 = $1 + 8 | 0;
 $25 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = HEAP32[$24 >> 2];
 HEAP32[$24 >> 2] = $25;
 $27 = $0 + 8 | 0;
 $28 = $1 + 12 | 0;
 $29 = HEAP32[$27 >> 2] | 0;
 HEAP32[$27 >> 2] = HEAP32[$28 >> 2];
 HEAP32[$28 >> 2] = $29;
 HEAP32[$1 >> 2] = HEAP32[$5 >> 2];
 return;
}

function __ZN2ut4arch19EntityCommandBuffer15addComponentRawENS_6EntityEj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$sink = 0, $$sink3 = 0, $$sroa$speculated$i$i$i$i = 0, $10 = 0, $19 = 0, $21 = 0, $24 = 0, $28 = 0, $3 = 0, $31 = 0, $32 = 0, $33 = 0, $37 = 0, $5 = 0, $8 = 0, $9 = 0, label = 0;
 $3 = $1;
 $5 = HEAP32[$3 >> 2] | 0;
 $8 = HEAP32[$3 + 4 >> 2] | 0;
 $9 = $0 + 8 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if (!$10) label = 3; else if (((HEAP32[$10 + 4 >> 2] | 0) - (HEAP32[$10 + 8 >> 2] | 0) | 0) > 32) $$0$i$i$i = $10; else label = 3;
 if ((label | 0) == 3) {
  $19 = HEAP32[$0 + 12 >> 2] | 0;
  $$sroa$speculated$i$i$i$i = ($19 | 0) > 44 ? $19 : 44;
  $21 = _aligned_alloc(16, $$sroa$speculated$i$i$i$i) | 0;
  HEAP32[$21 >> 2] = 0;
  HEAP32[$21 + 4 >> 2] = $$sroa$speculated$i$i$i$i;
  HEAP32[$21 + 8 >> 2] = 12;
  $24 = $0 + 4 | 0;
  if (!(HEAP32[$24 >> 2] | 0)) {
   $$sink = $9;
   $$sink3 = $24;
  } else {
   $$sink = HEAP32[$9 >> 2] | 0;
   $$sink3 = $9;
  }
  HEAP32[$$sink >> 2] = $21;
  HEAP32[$$sink3 >> 2] = $21;
  $$0$i$i$i = $21;
 }
 $28 = $0 + 16 | 0;
 HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + 1;
 $31 = $$0$i$i$i + 8 | 0;
 $32 = HEAP32[$31 >> 2] | 0;
 $33 = $$0$i$i$i + $32 | 0;
 HEAP32[$31 >> 2] = $32 + 32;
 HEAP32[$33 + 4 >> 2] = 32;
 HEAP32[$33 >> 2] = 5;
 $37 = $33 + 8 | 0;
 HEAP32[$37 >> 2] = $5;
 HEAP32[$37 + 4 >> 2] = $8;
 HEAP32[$33 + 16 >> 2] = $2;
 return;
}

function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $16 = 0, $19 = 0, $2 = 0, $24 = 0, $25 = 0, $3 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp;
 $3 = $0 + 4 | 0;
 $8 = (((HEAP32[$3 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) | 0) / 24 | 0) + 1 | 0;
 $9 = __ZNKSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE8max_sizeEv($0) | 0;
 if ($9 >>> 0 < $8 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $14 = HEAP32[$0 >> 2] | 0;
  $16 = ((HEAP32[$0 + 8 >> 2] | 0) - $14 | 0) / 24 | 0;
  $19 = $16 << 1;
  __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($2, $16 >>> 0 < $9 >>> 1 >>> 0 ? ($19 >>> 0 < $8 >>> 0 ? $8 : $19) : $9, ((HEAP32[$3 >> 2] | 0) - $14 | 0) / 24 | 0, $0 + 12 | 0);
  $24 = $2 + 8 | 0;
  $25 = HEAP32[$24 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($25, $1);
  HEAP32[$24 >> 2] = $25 + 24;
  __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0, $2);
  __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($2);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__26vectorIN2ut6EntityENS_9allocatorIS2_EEE8__appendEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $10 = 0, $11 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $24 = 0, $27 = 0, $3 = 0, $32 = 0, $34 = 0, $4 = 0, $42 = 0, $5 = 0, $spec$select$i = 0;
 $2 = $0 + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $0 + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if ($3 - $5 >> 3 >>> 0 >= $1 >>> 0) {
  $$0$i = $1;
  $10 = $5;
  do {
   $11 = $10;
   HEAP32[$11 >> 2] = 0;
   HEAP32[$11 + 4 >> 2] = 0;
   $10 = (HEAP32[$4 >> 2] | 0) + 8 | 0;
   HEAP32[$4 >> 2] = $10;
   $$0$i = $$0$i + -1 | 0;
  } while (($$0$i | 0) != 0);
  return;
 }
 $19 = HEAP32[$0 >> 2] | 0;
 $20 = $5 - $19 | 0;
 $21 = $20 >> 3;
 $22 = $21 + $1 | 0;
 if ($22 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $24 = $3 - $19 | 0;
 $27 = $24 >> 2;
 $spec$select$i = $24 >> 3 >>> 0 < 268435455 ? ($27 >>> 0 < $22 >>> 0 ? $22 : $27) : 536870911;
 do if (!$spec$select$i) {
  $34 = 0;
  $42 = 0;
 } else if ($spec$select$i >>> 0 > 536870911) _abort(); else {
  $32 = __Znwj($spec$select$i << 3) | 0;
  $34 = $32;
  $42 = $32;
  break;
 } while (0);
 _memset($34 + ($21 << 3) | 0, 0, $1 << 3 | 0) | 0;
 if (($20 | 0) > 0) _memcpy($42 | 0, $19 | 0, $20 | 0) | 0;
 HEAP32[$0 >> 2] = $34;
 HEAP32[$4 >> 2] = $34 + ($22 << 3);
 HEAP32[$2 >> 2] = $34 + ($spec$select$i << 3);
 if (!$19) return;
 __ZdlPv($19);
 return;
}

function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE21__push_back_slow_pathIS3_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $16 = 0, $19 = 0, $2 = 0, $24 = 0, $25 = 0, $3 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp;
 $3 = $0 + 4 | 0;
 $8 = (((HEAP32[$3 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) | 0) / 24 | 0) + 1 | 0;
 $9 = __ZNKSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE8max_sizeEv($0) | 0;
 if ($9 >>> 0 < $8 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $14 = HEAP32[$0 >> 2] | 0;
  $16 = ((HEAP32[$0 + 8 >> 2] | 0) - $14 | 0) / 24 | 0;
  $19 = $16 << 1;
  __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($2, $16 >>> 0 < $9 >>> 1 >>> 0 ? ($19 >>> 0 < $8 >>> 0 ? $8 : $19) : $9, ((HEAP32[$3 >> 2] | 0) - $14 | 0) / 24 | 0, $0 + 12 | 0);
  $24 = $2 + 8 | 0;
  $25 = HEAP32[$24 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($25, $1);
  HEAP32[$24 >> 2] = $25 + 24;
  __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0, $2);
  __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($2);
  STACKTOP = sp;
  return;
 }
}

function ___fwritex($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$03846 = 0, $$1 = 0, $$139 = 0, $$141 = 0, $$143 = 0, $10 = 0, $12 = 0, $14 = 0, $23 = 0, $29 = 0, $3 = 0, $32 = 0, $4 = 0, $9 = 0, label = 0;
 $3 = $2 + 16 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (!$4) if (!(___towrite($2) | 0)) {
  $12 = HEAP32[$3 >> 2] | 0;
  label = 5;
 } else $$1 = 0; else {
  $12 = $4;
  label = 5;
 }
 L5 : do if ((label | 0) == 5) {
  $9 = $2 + 20 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  $14 = $10;
  if (($12 - $10 | 0) >>> 0 < $1 >>> 0) {
   $$1 = FUNCTION_TABLE_iiii[HEAP32[$2 + 36 >> 2] & 7]($2, $0, $1) | 0;
   break;
  }
  L10 : do if ((HEAP8[$2 + 75 >> 0] | 0) < 0 | ($1 | 0) == 0) {
   $$139 = 0;
   $$141 = $0;
   $$143 = $1;
   $32 = $14;
  } else {
   $$03846 = $1;
   while (1) {
    $23 = $$03846 + -1 | 0;
    if ((HEAP8[$0 + $23 >> 0] | 0) == 10) break;
    if (!$23) {
     $$139 = 0;
     $$141 = $0;
     $$143 = $1;
     $32 = $14;
     break L10;
    } else $$03846 = $23;
   }
   $29 = FUNCTION_TABLE_iiii[HEAP32[$2 + 36 >> 2] & 7]($2, $0, $$03846) | 0;
   if ($29 >>> 0 < $$03846 >>> 0) {
    $$1 = $29;
    break L5;
   }
   $$139 = $$03846;
   $$141 = $0 + $$03846 | 0;
   $$143 = $1 - $$03846 | 0;
   $32 = HEAP32[$9 >> 2] | 0;
  } while (0);
  _memcpy($32 | 0, $$141 | 0, $$143 | 0) | 0;
  HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + $$143;
  $$1 = $$139 + $$143 | 0;
 } while (0);
 return $$1 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiN2ut9Scheduler15ScheduledSystemEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS5_NS_8equal_toIiEELb1EEENS_9allocatorIS5_EEE6rehashEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$sroa$speculated = 0, $22 = 0, $27 = 0, $30 = 0, $8 = 0;
 if (($1 | 0) == 1) $$0 = 2; else if (!($1 + -1 & $1)) $$0 = $1; else $$0 = __ZNSt3__212__next_primeEj($1) | 0;
 $8 = HEAP32[$0 + 4 >> 2] | 0;
 if ($$0 >>> 0 > $8 >>> 0) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIiN2ut9Scheduler15ScheduledSystemEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS5_NS_8equal_toIiEELb1EEENS_9allocatorIS5_EEE8__rehashEj($0, $$0);
  return;
 }
 if ($$0 >>> 0 >= $8 >>> 0) return;
 $22 = ~~+Math_ceil(+(+((HEAP32[$0 + 12 >> 2] | 0) >>> 0) / +HEAPF32[$0 + 16 >> 2])) >>> 0;
 if ($8 >>> 0 > 2 & ($8 + -1 & $8 | 0) == 0) {
  $27 = 1 << 32 - (Math_clz32($22 + -1 | 0) | 0);
  $30 = $22 >>> 0 < 2 ? $22 : $27;
 } else $30 = __ZNSt3__212__next_primeEj($22) | 0;
 $$sroa$speculated = $$0 >>> 0 < $30 >>> 0 ? $30 : $$0;
 if ($$sroa$speculated >>> 0 >= $8 >>> 0) return;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIiN2ut9Scheduler15ScheduledSystemEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS5_NS_8equal_toIiEELb1EEENS_9allocatorIS5_EEE8__rehashEj($0, $$sroa$speculated);
 return;
}

function __ZN2ut4arch13EntityManager16setBufferDataRawENS_6EntityEjPKNS_16NativeBufferBaseE($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $11 = 0, $12 = 0, $19 = 0, $23 = 0, $4 = 0, $5 = 0, $6 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast$byval_copy = sp + 24 | 0;
 $4 = sp;
 $5 = sp + 16 | 0;
 __ZN2ut4arch13EntityManager19assertEntitiesExistEPKNS_6EntityEiPKc($0, $1, 1, 8023);
 __ZN2ut4arch13EntityManager24assertEntityHasComponentERKNS_6EntityEjPKc($0, $1, $2, 8023);
 $6 = $1;
 $11 = HEAP32[$6 + 4 >> 2] | 0;
 $12 = $4;
 HEAP32[$12 >> 2] = HEAP32[$6 >> 2];
 HEAP32[$12 + 4 >> 2] = $11;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$4 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 HEAP32[$tmpcast$byval_copy >> 2] = __ZN2ut4arch13EntityManager25getComponentDataRawUnsafeENS_6EntityEj($0, $tmpcast$byval_copy, $2) | 0;
 $19 = HEAP32[6067] | 0;
 $23 = $19;
 if ((HEAP32[6068] | 0) - $19 >> 2 >>> 0 > $2 >>> 0) {
  HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$23 + ($2 << 2) >> 2];
  HEAP32[$5 >> 2] = $3;
  HEAP32[$5 + 4 >> 2] = HEAP32[$23 + ($2 << 2) >> 2];
  __ZN2ut25ComponentNativeBufferBase8copyFromERKS0_($tmpcast$byval_copy, $5);
  STACKTOP = sp;
  return;
 } else {
  _snprintf(25060, 1024, 27124, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKcj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$1 = 0, $12 = 0, $17 = 0, $21 = 0, $23 = 0, $24 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 $5 = $0 + 11 | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 $7 = $6 << 24 >> 24 < 0;
 if ($7) $12 = HEAP32[$0 + 4 >> 2] | 0; else $12 = $6 & 255;
 if ($12 >>> 0 < $1 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv($0);
 if ($7) $17 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0; else $17 = 10;
 if (($17 - $12 | 0) >>> 0 < $3 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($0, $17, $12 + $3 - $17 | 0, $12, $1, 0, $3, $2); else if ($3 | 0) {
  if ($7) $24 = HEAP32[$0 >> 2] | 0; else $24 = $0;
  $21 = $12 - $1 | 0;
  $23 = $24 + $1 | 0;
  if (!$21) $$1 = $2; else {
   __ZNSt3__211char_traitsIcE4moveEPcPKcj($23 + $3 | 0, $23, $21) | 0;
   $$1 = $23 >>> 0 <= $2 >>> 0 & ($24 + $12 | 0) >>> 0 > $2 >>> 0 ? $2 + $3 | 0 : $2;
  }
  __ZNSt3__211char_traitsIcE4moveEPcPKcj($23, $$1, $3) | 0;
  $30 = $12 + $3 | 0;
  if ((HEAP8[$5 >> 0] | 0) < 0) HEAP32[$0 + 4 >> 2] = $30; else HEAP8[$5 >> 0] = $30;
  HEAP8[$4 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($24 + $30 | 0, $4);
 }
 STACKTOP = sp;
 return $0 | 0;
}

function __ZN2ut4arch19EntityCommandBuffer25setSharedComponentDataRawENS_6EntityEjPKvi($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $11 = 0, $12 = 0, $16 = 0, $18 = 0, $24 = 0, $27 = 0, $30 = 0, $5 = 0, $6 = 0, $tmpcast$i$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast$i$byval_copy = sp + 16 | 0;
 $5 = sp;
 $6 = $1;
 $11 = HEAP32[$6 + 4 >> 2] | 0;
 $12 = $5;
 HEAP32[$12 >> 2] = HEAP32[$6 >> 2];
 HEAP32[$12 + 4 >> 2] = $11;
 HEAP32[$tmpcast$i$byval_copy >> 2] = HEAP32[$5 >> 2];
 HEAP32[$tmpcast$i$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 $16 = __ZN20ComponentDataCommand13createCommandEPN2ut4arch19EntityCommandBufferENS1_15EntityCommandOpENS0_6EntityEjiPPv($0, 14, $tmpcast$i$byval_copy, $2, $4, 0) | 0;
 $18 = HEAP32[6067] | 0;
 if ((HEAP32[6068] | 0) - $18 >> 2 >>> 0 <= $2 >>> 0) {
  _snprintf(25060, 1024, 27124, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
 $24 = HEAP32[$18 + ($2 << 2) >> 2] | 0;
 if (!$3) {
  _memset(HEAP32[$16 + 24 >> 2] | 0, 0, $4 | 0) | 0;
  STACKTOP = sp;
  return;
 }
 $27 = HEAP32[$24 + 36 >> 2] | 0;
 $30 = HEAP32[$16 + 24 >> 2] | 0;
 if (!$27) {
  _memcpy($30 | 0, $3 | 0, $4 | 0) | 0;
  STACKTOP = sp;
  return;
 } else {
  FUNCTION_TABLE_viii[$27 & 31]($3, $30, HEAP32[$24 + 44 >> 2] | 0);
  STACKTOP = sp;
  return;
 }
}

function __ZN2ut4arch19EntityCommandBuffer25addSharedComponentDataRawENS_6EntityEjPKvi($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $11 = 0, $12 = 0, $16 = 0, $18 = 0, $24 = 0, $27 = 0, $30 = 0, $5 = 0, $6 = 0, $tmpcast$i$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast$i$byval_copy = sp + 16 | 0;
 $5 = sp;
 $6 = $1;
 $11 = HEAP32[$6 + 4 >> 2] | 0;
 $12 = $5;
 HEAP32[$12 >> 2] = HEAP32[$6 >> 2];
 HEAP32[$12 + 4 >> 2] = $11;
 HEAP32[$tmpcast$i$byval_copy >> 2] = HEAP32[$5 >> 2];
 HEAP32[$tmpcast$i$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 $16 = __ZN20ComponentDataCommand13createCommandEPN2ut4arch19EntityCommandBufferENS1_15EntityCommandOpENS0_6EntityEjiPPv($0, 13, $tmpcast$i$byval_copy, $2, $4, 0) | 0;
 $18 = HEAP32[6067] | 0;
 if ((HEAP32[6068] | 0) - $18 >> 2 >>> 0 <= $2 >>> 0) {
  _snprintf(25060, 1024, 27124, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
 $24 = HEAP32[$18 + ($2 << 2) >> 2] | 0;
 if (!$3) {
  _memset(HEAP32[$16 + 24 >> 2] | 0, 0, $4 | 0) | 0;
  STACKTOP = sp;
  return;
 }
 $27 = HEAP32[$24 + 36 >> 2] | 0;
 $30 = HEAP32[$16 + 24 >> 2] | 0;
 if (!$27) {
  _memcpy($30 | 0, $3 | 0, $4 | 0) | 0;
  STACKTOP = sp;
  return;
 } else {
  FUNCTION_TABLE_viii[$27 & 31]($3, $30, HEAP32[$24 + 44 >> 2] | 0);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$sroa$speculated = 0, $16 = 0, $17 = 0, $22 = 0, $23 = 0, $25 = 0, $28 = 0, $29 = 0, $38 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $8 = sp;
 if ((-18 - $1 | 0) >>> 0 < $2 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ((HEAP8[$0 + 11 >> 0] | 0) < 0) $25 = HEAP32[$0 >> 2] | 0; else $25 = $0;
 if ($1 >>> 0 < 2147483623) {
  $16 = $2 + $1 | 0;
  $17 = $1 << 1;
  $$sroa$speculated = $16 >>> 0 < $17 >>> 0 ? $17 : $16;
  $22 = $$sroa$speculated >>> 0 < 11 ? 11 : $$sroa$speculated + 16 & -16;
 } else $22 = -17;
 $23 = __Znwj($22) | 0;
 if ($4 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcj($23, $25, $4) | 0;
 if ($6 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcj($23 + $4 | 0, $7, $6) | 0;
 $28 = $3 - $5 | 0;
 $29 = $28 - $4 | 0;
 if ($29 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcj($23 + $4 + $6 | 0, $25 + $4 + $5 | 0, $29) | 0;
 if (($1 | 0) != 10) __ZdlPv($25);
 HEAP32[$0 >> 2] = $23;
 HEAP32[$0 + 8 >> 2] = $22 | -2147483648;
 $38 = $28 + $6 | 0;
 HEAP32[$0 + 4 >> 2] = $38;
 HEAP8[$8 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($23 + $38 | 0, $8);
 STACKTOP = sp;
 return;
}

function __ZN2ut4arch13EntityManager15destroyEntitiesEPKNS_6EntityEi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$017 = 0, $11 = 0, $15 = 0, $16 = 0, $22 = 0, $9 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 __ZN2ut4arch13EntityManager19assertEntitiesExistEPKNS_6EntityEiPKc($0, $1, $2, 12503);
 if ((HEAP32[$0 + 36 >> 2] | 0) <= 0) {
  $22 = $0 + 8 | 0;
  if ((HEAP32[(HEAP32[$22 >> 2] | 0) + 44 >> 2] | 0) > 0) {
   _snprintf(25060, 1024, 8878, $vararg_buffer) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8949, 6920, 35);
  }
  __ZN2ut4arch17EntityDataManager21tryDeallocateEntitiesEPKNS_6EntityEi(HEAP32[$22 >> 2] | 0, $1, $2);
  STACKTOP = sp;
  return;
 }
 if (($2 | 0) > 0) {
  $$017 = 0;
  do {
   $9 = __ZN2ut4arch13EntityManager23findOrCreateFreshEntityERKNS_6EntityE($0, $1 + ($$017 << 3) | 0) | 0;
   HEAP8[$9 + 48 >> 0] = 1;
   $11 = $9;
   HEAP32[$11 >> 2] = 0;
   HEAP32[$11 + 4 >> 2] = 0;
   $15 = $9 + 36 | 0;
   $16 = $15 + 11 | 0;
   if ((HEAP8[$16 >> 0] | 0) < 0) {
    HEAP8[HEAP32[$15 >> 2] >> 0] = 0;
    HEAP32[$9 + 40 >> 2] = 0;
   } else {
    HEAP8[$15 >> 0] = 0;
    HEAP8[$16 >> 0] = 0;
   }
   $$017 = $$017 + 1 | 0;
  } while (($$017 | 0) != ($2 | 0));
 }
 __ZN2ut4arch19EntityCommandBuffer15destroyEntitiesEPKNS_6EntityEj($0 + 40 | 0, $1, $2);
 STACKTOP = sp;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIPvNS_4pairIiS2_EEEENS_22__unordered_map_hasherIS2_S5_NS_4hashIS2_EELb1EEENS_21__unordered_map_equalIS2_S5_NS_8equal_toIS2_EELb1EEENS_9allocatorIS5_EEE6rehashEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$sroa$speculated = 0, $22 = 0, $27 = 0, $30 = 0, $8 = 0;
 if (($1 | 0) == 1) $$0 = 2; else if (!($1 + -1 & $1)) $$0 = $1; else $$0 = __ZNSt3__212__next_primeEj($1) | 0;
 $8 = HEAP32[$0 + 4 >> 2] | 0;
 if ($$0 >>> 0 > $8 >>> 0) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIPvNS_4pairIiS2_EEEENS_22__unordered_map_hasherIS2_S5_NS_4hashIS2_EELb1EEENS_21__unordered_map_equalIS2_S5_NS_8equal_toIS2_EELb1EEENS_9allocatorIS5_EEE8__rehashEj($0, $$0);
  return;
 }
 if ($$0 >>> 0 >= $8 >>> 0) return;
 $22 = ~~+Math_ceil(+(+((HEAP32[$0 + 12 >> 2] | 0) >>> 0) / +HEAPF32[$0 + 16 >> 2])) >>> 0;
 if ($8 >>> 0 > 2 & ($8 + -1 & $8 | 0) == 0) {
  $27 = 1 << 32 - (Math_clz32($22 + -1 | 0) | 0);
  $30 = $22 >>> 0 < 2 ? $22 : $27;
 } else $30 = __ZNSt3__212__next_primeEj($22) | 0;
 $$sroa$speculated = $$0 >>> 0 < $30 >>> 0 ? $30 : $$0;
 if ($$sroa$speculated >>> 0 >= $8 >>> 0) return;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIPvNS_4pairIiS2_EEEENS_22__unordered_map_hasherIS2_S5_NS_4hashIS2_EELb1EEENS_21__unordered_map_equalIS2_S5_NS_8equal_toIS2_EELb1EEENS_9allocatorIS5_EEE8__rehashEj($0, $$sroa$speculated);
 return;
}

function __ZN2ut4arch17EntityDataManager27getSharedComponentDataIndexENS_6EntityEj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$020$i = 0, $12 = 0, $13 = 0, $14 = 0, $23 = 0, $26 = 0, $35 = 0, $4 = 0, $5 = 0, $7 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = HEAP32[$0 + 20 >> 2] | 0;
 $5 = HEAP32[$1 >> 2] | 0;
 $7 = HEAP32[$4 + ($5 << 4) + 8 >> 2] | 0;
 $9 = HEAP32[$4 + ($5 << 4) + 12 >> 2] | 0;
 $12 = HEAP8[($2 & 63) + ($7 + 36) >> 0] | 0;
 $13 = $12 & 255;
 $14 = $7 + 28 | 0;
 if ((HEAP32[$14 >> 2] | 0) <= ($13 | 0)) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 13990, 14007, 120);
 }
 if (!($12 << 24 >> 24)) label = 5; else if ((HEAP32[(HEAP32[$7 + 32 >> 2] | 0) + ($13 << 4) >> 2] | 0) == ($2 | 0)) $35 = $13; else label = 5;
 L6 : do if ((label | 0) == 5) {
  $23 = HEAP32[$14 >> 2] | 0;
  if (($23 | 0) > 0) {
   $26 = HEAP32[$7 + 32 >> 2] | 0;
   $$020$i = 0;
   while (1) {
    if ((HEAP32[$26 + ($$020$i << 4) >> 2] | 0) == ($2 | 0)) {
     $35 = $$020$i;
     break L6;
    }
    $$020$i = $$020$i + 1 | 0;
    if (($$020$i | 0) >= ($23 | 0)) {
     $35 = -1;
     break;
    }
   }
  } else $35 = -1;
 } while (0);
 STACKTOP = sp;
 return HEAP32[(HEAP32[$9 + 20 >> 2] | 0) + (HEAP32[(HEAP32[$7 + 100 >> 2] | 0) + ($35 << 2) >> 2] << 2) >> 2] | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_block_invokeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$031 = 0, $$032 = 0, $$2 = 0, $$2$ph = 0, $$236 = 0, $$3 = 0, $17 = 0, $28 = 0;
 L1 : do if (($1 - $0 | 0) > 12) {
  $$031 = 0;
  $$032 = $0;
  while (1) {
   if ($$031 >>> 0 >= 13) break;
   if ((HEAP8[$$032 >> 0] | 0) != (HEAP8[23908 + $$031 >> 0] | 0)) {
    $$236 = $0;
    break L1;
   }
   $$031 = $$031 + 1 | 0;
   $$032 = $$032 + 1 | 0;
  }
  L8 : do if (($$032 | 0) == ($1 | 0)) $$3 = $1; else {
   if ((HEAP8[$$032 >> 0] | 0) == 95) {
    $17 = $$032 + 1 | 0;
    if (($17 | 0) == ($1 | 0)) {
     $$236 = $0;
     break L1;
    }
    if (((HEAP8[$17 >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
     $$236 = $0;
     break L1;
    }
    $$2$ph = $$032 + 2 | 0;
   } else $$2$ph = $$032;
   $$2 = $$2$ph;
   while (1) {
    if (($$2 | 0) == ($1 | 0)) {
     $$3 = $1;
     break L8;
    }
    if (((HEAP8[$$2 >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
     $$3 = $$2;
     break L8;
    }
    $$2 = $$2 + 1 | 0;
   }
  } while (0);
  $28 = HEAP32[$2 + 4 >> 2] | 0;
  if ((HEAP32[$2 >> 2] | 0) == ($28 | 0)) $$236 = $0; else {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($28 + -24 | 0, 0, 23922) | 0;
   $$236 = $$3;
  }
 } else $$236 = $0; while (0);
 return $$236 | 0;
}

function __ZN2ut12SimpleSystemD0Ev($0) {
 $0 = $0 | 0;
 var $$06$i$i$i$i = 0, $13 = 0, $2 = 0, $23 = 0, $24 = 0, $26 = 0, $27 = 0, $30 = 0, $36 = 0, $37 = 0, $43 = 0;
 HEAP32[$0 >> 2] = 3864;
 $2 = HEAP32[$0 + 80 >> 2] | 0;
 if (($0 + 64 | 0) == ($2 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 16 >> 2] & 63]($2); else if ($2 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] & 63]($2);
 $13 = HEAP32[$0 + 56 >> 2] | 0;
 if (($0 + 40 | 0) == ($13 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$13 >> 2] | 0) + 16 >> 2] & 63]($13); else if ($13 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$13 >> 2] | 0) + 20 >> 2] & 63]($13);
 HEAP32[$0 >> 2] = 3352;
 $23 = $0 + 24 | 0;
 $24 = HEAP32[$23 >> 2] | 0;
 if ($24 | 0) {
  $26 = $0 + 28 | 0;
  $27 = HEAP32[$26 >> 2] | 0;
  if (($27 | 0) == ($24 | 0)) $36 = $24; else {
   $$06$i$i$i$i = $27;
   do {
    $30 = $$06$i$i$i$i + -12 | 0;
    $$06$i$i$i$i = $$06$i$i$i$i + -16 | 0;
    if ((HEAP8[$30 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$30 >> 2] | 0);
   } while (($$06$i$i$i$i | 0) != ($24 | 0));
   $36 = HEAP32[$23 >> 2] | 0;
  }
  HEAP32[$26 >> 2] = $24;
  __ZdlPv($36);
 }
 $37 = $0 + 12 | 0;
 if ((HEAP8[$37 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$37 >> 2] | 0);
 $43 = HEAP32[$0 + 8 >> 2] | 0;
 if (!$43) {
  __ZdlPv($0);
  return;
 }
 __ZNSt3__219__shared_weak_count14__release_weakEv($43);
 __ZdlPv($0);
 return;
}

function __ZNSt3__26vectorIjNS_9allocatorIjEEE8__appendEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $10 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $28 = 0, $3 = 0, $30 = 0, $38 = 0, $4 = 0, $5 = 0, $spec$select$i = 0;
 $2 = $0 + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $0 + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if ($3 - $5 >> 2 >>> 0 >= $1 >>> 0) {
  $$0$i = $1;
  $10 = $5;
  do {
   HEAP32[$10 >> 2] = 0;
   $10 = (HEAP32[$4 >> 2] | 0) + 4 | 0;
   HEAP32[$4 >> 2] = $10;
   $$0$i = $$0$i + -1 | 0;
  } while (($$0$i | 0) != 0);
  return;
 }
 $15 = HEAP32[$0 >> 2] | 0;
 $16 = $5 - $15 | 0;
 $17 = $16 >> 2;
 $18 = $17 + $1 | 0;
 if ($18 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $20 = $3 - $15 | 0;
 $23 = $20 >> 1;
 $spec$select$i = $20 >> 2 >>> 0 < 536870911 ? ($23 >>> 0 < $18 >>> 0 ? $18 : $23) : 1073741823;
 do if (!$spec$select$i) {
  $30 = 0;
  $38 = 0;
 } else if ($spec$select$i >>> 0 > 1073741823) _abort(); else {
  $28 = __Znwj($spec$select$i << 2) | 0;
  $30 = $28;
  $38 = $28;
  break;
 } while (0);
 _memset($30 + ($17 << 2) | 0, 0, $1 << 2 | 0) | 0;
 if (($16 | 0) > 0) _memcpy($38 | 0, $15 | 0, $16 | 0) | 0;
 HEAP32[$0 >> 2] = $30;
 HEAP32[$4 >> 2] = $30 + ($18 << 2);
 HEAP32[$2 >> 2] = $30 + ($spec$select$i << 2);
 if (!$15) return;
 __ZdlPv($15);
 return;
}

function __ZN2ut4arch26SharedComponentDataManagerD2Ev($0) {
 $0 = $0 | 0;
 var $$014$i$i$i = 0, $$06$i$i$i = 0, $12 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $23 = 0, $26 = 0, $28 = 0, $32 = 0, $33 = 0, $7 = 0, $$014$i$i$i$looptemp = 0;
 $2 = HEAP32[$0 + 72 >> 2] | 0;
 if ($2 | 0) {
  HEAP32[$0 + 76 >> 2] = $2;
  __ZdlPv($2);
 }
 $7 = HEAP32[$0 + 60 >> 2] | 0;
 if ($7 | 0) {
  HEAP32[$0 + 64 >> 2] = $7;
  __ZdlPv($7);
 }
 $12 = HEAP32[$0 + 48 >> 2] | 0;
 if ($12 | 0) {
  HEAP32[$0 + 52 >> 2] = $12;
  __ZdlPv($12);
 }
 $16 = $0 + 36 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 if ($17 | 0) {
  $19 = $0 + 40 | 0;
  $20 = HEAP32[$19 >> 2] | 0;
  if (($20 | 0) == ($17 | 0)) $26 = $17; else {
   $$06$i$i$i = $20;
   do {
    $$06$i$i$i = $$06$i$i$i + -4 | 0;
    $23 = HEAP32[$$06$i$i$i >> 2] | 0;
    HEAP32[$$06$i$i$i >> 2] = 0;
    if ($23 | 0) __ZdaPv($23);
   } while (($$06$i$i$i | 0) != ($17 | 0));
   $26 = HEAP32[$16 >> 2] | 0;
  }
  HEAP32[$19 >> 2] = $17;
  __ZdlPv($26);
 }
 $28 = HEAP32[$0 + 24 >> 2] | 0;
 if ($28 | 0) {
  $$014$i$i$i = $28;
  do {
   $$014$i$i$i$looptemp = $$014$i$i$i;
   $$014$i$i$i = HEAP32[$$014$i$i$i >> 2] | 0;
   __ZdlPv($$014$i$i$i$looptemp);
  } while (($$014$i$i$i | 0) != 0);
 }
 $32 = $0 + 16 | 0;
 $33 = HEAP32[$32 >> 2] | 0;
 HEAP32[$32 >> 2] = 0;
 if (!$33) return;
 __ZdlPv($33);
 return;
}

function __ZN2ut12SimpleSystemD2Ev($0) {
 $0 = $0 | 0;
 var $$06$i$i$i$i = 0, $13 = 0, $2 = 0, $23 = 0, $24 = 0, $26 = 0, $27 = 0, $30 = 0, $36 = 0, $37 = 0, $43 = 0;
 HEAP32[$0 >> 2] = 3864;
 $2 = HEAP32[$0 + 80 >> 2] | 0;
 if (($0 + 64 | 0) == ($2 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 16 >> 2] & 63]($2); else if ($2 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] & 63]($2);
 $13 = HEAP32[$0 + 56 >> 2] | 0;
 if (($0 + 40 | 0) == ($13 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$13 >> 2] | 0) + 16 >> 2] & 63]($13); else if ($13 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$13 >> 2] | 0) + 20 >> 2] & 63]($13);
 HEAP32[$0 >> 2] = 3352;
 $23 = $0 + 24 | 0;
 $24 = HEAP32[$23 >> 2] | 0;
 if ($24 | 0) {
  $26 = $0 + 28 | 0;
  $27 = HEAP32[$26 >> 2] | 0;
  if (($27 | 0) == ($24 | 0)) $36 = $24; else {
   $$06$i$i$i$i = $27;
   do {
    $30 = $$06$i$i$i$i + -12 | 0;
    $$06$i$i$i$i = $$06$i$i$i$i + -16 | 0;
    if ((HEAP8[$30 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$30 >> 2] | 0);
   } while (($$06$i$i$i$i | 0) != ($24 | 0));
   $36 = HEAP32[$23 >> 2] | 0;
  }
  HEAP32[$26 >> 2] = $24;
  __ZdlPv($36);
 }
 $37 = $0 + 12 | 0;
 if ((HEAP8[$37 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$37 >> 2] | 0);
 $43 = HEAP32[$0 + 8 >> 2] | 0;
 if (!$43) return;
 __ZNSt3__219__shared_weak_count14__release_weakEv($43);
 return;
}

function __ZN2ut12SimpleSystemC2ENSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_8functionIFvPNS_9SchedulerEPNS_12ManagerWorldEEEE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $11 = 0, $16 = 0, $3 = 0, $6 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($3, $1);
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $6 = $0 + 12 | 0;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$6 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 HEAP32[$6 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 $7 = $0 + 24 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 HEAP8[$7 + 12 >> 0] = 0;
 HEAP32[$0 >> 2] = 3864;
 HEAP32[$0 + 56 >> 2] = 0;
 $9 = $0 + 64 | 0;
 $10 = $2 + 16 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 if (!$11) {
  HEAP32[$0 + 80 >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 if (($2 | 0) == ($11 | 0)) {
  HEAP32[$0 + 80 >> 2] = $9;
  $16 = HEAP32[$10 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$16 >> 2] | 0) + 12 >> 2] & 15]($16, $9);
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$0 + 80 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 8 >> 2] & 7]($11) | 0;
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__212_GLOBAL__N_19as_stringINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPFiPcjPKczEjEET_T0_SD_PKNSD_10value_typeET1_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $$017 = 0, $$2 = 0, $10 = 0, $13 = 0, $14 = 0, $21 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $3 = $1 + 11 | 0;
 $4 = HEAP8[$3 >> 0] | 0;
 if ($4 << 24 >> 24 < 0) $21 = HEAP32[$1 + 4 >> 2] | 0; else $21 = $4 & 255;
 $$017 = $21;
 $10 = $4;
 while (1) {
  if ($10 << 24 >> 24 < 0) $13 = HEAP32[$1 >> 2] | 0; else $13 = $1;
  HEAP32[$vararg_buffer >> 2] = $2;
  $14 = _snprintf($13, $$017 + 1 | 0, 21752, $vararg_buffer) | 0;
  if (($14 | 0) > -1) if ($14 >>> 0 > $$017 >>> 0) $$2 = $14; else break; else $$2 = $$017 << 1 | 1;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($1, $$2, 0);
  $$017 = $$2;
  $10 = HEAP8[$3 >> 0] | 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($1, $14, 0);
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$1 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__212_GLOBAL__N_19as_stringINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPFiPcjPKczEiEET_T0_SD_PKNSD_10value_typeET1_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $$017 = 0, $$2 = 0, $10 = 0, $13 = 0, $14 = 0, $21 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $3 = $1 + 11 | 0;
 $4 = HEAP8[$3 >> 0] | 0;
 if ($4 << 24 >> 24 < 0) $21 = HEAP32[$1 + 4 >> 2] | 0; else $21 = $4 & 255;
 $$017 = $21;
 $10 = $4;
 while (1) {
  if ($10 << 24 >> 24 < 0) $13 = HEAP32[$1 >> 2] | 0; else $13 = $1;
  HEAP32[$vararg_buffer >> 2] = $2;
  $14 = _snprintf($13, $$017 + 1 | 0, 21749, $vararg_buffer) | 0;
  if (($14 | 0) > -1) if ($14 >>> 0 > $$017 >>> 0) $$2 = $14; else break; else $$2 = $$017 << 1 | 1;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($1, $$2, 0);
  $$017 = $$2;
  $10 = HEAP8[$3 >> 0] | 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($1, $14, 0);
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$1 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIjiEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE6rehashEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$sroa$speculated = 0, $22 = 0, $27 = 0, $30 = 0, $8 = 0;
 if (($1 | 0) == 1) $$0 = 2; else if (!($1 + -1 & $1)) $$0 = $1; else $$0 = __ZNSt3__212__next_primeEj($1) | 0;
 $8 = HEAP32[$0 + 4 >> 2] | 0;
 if ($$0 >>> 0 > $8 >>> 0) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIjiEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE8__rehashEj($0, $$0);
  return;
 }
 if ($$0 >>> 0 >= $8 >>> 0) return;
 $22 = ~~+Math_ceil(+(+((HEAP32[$0 + 12 >> 2] | 0) >>> 0) / +HEAPF32[$0 + 16 >> 2])) >>> 0;
 if ($8 >>> 0 > 2 & ($8 + -1 & $8 | 0) == 0) {
  $27 = 1 << 32 - (Math_clz32($22 + -1 | 0) | 0);
  $30 = $22 >>> 0 < 2 ? $22 : $27;
 } else $30 = __ZNSt3__212__next_primeEj($22) | 0;
 $$sroa$speculated = $$0 >>> 0 < $30 >>> 0 ? $30 : $$0;
 if ($$sroa$speculated >>> 0 >= $8 >>> 0) return;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIjiEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE8__rehashEj($0, $$sroa$speculated);
 return;
}

function __ZN9rapidjson12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorINS_12CrtAllocatorEEEEixIS5_EERS6_RKNS0_IS2_T_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$lcssa12 = 0, $10 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $9 = 0, label = 0;
 $2 = $0 + 18 | 0;
 if ((HEAP16[$2 >> 1] | 0) != 3) ___assert_fail(16210, 15939, 1154, 16843);
 if (!(HEAP16[$1 + 18 >> 1] & 1024)) ___assert_fail(16854, 15939, 1155, 16843);
 $9 = $0 + 8 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 L7 : do if (!(HEAP32[$0 >> 2] | 0)) $$lcssa12 = $10; else {
  $13 = $10;
  while (1) {
   $14 = __ZNK9rapidjson12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorINS_12CrtAllocatorEEEE11StringEqualIS5_EEbRKNS0_IS2_T_EE($1, $13) | 0;
   $15 = (HEAP16[$2 >> 1] | 0) == 3;
   if ($14) break;
   if (!$15) {
    label = 7;
    break;
   }
   $16 = $13 + 48 | 0;
   if (($16 | 0) == ((HEAP32[$9 >> 2] | 0) + ((HEAP32[$0 >> 2] | 0) * 48 | 0) | 0)) {
    $$lcssa12 = $16;
    break L7;
   } else $13 = $16;
  }
  if ((label | 0) == 7) ___assert_fail(16210, 15939, 1084, 16870);
  if ($15) $$lcssa12 = $13; else ___assert_fail(16210, 15939, 1084, 16870);
 } while (0);
 if (($$lcssa12 | 0) == ((HEAP32[$9 >> 2] | 0) + ((HEAP32[$0 >> 2] | 0) * 48 | 0) | 0)) ___assert_fail(23477, 15939, 1053, 22762); else return $$lcssa12 + 24 | 0;
 return 0;
}

function __ZNSt3__220__shared_ptr_emplaceI14UpdateFnSystemNS_9allocatorIS1_EEED2Ev($0) {
 $0 = $0 | 0;
 var $$06$i$i$i$i$i$i = 0, $1 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $20 = 0, $26 = 0, $27 = 0, $3 = 0, $33 = 0;
 HEAP32[$0 >> 2] = 3288;
 $1 = $0 + 16 | 0;
 HEAP32[$1 >> 2] = 3316;
 $3 = HEAP32[$0 + 72 >> 2] | 0;
 if (($0 + 56 | 0) == ($3 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$3 >> 2] | 0) + 16 >> 2] & 63]($3); else if ($3 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$3 >> 2] | 0) + 20 >> 2] & 63]($3);
 HEAP32[$1 >> 2] = 3352;
 $13 = $0 + 40 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 if ($14 | 0) {
  $16 = $0 + 44 | 0;
  $17 = HEAP32[$16 >> 2] | 0;
  if (($17 | 0) == ($14 | 0)) $26 = $14; else {
   $$06$i$i$i$i$i$i = $17;
   do {
    $20 = $$06$i$i$i$i$i$i + -12 | 0;
    $$06$i$i$i$i$i$i = $$06$i$i$i$i$i$i + -16 | 0;
    if ((HEAP8[$20 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$20 >> 2] | 0);
   } while (($$06$i$i$i$i$i$i | 0) != ($14 | 0));
   $26 = HEAP32[$13 >> 2] | 0;
  }
  HEAP32[$16 >> 2] = $14;
  __ZdlPv($26);
 }
 $27 = $0 + 28 | 0;
 if ((HEAP8[$27 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$27 >> 2] | 0);
 $33 = HEAP32[$0 + 24 >> 2] | 0;
 if (!$33) {
  __ZNSt3__214__shared_countD2Ev($0);
  return;
 }
 __ZNSt3__219__shared_weak_count14__release_weakEv($33);
 __ZNSt3__214__shared_countD2Ev($0);
 return;
}

function __ZNSt3__220__shared_ptr_emplaceI14DelegateSystemNS_9allocatorIS1_EEED2Ev($0) {
 $0 = $0 | 0;
 var $$06$i$i$i$i$i$i = 0, $1 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $20 = 0, $26 = 0, $27 = 0, $3 = 0, $33 = 0;
 HEAP32[$0 >> 2] = 3388;
 $1 = $0 + 16 | 0;
 HEAP32[$1 >> 2] = 3452;
 $3 = HEAP32[$0 + 72 >> 2] | 0;
 if (($0 + 56 | 0) == ($3 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$3 >> 2] | 0) + 16 >> 2] & 63]($3); else if ($3 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$3 >> 2] | 0) + 20 >> 2] & 63]($3);
 HEAP32[$1 >> 2] = 3352;
 $13 = $0 + 40 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 if ($14 | 0) {
  $16 = $0 + 44 | 0;
  $17 = HEAP32[$16 >> 2] | 0;
  if (($17 | 0) == ($14 | 0)) $26 = $14; else {
   $$06$i$i$i$i$i$i = $17;
   do {
    $20 = $$06$i$i$i$i$i$i + -12 | 0;
    $$06$i$i$i$i$i$i = $$06$i$i$i$i$i$i + -16 | 0;
    if ((HEAP8[$20 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$20 >> 2] | 0);
   } while (($$06$i$i$i$i$i$i | 0) != ($14 | 0));
   $26 = HEAP32[$13 >> 2] | 0;
  }
  HEAP32[$16 >> 2] = $14;
  __ZdlPv($26);
 }
 $27 = $0 + 28 | 0;
 if ((HEAP8[$27 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$27 >> 2] | 0);
 $33 = HEAP32[$0 + 24 >> 2] | 0;
 if (!$33) {
  __ZNSt3__214__shared_countD2Ev($0);
  return;
 }
 __ZNSt3__219__shared_weak_count14__release_weakEv($33);
 __ZNSt3__214__shared_countD2Ev($0);
 return;
}

function _vsnprintf($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$014 = 0, $$015 = 0, $11 = 0, $14 = 0, $16 = 0, $17 = 0, $19 = 0, $21 = 0, $4 = 0, $5 = 0, $spec$select = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $4 = sp + 124 | 0;
 $5 = sp;
 dest = $5;
 src = 4148;
 stop = dest + 124 | 0;
 do {
  HEAP32[dest >> 2] = HEAP32[src >> 2];
  dest = dest + 4 | 0;
  src = src + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 if (($1 + -1 | 0) >>> 0 > 2147483646) if (!$1) {
  $$014 = $4;
  $$015 = 1;
  label = 4;
 } else {
  HEAP32[(___errno_location() | 0) >> 2] = 75;
  $$0 = -1;
 } else {
  $$014 = $0;
  $$015 = $1;
  label = 4;
 }
 if ((label | 0) == 4) {
  $11 = -2 - $$014 | 0;
  $spec$select = $$015 >>> 0 > $11 >>> 0 ? $11 : $$015;
  HEAP32[$5 + 48 >> 2] = $spec$select;
  $14 = $5 + 20 | 0;
  HEAP32[$14 >> 2] = $$014;
  HEAP32[$5 + 44 >> 2] = $$014;
  $16 = $$014 + $spec$select | 0;
  $17 = $5 + 16 | 0;
  HEAP32[$17 >> 2] = $16;
  HEAP32[$5 + 28 >> 2] = $16;
  $19 = _vfprintf($5, $2, $3) | 0;
  if (!$spec$select) $$0 = $19; else {
   $21 = HEAP32[$14 >> 2] | 0;
   HEAP8[$21 + ((($21 | 0) == (HEAP32[$17 >> 2] | 0)) << 31 >> 31) >> 0] = 0;
   $$0 = $19;
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN2ut4arch19EntityCommandBuffer14createEntitiesEPNS0_9ArchetypeEj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$sink = 0, $$sink2 = 0, $$sroa$speculated$i$i$i$i = 0, $13 = 0, $15 = 0, $18 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, label = 0;
 $3 = $0 + 8 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (!$4) label = 3; else if (((HEAP32[$4 + 4 >> 2] | 0) - (HEAP32[$4 + 8 >> 2] | 0) | 0) > 16) $$0$i$i$i = $4; else label = 3;
 if ((label | 0) == 3) {
  $13 = HEAP32[$0 + 12 >> 2] | 0;
  $$sroa$speculated$i$i$i$i = ($13 | 0) > 28 ? $13 : 28;
  $15 = _aligned_alloc(16, $$sroa$speculated$i$i$i$i) | 0;
  HEAP32[$15 >> 2] = 0;
  HEAP32[$15 + 4 >> 2] = $$sroa$speculated$i$i$i$i;
  HEAP32[$15 + 8 >> 2] = 12;
  $18 = $0 + 4 | 0;
  if (!(HEAP32[$18 >> 2] | 0)) {
   $$sink = $3;
   $$sink2 = $18;
  } else {
   $$sink = HEAP32[$3 >> 2] | 0;
   $$sink2 = $3;
  }
  HEAP32[$$sink >> 2] = $15;
  HEAP32[$$sink2 >> 2] = $15;
  $$0$i$i$i = $15;
 }
 $22 = $0 + 16 | 0;
 HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 1;
 $25 = $$0$i$i$i + 8 | 0;
 $26 = HEAP32[$25 >> 2] | 0;
 $27 = $$0$i$i$i + $26 | 0;
 HEAP32[$25 >> 2] = $26 + 16;
 HEAP32[$27 + 4 >> 2] = 16;
 HEAP32[$27 >> 2] = 0;
 HEAP32[$27 + 8 >> 2] = $1;
 HEAP32[$27 + 12 >> 2] = $2;
 return;
}

function __ZN2ut6System12updateBeforeERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $2 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 8 | 0;
 if (HEAP8[$0 + 36 >> 0] | 0) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 18601, 18613, 35);
 }
 HEAP8[$2 >> 0] = 1;
 $6 = $2 + 4 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($6, $1);
 $7 = $0 + 28 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if ($8 >>> 0 < (HEAP32[$0 + 32 >> 2] | 0) >>> 0) {
  HEAP8[$8 >> 0] = HEAP8[$2 >> 0] | 0;
  $13 = $8 + 4 | 0;
  HEAP32[$13 >> 2] = HEAP32[$6 >> 2];
  HEAP32[$13 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  HEAP32[$13 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
  HEAP32[$6 >> 2] = 0;
  HEAP32[$6 + 4 >> 2] = 0;
  HEAP32[$6 + 8 >> 2] = 0;
  HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + 16;
  STACKTOP = sp;
  return;
 }
 __ZNSt3__26vectorINS_4pairIbNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS5_IS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_($0 + 24 | 0, $2);
 if ((HEAP8[$6 + 11 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$6 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function _memset(ptr, value, num) {
 ptr = ptr | 0;
 value = value | 0;
 num = num | 0;
 var end = 0, aligned_end = 0, block_aligned_end = 0, value4 = 0;
 end = ptr + num | 0;
 value = value & 255;
 if ((num | 0) >= 67) {
  while (ptr & 3) {
   HEAP8[ptr >> 0] = value;
   ptr = ptr + 1 | 0;
  }
  aligned_end = end & -4 | 0;
  block_aligned_end = aligned_end - 64 | 0;
  value4 = value | value << 8 | value << 16 | value << 24;
  while ((ptr | 0) <= (block_aligned_end | 0)) {
   HEAP32[ptr >> 2] = value4;
   HEAP32[ptr + 4 >> 2] = value4;
   HEAP32[ptr + 8 >> 2] = value4;
   HEAP32[ptr + 12 >> 2] = value4;
   HEAP32[ptr + 16 >> 2] = value4;
   HEAP32[ptr + 20 >> 2] = value4;
   HEAP32[ptr + 24 >> 2] = value4;
   HEAP32[ptr + 28 >> 2] = value4;
   HEAP32[ptr + 32 >> 2] = value4;
   HEAP32[ptr + 36 >> 2] = value4;
   HEAP32[ptr + 40 >> 2] = value4;
   HEAP32[ptr + 44 >> 2] = value4;
   HEAP32[ptr + 48 >> 2] = value4;
   HEAP32[ptr + 52 >> 2] = value4;
   HEAP32[ptr + 56 >> 2] = value4;
   HEAP32[ptr + 60 >> 2] = value4;
   ptr = ptr + 64 | 0;
  }
  while ((ptr | 0) < (aligned_end | 0)) {
   HEAP32[ptr >> 2] = value4;
   ptr = ptr + 4 | 0;
  }
 }
 while ((ptr | 0) < (end | 0)) {
  HEAP8[ptr >> 0] = value;
  ptr = ptr + 1 | 0;
 }
 return end - num | 0;
}

function __ZN2ut6System11updateAfterERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $2 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $2 = sp + 8 | 0;
 if (HEAP8[$0 + 36 >> 0] | 0) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 18601, 18613, 41);
 }
 HEAP8[$2 >> 0] = 0;
 $6 = $2 + 4 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($6, $1);
 $7 = $0 + 28 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if ($8 >>> 0 < (HEAP32[$0 + 32 >> 2] | 0) >>> 0) {
  HEAP8[$8 >> 0] = HEAP8[$2 >> 0] | 0;
  $13 = $8 + 4 | 0;
  HEAP32[$13 >> 2] = HEAP32[$6 >> 2];
  HEAP32[$13 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  HEAP32[$13 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
  HEAP32[$6 >> 2] = 0;
  HEAP32[$6 + 4 >> 2] = 0;
  HEAP32[$6 + 8 >> 2] = 0;
  HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + 16;
  STACKTOP = sp;
  return;
 }
 __ZNSt3__26vectorINS_4pairIbNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS5_IS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_($0 + 24 | 0, $2);
 if ((HEAP8[$6 + 11 >> 0] | 0) >= 0) {
  STACKTOP = sp;
  return;
 }
 __ZdlPv(HEAP32[$6 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function _fmt_u($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$010$lcssa$off0 = 0, $$012 = 0, $$09$lcssa = 0, $$0914 = 0, $$1$lcssa = 0, $$111 = 0, $12 = 0, $14 = 0, $30 = 0, $8 = 0, $9 = 0, $8$looptemp = 0, $9$looptemp = 0, $$012$looptemp = 0;
 if ($1 >>> 0 > 0 | ($1 | 0) == 0 & $0 >>> 0 > 4294967295) {
  $$0914 = $2;
  $8 = $0;
  $9 = $1;
  do {
   $8$looptemp = $8;
   $8 = ___udivdi3($8 | 0, $9 | 0, 10, 0) | 0;
   $9$looptemp = $9;
   $9 = tempRet0;
   $12 = ___muldi3($8 | 0, $9 | 0, 10, 0) | 0;
   $14 = _i64Subtract($8$looptemp | 0, $9$looptemp | 0, $12 | 0, tempRet0 | 0) | 0;
   $$0914 = $$0914 + -1 | 0;
   HEAP8[$$0914 >> 0] = $14 & 255 | 48;
  } while ($9$looptemp >>> 0 > 9 | ($9$looptemp | 0) == 9 & $8$looptemp >>> 0 > 4294967295);
  $$010$lcssa$off0 = $8;
  $$09$lcssa = $$0914;
 } else {
  $$010$lcssa$off0 = $0;
  $$09$lcssa = $2;
 }
 if (!$$010$lcssa$off0) $$1$lcssa = $$09$lcssa; else {
  $$012 = $$010$lcssa$off0;
  $$111 = $$09$lcssa;
  while (1) {
   $$012$looptemp = $$012;
   $$012 = ($$012 >>> 0) / 10 | 0;
   $30 = $$111 + -1 | 0;
   HEAP8[$30 >> 0] = $$012$looptemp - ($$012 * 10 | 0) | 48;
   if ($$012$looptemp >>> 0 < 10) {
    $$1$lcssa = $30;
    break;
   } else $$111 = $30;
  }
 }
 return $$1$lcssa | 0;
}

function _ut_World_GetEntityName($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$pre = 0, $$pre$phi5Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $18 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast$byval_copy = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp;
 $5 = $2;
 $10 = HEAP32[$5 + 4 >> 2] | 0;
 $11 = $4;
 HEAP32[$11 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$11 + 4 >> 2] = $10;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$4 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 __ZN2ut4arch13EntityManager13getEntityNameENS_6EntityE($3, $1, $tmpcast$byval_copy);
 $$pre = HEAP32[$0 >> 2] | 0;
 if (($3 | 0) == ($0 | 0)) {
  $$pre$phi5Z2D = $3 + 4 | 0;
  $$pre$phiZ2D = $3;
  $20 = $$pre;
  _free($20);
  HEAP32[$$pre$phiZ2D >> 2] = 0;
  HEAP32[$$pre$phi5Z2D >> 2] = 0;
  STACKTOP = sp;
  return;
 } else {
  _free($$pre);
  HEAP32[$0 >> 2] = HEAP32[$3 >> 2];
  $18 = $3 + 4 | 0;
  HEAP32[$0 + 4 >> 2] = HEAP32[$18 >> 2];
  HEAP32[$3 >> 2] = 0;
  HEAP32[$18 >> 2] = 0;
  $$pre$phi5Z2D = $18;
  $$pre$phiZ2D = $3;
  $20 = 0;
  _free($20);
  HEAP32[$$pre$phiZ2D >> 2] = 0;
  HEAP32[$$pre$phi5Z2D >> 2] = 0;
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__26vectorIN2ut4arch13ComponentSpecENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $14 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $29 = 0, $30 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, $spec$select$i = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 3;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 536870911) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 2;
 $spec$select$i = $11 >> 3 >>> 0 < 268435455 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 536870911;
 do if (!$spec$select$i) {
  $21 = 0;
  $39 = 0;
 } else if ($spec$select$i >>> 0 > 536870911) _abort(); else {
  $19 = __Znwj($spec$select$i << 3) | 0;
  $21 = $19;
  $39 = $19;
  break;
 } while (0);
 $20 = $21 + ($6 << 3) | 0;
 $24 = $1;
 $29 = HEAP32[$24 + 4 >> 2] | 0;
 $30 = $20;
 HEAP32[$30 >> 2] = HEAP32[$24 >> 2];
 HEAP32[$30 + 4 >> 2] = $29;
 if (($5 | 0) > 0) _memcpy($39 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $21;
 HEAP32[$2 >> 2] = $20 + 8;
 HEAP32[$9 >> 2] = $21 + ($spec$select$i << 3);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$018 = 0, $$019 = 0, $$pn = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp + 1 | 0;
 $3 = sp;
 HEAP8[$2 >> 0] = $1;
 $4 = $0 + 11 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 if ($6) {
  $$018 = HEAP32[$0 + 4 >> 2] | 0;
  $$019 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  $$018 = $5 & 255;
  $$019 = 10;
 }
 if (($$018 | 0) == ($$019 | 0)) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEjjjjjj($0, $$019, 1, $$019, $$019, 0);
  if ((HEAP8[$4 >> 0] | 0) < 0) label = 8; else label = 7;
 } else if ($6) label = 8; else label = 7;
 if ((label | 0) == 7) {
  HEAP8[$4 >> 0] = $$018 + 1;
  $$pn = $0;
 } else if ((label | 0) == 8) {
  $19 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 + 4 >> 2] = $$018 + 1;
  $$pn = $19;
 }
 $$0 = $$pn + $$018 | 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($$0, $2);
 HEAP8[$3 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($$0 + 1 | 0, $3);
 STACKTOP = sp;
 return;
}

function __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE9EndObjectEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $23 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $8 = 0, $9 = 0;
 $2 = $0 + 16 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $0 + 12 | 0;
 if (($3 - (HEAP32[$4 >> 2] | 0) | 0) >>> 0 <= 7) ___assert_fail(5772, 5833, 127, 5891);
 $8 = $3;
 $9 = $8 + -8 | 0;
 if (HEAP8[$8 + -4 >> 0] | 0) ___assert_fail(5901, 5833, 128, 5891);
 HEAP32[$2 >> 2] = $9;
 if (!(HEAP32[$9 >> 2] | 0)) {
  $28 = HEAP32[$0 >> 2] | 0;
  $29 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j($28, 1) | 0;
  HEAP8[$29 >> 0] = 125;
  return 1;
 }
 HEAP8[(__ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, 1) | 0) >> 0] = 10;
 $23 = Math_imul(((HEAP32[$2 >> 2] | 0) - (HEAP32[$4 >> 2] | 0) | 0) >>> 3, HEAP32[$0 + 36 >> 2] | 0) | 0;
 $26 = HEAP8[$0 + 33 >> 0] | 0;
 _memset(__ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, $23) | 0, $26 | 0, $23 | 0) | 0;
 $28 = HEAP32[$0 >> 2] | 0;
 $29 = __ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j($28, 1) | 0;
 HEAP8[$29 >> 0] = 125;
 return 1;
}

function _ut_System_Set_UpdateFn($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre$phi$i$iZ2D = 0, $12 = 0, $14 = 0, $2 = 0, $22 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $2 = sp + 24 | 0;
 $3 = sp;
 $4 = $3 + 16 | 0;
 HEAP32[$4 >> 2] = 0;
 if (!$1) {
  $6 = $2 + 16 | 0;
  HEAP32[$6 >> 2] = 0;
  $$pre$phi$i$iZ2D = $6;
  $14 = $2;
 } else {
  $7 = $1;
  HEAP32[$3 >> 2] = 3252;
  HEAP32[$3 + 4 >> 2] = $7;
  HEAP32[$4 >> 2] = $3;
  $9 = $2 + 16 | 0;
  HEAP32[$9 >> 2] = $2;
  HEAP32[$2 >> 2] = 3252;
  HEAP32[$2 + 4 >> 2] = $7;
  $$pre$phi$i$iZ2D = $9;
  $14 = $2;
 }
 __ZNSt3__28functionIFvvEE4swapERS2_($2, $0 + 40 | 0);
 $12 = HEAP32[$$pre$phi$i$iZ2D >> 2] | 0;
 if (($14 | 0) == ($12 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 63]($12); else if ($12 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$12 >> 2] | 0) + 20 >> 2] & 63]($12);
 $22 = HEAP32[$4 >> 2] | 0;
 if (($3 | 0) == ($22 | 0)) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$22 >> 2] | 0) + 16 >> 2] & 63]($22);
  STACKTOP = sp;
  return;
 }
 if (!$22) {
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$22 >> 2] | 0) + 20 >> 2] & 63]($22);
 STACKTOP = sp;
 return;
}

function __ZN2ut25ComponentNativeBufferBase33freeNativeBufferWithComponentInfoEPNS_16NativeBufferBaseERKNS_13ComponentInfoE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$01920 = 0, $$021 = 0, $$pre23 = 0, $11 = 0, $13 = 0, $15 = 0, $17 = 0, $21 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!$0) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 6296, 6303, 8);
 }
 $4 = HEAP32[$1 + 12 >> 2] | 0;
 $5 = $1 + 32 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $$pre23 = $0 + 4 | 0;
 L4 : do if ($6 | 0) {
  $8 = HEAP32[$$pre23 >> 2] | 0;
  if ($8 | 0) {
   $11 = $1 + 48 | 0;
   $$01920 = HEAP32[$0 >> 2] | 0;
   $$021 = 0;
   $13 = $6;
   $21 = $8;
   while (1) {
    if (!$13) $17 = $21; else {
     FUNCTION_TABLE_vii[$13 & 15]($$01920, HEAP32[$11 >> 2] | 0);
     $17 = HEAP32[$$pre23 >> 2] | 0;
    }
    $15 = $$021 + 1 | 0;
    if ($15 >>> 0 >= $17 >>> 0) break L4;
    $$01920 = $$01920 + $4 | 0;
    $$021 = $15;
    $13 = HEAP32[$5 >> 2] | 0;
    $21 = $17;
   }
  }
 } while (0);
 _free(HEAP32[$0 >> 2] | 0);
 HEAP32[$0 >> 2] = 0;
 HEAP32[$$pre23 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__220__shared_ptr_emplaceI14UpdateFnSystemNS_9allocatorIS1_EEE16__on_zero_sharedEv($0) {
 $0 = $0 | 0;
 var $$06$i$i$i$i$i = 0, $1 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $20 = 0, $26 = 0, $27 = 0, $3 = 0, $33 = 0;
 $1 = $0 + 16 | 0;
 HEAP32[$1 >> 2] = 3316;
 $3 = HEAP32[$0 + 72 >> 2] | 0;
 if (($0 + 56 | 0) == ($3 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$3 >> 2] | 0) + 16 >> 2] & 63]($3); else if ($3 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$3 >> 2] | 0) + 20 >> 2] & 63]($3);
 HEAP32[$1 >> 2] = 3352;
 $13 = $0 + 40 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 if ($14 | 0) {
  $16 = $0 + 44 | 0;
  $17 = HEAP32[$16 >> 2] | 0;
  if (($17 | 0) == ($14 | 0)) $26 = $14; else {
   $$06$i$i$i$i$i = $17;
   do {
    $20 = $$06$i$i$i$i$i + -12 | 0;
    $$06$i$i$i$i$i = $$06$i$i$i$i$i + -16 | 0;
    if ((HEAP8[$20 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$20 >> 2] | 0);
   } while (($$06$i$i$i$i$i | 0) != ($14 | 0));
   $26 = HEAP32[$13 >> 2] | 0;
  }
  HEAP32[$16 >> 2] = $14;
  __ZdlPv($26);
 }
 $27 = $0 + 28 | 0;
 if ((HEAP8[$27 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$27 >> 2] | 0);
 $33 = HEAP32[$0 + 24 >> 2] | 0;
 if (!$33) return;
 __ZNSt3__219__shared_weak_count14__release_weakEv($33);
 return;
}

function __ZNSt3__220__shared_ptr_emplaceI14DelegateSystemNS_9allocatorIS1_EEE16__on_zero_sharedEv($0) {
 $0 = $0 | 0;
 var $$06$i$i$i$i$i = 0, $1 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $20 = 0, $26 = 0, $27 = 0, $3 = 0, $33 = 0;
 $1 = $0 + 16 | 0;
 HEAP32[$1 >> 2] = 3452;
 $3 = HEAP32[$0 + 72 >> 2] | 0;
 if (($0 + 56 | 0) == ($3 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$3 >> 2] | 0) + 16 >> 2] & 63]($3); else if ($3 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$3 >> 2] | 0) + 20 >> 2] & 63]($3);
 HEAP32[$1 >> 2] = 3352;
 $13 = $0 + 40 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 if ($14 | 0) {
  $16 = $0 + 44 | 0;
  $17 = HEAP32[$16 >> 2] | 0;
  if (($17 | 0) == ($14 | 0)) $26 = $14; else {
   $$06$i$i$i$i$i = $17;
   do {
    $20 = $$06$i$i$i$i$i + -12 | 0;
    $$06$i$i$i$i$i = $$06$i$i$i$i$i + -16 | 0;
    if ((HEAP8[$20 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$20 >> 2] | 0);
   } while (($$06$i$i$i$i$i | 0) != ($14 | 0));
   $26 = HEAP32[$13 >> 2] | 0;
  }
  HEAP32[$16 >> 2] = $14;
  __ZdlPv($26);
 }
 $27 = $0 + 28 | 0;
 if ((HEAP8[$27 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$27 >> 2] | 0);
 $33 = HEAP32[$0 + 24 >> 2] | 0;
 if (!$33) return;
 __ZNSt3__219__shared_weak_count14__release_weakEv($33);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_discriminatorEPKcS2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$029 = 0, $$1 = 0, $$pn = 0, $13 = 0, $3 = 0, $5 = 0, $7 = 0;
 L1 : do if (($0 | 0) == ($1 | 0)) $$1 = $0; else {
  $3 = HEAP8[$0 >> 0] | 0;
  if ($3 << 24 >> 24 != 95) {
   if ((($3 << 24 >> 24) + -48 | 0) >>> 0 >= 10) {
    $$1 = $0;
    break;
   }
   $$pn = $0;
   while (1) {
    $$0 = $$pn + 1 | 0;
    if (($$0 | 0) == ($1 | 0)) {
     $$1 = $1;
     break L1;
    }
    if (((HEAP8[$$0 >> 0] | 0) + -48 | 0) >>> 0 < 10) $$pn = $$0; else {
     $$1 = $$0;
     break L1;
    }
   }
  }
  $5 = $0 + 1 | 0;
  if (($5 | 0) == ($1 | 0)) $$1 = $0; else {
   $7 = HEAP8[$5 >> 0] | 0;
   if ((($7 << 24 >> 24) + -48 | 0) >>> 0 < 10) {
    $$1 = $0 + 2 | 0;
    break;
   }
   if ($7 << 24 >> 24 == 95) {
    $$029 = $0 + 2 | 0;
    while (1) {
     if (($$029 | 0) == ($1 | 0)) {
      $$1 = $0;
      break L1;
     }
     $13 = HEAP8[$$029 >> 0] | 0;
     if ((($13 << 24 >> 24) + -48 | 0) >>> 0 >= 10) break;
     $$029 = $$029 + 1 | 0;
    }
    return ($13 << 24 >> 24 == 95 ? $$029 + 1 | 0 : $0) | 0;
   } else $$1 = $0;
  }
 } while (0);
 return $$1 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$018 = 0, $$019 = 0, $$pn = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp + 1 | 0;
 $3 = sp;
 HEAP8[$2 >> 0] = $1;
 $4 = $0 + 11 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 if ($6) {
  $$018 = HEAP32[$0 + 4 >> 2] | 0;
  $$019 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  $$018 = $5 & 255;
  $$019 = 10;
 }
 if (($$018 | 0) == ($$019 | 0)) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($0, $$019, 1, $$019, $$019, 0, 0);
  if ((HEAP8[$4 >> 0] | 0) < 0) label = 8; else label = 7;
 } else if ($6) label = 8; else label = 7;
 if ((label | 0) == 7) {
  HEAP8[$4 >> 0] = $$018 + 1;
  $$pn = $0;
 } else if ((label | 0) == 8) {
  $19 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 + 4 >> 2] = $$018 + 1;
  $$pn = $19;
 }
 $$0 = $$pn + $$018 | 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($$0, $2);
 HEAP8[$3 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($$0 + 1 | 0, $3);
 STACKTOP = sp;
 return;
}

function __ZN2ut4arch26SharedComponentDataManager28insertSharedComponentDataRawEjPKvj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $15 = 0, $18 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $5 = HEAP32[6067] | 0;
 if ((HEAP32[6068] | 0) - $5 >> 2 >>> 0 <= $1 >>> 0) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
 if ((HEAP32[(HEAP32[$5 + ($1 << 2) >> 2] | 0) + 12 >> 2] | 0) != ($3 | 0)) {
  _snprintf(25060, 1024, 27124, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 10862, 10927, 58);
 }
 $15 = __ZN2ut4arch26SharedComponentDataManager4findEjPKvj($0, $1, $2, $3) | 0;
 switch ($15 | 0) {
 case -1:
  {
   $$0 = __ZN2ut4arch26SharedComponentDataManager12addNoDefaultEjPKvj($0, $1, $2, $3) | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 0:
  {
   $$0 = $15;
   STACKTOP = sp;
   return $$0 | 0;
  }
 default:
  {
   $18 = (HEAP32[$0 + 48 >> 2] | 0) + ($15 << 2) | 0;
   HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 1;
   $$0 = $15;
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 return 0;
}

function __ZN14UpdateFnSystemD0Ev($0) {
 $0 = $0 | 0;
 var $$06$i$i$i$i$i = 0, $12 = 0, $13 = 0, $15 = 0, $16 = 0, $19 = 0, $2 = 0, $25 = 0, $26 = 0, $32 = 0;
 HEAP32[$0 >> 2] = 3316;
 $2 = HEAP32[$0 + 56 >> 2] | 0;
 if (($0 + 40 | 0) == ($2 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 16 >> 2] & 63]($2); else if ($2 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] & 63]($2);
 HEAP32[$0 >> 2] = 3352;
 $12 = $0 + 24 | 0;
 $13 = HEAP32[$12 >> 2] | 0;
 if ($13 | 0) {
  $15 = $0 + 28 | 0;
  $16 = HEAP32[$15 >> 2] | 0;
  if (($16 | 0) == ($13 | 0)) $25 = $13; else {
   $$06$i$i$i$i$i = $16;
   do {
    $19 = $$06$i$i$i$i$i + -12 | 0;
    $$06$i$i$i$i$i = $$06$i$i$i$i$i + -16 | 0;
    if ((HEAP8[$19 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$19 >> 2] | 0);
   } while (($$06$i$i$i$i$i | 0) != ($13 | 0));
   $25 = HEAP32[$12 >> 2] | 0;
  }
  HEAP32[$15 >> 2] = $13;
  __ZdlPv($25);
 }
 $26 = $0 + 12 | 0;
 if ((HEAP8[$26 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$26 >> 2] | 0);
 $32 = HEAP32[$0 + 8 >> 2] | 0;
 if (!$32) {
  __ZdlPv($0);
  return;
 }
 __ZNSt3__219__shared_weak_count14__release_weakEv($32);
 __ZdlPv($0);
 return;
}

function __ZN14DelegateSystemD0Ev($0) {
 $0 = $0 | 0;
 var $$06$i$i$i$i$i = 0, $12 = 0, $13 = 0, $15 = 0, $16 = 0, $19 = 0, $2 = 0, $25 = 0, $26 = 0, $32 = 0;
 HEAP32[$0 >> 2] = 3452;
 $2 = HEAP32[$0 + 56 >> 2] | 0;
 if (($0 + 40 | 0) == ($2 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 16 >> 2] & 63]($2); else if ($2 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] & 63]($2);
 HEAP32[$0 >> 2] = 3352;
 $12 = $0 + 24 | 0;
 $13 = HEAP32[$12 >> 2] | 0;
 if ($13 | 0) {
  $15 = $0 + 28 | 0;
  $16 = HEAP32[$15 >> 2] | 0;
  if (($16 | 0) == ($13 | 0)) $25 = $13; else {
   $$06$i$i$i$i$i = $16;
   do {
    $19 = $$06$i$i$i$i$i + -12 | 0;
    $$06$i$i$i$i$i = $$06$i$i$i$i$i + -16 | 0;
    if ((HEAP8[$19 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$19 >> 2] | 0);
   } while (($$06$i$i$i$i$i | 0) != ($13 | 0));
   $25 = HEAP32[$12 >> 2] | 0;
  }
  HEAP32[$15 >> 2] = $13;
  __ZdlPv($25);
 }
 $26 = $0 + 12 | 0;
 if ((HEAP8[$26 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$26 >> 2] | 0);
 $32 = HEAP32[$0 + 8 >> 2] | 0;
 if (!$32) {
  __ZdlPv($0);
  return;
 }
 __ZNSt3__219__shared_weak_count14__release_weakEv($32);
 __ZdlPv($0);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEjjjjjj($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$sroa$speculated = 0, $13 = 0, $14 = 0, $19 = 0, $20 = 0, $22 = 0, $23 = 0;
 if ((-17 - $1 | 0) >>> 0 < $2 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ((HEAP8[$0 + 11 >> 0] | 0) < 0) $22 = HEAP32[$0 >> 2] | 0; else $22 = $0;
 if ($1 >>> 0 < 2147483623) {
  $13 = $2 + $1 | 0;
  $14 = $1 << 1;
  $$sroa$speculated = $13 >>> 0 < $14 >>> 0 ? $14 : $13;
  $19 = $$sroa$speculated >>> 0 < 11 ? 11 : $$sroa$speculated + 16 & -16;
 } else $19 = -17;
 $20 = __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEj($19) | 0;
 if ($4 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcj($20, $22, $4) | 0;
 $23 = $3 - $4 | 0;
 if ($23 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcj($20 + $4 + $5 | 0, $22 + $4 | 0, $23) | 0;
 if (($1 | 0) != 10) __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcj($22);
 HEAP32[$0 >> 2] = $20;
 HEAP32[$0 + 8 >> 2] = $19 | -2147483648;
 return;
}

function __ZNSt3__26vectorIN2ut9Scheduler15ScheduledSystemENS_9allocatorIS3_EEE10deallocateEv($0) {
 $0 = $0 | 0;
 var $$06$i$i$i = 0, $1 = 0, $13 = 0, $15 = 0, $16 = 0, $22 = 0, $28 = 0, $3 = 0, $4 = 0, $8 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) return;
 $3 = $0 + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (($4 | 0) == ($1 | 0)) $28 = $1; else {
  $$06$i$i$i = $4;
  do {
   $8 = HEAP32[$$06$i$i$i + -16 >> 2] | 0;
   if ($8 | 0) {
    HEAP32[$$06$i$i$i + -12 >> 2] = $8;
    __ZdlPv($8);
   }
   $13 = HEAP32[$$06$i$i$i + -20 >> 2] | 0;
   if ($13 | 0) {
    $15 = $13 + 4 | 0;
    $16 = HEAP32[$15 >> 2] | 0;
    HEAP32[$15 >> 2] = $16 + -1;
    if (!$16) {
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$13 >> 2] | 0) + 8 >> 2] & 63]($13);
     __ZNSt3__219__shared_weak_count14__release_weakEv($13);
    }
   }
   $22 = $$06$i$i$i + -36 | 0;
   $$06$i$i$i = $$06$i$i$i + -40 | 0;
   if ((HEAP8[$22 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$22 >> 2] | 0);
  } while (($$06$i$i$i | 0) != ($1 | 0));
  $28 = HEAP32[$0 >> 2] | 0;
 }
 HEAP32[$3 >> 2] = $1;
 __ZdlPv($28);
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$0 >> 2] = 0;
 return;
}

function __ZNSt3__26vectorIPN2ut4arch13EntityManager11FreshEntityENS_9allocatorIS5_EEE21__push_back_slow_pathIRKS5_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $14 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, $spec$select$i = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 2;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 1;
 $spec$select$i = $11 >> 2 >>> 0 < 536870911 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 1073741823;
 do if (!$spec$select$i) {
  $21 = 0;
  $30 = 0;
 } else if ($spec$select$i >>> 0 > 1073741823) _abort(); else {
  $19 = __Znwj($spec$select$i << 2) | 0;
  $21 = $19;
  $30 = $19;
  break;
 } while (0);
 $20 = $21 + ($6 << 2) | 0;
 HEAP32[$20 >> 2] = HEAP32[$1 >> 2];
 if (($5 | 0) > 0) _memcpy($30 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $21;
 HEAP32[$2 >> 2] = $20 + 4;
 HEAP32[$9 >> 2] = $21 + ($spec$select$i << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__26vectorIPN2ut13ComponentInfoENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRS3_EEEvDpOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $14 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, $spec$select$i = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 2;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 1;
 $spec$select$i = $11 >> 2 >>> 0 < 536870911 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 1073741823;
 do if (!$spec$select$i) {
  $21 = 0;
  $30 = 0;
 } else if ($spec$select$i >>> 0 > 1073741823) _abort(); else {
  $19 = __Znwj($spec$select$i << 2) | 0;
  $21 = $19;
  $30 = $19;
  break;
 } while (0);
 $20 = $21 + ($6 << 2) | 0;
 HEAP32[$20 >> 2] = HEAP32[$1 >> 2];
 if (($5 | 0) > 0) _memcpy($30 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $21;
 HEAP32[$2 >> 2] = $20 + 4;
 HEAP32[$9 >> 2] = $21 + ($spec$select$i << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__27__sort5IRNS_6__lessIjjEEPjEEjT0_S5_S5_S5_S5_T_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $19 = 0, $20 = 0, $6 = 0, $7 = 0, $8 = 0;
 $6 = __ZNSt3__27__sort4IRNS_6__lessIjjEEPjEEjT0_S5_S5_S5_T_($0, $1, $2, $3, $5) | 0;
 $7 = HEAP32[$4 >> 2] | 0;
 $8 = HEAP32[$3 >> 2] | 0;
 if ($7 >>> 0 < $8 >>> 0) {
  HEAP32[$3 >> 2] = $7;
  HEAP32[$4 >> 2] = $8;
  $10 = $6 + 1 | 0;
  $11 = HEAP32[$3 >> 2] | 0;
  $12 = HEAP32[$2 >> 2] | 0;
  if ($11 >>> 0 < $12 >>> 0) {
   HEAP32[$2 >> 2] = $11;
   HEAP32[$3 >> 2] = $12;
   $14 = $6 + 2 | 0;
   $15 = HEAP32[$2 >> 2] | 0;
   $16 = HEAP32[$1 >> 2] | 0;
   if ($15 >>> 0 < $16 >>> 0) {
    HEAP32[$1 >> 2] = $15;
    HEAP32[$2 >> 2] = $16;
    $19 = HEAP32[$1 >> 2] | 0;
    $20 = HEAP32[$0 >> 2] | 0;
    if ($19 >>> 0 < $20 >>> 0) {
     HEAP32[$0 >> 2] = $19;
     HEAP32[$1 >> 2] = $20;
     $$0 = $6 + 4 | 0;
    } else $$0 = $6 + 3 | 0;
   } else $$0 = $14;
  } else $$0 = $10;
 } else $$0 = $6;
 return $$0 | 0;
}

function _wcrtomb($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0;
 do if (!$0) $$0 = 1; else {
  if ($1 >>> 0 < 128) {
   HEAP8[$0 >> 0] = $1;
   $$0 = 1;
   break;
  }
  if (!(HEAP32[HEAP32[(___pthread_self_447() | 0) + 188 >> 2] >> 2] | 0)) if (($1 & -128 | 0) == 57216) {
   HEAP8[$0 >> 0] = $1;
   $$0 = 1;
   break;
  } else {
   HEAP32[(___errno_location() | 0) >> 2] = 84;
   $$0 = -1;
   break;
  }
  if ($1 >>> 0 < 2048) {
   HEAP8[$0 >> 0] = $1 >>> 6 | 192;
   HEAP8[$0 + 1 >> 0] = $1 & 63 | 128;
   $$0 = 2;
   break;
  }
  if ($1 >>> 0 < 55296 | ($1 & -8192 | 0) == 57344) {
   HEAP8[$0 >> 0] = $1 >>> 12 | 224;
   HEAP8[$0 + 1 >> 0] = $1 >>> 6 & 63 | 128;
   HEAP8[$0 + 2 >> 0] = $1 & 63 | 128;
   $$0 = 3;
   break;
  }
  if (($1 + -65536 | 0) >>> 0 < 1048576) {
   HEAP8[$0 >> 0] = $1 >>> 18 | 240;
   HEAP8[$0 + 1 >> 0] = $1 >>> 12 & 63 | 128;
   HEAP8[$0 + 2 >> 0] = $1 >>> 6 & 63 | 128;
   HEAP8[$0 + 3 >> 0] = $1 & 63 | 128;
   $$0 = 4;
   break;
  } else {
   HEAP32[(___errno_location() | 0) >> 2] = 84;
   $$0 = -1;
   break;
  }
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$021 = 0, $$1 = 0, $12 = 0, $13 = 0, $18 = 0, $3 = 0, $4 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = $1;
 $4 = sp;
 $6 = $2 - $3 | 0;
 if ($6 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ($6 >>> 0 < 11) {
  HEAP8[$0 + 11 >> 0] = $6;
  $$021 = $0;
 } else {
  $12 = $6 + 16 & -16;
  $13 = __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEj($12) | 0;
  HEAP32[$0 >> 2] = $13;
  HEAP32[$0 + 8 >> 2] = $12 | -2147483648;
  HEAP32[$0 + 4 >> 2] = $6;
  $$021 = $13;
 }
 $18 = $2 - $3 | 0;
 $$0 = $1;
 $$1 = $$021;
 while (1) {
  if (($$0 | 0) == ($2 | 0)) break;
  __ZNSt3__211char_traitsIcE6assignERcRKc($$1, $$0);
  $$0 = $$0 + 1 | 0;
  $$1 = $$1 + 1 | 0;
 }
 HEAP8[$4 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($$021 + $18 | 0, $4);
 STACKTOP = sp;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $14 = 0, $15 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 $4 = $0 + 11 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 if ($6) {
  $14 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
  $15 = HEAP32[$0 + 4 >> 2] | 0;
 } else {
  $14 = 10;
  $15 = $5 & 255;
 }
 if (($14 - $15 | 0) >>> 0 < $2 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc($0, $14, $15 + $2 - $14 | 0, $15, $15, 0, $2, $1); else if ($2 | 0) {
  if ($6) $20 = HEAP32[$0 >> 2] | 0; else $20 = $0;
  __ZNSt3__211char_traitsIcE4copyEPcPKcj($20 + $15 | 0, $1, $2) | 0;
  $21 = $15 + $2 | 0;
  if ((HEAP8[$4 >> 0] | 0) < 0) HEAP32[$0 + 4 >> 2] = $21; else HEAP8[$4 >> 0] = $21;
  HEAP8[$3 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($20 + $21 | 0, $3);
 }
 STACKTOP = sp;
 return $0 | 0;
}

function __ZN14UpdateFnSystemD2Ev($0) {
 $0 = $0 | 0;
 var $$06$i$i$i$i = 0, $12 = 0, $13 = 0, $15 = 0, $16 = 0, $19 = 0, $2 = 0, $25 = 0, $26 = 0, $32 = 0;
 HEAP32[$0 >> 2] = 3316;
 $2 = HEAP32[$0 + 56 >> 2] | 0;
 if (($0 + 40 | 0) == ($2 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 16 >> 2] & 63]($2); else if ($2 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] & 63]($2);
 HEAP32[$0 >> 2] = 3352;
 $12 = $0 + 24 | 0;
 $13 = HEAP32[$12 >> 2] | 0;
 if ($13 | 0) {
  $15 = $0 + 28 | 0;
  $16 = HEAP32[$15 >> 2] | 0;
  if (($16 | 0) == ($13 | 0)) $25 = $13; else {
   $$06$i$i$i$i = $16;
   do {
    $19 = $$06$i$i$i$i + -12 | 0;
    $$06$i$i$i$i = $$06$i$i$i$i + -16 | 0;
    if ((HEAP8[$19 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$19 >> 2] | 0);
   } while (($$06$i$i$i$i | 0) != ($13 | 0));
   $25 = HEAP32[$12 >> 2] | 0;
  }
  HEAP32[$15 >> 2] = $13;
  __ZdlPv($25);
 }
 $26 = $0 + 12 | 0;
 if ((HEAP8[$26 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$26 >> 2] | 0);
 $32 = HEAP32[$0 + 8 >> 2] | 0;
 if (!$32) return;
 __ZNSt3__219__shared_weak_count14__release_weakEv($32);
 return;
}

function __ZN14DelegateSystemD2Ev($0) {
 $0 = $0 | 0;
 var $$06$i$i$i$i = 0, $12 = 0, $13 = 0, $15 = 0, $16 = 0, $19 = 0, $2 = 0, $25 = 0, $26 = 0, $32 = 0;
 HEAP32[$0 >> 2] = 3452;
 $2 = HEAP32[$0 + 56 >> 2] | 0;
 if (($0 + 40 | 0) == ($2 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 16 >> 2] & 63]($2); else if ($2 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] & 63]($2);
 HEAP32[$0 >> 2] = 3352;
 $12 = $0 + 24 | 0;
 $13 = HEAP32[$12 >> 2] | 0;
 if ($13 | 0) {
  $15 = $0 + 28 | 0;
  $16 = HEAP32[$15 >> 2] | 0;
  if (($16 | 0) == ($13 | 0)) $25 = $13; else {
   $$06$i$i$i$i = $16;
   do {
    $19 = $$06$i$i$i$i + -12 | 0;
    $$06$i$i$i$i = $$06$i$i$i$i + -16 | 0;
    if ((HEAP8[$19 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$19 >> 2] | 0);
   } while (($$06$i$i$i$i | 0) != ($13 | 0));
   $25 = HEAP32[$12 >> 2] | 0;
  }
  HEAP32[$15 >> 2] = $13;
  __ZdlPv($25);
 }
 $26 = $0 + 12 | 0;
 if ((HEAP8[$26 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$26 >> 2] | 0);
 $32 = HEAP32[$0 + 8 >> 2] | 0;
 if (!$32) return;
 __ZNSt3__219__shared_weak_count14__release_weakEv($32);
 return;
}

function __ZNSt3__26vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIRKjEEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $14 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, $spec$select$i = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 2;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 1;
 $spec$select$i = $11 >> 2 >>> 0 < 536870911 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 1073741823;
 do if (!$spec$select$i) {
  $21 = 0;
  $30 = 0;
 } else if ($spec$select$i >>> 0 > 1073741823) _abort(); else {
  $19 = __Znwj($spec$select$i << 2) | 0;
  $21 = $19;
  $30 = $19;
  break;
 } while (0);
 $20 = $21 + ($6 << 2) | 0;
 HEAP32[$20 >> 2] = HEAP32[$1 >> 2];
 if (($5 | 0) > 0) _memcpy($30 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $21;
 HEAP32[$2 >> 2] = $20 + 4;
 HEAP32[$9 >> 2] = $21 + ($spec$select$i << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIRKiEEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $14 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, $spec$select$i = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 2;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 1;
 $spec$select$i = $11 >> 2 >>> 0 < 536870911 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 1073741823;
 do if (!$spec$select$i) {
  $21 = 0;
  $30 = 0;
 } else if ($spec$select$i >>> 0 > 1073741823) _abort(); else {
  $19 = __Znwj($spec$select$i << 2) | 0;
  $21 = $19;
  $30 = $19;
  break;
 } while (0);
 $20 = $21 + ($6 << 2) | 0;
 HEAP32[$20 >> 2] = HEAP32[$1 >> 2];
 if (($5 | 0) > 0) _memcpy($30 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $21;
 HEAP32[$2 >> 2] = $20 + 4;
 HEAP32[$9 >> 2] = $21 + ($spec$select$i << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__26vectorIjNS_9allocatorIjEEE21__push_back_slow_pathIjEEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $14 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, $spec$select$i = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 2;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 1;
 $spec$select$i = $11 >> 2 >>> 0 < 536870911 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 1073741823;
 do if (!$spec$select$i) {
  $21 = 0;
  $30 = 0;
 } else if ($spec$select$i >>> 0 > 1073741823) _abort(); else {
  $19 = __Znwj($spec$select$i << 2) | 0;
  $21 = $19;
  $30 = $19;
  break;
 } while (0);
 $20 = $21 + ($6 << 2) | 0;
 HEAP32[$20 >> 2] = HEAP32[$1 >> 2];
 if (($5 | 0) > 0) _memcpy($30 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $21;
 HEAP32[$2 >> 2] = $20 + 4;
 HEAP32[$9 >> 2] = $21 + ($spec$select$i << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIiEEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $14 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, $spec$select$i = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $6 = $5 >> 2;
 $7 = $6 + 1 | 0;
 if ($7 >>> 0 > 1073741823) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 $11 = (HEAP32[$9 >> 2] | 0) - $4 | 0;
 $14 = $11 >> 1;
 $spec$select$i = $11 >> 2 >>> 0 < 536870911 ? ($14 >>> 0 < $7 >>> 0 ? $7 : $14) : 1073741823;
 do if (!$spec$select$i) {
  $21 = 0;
  $30 = 0;
 } else if ($spec$select$i >>> 0 > 1073741823) _abort(); else {
  $19 = __Znwj($spec$select$i << 2) | 0;
  $21 = $19;
  $30 = $19;
  break;
 } while (0);
 $20 = $21 + ($6 << 2) | 0;
 HEAP32[$20 >> 2] = HEAP32[$1 >> 2];
 if (($5 | 0) > 0) _memcpy($30 | 0, $4 | 0, $5 | 0) | 0;
 HEAP32[$0 >> 2] = $21;
 HEAP32[$2 >> 2] = $20 + 4;
 HEAP32[$9 >> 2] = $21 + ($spec$select$i << 2);
 if (!$4) return;
 __ZdlPv($4);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $15 = 0, $16 = 0, $21 = 0, $24 = 0, $25 = 0, $3 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 if ($1 | 0) {
  $5 = $0 + 11 | 0;
  $6 = HEAP8[$5 >> 0] | 0;
  if ($6 << 24 >> 24 < 0) {
   $15 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
   $16 = HEAP32[$0 + 4 >> 2] | 0;
  } else {
   $15 = 10;
   $16 = $6 & 255;
  }
  if (($15 - $16 | 0) >>> 0 < $1 >>> 0) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($0, $15, $16 + $1 - $15 | 0, $16, $16, 0, 0);
   $21 = HEAP8[$5 >> 0] | 0;
  } else $21 = $6;
  if ($21 << 24 >> 24 < 0) $24 = HEAP32[$0 >> 2] | 0; else $24 = $0;
  __ZNSt3__211char_traitsIcE6assignEPcjc($24 + $16 | 0, $1, $2) | 0;
  $25 = $16 + $1 | 0;
  if ((HEAP8[$5 >> 0] | 0) < 0) HEAP32[$0 + 4 >> 2] = $25; else HEAP8[$5 >> 0] = $25;
  HEAP8[$3 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($24 + $25 | 0, $3);
 }
 STACKTOP = sp;
 return $0 | 0;
}

function __ZN2ut4arch13EntityManager21addSharedComponentRawENS_6EntityEj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $16 = 0, $21 = 0, $22 = 0, $3 = 0, $5 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast$byval_copy = sp + 24 | 0;
 $3 = sp;
 $5 = HEAP32[6067] | 0;
 if ((HEAP32[6068] | 0) - $5 >> 2 >>> 0 <= $2 >>> 0) {
  _snprintf(25060, 1024, 27124, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
 if (!(HEAP32[(HEAP32[$5 + ($2 << 2) >> 2] | 0) + 4 >> 2] & 2)) {
  _snprintf(25060, 1024, 27124, sp + 16 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 11562, 11602, 106);
 } else {
  $16 = $1;
  $21 = HEAP32[$16 + 4 >> 2] | 0;
  $22 = $3;
  HEAP32[$22 >> 2] = HEAP32[$16 >> 2];
  HEAP32[$22 + 4 >> 2] = $21;
  HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$3 >> 2];
  HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  __ZN2ut4arch13EntityManager15addComponentRawENS_6EntityEj($0, $tmpcast$byval_copy, $2);
  STACKTOP = sp;
  return;
 }
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_unscoped_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$026$off0 = 0, $$027 = 0, $$1 = 0, $12 = 0, $17 = 0, $18 = 0, $21 = 0;
 if (($1 - $0 | 0) > 1) {
  if ((HEAP8[$0 >> 0] | 0) == 83) if ((HEAP8[$0 + 1 >> 0] | 0) == 116) {
   $12 = $0 + 2 | 0;
   if (($12 | 0) == ($1 | 0)) {
    $$026$off0 = 0;
    $$027 = $1;
   } else {
    $$026$off0 = 0;
    $$027 = (HEAP8[$12 >> 0] | 0) == 76 ? $0 + 3 | 0 : $12;
   }
  } else {
   $$026$off0 = 1;
   $$027 = $0;
  } else {
   $$026$off0 = 1;
   $$027 = $0;
  }
  $17 = __ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_($$027, $1, $2) | 0;
  $18 = ($17 | 0) == ($$027 | 0);
  if ($$026$off0 | $18) $$1 = $18 ? $0 : $17; else {
   $21 = HEAP32[$2 + 4 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($21 | 0)) $$1 = $0; else {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($21 + -24 | 0, 0, 22571) | 0;
    $$1 = $17;
   }
  }
 } else $$1 = $0;
 return $$1 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $11 = 0, $13 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 $4 = $0 + 11 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 if ($6) $11 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0; else $11 = 10;
 do if ($11 >>> 0 < $2 >>> 0) {
  if ($6) $23 = HEAP32[$0 + 4 >> 2] | 0; else $23 = $5 & 255;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEjjjjjjPKc($0, $11, $2 - $11 | 0, $23, 0, $23, $2, $1);
 } else {
  if ($6) $13 = HEAP32[$0 >> 2] | 0; else $13 = $0;
  __ZNSt3__211char_traitsIcE4moveEPcPKcj($13, $1, $2) | 0;
  HEAP8[$3 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($13 + $2 | 0, $3);
  if ((HEAP8[$4 >> 0] | 0) < 0) {
   HEAP32[$0 + 4 >> 2] = $2;
   break;
  } else {
   HEAP8[$4 >> 0] = $2;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$3 = 0, $12 = 0, $13 = 0, $18 = 0, $19 = 0, $5 = 0, $6 = 0;
 L1 : do if (($0 | 0) == ($1 | 0)) $$3 = $0; else {
  switch (HEAP8[$0 >> 0] | 0) {
  case 104:
   {
    $5 = $0 + 1 | 0;
    $6 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($5, $1) | 0;
    if (($6 | 0) == ($5 | 0) | ($6 | 0) == ($1 | 0)) {
     $$3 = $0;
     break L1;
    }
    return ((HEAP8[$6 >> 0] | 0) == 95 ? $6 + 1 | 0 : $0) | 0;
   }
  case 118:
   break;
  default:
   {
    $$3 = $0;
    break L1;
   }
  }
  $12 = $0 + 1 | 0;
  $13 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($12, $1) | 0;
  if (($13 | 0) == ($12 | 0) | ($13 | 0) == ($1 | 0)) $$3 = $0; else if ((HEAP8[$13 >> 0] | 0) == 95) {
   $18 = $13 + 1 | 0;
   $19 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($18, $1) | 0;
   if (($19 | 0) == ($18 | 0) | ($19 | 0) == ($1 | 0)) $$3 = $0; else $$3 = (HEAP8[$19 >> 0] | 0) == 95 ? $19 + 1 | 0 : $0;
  } else $$3 = $0;
 } while (0);
 return $$3 | 0;
}

function __ZN9rapidjson12PrettyWriterINS_19GenericStringBufferINS_4UTF8IcEENS_12CrtAllocatorEEES3_S3_S4_Lj0EE8EndArrayEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $27 = 0, $3 = 0, $30 = 0, $4 = 0, $8 = 0, $9 = 0;
 $2 = $0 + 16 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $0 + 12 | 0;
 if (($3 - (HEAP32[$4 >> 2] | 0) | 0) >>> 0 <= 7) ___assert_fail(5772, 5833, 151, 5967);
 $8 = $3;
 $9 = $8 + -8 | 0;
 if (!(HEAP8[$8 + -4 >> 0] | 0)) ___assert_fail(5976, 5833, 152, 5967);
 HEAP32[$2 >> 2] = $9;
 if (HEAP32[$9 >> 2] | 0) if (!(HEAP32[$0 + 40 >> 2] & 1)) {
  HEAP8[(__ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, 1) | 0) >> 0] = 10;
  $27 = Math_imul(((HEAP32[$2 >> 2] | 0) - (HEAP32[$4 >> 2] | 0) | 0) >>> 3, HEAP32[$0 + 36 >> 2] | 0) | 0;
  $30 = HEAP8[$0 + 33 >> 0] | 0;
  _memset(__ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, $27) | 0, $30 | 0, $27 | 0) | 0;
 }
 HEAP8[(__ZN9rapidjson8internal5StackINS_12CrtAllocatorEE4PushIcEEPT_j(HEAP32[$0 >> 2] | 0, 1) | 0) >> 0] = 93;
 return 1;
}

function _ut_nativebuffer_nativestring_copy_construct($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$07$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $9 = 0;
 HEAP32[$0 >> 2] = 0;
 $2 = $0 + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $0 + 8 | 0;
 HEAP32[$3 >> 2] = 0;
 $4 = $1 + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (!$5) $9 = 0; else $9 = _malloc($5 << 3) | 0;
 HEAP32[$0 >> 2] = $9;
 $10 = HEAP32[$4 >> 2] | 0;
 HEAP32[$3 >> 2] = $10;
 HEAP32[$2 >> 2] = $10;
 $11 = HEAP32[$1 >> 2] | 0;
 $12 = HEAP32[$4 >> 2] | 0;
 if (!$12) return;
 $$07$i$i = 0;
 do {
  $14 = $9 + ($$07$i$i << 3) | 0;
  $15 = $11 + ($$07$i$i << 3) + 4 | 0;
  $16 = HEAP32[$15 >> 2] | 0;
  HEAP32[$9 + ($$07$i$i << 3) + 4 >> 2] = $16;
  if (!$16) HEAP32[$14 >> 2] = 0; else {
   $21 = _malloc((HEAP32[$15 >> 2] | 0) + 1 | 0) | 0;
   HEAP32[$14 >> 2] = $21;
   _memcpy($21 | 0, HEAP32[$11 + ($$07$i$i << 3) >> 2] | 0, (HEAP32[$15 >> 2] | 0) + 1 | 0) | 0;
  }
  $$07$i$i = $$07$i$i + 1 | 0;
 } while (($$07$i$i | 0) != ($12 | 0));
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_12DbC2ILj4096EEERNS0_5arenaIXT_EEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELj4096EEC2ERNS0_5arenaILj4096EEE($2, $1);
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = HEAP32[$2 >> 2];
 __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lj4096EEEEELj4096EEC2ERNS0_5arenaILj4096EEE($2, $1);
 __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEC2EjRKS6_RKS7_($0 + 16 | 0, $2);
 __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lj4096EEEEENS1_IS6_Lj4096EEEEELj4096EEC2ERNS0_5arenaILj4096EEE($2, $1);
 __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEEC2EjRKS8_RKS9_($0 + 32 | 0, $2);
 STACKTOP = sp;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $14 = 0, $15 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 $4 = $0 + 11 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 if ($6) {
  $14 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
  $15 = HEAP32[$0 + 4 >> 2] | 0;
 } else {
  $14 = 10;
  $15 = $5 & 255;
 }
 if (($14 - $15 | 0) >>> 0 < $2 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($0, $14, $15 + $2 - $14 | 0, $15, $15, 0, $2, $1); else if ($2 | 0) {
  if ($6) $20 = HEAP32[$0 >> 2] | 0; else $20 = $0;
  __ZNSt3__211char_traitsIcE4copyEPcPKcj($20 + $15 | 0, $1, $2) | 0;
  $21 = $15 + $2 | 0;
  if ((HEAP8[$4 >> 0] | 0) < 0) HEAP32[$0 + 4 >> 2] = $21; else HEAP8[$4 >> 0] = $21;
  HEAP8[$3 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($20 + $21 | 0, $3);
 }
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$sroa$speculated = 0, $14 = 0, $15 = 0, $20 = 0, $21 = 0, $23 = 0, $25 = 0;
 if ((-17 - $1 | 0) >>> 0 < $2 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ((HEAP8[$0 + 11 >> 0] | 0) < 0) $23 = HEAP32[$0 >> 2] | 0; else $23 = $0;
 if ($1 >>> 0 < 2147483623) {
  $14 = $2 + $1 | 0;
  $15 = $1 << 1;
  $$sroa$speculated = $14 >>> 0 < $15 >>> 0 ? $15 : $14;
  $20 = $$sroa$speculated >>> 0 < 11 ? 11 : $$sroa$speculated + 16 & -16;
 } else $20 = -17;
 $21 = __Znwj($20) | 0;
 if ($4 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcj($21, $23, $4) | 0;
 $25 = $3 - $5 - $4 | 0;
 if ($25 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcj($21 + $4 + $6 | 0, $23 + $4 + $5 | 0, $25) | 0;
 if (($1 | 0) != 10) __ZdlPv($23);
 HEAP32[$0 >> 2] = $21;
 HEAP32[$0 + 8 >> 2] = $20 | -2147483648;
 return;
}

function _fputc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $13 = 0, $14 = 0, $20 = 0, $21 = 0, $26 = 0, $27 = 0, $33 = 0, $7 = 0, $8 = 0, label = 0;
 if ((HEAP32[$1 + 76 >> 2] | 0) < 0) label = 3; else if (!(___lockfile($1) | 0)) label = 3; else {
  $20 = $0 & 255;
  $21 = $0 & 255;
  if (($21 | 0) == (HEAP8[$1 + 75 >> 0] | 0)) label = 10; else {
   $26 = $1 + 20 | 0;
   $27 = HEAP32[$26 >> 2] | 0;
   if ($27 >>> 0 < (HEAP32[$1 + 16 >> 2] | 0) >>> 0) {
    HEAP32[$26 >> 2] = $27 + 1;
    HEAP8[$27 >> 0] = $20;
    $33 = $21;
   } else label = 10;
  }
  if ((label | 0) == 10) $33 = ___overflow($1, $0) | 0;
  ___unlockfile($1);
  $$0 = $33;
 }
 do if ((label | 0) == 3) {
  $7 = $0 & 255;
  $8 = $0 & 255;
  if (($8 | 0) != (HEAP8[$1 + 75 >> 0] | 0)) {
   $13 = $1 + 20 | 0;
   $14 = HEAP32[$13 >> 2] | 0;
   if ($14 >>> 0 < (HEAP32[$1 + 16 >> 2] | 0) >>> 0) {
    HEAP32[$13 >> 2] = $14 + 1;
    HEAP8[$14 >> 0] = $7;
    $$0 = $8;
    break;
   }
  }
  $$0 = ___overflow($1, $0) | 0;
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $11 = 0, $13 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 $4 = $0 + 11 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 if ($6) $11 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0; else $11 = 10;
 do if ($11 >>> 0 < $2 >>> 0) {
  if ($6) $23 = HEAP32[$0 + 4 >> 2] | 0; else $23 = $5 & 255;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($0, $11, $2 - $11 | 0, $23, 0, $23, $2, $1);
 } else {
  if ($6) $13 = HEAP32[$0 >> 2] | 0; else $13 = $0;
  __ZNSt3__211char_traitsIcE4moveEPcPKcj($13, $1, $2) | 0;
  HEAP8[$3 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($13 + $2 | 0, $3);
  if ((HEAP8[$4 >> 0] | 0) < 0) {
   HEAP32[$0 + 4 >> 2] = $2;
   break;
  } else {
   HEAP8[$4 >> 0] = $2;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $0 | 0;
}

function __ZN2ut4arch13EntityManager13setEntityNameENS_6EntityERKNS_12NativeStringE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $13 = 0, $18 = 0, $19 = 0, $3 = 0, $7 = 0, $tmpcast$byval_copy = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast$byval_copy = sp + 16 | 0;
 $vararg_buffer = sp + 8 | 0;
 $3 = sp;
 if ((HEAP32[$2 + 4 >> 2] | 0) >>> 0 > 1) {
  $7 = HEAP32[$2 >> 2] | 0;
  if ((HEAP8[$7 >> 0] | 0) == 58) if ((HEAP8[$7 + 1 >> 0] | 0) == 58) {
   _snprintf(25060, 1024, 27124, $vararg_buffer) | 0;
   HEAP8[26083] = 0;
   __ZN2ut12assertFailedEPKcS1_S1_j(25060, 10780, 6920, 668);
  }
 }
 $13 = $1;
 $18 = HEAP32[$13 + 4 >> 2] | 0;
 $19 = $3;
 HEAP32[$19 >> 2] = HEAP32[$13 >> 2];
 HEAP32[$19 + 4 >> 2] = $18;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$3 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZN2ut4arch13EntityManager21setEntityNameInternalENS_6EntityERKNS_12NativeStringE($0, $tmpcast$byval_copy, $2);
 STACKTOP = sp;
 return;
}

function _ut_World_AddSharedComponentDataRaw($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $12 = 0, $13 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, $tmpcast4$i$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast4$i$byval_copy = sp + 16 | 0;
 $5 = sp + 8 | 0;
 $6 = sp;
 $7 = $1;
 $9 = HEAP32[$7 >> 2] | 0;
 $12 = HEAP32[$7 + 4 >> 2] | 0;
 $13 = $5;
 HEAP32[$13 >> 2] = $9;
 HEAP32[$13 + 4 >> 2] = $12;
 HEAP32[$tmpcast4$i$byval_copy >> 2] = HEAP32[$5 >> 2];
 HEAP32[$tmpcast4$i$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 __ZN2ut4arch13EntityManager21addSharedComponentRawENS_6EntityEj($0, $tmpcast4$i$byval_copy, $2);
 $17 = $6;
 HEAP32[$17 >> 2] = $9;
 HEAP32[$17 + 4 >> 2] = $12;
 HEAP32[$tmpcast4$i$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$tmpcast4$i$byval_copy + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 __ZN2ut4arch13EntityManager25setSharedComponentDataRawENS_6EntityEjPKvj($0, $tmpcast4$i$byval_copy, $2, $3, $4);
 STACKTOP = sp;
 return;
}

function __ZNSt3__212__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$sroa$speculated = 0, $22 = 0, $27 = 0, $30 = 0, $8 = 0;
 if (($1 | 0) == 1) $$0 = 2; else if (!($1 + -1 & $1)) $$0 = $1; else $$0 = __ZNSt3__212__next_primeEj($1) | 0;
 $8 = HEAP32[$0 + 4 >> 2] | 0;
 if ($$0 >>> 0 > $8 >>> 0) {
  __ZNSt3__212__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEj($0, $$0);
  return;
 }
 if ($$0 >>> 0 >= $8 >>> 0) return;
 $22 = ~~+Math_ceil(+(+((HEAP32[$0 + 12 >> 2] | 0) >>> 0) / +HEAPF32[$0 + 16 >> 2])) >>> 0;
 if ($8 >>> 0 > 2 & ($8 + -1 & $8 | 0) == 0) {
  $27 = 1 << 32 - (Math_clz32($22 + -1 | 0) | 0);
  $30 = $22 >>> 0 < 2 ? $22 : $27;
 } else $30 = __ZNSt3__212__next_primeEj($22) | 0;
 $$sroa$speculated = $$0 >>> 0 < $30 >>> 0 ? $30 : $$0;
 if ($$sroa$speculated >>> 0 >= $8 >>> 0) return;
 __ZNSt3__212__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEj($0, $$sroa$speculated);
 return;
}

function __ZNSt3__212__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE6rehashEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$sroa$speculated = 0, $22 = 0, $27 = 0, $30 = 0, $8 = 0;
 if (($1 | 0) == 1) $$0 = 2; else if (!($1 + -1 & $1)) $$0 = $1; else $$0 = __ZNSt3__212__next_primeEj($1) | 0;
 $8 = HEAP32[$0 + 4 >> 2] | 0;
 if ($$0 >>> 0 > $8 >>> 0) {
  __ZNSt3__212__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE8__rehashEj($0, $$0);
  return;
 }
 if ($$0 >>> 0 >= $8 >>> 0) return;
 $22 = ~~+Math_ceil(+(+((HEAP32[$0 + 12 >> 2] | 0) >>> 0) / +HEAPF32[$0 + 16 >> 2])) >>> 0;
 if ($8 >>> 0 > 2 & ($8 + -1 & $8 | 0) == 0) {
  $27 = 1 << 32 - (Math_clz32($22 + -1 | 0) | 0);
  $30 = $22 >>> 0 < 2 ? $22 : $27;
 } else $30 = __ZNSt3__212__next_primeEj($22) | 0;
 $$sroa$speculated = $$0 >>> 0 < $30 >>> 0 ? $30 : $$0;
 if ($$sroa$speculated >>> 0 >= $8 >>> 0) return;
 __ZNSt3__212__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE8__rehashEj($0, $$sroa$speculated);
 return;
}

function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $10 = 0, $11 = 0, $21 = 0, $22 = 0, $28 = 0, $30 = 0;
 HEAP8[$1 + 53 >> 0] = 1;
 do if ((HEAP32[$1 + 4 >> 2] | 0) == ($3 | 0)) {
  HEAP8[$1 + 52 >> 0] = 1;
  $10 = $1 + 16 | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  if (!$11) {
   HEAP32[$10 >> 2] = $2;
   HEAP32[$1 + 24 >> 2] = $4;
   HEAP32[$1 + 36 >> 2] = 1;
   if (!(($4 | 0) == 1 ? (HEAP32[$1 + 48 >> 2] | 0) == 1 : 0)) break;
   HEAP8[$1 + 54 >> 0] = 1;
   break;
  }
  if (($11 | 0) != ($2 | 0)) {
   $30 = $1 + 36 | 0;
   HEAP32[$30 >> 2] = (HEAP32[$30 >> 2] | 0) + 1;
   HEAP8[$1 + 54 >> 0] = 1;
   break;
  }
  $21 = $1 + 24 | 0;
  $22 = HEAP32[$21 >> 2] | 0;
  if (($22 | 0) == 2) {
   HEAP32[$21 >> 2] = $4;
   $28 = $4;
  } else $28 = $22;
  if (($28 | 0) == 1 ? (HEAP32[$1 + 48 >> 2] | 0) == 1 : 0) HEAP8[$1 + 54 >> 0] = 1;
 } while (0);
 return;
}

function __ZNSt3__218__insertion_sort_3IRNS_6__lessIjjEEPjEEvT0_S5_T_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$lcssa = 0, $$029 = 0, $$030 = 0, $$030$phi = 0, $$1 = 0, $$1$phi = 0, $10 = 0, $12 = 0, $3 = 0, $7 = 0, $8 = 0;
 $3 = $0 + 8 | 0;
 __ZNSt3__27__sort3IRNS_6__lessIjjEEPjEEjT0_S5_S5_T_($0, $0 + 4 | 0, $3, $2) | 0;
 $$029 = $0 + 12 | 0;
 $$030 = $3;
 while (1) {
  if (($$029 | 0) == ($1 | 0)) break;
  $7 = HEAP32[$$029 >> 2] | 0;
  $8 = HEAP32[$$030 >> 2] | 0;
  if ($7 >>> 0 < $8 >>> 0) {
   $$0 = $$030;
   $$1 = $$029;
   $10 = $8;
   while (1) {
    HEAP32[$$1 >> 2] = $10;
    if (($$0 | 0) == ($0 | 0)) {
     $$0$lcssa = $0;
     break;
    }
    $12 = $$0 + -4 | 0;
    $10 = HEAP32[$12 >> 2] | 0;
    if ($7 >>> 0 >= $10 >>> 0) {
     $$0$lcssa = $$0;
     break;
    } else {
     $$1$phi = $$0;
     $$0 = $12;
     $$1 = $$1$phi;
    }
   }
   HEAP32[$$0$lcssa >> 2] = $7;
  }
  $$030$phi = $$029;
  $$029 = $$029 + 4 | 0;
  $$030 = $$030$phi;
 }
 return;
}

function __ZN2ut15InitComponentIdINS_17EntityInformationEEEjv() {
 var $$0$i = 0, $0 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $4 = 0, $8 = 0, $9 = 0;
 $0 = HEAP32[810] | 0;
 if (($0 | 0) != -1) {
  $19 = $0;
  return $19 | 0;
 }
 if (!(HEAP8[24192] | 0)) {
  HEAP32[6095] = 5;
  HEAP32[6096] = 5528;
  HEAP32[6097] = 8;
  HEAP32[6100] = 5549;
  HEAP32[6101] = 0;
  HEAP32[6102] = 3480;
  HEAP32[6098] = 24400;
  HEAP32[6099] = 1;
  $4 = 24192;
  HEAP32[$4 >> 2] = 1;
  HEAP32[$4 + 4 >> 2] = 0;
  $8 = 5528;
 } else $8 = HEAP32[6096] | 0;
 $9 = __ZN2ut17ComponentRegistry10findByNameEPKc($8) | 0;
 if (!$9) {
  $11 = __Znwj(8) | 0;
  $12 = $11;
  HEAP32[$12 >> 2] = 0;
  HEAP32[$12 + 4 >> 2] = 0;
  $16 = __ZN2ut17InitComponentInfoEPKciiiijPvPFvS2_iES4_PFvPKvS2_iEPFvS2_S2_ES4_iiPKii($8, 8, 8, 4, 0, 4, $11, 12, 13, 16, 14, 15, 0, 0, 0, 0) | 0;
  HEAP32[$16 + 68 >> 2] = 24380;
  $$0$i = $16;
 } else $$0$i = $9;
 $18 = HEAP32[$$0$i >> 2] | 0;
 HEAP32[810] = $18;
 $19 = $18;
 return $19 | 0;
}

function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $12 = 0, $14 = 0, $15 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $5 = 0, $9 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $$0$i = HEAP32[$3 >> 2] | 0;
 while (1) {
  if (($$0$i | 0) == ($2 | 0)) break;
  $9 = $$0$i + -24 | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_((HEAP32[$5 >> 2] | 0) + -24 | 0, $9);
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -24;
  $$0$i = $9;
 }
 $12 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$5 >> 2] = $12;
 $14 = $1 + 8 | 0;
 $15 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = HEAP32[$14 >> 2];
 HEAP32[$14 >> 2] = $15;
 $17 = $0 + 8 | 0;
 $18 = $1 + 12 | 0;
 $19 = HEAP32[$17 >> 2] | 0;
 HEAP32[$17 >> 2] = HEAP32[$18 >> 2];
 HEAP32[$18 >> 2] = $19;
 HEAP32[$1 >> 2] = HEAP32[$5 >> 2];
 return;
}

function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $13 = 0, $19 = 0;
 do if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 + 8 >> 2] | 0, $4) | 0) __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0, $1, $2, $3); else if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 >> 2] | 0, $4) | 0) {
  if ((HEAP32[$1 + 16 >> 2] | 0) != ($2 | 0)) {
   $13 = $1 + 20 | 0;
   if ((HEAP32[$13 >> 2] | 0) != ($2 | 0)) {
    HEAP32[$1 + 32 >> 2] = $3;
    HEAP32[$13 >> 2] = $2;
    $19 = $1 + 40 | 0;
    HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 1;
    if ((HEAP32[$1 + 36 >> 2] | 0) == 1) if ((HEAP32[$1 + 24 >> 2] | 0) == 2) HEAP8[$1 + 54 >> 0] = 1;
    HEAP32[$1 + 44 >> 2] = 4;
    break;
   }
  }
  if (($3 | 0) == 1) HEAP32[$1 + 32 >> 2] = 1;
 } while (0);
 return;
}

function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$2 = 0, $3 = 0, $6 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $3 = sp;
 if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, $1, 0) | 0) $$2 = 1; else if (!$1) $$2 = 0; else {
  $6 = ___dynamic_cast($1, 3200, 3184, 0) | 0;
  if (!$6) $$2 = 0; else {
   dest = $3 + 4 | 0;
   stop = dest + 52 | 0;
   do {
    HEAP32[dest >> 2] = 0;
    dest = dest + 4 | 0;
   } while ((dest | 0) < (stop | 0));
   HEAP32[$3 >> 2] = $6;
   HEAP32[$3 + 8 >> 2] = $0;
   HEAP32[$3 + 12 >> 2] = -1;
   HEAP32[$3 + 48 >> 2] = 1;
   FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 28 >> 2] & 3]($6, $3, HEAP32[$2 >> 2] | 0, 1);
   if ((HEAP32[$3 + 24 >> 2] | 0) == 1) {
    HEAP32[$2 >> 2] = HEAP32[$3 + 16 >> 2];
    $$0 = 1;
   } else $$0 = 0;
   $$2 = $$0;
  }
 }
 STACKTOP = sp;
 return $$2 | 0;
}

function _strlen($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$015$lcssa = 0, $$01518 = 0, $$1$lcssa = 0, $$pn = 0, $$pn29 = 0, $1 = 0, $10 = 0, $19 = 0, $22 = 0, $6 = 0, label = 0;
 $1 = $0;
 L1 : do if (!($1 & 3)) {
  $$015$lcssa = $0;
  label = 5;
 } else {
  $$01518 = $0;
  $22 = $1;
  while (1) {
   if (!(HEAP8[$$01518 >> 0] | 0)) {
    $$pn = $22;
    break L1;
   }
   $6 = $$01518 + 1 | 0;
   $22 = $6;
   if (!($22 & 3)) {
    $$015$lcssa = $6;
    label = 5;
    break;
   } else $$01518 = $6;
  }
 } while (0);
 if ((label | 0) == 5) {
  $$0 = $$015$lcssa;
  while (1) {
   $10 = HEAP32[$$0 >> 2] | 0;
   if (!(($10 & -2139062144 ^ -2139062144) & $10 + -16843009)) $$0 = $$0 + 4 | 0; else break;
  }
  if (!(($10 & 255) << 24 >> 24)) $$1$lcssa = $$0; else {
   $$pn29 = $$0;
   while (1) {
    $19 = $$pn29 + 1 | 0;
    if (!(HEAP8[$19 >> 0] | 0)) {
     $$1$lcssa = $19;
     break;
    } else $$pn29 = $19;
   }
  }
  $$pn = $$1$lcssa;
 }
 return $$pn - $1 | 0;
}

function __ZN2ut9SchedulerC2ERNS_12ManagerWorldE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $15 = 0, $2 = 0, $21 = 0, $3 = 0, $4 = 0, $6 = 0;
 HEAP32[$0 >> 2] = $1;
 $2 = $0 + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $3 = __ZNSt3__26chrono12steady_clock3nowEv() | 0;
 $4 = tempRet0;
 $6 = $0 + 16 | 0;
 HEAP32[$6 >> 2] = $3;
 HEAP32[$6 + 4 >> 2] = $4;
 $11 = $0 + 24 | 0;
 HEAP32[$11 >> 2] = $3;
 HEAP32[$11 + 4 >> 2] = $4;
 $15 = $0 + 32 | 0;
 HEAP32[$15 >> 2] = 0;
 HEAP32[$15 + 4 >> 2] = 0;
 HEAP32[$15 + 8 >> 2] = 0;
 HEAP32[$15 + 12 >> 2] = 0;
 HEAP32[$15 + 16 >> 2] = 0;
 HEAP32[$15 + 20 >> 2] = 0;
 HEAP32[$0 + 56 >> 2] = 1065353216;
 HEAP32[$0 + 60 >> 2] = 0;
 HEAP32[$0 + 64 >> 2] = 0;
 HEAP32[$0 + 68 >> 2] = 0;
 HEAP8[$0 + 72 >> 0] = 1;
 $21 = $0 + 76 | 0;
 HEAP32[$21 >> 2] = 0;
 HEAP32[$21 + 4 >> 2] = 0;
 HEAP32[$21 + 8 >> 2] = 0;
 HEAP32[$21 + 12 >> 2] = 0;
 HEAP32[$21 + 16 >> 2] = 0;
 return;
}

function _ut_System_Create_For_Delegate($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $11 = 0, $12 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $3 = sp + 16 | 0;
 $4 = sp + 4 | 0;
 $5 = sp;
 $6 = sp + 8 | 0;
 HEAP32[$3 >> 2] = $0;
 HEAP32[$4 >> 2] = $1;
 HEAP32[$5 >> 2] = $2;
 __ZNSt3__210shared_ptrI14DelegateSystemE11make_sharedIJRPKcRPFvPN2ut9SchedulerEPNS7_12ManagerWorldEPvERSC_EEES2_DpOT_($6, $3, $4, $5);
 $7 = __ZN2ut8PtrTable7persistI14DelegateSystemEEPT_RKNSt3__210shared_ptrIS3_EE($6) | 0;
 $9 = HEAP32[$6 + 4 >> 2] | 0;
 if (!$9) {
  STACKTOP = sp;
  return $7 | 0;
 }
 $11 = $9 + 4 | 0;
 $12 = HEAP32[$11 >> 2] | 0;
 HEAP32[$11 >> 2] = $12 + -1;
 if ($12 | 0) {
  STACKTOP = sp;
  return $7 | 0;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$9 >> 2] | 0) + 8 >> 2] & 63]($9);
 __ZNSt3__219__shared_weak_count14__release_weakEv($9);
 STACKTOP = sp;
 return $7 | 0;
}

function _strncmp($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$lcssa = 0, $$01823 = 0, $$01925$in = 0, $$020 = 0, $$024 = 0, $$lcssa = 0, $10 = 0, $12 = 0, $4 = 0, $6 = 0;
 if (!$2) $$020 = 0; else {
  $4 = HEAP8[$0 >> 0] | 0;
  L3 : do if (!($4 << 24 >> 24)) {
   $$0$lcssa = $1;
   $$lcssa = 0;
  } else {
   $$01823 = $0;
   $$01925$in = $2;
   $$024 = $1;
   $10 = $4;
   while (1) {
    $$01925$in = $$01925$in + -1 | 0;
    $6 = HEAP8[$$024 >> 0] | 0;
    if (!($10 << 24 >> 24 == $6 << 24 >> 24 & (($$01925$in | 0) != 0 & $6 << 24 >> 24 != 0))) {
     $$0$lcssa = $$024;
     $$lcssa = $10;
     break L3;
    }
    $$01823 = $$01823 + 1 | 0;
    $12 = $$024 + 1 | 0;
    $10 = HEAP8[$$01823 >> 0] | 0;
    if (!($10 << 24 >> 24)) {
     $$0$lcssa = $12;
     $$lcssa = 0;
     break;
    } else $$024 = $12;
   }
  } while (0);
  $$020 = ($$lcssa & 255) - (HEAPU8[$$0$lcssa >> 0] | 0) | 0;
 }
 return $$020 | 0;
}

function __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $11 = 0, $12 = 0, $5 = 0, $6 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $5 = $1 + 11 | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 $11 = $6 << 24 >> 24 < 0 ? HEAP32[$1 + 4 >> 2] | 0 : $6 & 255;
 $12 = __ZNSt3__211char_traitsIcE6lengthEPKc($2) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcjj($0, (HEAP8[$5 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1, $11, $11 + $12 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($0, $2, $12) | 0;
 return;
}

function __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $12 = 0, $5 = 0, $6 = 0, $7 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $5 = __ZNSt3__211char_traitsIcE6lengthEPKc($1) | 0;
 $6 = $2 + 11 | 0;
 $7 = HEAP8[$6 >> 0] | 0;
 $12 = $7 << 24 >> 24 < 0 ? HEAP32[$2 + 4 >> 2] | 0 : $7 & 255;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcjj($0, $1, $5, $12 + $5 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($0, (HEAP8[$6 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2, $12) | 0;
 return;
}

function __ZNSt3__27__sort3IRNS_6__lessIjjEEPjEEjT0_S5_S5_T_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$026 = 0, $10 = 0, $12 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0;
 $4 = HEAP32[$1 >> 2] | 0;
 $5 = HEAP32[$0 >> 2] | 0;
 $7 = HEAP32[$2 >> 2] | 0;
 $8 = $7 >>> 0 < $4 >>> 0;
 do if ($4 >>> 0 < $5 >>> 0) {
  if ($8) {
   HEAP32[$0 >> 2] = $7;
   HEAP32[$2 >> 2] = $5;
   $$026 = 1;
   break;
  }
  HEAP32[$0 >> 2] = $4;
  HEAP32[$1 >> 2] = $5;
  $12 = HEAP32[$2 >> 2] | 0;
  if ($12 >>> 0 < $5 >>> 0) {
   HEAP32[$1 >> 2] = $12;
   HEAP32[$2 >> 2] = $5;
   $$026 = 2;
  } else $$026 = 1;
 } else if ($8) {
  HEAP32[$1 >> 2] = $7;
  HEAP32[$2 >> 2] = $4;
  $9 = HEAP32[$1 >> 2] | 0;
  $10 = HEAP32[$0 >> 2] | 0;
  if ($9 >>> 0 < $10 >>> 0) {
   HEAP32[$0 >> 2] = $9;
   HEAP32[$1 >> 2] = $10;
   $$026 = 2;
  } else $$026 = 1;
 } else $$026 = 0; while (0);
 return $$026 | 0;
}

function __ZNK9rapidjson12GenericValueINS_4UTF8IcEENS_19MemoryPoolAllocatorINS_12CrtAllocatorEEEE11StringEqualIS5_EEbRKNS0_IS2_T_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1 = 0, $11 = 0, $18 = 0, $26 = 0, $3 = 0, $31 = 0, $33 = 0, $7 = 0;
 $3 = HEAP16[$0 + 18 >> 1] | 0;
 if (!($3 & 1024)) ___assert_fail(16231, 15939, 1992, 16880);
 $7 = HEAP16[$1 + 18 >> 1] | 0;
 if (!($7 & 1024)) ___assert_fail(16892, 15939, 1993, 16880);
 $11 = ($3 & 4096) == 0;
 if ($11) $26 = HEAP32[$0 >> 2] | 0; else $26 = 17 - (HEAP8[$0 + 17 >> 0] | 0) | 0;
 $18 = ($7 & 4096) == 0;
 if (($26 | 0) != (($18 ? HEAP32[$1 >> 2] | 0 : 17 - (HEAP8[$1 + 17 >> 0] | 0) | 0) | 0)) {
  $$1 = 0;
  return $$1 | 0;
 }
 if ($11) $33 = HEAP32[$0 + 8 >> 2] | 0; else $33 = $0;
 $31 = $18 ? HEAP32[$1 + 8 >> 2] | 0 : $1;
 if (($33 | 0) == ($31 | 0)) {
  $$1 = 1;
  return $$1 | 0;
 }
 $$1 = (_memcmp($33, $31, $26) | 0) == 0;
 return $$1 | 0;
}

function _ut_Scheduler_ScheduleSysInternal($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $12 = 0, $14 = 0, $15 = 0, $2 = 0, $5 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$2 >> 2] = HEAP32[$1 + 4 >> 2];
 $5 = $2 + 4 | 0;
 $7 = HEAP32[$1 + 8 >> 2] | 0;
 if (!$7) {
  HEAP32[$5 >> 2] = 0;
  _abort();
 }
 $9 = __ZNSt3__219__shared_weak_count4lockEv($7) | 0;
 HEAP32[$5 >> 2] = $9;
 if (!$9) _abort();
 $11 = __ZN2ut9Scheduler8scheduleERKNSt3__210shared_ptrINS_6SystemEEE($0, $2) | 0;
 $12 = HEAP32[$5 >> 2] | 0;
 if (!$12) {
  STACKTOP = sp;
  return $11 | 0;
 }
 $14 = $12 + 4 | 0;
 $15 = HEAP32[$14 >> 2] | 0;
 HEAP32[$14 >> 2] = $15 + -1;
 if ($15 | 0) {
  STACKTOP = sp;
  return $11 | 0;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$12 >> 2] | 0) + 8 >> 2] & 63]($12);
 __ZNSt3__219__shared_weak_count14__release_weakEv($12);
 STACKTOP = sp;
 return $11 | 0;
}

function __ZN2ut20InitComponentInfoForINS_6EntityEEERNS_13ComponentInfoEv() {
 var $$0 = 0, $10 = 0, $14 = 0, $2 = 0, $6 = 0, $7 = 0, $9 = 0;
 if (!(HEAP8[24200] | 0)) {
  HEAP32[6103] = 4;
  HEAP32[6104] = 5554;
  HEAP32[6105] = 8;
  HEAP32[6108] = 12871;
  HEAP32[6109] = 0;
  HEAP32[6110] = 3500;
  HEAP32[6111] = 12877;
  HEAP32[6112] = 4;
  HEAP32[6113] = 3500;
  HEAP32[6106] = 24432;
  HEAP32[6107] = 2;
  $2 = 24200;
  HEAP32[$2 >> 2] = 1;
  HEAP32[$2 + 4 >> 2] = 0;
  $6 = 5554;
 } else $6 = HEAP32[6104] | 0;
 $7 = __ZN2ut17ComponentRegistry10findByNameEPKc($6) | 0;
 if ($7 | 0) {
  $$0 = $7;
  return $$0 | 0;
 }
 $9 = __Znwj(8) | 0;
 $10 = $9;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 $14 = __ZN2ut17InitComponentInfoEPKciiiijPvPFvS2_iES4_PFvPKvS2_iEPFvS2_S2_ES4_iiPKii($6, 8, 8, 4, 0, 0, $9, 0, 0, 0, 0, 11, 0, 0, 0, 0) | 0;
 HEAP32[$14 + 68 >> 2] = 24412;
 $$0 = $14;
 return $$0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$1 = 0;
 L1 : do if (($0 | 0) == ($1 | 0)) $$1 = $0; else switch (HEAP8[$0 >> 0] | 0) {
 case 68:
 case 67:
  {
   $$1 = __ZN10__cxxabiv112_GLOBAL__N_120parse_ctor_dtor_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
   break L1;
   break;
  }
 case 85:
  {
   $$1 = __ZN10__cxxabiv112_GLOBAL__N_123parse_unnamed_type_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
   break L1;
   break;
  }
 case 57:
 case 56:
 case 55:
 case 54:
 case 53:
 case 52:
 case 51:
 case 50:
 case 49:
  {
   $$1 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
   break L1;
   break;
  }
 default:
  return __ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
 } while (0);
 return $$1 | 0;
}

function ___strerror_l($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$012$lcssa = 0, $$01214 = 0, $$016 = 0, $$113 = 0, $$115 = 0, $$115$ph = 0, $6 = 0, label = 0, $$113$looptemp = 0;
 $$016 = 0;
 while (1) {
  if ((HEAPU8[19819 + $$016 >> 0] | 0) == ($0 | 0)) {
   label = 4;
   break;
  }
  $6 = $$016 + 1 | 0;
  if (($6 | 0) == 87) {
   $$115$ph = 87;
   label = 5;
   break;
  } else $$016 = $6;
 }
 if ((label | 0) == 4) if (!$$016) $$012$lcssa = 19907; else {
  $$115$ph = $$016;
  label = 5;
 }
 if ((label | 0) == 5) {
  $$01214 = 19907;
  $$115 = $$115$ph;
  while (1) {
   $$113 = $$01214;
   do {
    $$113$looptemp = $$113;
    $$113 = $$113 + 1 | 0;
   } while ((HEAP8[$$113$looptemp >> 0] | 0) != 0);
   $$115 = $$115 + -1 | 0;
   if (!$$115) {
    $$012$lcssa = $$113;
    break;
   } else $$01214 = $$113;
  }
 }
 return ___lctrans($$012$lcssa, HEAP32[$1 + 20 >> 2] | 0) | 0;
}

function _ut_CoreService_GetCurrentLocale($0) {
 $0 = $0 | 0;
 var $$pre = 0, $$pre$phi3Z2D = 0, $$pre$phiZ2D = 0, $1 = 0, $10 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 if (!(HEAP32[6120] | 0)) HEAP32[6120] = __Znwj(1) | 0;
 __ZN2ut11CoreService16getCurrentLocaleEv($1);
 $$pre = HEAP32[$0 >> 2] | 0;
 if (($1 | 0) == ($0 | 0)) {
  $$pre$phi3Z2D = $1 + 4 | 0;
  $$pre$phiZ2D = $1;
  $10 = $$pre;
  _free($10);
  HEAP32[$$pre$phiZ2D >> 2] = 0;
  HEAP32[$$pre$phi3Z2D >> 2] = 0;
  STACKTOP = sp;
  return;
 } else {
  _free($$pre);
  HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
  $8 = $1 + 4 | 0;
  HEAP32[$0 + 4 >> 2] = HEAP32[$8 >> 2];
  HEAP32[$1 >> 2] = 0;
  HEAP32[$8 >> 2] = 0;
  $$pre$phi3Z2D = $8;
  $$pre$phiZ2D = $1;
  $10 = 0;
  _free($10);
  HEAP32[$$pre$phiZ2D >> 2] = 0;
  HEAP32[$$pre$phi3Z2D >> 2] = 0;
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEjj($0) {
 $0 = $0 | 0;
 var $$sroa$speculated = 0, $1 = 0, $10 = 0, $11 = 0, $14 = 0, $16 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = $0 + 11 | 0;
 $3 = HEAP8[$2 >> 0] | 0;
 if ($3 << 24 >> 24 < 0) {
  $10 = HEAP32[$0 + 4 >> 2] | 0;
  $14 = HEAP32[$0 >> 2] | 0;
 } else {
  $10 = $3 & 255;
  $14 = $0;
 }
 $$sroa$speculated = ($10 | 0) != 0 & 1;
 $11 = $10 - $$sroa$speculated | 0;
 if (!$11) $16 = $3; else {
  __ZNSt3__211char_traitsIcE4moveEPcPKcj($14, $14 + $$sroa$speculated | 0, $11) | 0;
  $16 = HEAP8[$2 >> 0] | 0;
 }
 if ($16 << 24 >> 24 < 0) HEAP32[$0 + 4 >> 2] = $11; else HEAP8[$2 >> 0] = $11;
 HEAP8[$1 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($14 + $11 | 0, $1);
 STACKTOP = sp;
 return;
}

function ___overflow($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $10 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $3 = $1 & 255;
 HEAP8[$2 >> 0] = $3;
 $4 = $0 + 16 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (!$5) if (!(___towrite($0) | 0)) {
  $12 = HEAP32[$4 >> 2] | 0;
  label = 4;
 } else $$0 = -1; else {
  $12 = $5;
  label = 4;
 }
 do if ((label | 0) == 4) {
  $9 = $0 + 20 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  if ($10 >>> 0 < $12 >>> 0) {
   $13 = $1 & 255;
   if (($13 | 0) != (HEAP8[$0 + 75 >> 0] | 0)) {
    HEAP32[$9 >> 2] = $10 + 1;
    HEAP8[$10 >> 0] = $3;
    $$0 = $13;
    break;
   }
  }
  if ((FUNCTION_TABLE_iiii[HEAP32[$0 + 36 >> 2] & 7]($0, $2, 1) | 0) == 1) $$0 = HEAPU8[$2 >> 0] | 0; else $$0 = -1;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__27__sort4IRNS_6__lessIjjEEPjEEjT0_S5_S5_S5_T_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $10 = 0, $11 = 0, $14 = 0, $15 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0;
 $5 = __ZNSt3__27__sort3IRNS_6__lessIjjEEPjEEjT0_S5_S5_T_($0, $1, $2, $4) | 0;
 $6 = HEAP32[$3 >> 2] | 0;
 $7 = HEAP32[$2 >> 2] | 0;
 if ($6 >>> 0 < $7 >>> 0) {
  HEAP32[$2 >> 2] = $6;
  HEAP32[$3 >> 2] = $7;
  $9 = $5 + 1 | 0;
  $10 = HEAP32[$2 >> 2] | 0;
  $11 = HEAP32[$1 >> 2] | 0;
  if ($10 >>> 0 < $11 >>> 0) {
   HEAP32[$1 >> 2] = $10;
   HEAP32[$2 >> 2] = $11;
   $14 = HEAP32[$1 >> 2] | 0;
   $15 = HEAP32[$0 >> 2] | 0;
   if ($14 >>> 0 < $15 >>> 0) {
    HEAP32[$0 >> 2] = $14;
    HEAP32[$1 >> 2] = $15;
    $$0 = $5 + 3 | 0;
   } else $$0 = $5 + 2 | 0;
  } else $$0 = $9;
 } else $$0 = $5;
 return $$0 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $11 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 $4 = $0 + 11 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 if ($6) $11 = HEAP32[$0 + 4 >> 2] | 0; else $11 = $5 & 255;
 do if ($11 >>> 0 < $1 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($0, $1 - $11 | 0, $2) | 0; else if ($6) {
  $14 = (HEAP32[$0 >> 2] | 0) + $1 | 0;
  HEAP8[$3 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($14, $3);
  HEAP32[$0 + 4 >> 2] = $1;
  break;
 } else {
  HEAP8[$3 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($0 + $1 | 0, $3);
  HEAP8[$4 >> 0] = $1;
  break;
 } while (0);
 STACKTOP = sp;
 return;
}

function _frexp($0, $1) {
 $0 = +$0;
 $1 = $1 | 0;
 var $$0 = 0.0, $$016 = 0.0, $2 = 0, $3 = 0, $4 = 0, $9 = 0.0, $storemerge = 0;
 HEAPF64[tempDoublePtr >> 3] = $0;
 $2 = HEAP32[tempDoublePtr >> 2] | 0;
 $3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 $4 = _bitshift64Lshr($2 | 0, $3 | 0, 52) | 0;
 switch ($4 & 2047) {
 case 0:
  {
   if ($0 != 0.0) {
    $9 = +_frexp($0 * 18446744073709551616.0, $1);
    $$016 = $9;
    $storemerge = (HEAP32[$1 >> 2] | 0) + -64 | 0;
   } else {
    $$016 = $0;
    $storemerge = 0;
   }
   HEAP32[$1 >> 2] = $storemerge;
   $$0 = $$016;
   break;
  }
 case 2047:
  {
   $$0 = $0;
   break;
  }
 default:
  {
   HEAP32[$1 >> 2] = ($4 & 2047) + -1022;
   HEAP32[tempDoublePtr >> 2] = $2;
   HEAP32[tempDoublePtr + 4 >> 2] = $3 & -2146435073 | 1071644672;
   $$0 = +HEAPF64[tempDoublePtr >> 3];
  }
 }
 return +$$0;
}

function __ZNK2ut4arch19EntityCommandBuffer23translateDeferredEntityENS_6EntityE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $15 = 0, $20 = 0, $21 = 0, $3 = 0, $5 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) >= 0) {
  _snprintf(25060, 1024, 18791, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 18846, 6212, 271);
 }
 $5 = 0 - $3 | 0;
 $9 = HEAP32[$1 + 32 >> 2] | 0;
 if (((HEAP32[$1 + 36 >> 2] | 0) - $9 >> 3 | 0) > ($5 | 0)) {
  $15 = $9 + ($5 << 3) | 0;
  $20 = HEAP32[$15 + 4 >> 2] | 0;
  $21 = $0;
  HEAP32[$21 >> 2] = HEAP32[$15 >> 2];
  HEAP32[$21 + 4 >> 2] = $20;
  STACKTOP = sp;
  return;
 } else {
  _snprintf(25060, 1024, 18865, sp + 8 | 0) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 6575, 6212, 273);
 }
}

function _ut_nativebuffer_pod_create_uninitialized($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $15 = 0, $2 = 0, $3 = 0, $4 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = __Znwj(12) | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $2 + 4 | 0;
 HEAP32[$3 >> 2] = 0;
 $4 = $2 + 8 | 0;
 HEAP32[$4 >> 2] = 0;
 if (!$0) {
  $15 = 0;
  HEAP32[$2 >> 2] = $15;
  HEAP32[$3 >> 2] = $0;
  HEAP32[$4 >> 2] = $0;
  STACKTOP = sp;
  return $2 | 0;
 }
 $6 = _llvm_ctlz_i64($0 | 0, 0, 0) | 0;
 $8 = _llvm_ctlz_i64($1 | 0, 0, 0) | 0;
 if ((128 - $6 - $8 | 0) >>> 0 >= 33) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8102, 8155, 32);
 }
 $15 = _malloc(Math_imul($1, $0) | 0) | 0;
 HEAP32[$2 >> 2] = $15;
 HEAP32[$3 >> 2] = $0;
 HEAP32[$4 >> 2] = $0;
 STACKTOP = sp;
 return $2 | 0;
}

function __ZNSt3__213__vector_baseINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEENS5_IS9_Lj4096EEEED2Ev($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0, $3 = 0, $6 = 0, $8 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  $3 = $0 + 4 | 0;
  $$0$i$i = HEAP32[$3 >> 2] | 0;
  while (1) {
   if (($$0$i$i | 0) == ($1 | 0)) break;
   $6 = $$0$i$i + -16 | 0;
   __ZNSt3__213__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev($6);
   $$0$i$i = $6;
  }
  HEAP32[$3 >> 2] = $1;
  $8 = HEAP32[$0 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lj4096EEEEENS1_IS6_Lj4096EEEEELj4096EE10deallocateEPS8_j($0 + 12 | 0, $8, (HEAP32[$0 + 8 >> 2] | 0) - $8 >> 4);
 }
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcjj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $10 = 0, $11 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $4 = sp;
 if ($3 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ($3 >>> 0 < 11) {
  HEAP8[$0 + 11 >> 0] = $2;
  $$0 = $0;
 } else {
  $10 = $3 + 16 & -16;
  $11 = __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEj($10) | 0;
  HEAP32[$0 >> 2] = $11;
  HEAP32[$0 + 8 >> 2] = $10 | -2147483648;
  HEAP32[$0 + 4 >> 2] = $2;
  $$0 = $11;
 }
 __ZNSt3__211char_traitsIcE4copyEPcPKcj($$0, $1, $2) | 0;
 HEAP8[$4 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($$0 + $2 | 0, $4);
 STACKTOP = sp;
 return;
}

function __ZN2ut4arch22ArchetypeChunkIterator9addFilterEPKNS0_13ComponentSpecEj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $11 = 0, $12 = 0, $6 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (HEAP8[$0 + 28 >> 0] | 0) {
  _snprintf(25060, 1024, 14571, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14639, 13749, 9);
 }
 $6 = $0 + 4 | 0;
 $7 = $0 + 8 | 0;
 $9 = HEAP32[$6 >> 2] | 0;
 $11 = (HEAP32[$7 >> 2] | 0) - $9 >> 3;
 $12 = $11 + $2 | 0;
 if ($11 >>> 0 < $12 >>> 0) __ZNSt3__26vectorIN2ut4arch13ComponentSpecENS_9allocatorIS3_EEE8__appendEj($6, $2); else if ($11 >>> 0 > $12 >>> 0) HEAP32[$7 >> 2] = $9 + ($12 << 3);
 if (!$2) {
  STACKTOP = sp;
  return;
 }
 _memmove((HEAP32[$6 >> 2] | 0) + ($11 << 3) | 0, $1 | 0, $2 << 3 | 0) | 0;
 STACKTOP = sp;
 return;
}

function _ut_EntityCommandBuffer_InstantiateDeferredEntity($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $11 = 0, $15 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $tmpcast$i$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast$i$byval_copy = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp;
 $5 = $2;
 $10 = HEAP32[$5 + 4 >> 2] | 0;
 $11 = $3;
 HEAP32[$11 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$11 + 4 >> 2] = $10;
 HEAP32[$tmpcast$i$byval_copy >> 2] = HEAP32[$3 >> 2];
 HEAP32[$tmpcast$i$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZN2ut4arch19EntityCommandBuffer27instantiateDeferredEntitiesENS_6EntityEPS2_j($1, $tmpcast$i$byval_copy, $4, 1);
 $15 = $4;
 $20 = HEAP32[$15 + 4 >> 2] | 0;
 $21 = $0;
 HEAP32[$21 >> 2] = HEAP32[$15 >> 2];
 HEAP32[$21 + 4 >> 2] = $20;
 STACKTOP = sp;
 return;
}

function _ut_nativebuffer_nativestring_set($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $11 = 0, $16 = 0, $6 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((HEAP32[$0 + 4 >> 2] | 0) >>> 0 <= $1 >>> 0) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 12124, 12134, 209);
 }
 $6 = HEAP32[$0 >> 2] | 0;
 $7 = $6 + ($1 << 3) | 0;
 if (($7 | 0) == ($2 | 0)) {
  STACKTOP = sp;
  return;
 }
 $9 = HEAP32[$2 >> 2] | 0;
 $11 = HEAP32[$2 + 4 >> 2] | 0;
 _free(HEAP32[$7 >> 2] | 0);
 HEAP32[$7 >> 2] = 0;
 HEAP32[$6 + ($1 << 3) + 4 >> 2] = $11;
 if (!$11) {
  STACKTOP = sp;
  return;
 }
 $16 = _malloc($11 + 1 | 0) | 0;
 HEAP32[$7 >> 2] = $16;
 _memcpy($16 | 0, $9 | 0, $11 | 0) | 0;
 HEAP8[$16 + $11 >> 0] = 0;
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0;
 HEAP32[$2 >> 2] = 0;
 if (($0 | 0) == ($1 | 0)) $$2 = $0; else {
  $4 = HEAP8[$0 >> 0] | 0;
  if ($4 << 24 >> 24 == 114) {
   HEAP32[$2 >> 2] = 4;
   $6 = $0 + 1 | 0;
   $$0 = $6;
   $10 = 4;
   $8 = HEAP8[$6 >> 0] | 0;
  } else {
   $$0 = $0;
   $10 = 0;
   $8 = $4;
  }
  if ($8 << 24 >> 24 == 86) {
   $9 = $10 | 2;
   HEAP32[$2 >> 2] = $9;
   $11 = $$0 + 1 | 0;
   $$1 = $11;
   $13 = HEAP8[$11 >> 0] | 0;
   $15 = $9;
  } else {
   $$1 = $$0;
   $13 = $8;
   $15 = $10;
  }
  if ($13 << 24 >> 24 == 75) {
   HEAP32[$2 >> 2] = $15 | 1;
   $$2 = $$1 + 1 | 0;
  } else $$2 = $$1;
 }
 return $$2 | 0;
}

function _ut_nativebuffer_pod_placement_create_uninitialized($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $15 = 0, $3 = 0, $4 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 HEAP32[$0 >> 2] = 0;
 $3 = $0 + 4 | 0;
 HEAP32[$3 >> 2] = 0;
 $4 = $0 + 8 | 0;
 HEAP32[$4 >> 2] = 0;
 if (!$1) {
  $15 = 0;
  HEAP32[$0 >> 2] = $15;
  HEAP32[$3 >> 2] = $1;
  HEAP32[$4 >> 2] = $1;
  STACKTOP = sp;
  return;
 }
 $6 = _llvm_ctlz_i64($1 | 0, 0, 0) | 0;
 $8 = _llvm_ctlz_i64($2 | 0, 0, 0) | 0;
 if ((128 - $6 - $8 | 0) >>> 0 >= 33) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 8102, 8155, 32);
 }
 $15 = _malloc(Math_imul($2, $1) | 0) | 0;
 HEAP32[$0 >> 2] = $15;
 HEAP32[$3 >> 2] = $1;
 HEAP32[$4 >> 2] = $1;
 STACKTOP = sp;
 return;
}

function __ZN2ut4arch19EntityCommandBuffer27addComponentDataRawWithMoveENS_6EntityEjPvi($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $12 = 0, $13 = 0, $5 = 0, $6 = 0, $7 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast$byval_copy = sp + 16 | 0;
 $5 = sp + 8 | 0;
 $6 = sp;
 HEAP32[$5 >> 2] = 0;
 $7 = $1;
 $12 = HEAP32[$7 + 4 >> 2] | 0;
 $13 = $6;
 HEAP32[$13 >> 2] = HEAP32[$7 >> 2];
 HEAP32[$13 + 4 >> 2] = $12;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 __ZN20ComponentDataCommand4moveEPN2ut4arch19EntityCommandBufferENS1_15EntityCommandOpENS0_6EntityEjPviPS6_($0, 7, $tmpcast$byval_copy, $2, $3, $4, $5);
 STACKTOP = sp;
 return HEAP32[$5 >> 2] | 0;
}

function __ZN2ut4arch19EntityCommandBuffer24setComponentDataWithMoveENS_6EntityEjPvi($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $12 = 0, $13 = 0, $5 = 0, $6 = 0, $7 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast$byval_copy = sp + 16 | 0;
 $5 = sp + 8 | 0;
 $6 = sp;
 HEAP32[$5 >> 2] = 0;
 $7 = $1;
 $12 = HEAP32[$7 + 4 >> 2] | 0;
 $13 = $6;
 HEAP32[$13 >> 2] = HEAP32[$7 >> 2];
 HEAP32[$13 + 4 >> 2] = $12;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 __ZN20ComponentDataCommand4moveEPN2ut4arch19EntityCommandBufferENS1_15EntityCommandOpENS0_6EntityEjPviPS6_($0, 9, $tmpcast$byval_copy, $2, $3, $4, $5);
 STACKTOP = sp;
 return HEAP32[$5 >> 2] | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $10 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 if ($2 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ($2 >>> 0 < 11) {
  HEAP8[$0 + 11 >> 0] = $2;
  $$0 = $0;
 } else {
  $9 = $2 + 16 & -16;
  $10 = __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEj($9) | 0;
  HEAP32[$0 >> 2] = $10;
  HEAP32[$0 + 8 >> 2] = $9 | -2147483648;
  HEAP32[$0 + 4 >> 2] = $2;
  $$0 = $10;
 }
 __ZNSt3__211char_traitsIcE4copyEPcPKcj($$0, $1, $2) | 0;
 HEAP8[$3 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($$0 + $2 | 0, $3);
 STACKTOP = sp;
 return;
}

function _ut_EntityCommandBuffer_TranslateDeferredEntity($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $11 = 0, $15 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast$byval_copy = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp;
 $5 = $2;
 $10 = HEAP32[$5 + 4 >> 2] | 0;
 $11 = $4;
 HEAP32[$11 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$11 + 4 >> 2] = $10;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$4 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 __ZNK2ut4arch19EntityCommandBuffer23translateDeferredEntityENS_6EntityE($3, $1, $tmpcast$byval_copy);
 $15 = $3;
 $20 = HEAP32[$15 + 4 >> 2] | 0;
 $21 = $0;
 HEAP32[$21 >> 2] = HEAP32[$15 >> 2];
 HEAP32[$21 + 4 >> 2] = $20;
 STACKTOP = sp;
 return;
}

function __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = $0 + 8 | 0;
 while (1) {
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) == ($2 | 0)) break;
  $6 = $4 + -16 | 0;
  HEAP32[$3 >> 2] = $6;
  __ZNSt3__213__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev($6);
 }
 $7 = HEAP32[$0 >> 2] | 0;
 if ($7 | 0) __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lj4096EEEEENS1_IS6_Lj4096EEEEELj4096EE10deallocateEPS8_j(HEAP32[$0 + 16 >> 2] | 0, $7, (HEAP32[$0 + 12 >> 2] | 0) - $7 >> 4);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$pn = 0, $$017 = 0, $$2 = 0, $7 = 0, $spec$select = 0;
 L1 : do if (($0 | 0) == ($1 | 0)) $$2 = $0; else {
  $spec$select = (HEAP8[$0 >> 0] | 0) == 110 ? $0 + 1 | 0 : $0;
  if (($spec$select | 0) == ($1 | 0)) $$2 = $0; else {
   $7 = HEAP8[$spec$select >> 0] | 0;
   if ($7 << 24 >> 24 == 48) {
    $$2 = $spec$select + 1 | 0;
    break;
   }
   if (($7 + -49 & 255) < 9) {
    $$0$pn = $spec$select;
    while (1) {
     $$017 = $$0$pn + 1 | 0;
     if (($$017 | 0) == ($1 | 0)) {
      $$2 = $1;
      break L1;
     }
     if (((HEAP8[$$017 >> 0] | 0) + -48 | 0) >>> 0 < 10) $$0$pn = $$017; else {
      $$2 = $$017;
      break;
     }
    }
   } else $$2 = $0;
  }
 } while (0);
 return $$2 | 0;
}

function __ZN2ut6SystemD2Ev($0) {
 $0 = $0 | 0;
 var $$06$i$i$i = 0, $1 = 0, $14 = 0, $15 = 0, $2 = 0, $21 = 0, $4 = 0, $5 = 0, $8 = 0;
 HEAP32[$0 >> 2] = 3352;
 $1 = $0 + 24 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if ($2 | 0) {
  $4 = $0 + 28 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) == ($2 | 0)) $14 = $2; else {
   $$06$i$i$i = $5;
   do {
    $8 = $$06$i$i$i + -12 | 0;
    $$06$i$i$i = $$06$i$i$i + -16 | 0;
    if ((HEAP8[$8 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$8 >> 2] | 0);
   } while (($$06$i$i$i | 0) != ($2 | 0));
   $14 = HEAP32[$1 >> 2] | 0;
  }
  HEAP32[$4 >> 2] = $2;
  __ZdlPv($14);
 }
 $15 = $0 + 12 | 0;
 if ((HEAP8[$15 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$15 >> 2] | 0);
 $21 = HEAP32[$0 + 8 >> 2] | 0;
 if (!$21) return;
 __ZNSt3__219__shared_weak_count14__release_weakEv($21);
 return;
}

function _ut_World_InstantiateEntity($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $11 = 0, $15 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $tmpcast$i$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast$i$byval_copy = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp;
 $5 = $2;
 $10 = HEAP32[$5 + 4 >> 2] | 0;
 $11 = $3;
 HEAP32[$11 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$11 + 4 >> 2] = $10;
 HEAP32[$tmpcast$i$byval_copy >> 2] = HEAP32[$3 >> 2];
 HEAP32[$tmpcast$i$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZN2ut4arch13EntityManager19instantiateEntitiesENS_6EntityEPS2_i($1, $tmpcast$i$byval_copy, $4, 1);
 $15 = $4;
 $20 = HEAP32[$15 + 4 >> 2] | 0;
 $21 = $0;
 HEAP32[$21 >> 2] = HEAP32[$15 >> 2];
 HEAP32[$21 + 4 >> 2] = $20;
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_destructor_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$019 = 0, $$1 = 0, $10 = 0, $4 = 0;
 if (($0 | 0) == ($1 | 0)) $$1 = $0; else {
  $4 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
  if (($4 | 0) == ($0 | 0)) $$019 = __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0; else $$019 = $4;
  if (($$019 | 0) == ($0 | 0)) $$1 = $0; else {
   $10 = HEAP32[$2 + 4 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($10 | 0)) $$1 = $0; else {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($10 + -24 | 0, 0, 22347) | 0;
    $$1 = $$019;
   }
  }
 }
 return $$1 | 0;
}

function __ZN2ut4arch13EntityManager14startBufferingENS0_13BufferingModeE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (($1 | 0) == 1) {
  STACKTOP = sp;
  return;
 }
 $3 = $0 + 36 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = $4 + 1;
 if (($4 | 0) > 0) {
  STACKTOP = sp;
  return;
 }
 if (HEAP32[$0 + 140 >> 2] | 0) {
  _snprintf(25060, 1024, 14504, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14548, 6920, 611);
 }
 __ZN2ut4arch19EntityCommandBuffer10freeChunksEv($0 + 40 | 0);
 $11 = $0 + 56 | 0;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP8[$11 + 12 >> 0] = 0;
 HEAP32[$0 + 76 >> 2] = HEAP32[$0 + 72 >> 2];
 STACKTOP = sp;
 return;
}

function __ZN2ut4arch17EntityDataManagerD2Ev($0) {
 $0 = $0 | 0;
 var $$01617 = 0, $$01618 = 0, $$019 = 0, $$020 = 0, $18 = 0;
 $$019 = HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0;
 if ($$019 | 0) {
  $$020 = $$019;
  do {
   if ((HEAP32[$$020 + 16 >> 2] | 0) > 0) {
    $$01617 = HEAP32[$$020 + 4 >> 2] | 0;
    if (($$01617 | 0) != ($$020 | 0)) {
     $$01618 = $$01617;
     do {
      __ZN2ut4arch5Chunk11destroyDataEPS1_ii($$01618, 0, HEAP32[$$01618 + 24 >> 2] | 0);
      $$01618 = HEAP32[$$01618 + 4 >> 2] | 0;
     } while (($$01618 | 0) != ($$020 | 0));
    }
   }
   $$020 = HEAP32[$$020 + 108 >> 2] | 0;
  } while (($$020 | 0) != 0);
 }
 _free(HEAP32[$0 + 20 >> 2] | 0);
 $18 = HEAP32[$0 + 32 >> 2] | 0;
 if (!$18) return;
 HEAP32[$0 + 36 >> 2] = $18;
 __ZdlPv($18);
 return;
}

function _ut_nativestring_resize($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $5 = 0;
 $2 = $0 + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 do if ($3 >>> 0 > $1 >>> 0) {
  $5 = HEAP32[$0 >> 2] | 0;
  if (!$5) ___assert_fail(5340, 5345, 202, 5377); else {
   HEAP8[$5 + $1 >> 0] = 0;
   $$pre$phiZ2D = $0;
   break;
  }
 } else {
  if (!$1) {
   $$pre$phiZ2D = $0;
   break;
  }
  $10 = _malloc($1 + 1 | 0) | 0;
  $11 = HEAP32[$0 >> 2] | 0;
  _memcpy($10 | 0, $11 | 0, $3 | 0) | 0;
  if ($3 >>> 0 < $1 >>> 0) _memset($10 + $3 | 0, 0, $1 - $3 | 0) | 0;
  HEAP8[$10 + $1 >> 0] = 0;
  _free($11);
  HEAP32[$2 >> 2] = 0;
  HEAP32[$0 >> 2] = $10;
  $$pre$phiZ2D = $0;
 } while (0);
 HEAP32[$2 >> 2] = $1;
 return HEAP32[$$pre$phiZ2D >> 2] | 0;
}

function __ZNSt3__213__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0, $3 = 0, $6 = 0, $8 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  $3 = $0 + 4 | 0;
  $$0$i$i = HEAP32[$3 >> 2] | 0;
  while (1) {
   if (($$0$i$i | 0) == ($1 | 0)) break;
   $6 = $$0$i$i + -16 | 0;
   __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($6);
   $$0$i$i = $6;
  }
  HEAP32[$3 >> 2] = $1;
  $8 = HEAP32[$0 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lj4096EEEEELj4096EE10deallocateEPS6_j($0 + 12 | 0, $8, (HEAP32[$0 + 8 >> 2] | 0) - $8 >> 4);
 }
 return;
}

function _ut_System_Create_For_UpdateFn($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0, $3 = 0, $5 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp + 8 | 0;
 $2 = sp;
 HEAP32[$1 >> 2] = $0;
 __ZNSt3__210shared_ptrI14UpdateFnSystemE11make_sharedIJRPKcEEES2_DpOT_($2, $1);
 $3 = __ZN2ut8PtrTable7persistI14UpdateFnSystemEEPT_RKNSt3__210shared_ptrIS3_EE($2) | 0;
 $5 = HEAP32[$2 + 4 >> 2] | 0;
 if (!$5) {
  STACKTOP = sp;
  return $3 | 0;
 }
 $7 = $5 + 4 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 HEAP32[$7 >> 2] = $8 + -1;
 if ($8 | 0) {
  STACKTOP = sp;
  return $3 | 0;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$5 >> 2] | 0) + 8 >> 2] & 63]($5);
 __ZNSt3__219__shared_weak_count14__release_weakEv($5);
 STACKTOP = sp;
 return $3 | 0;
}

function __ZN2ut4arch16ArchetypeManager17allocateIntoChunkEPNS0_5ChunkE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$speculated$i = 0, $11 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $5 = HEAP32[$1 + 24 >> 2] | 0;
 $6 = (HEAP32[$1 + 28 >> 2] | 0) - $5 | 0;
 $$sroa$speculated$i = ($6 | 0) < 1 ? $6 : 1;
 __ZN2ut4arch16ArchetypeManager13setChunkCountEPNS0_5ChunkEi($0, $1, $$sroa$speculated$i + $5 | 0);
 $11 = (HEAP32[$1 + 16 >> 2] | 0) + 16 | 0;
 HEAP32[$11 >> 2] = (HEAP32[$11 >> 2] | 0) + $$sroa$speculated$i;
 if (($6 | 0) > 0) {
  STACKTOP = sp;
  return $5 | 0;
 } else {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 9879, 9243, 195);
 }
 return 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $10 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 if ($2 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ($2 >>> 0 < 11) {
  HEAP8[$0 + 11 >> 0] = $2;
  $$0 = $0;
 } else {
  $9 = $2 + 16 & -16;
  $10 = __Znwj($9) | 0;
  HEAP32[$0 >> 2] = $10;
  HEAP32[$0 + 8 >> 2] = $9 | -2147483648;
  HEAP32[$0 + 4 >> 2] = $2;
  $$0 = $10;
 }
 __ZNSt3__211char_traitsIcE4copyEPcPKcj($$0, $1, $2) | 0;
 HEAP8[$3 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($$0 + $2 | 0, $3);
 STACKTOP = sp;
 return;
}

function __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = $0 + 8 | 0;
 while (1) {
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) == ($2 | 0)) break;
  $6 = $4 + -16 | 0;
  HEAP32[$3 >> 2] = $6;
  __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($6);
 }
 $7 = HEAP32[$0 >> 2] | 0;
 if ($7 | 0) __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lj4096EEEEELj4096EE10deallocateEPS6_j(HEAP32[$0 + 16 >> 2] | 0, $7, (HEAP32[$0 + 12 >> 2] | 0) - $7 >> 4);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $$0$i$i3 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$1 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $4 = $0 + 12 | 0;
 $5 = $1 + 12 | 0;
 HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
 $$0$i$i3 = 0;
 while (1) {
  if (($$0$i$i3 | 0) == 3) break;
  HEAP32[$5 + ($$0$i$i3 << 2) >> 2] = 0;
  $$0$i$i3 = $$0$i$i3 + 1 | 0;
 }
 return;
}

function _ut_Scheduler_Stringify($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre = 0, $$pre$phi4Z2D = 0, $$pre$phiZ2D = 0, $2 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 __ZN2ut9Scheduler9stringifyEc($2, $1, 58);
 $$pre = HEAP32[$0 >> 2] | 0;
 if (($2 | 0) == ($0 | 0)) {
  $$pre$phi4Z2D = $2 + 4 | 0;
  $$pre$phiZ2D = $2;
  $8 = $$pre;
 } else {
  _free($$pre);
  HEAP32[$0 >> 2] = HEAP32[$2 >> 2];
  $6 = $2 + 4 | 0;
  HEAP32[$0 + 4 >> 2] = HEAP32[$6 >> 2];
  HEAP32[$2 >> 2] = 0;
  HEAP32[$6 >> 2] = 0;
  $$pre$phi4Z2D = $6;
  $$pre$phiZ2D = $2;
  $8 = 0;
 }
 _free($8);
 HEAP32[$$pre$phiZ2D >> 2] = 0;
 HEAP32[$$pre$phi4Z2D >> 2] = 0;
 STACKTOP = sp;
 return;
}

function _ut_World_toJSON($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre = 0, $$pre$phi4Z2D = 0, $$pre$phiZ2D = 0, $2 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 __ZN2ut12ManagerWorld6toJSONEv($2, $1);
 $$pre = HEAP32[$0 >> 2] | 0;
 if (($2 | 0) == ($0 | 0)) {
  $$pre$phi4Z2D = $2 + 4 | 0;
  $$pre$phiZ2D = $2;
  $8 = $$pre;
 } else {
  _free($$pre);
  HEAP32[$0 >> 2] = HEAP32[$2 >> 2];
  $6 = $2 + 4 | 0;
  HEAP32[$0 + 4 >> 2] = HEAP32[$6 >> 2];
  HEAP32[$2 >> 2] = 0;
  HEAP32[$6 >> 2] = 0;
  $$pre$phi4Z2D = $6;
  $$pre$phiZ2D = $2;
  $8 = 0;
 }
 _free($8);
 HEAP32[$$pre$phiZ2D >> 2] = 0;
 HEAP32[$$pre$phi4Z2D >> 2] = 0;
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $$0$i$i1 = 0, $4 = 0;
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 $$0$i$i1 = 0;
 while (1) {
  if (($$0$i$i1 | 0) == 3) break;
  HEAP32[$1 + ($$0$i$i1 << 2) >> 2] = 0;
  $$0$i$i1 = $$0$i$i1 + 1 | 0;
 }
 $4 = $0 + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$4 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEjjPKcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $11 = 0, $12 = 0, $13 = 0, $14 = 0, $4 = 0, $5 = 0;
 $4 = HEAP8[$0 + 11 >> 0] | 0;
 $5 = $4 << 24 >> 24 < 0;
 if ($5) $12 = HEAP32[$0 + 4 >> 2] | 0; else $12 = $4 & 255;
 if (($2 | 0) == -1) __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv($0);
 if ($5) $13 = HEAP32[$0 >> 2] | 0; else $13 = $0;
 $11 = $12 >>> 0 > $2 >>> 0;
 $14 = __ZNSt3__211char_traitsIcE7compareEPKcS3_j($13, $1, $11 ? $2 : $12) | 0;
 if (!$14) return ($12 >>> 0 < $2 >>> 0 ? -1 : $11 & 1) | 0; else return $14 | 0;
 return 0;
}

function _ut_EntityCommandBuffer_SetSharedComponentDataRaw($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $11 = 0, $12 = 0, $5 = 0, $6 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast$byval_copy = sp + 8 | 0;
 $5 = sp;
 $6 = $1;
 $11 = HEAP32[$6 + 4 >> 2] | 0;
 $12 = $5;
 HEAP32[$12 >> 2] = HEAP32[$6 >> 2];
 HEAP32[$12 + 4 >> 2] = $11;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$5 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 __ZN2ut4arch19EntityCommandBuffer25setSharedComponentDataRawENS_6EntityEjPKvi($0, $tmpcast$byval_copy, $2, $3, $4);
 STACKTOP = sp;
 return;
}

function _ut_EntityCommandBuffer_AddSharedComponentDataRaw($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $11 = 0, $12 = 0, $5 = 0, $6 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast$byval_copy = sp + 8 | 0;
 $5 = sp;
 $6 = $1;
 $11 = HEAP32[$6 + 4 >> 2] | 0;
 $12 = $5;
 HEAP32[$12 >> 2] = HEAP32[$6 >> 2];
 HEAP32[$12 + 4 >> 2] = $11;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$5 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 __ZN2ut4arch19EntityCommandBuffer25addSharedComponentDataRawENS_6EntityEjPKvi($0, $tmpcast$byval_copy, $2, $3, $4);
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i$i = 0, $2 = 0, $4 = 0, $5 = 0;
 $2 = $1 + 12 | 0;
 $4 = HEAP8[$2 + 11 >> 0] | 0;
 $5 = $4 << 24 >> 24 < 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($1, $5 ? HEAP32[$2 >> 2] | 0 : $2, $5 ? HEAP32[$1 + 16 >> 2] | 0 : $4 & 255) | 0;
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 $$0$i$i$i = 0;
 while (1) {
  if (($$0$i$i$i | 0) == 3) break;
  HEAP32[$1 + ($$0$i$i$i << 2) >> 2] = 0;
  $$0$i$i$i = $$0$i$i$i + 1 | 0;
 }
 return;
}

function _ut_EntityCommandBuffer_SetComponentDataRaw($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $11 = 0, $12 = 0, $5 = 0, $6 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast$byval_copy = sp + 8 | 0;
 $5 = sp;
 $6 = $1;
 $11 = HEAP32[$6 + 4 >> 2] | 0;
 $12 = $5;
 HEAP32[$12 >> 2] = HEAP32[$6 >> 2];
 HEAP32[$12 + 4 >> 2] = $11;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$5 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 __ZN2ut4arch19EntityCommandBuffer19setComponentDataRawENS_6EntityEjPKvi($0, $tmpcast$byval_copy, $2, $3, $4) | 0;
 STACKTOP = sp;
 return;
}

function _ut_EntityCommandBuffer_AddComponentDataRaw($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $11 = 0, $12 = 0, $5 = 0, $6 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast$byval_copy = sp + 8 | 0;
 $5 = sp;
 $6 = $1;
 $11 = HEAP32[$6 + 4 >> 2] | 0;
 $12 = $5;
 HEAP32[$12 >> 2] = HEAP32[$6 >> 2];
 HEAP32[$12 + 4 >> 2] = $11;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$5 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 __ZN2ut4arch19EntityCommandBuffer19addComponentDataRawENS_6EntityEjPKvi($0, $tmpcast$byval_copy, $2, $3, $4) | 0;
 STACKTOP = sp;
 return;
}

function _realloc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1 = 0, $11 = 0, $14 = 0, $17 = 0, $22 = 0;
 if (!$0) {
  $$1 = _malloc($1) | 0;
  return $$1 | 0;
 }
 if ($1 >>> 0 > 4294967231) {
  HEAP32[(___errno_location() | 0) >> 2] = 12;
  $$1 = 0;
  return $$1 | 0;
 }
 $11 = _try_realloc_chunk($0 + -8 | 0, $1 >>> 0 < 11 ? 16 : $1 + 11 & -8) | 0;
 if ($11 | 0) {
  $$1 = $11 + 8 | 0;
  return $$1 | 0;
 }
 $14 = _malloc($1) | 0;
 if (!$14) {
  $$1 = 0;
  return $$1 | 0;
 }
 $17 = HEAP32[$0 + -4 >> 2] | 0;
 $22 = ($17 & -8) - (($17 & 3 | 0) == 0 ? 8 : 4) | 0;
 _memcpy($14 | 0, $0 | 0, ($22 >>> 0 < $1 >>> 0 ? $22 : $1) | 0) | 0;
 _free($0);
 $$1 = $14;
 return $$1 | 0;
}

function __ZN2ut4arch26SharedComponentDataManager4findEjPKvj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $5 = HEAP32[6067] | 0;
 if ((HEAP32[6068] | 0) - $5 >> 2 >>> 0 <= $1 >>> 0) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 14079, 14112, 23);
 }
 if (!(_memcmp(HEAP32[(HEAP32[$5 + ($1 << 2) >> 2] | 0) + 24 >> 2] | 0, $2, $3) | 0)) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $$0 = __ZN2ut4arch26SharedComponentDataManager13findNoDefaultEjPKvj($0, $1, $2, $3) | 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN2ut4arch9Archetype13releaseMemoryEv($0) {
 $0 = $0 | 0;
 var $$015$lcssa = 0, $$01516 = 0, $$in17 = 0, $1 = 0, $2 = 0, $6 = 0, $8 = 0, $$in17$looptemp = 0;
 $1 = $0 + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if (($2 | 0) == ($0 | 0)) $$015$lcssa = 0; else {
  $$01516 = 0;
  $$in17 = $2;
  while (1) {
   $$in17$looptemp = $$in17;
   $$in17 = HEAP32[$$in17 + 4 >> 2] | 0;
   $6 = $$01516 + 16435 | 0;
   _free($$in17$looptemp);
   if (($$in17 | 0) == ($0 | 0)) {
    $$015$lcssa = $6;
    break;
   } else $$01516 = $6;
  }
 }
 HEAP32[$0 >> 2] = $0;
 HEAP32[$1 >> 2] = $0;
 $8 = $0 + 8 | 0;
 HEAP32[$8 >> 2] = $8;
 HEAP32[$0 + 12 >> 2] = $8;
 return $$015$lcssa | 0;
}

function _ut_EntityCommandBuffer_InstantiateDeferredEntities($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast$byval_copy = sp + 8 | 0;
 $4 = sp;
 $5 = $1;
 $10 = HEAP32[$5 + 4 >> 2] | 0;
 $11 = $4;
 HEAP32[$11 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$11 + 4 >> 2] = $10;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$4 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 __ZN2ut4arch19EntityCommandBuffer27instantiateDeferredEntitiesENS_6EntityEPS2_j($0, $tmpcast$byval_copy, $2, $3);
 STACKTOP = sp;
 return;
}

function __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEERNS5_IS9_Lj4096EEEEC2EjjSB_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $8 = 0, $9 = 0;
 $4 = $0 + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = $3;
 if (!$1) $8 = 0; else $8 = __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lj4096EEEEENS1_IS6_Lj4096EEEEELj4096EE8allocateEj($3, $1) | 0;
 HEAP32[$0 >> 2] = $8;
 $9 = $8 + ($2 << 4) | 0;
 HEAP32[$0 + 8 >> 2] = $9;
 HEAP32[$0 + 4 >> 2] = $9;
 HEAP32[$4 >> 2] = $8 + ($1 << 4);
 return;
}

function _ut_World_SetSharedComponentDataRaw($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $11 = 0, $12 = 0, $5 = 0, $6 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast$byval_copy = sp + 8 | 0;
 $5 = sp;
 $6 = $1;
 $11 = HEAP32[$6 + 4 >> 2] | 0;
 $12 = $5;
 HEAP32[$12 >> 2] = HEAP32[$6 >> 2];
 HEAP32[$12 + 4 >> 2] = $11;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$5 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 __ZN2ut4arch13EntityManager25setSharedComponentDataRawENS_6EntityEjPKvj($0, $tmpcast$byval_copy, $2, $3, $4);
 STACKTOP = sp;
 return;
}

function _ut_World_GetSharedComponentDataRaw($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $11 = 0, $12 = 0, $5 = 0, $6 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast$byval_copy = sp + 8 | 0;
 $5 = sp;
 $6 = $1;
 $11 = HEAP32[$6 + 4 >> 2] | 0;
 $12 = $5;
 HEAP32[$12 >> 2] = HEAP32[$6 >> 2];
 HEAP32[$12 + 4 >> 2] = $11;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$5 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 __ZN2ut4arch13EntityManager25getSharedComponentDataRawENS_6EntityEjPvj($0, $tmpcast$byval_copy, $2, $3, $4);
 STACKTOP = sp;
 return;
}

function __ZN2ut4arch13EntityManager24didCommandBufferPlaybackERNS0_19EntityCommandBufferE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$09$013 = 0, $3 = 0, $5 = 0, $8 = 0, label = 0;
 $3 = HEAP32[$0 + 24 >> 2] | 0;
 $5 = HEAP32[$0 + 28 >> 2] | 0;
 if (($3 | 0) == ($5 | 0)) return;
 $$sroa$09$013 = $3;
 while (1) {
  $8 = HEAP32[$$sroa$09$013 + 24 >> 2] | 0;
  if (!$8) {
   label = 5;
   break;
  }
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[$8 >> 2] | 0) + 24 >> 2] & 31]($8, $0, $1);
  $$sroa$09$013 = $$sroa$09$013 + 32 | 0;
  if (($$sroa$09$013 | 0) == ($5 | 0)) {
   label = 3;
   break;
  }
 }
 if ((label | 0) == 3) return; else if ((label | 0) == 5) _abort();
}

function _ut_EntityCommandBuffer_SetEntityName($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $14 = 0, $3 = 0, $4 = 0, $9 = 0, $tmpcast$i$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast$i$byval_copy = sp + 8 | 0;
 $3 = sp;
 $4 = $1;
 $9 = HEAP32[$4 + 4 >> 2] | 0;
 $10 = $3;
 HEAP32[$10 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$10 + 4 >> 2] = $9;
 $14 = HEAP32[$2 >> 2] | 0;
 HEAP32[$tmpcast$i$byval_copy >> 2] = HEAP32[$3 >> 2];
 HEAP32[$tmpcast$i$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZN2ut4arch19EntityCommandBuffer13setEntityNameENS_6EntityEPKc($0, $tmpcast$i$byval_copy, $14);
 STACKTOP = sp;
 return;
}

function _ut_nativebuffer_pod_resize_zero_initialized($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $13 = 0, $16 = 0, $3 = 0, $6 = 0, $9 = 0;
 $3 = $0 + 8 | 0;
 if ((HEAP32[$3 >> 2] | 0) >>> 0 < $1 >>> 0) {
  $6 = Math_imul($2, $1) | 0;
  HEAP32[$0 >> 2] = _realloc(HEAP32[$0 >> 2] | 0, $6) | 0;
  HEAP32[$3 >> 2] = $1;
 }
 $9 = $0 + 4 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if ($10 >>> 0 >= $1 >>> 0) {
  HEAP32[$9 >> 2] = $1;
  $16 = HEAP32[$0 >> 2] | 0;
  return $16 | 0;
 }
 $13 = Math_imul($1 - $10 | 0, $2) | 0;
 _memset((HEAP32[$0 >> 2] | 0) + $10 | 0, 0, $13 | 0) | 0;
 HEAP32[$9 >> 2] = $1;
 $16 = HEAP32[$0 >> 2] | 0;
 return $16 | 0;
}

function _ut_World_AllocChunkIterator($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $6 = 0;
 __ZN2ut4arch13EntityManager35assertInvalidForIterationComponentsEPKNS0_13ComponentSpecEj($0, $1, $2);
 $3 = __Znwj(36) | 0;
 HEAP32[$3 >> 2] = HEAP32[$0 + 4 >> 2];
 $6 = $3 + 4 | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 HEAP32[$6 + 12 >> 2] = 0;
 HEAP32[$6 + 16 >> 2] = 0;
 HEAP32[$3 + 24 >> 2] = -1;
 HEAP8[$3 + 28 >> 0] = 0;
 HEAP8[$3 + 29 >> 0] = 0;
 HEAP8[$3 + 30 >> 0] = 0;
 HEAP32[$3 + 32 >> 2] = 0;
 __ZN2ut4arch22ArchetypeChunkIterator9addFilterEPKNS0_13ComponentSpecEj($3, $1, $2);
 return $3 | 0;
}

function _ut_World_SetComponentDataRaw($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $11 = 0, $12 = 0, $5 = 0, $6 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast$byval_copy = sp + 8 | 0;
 $5 = sp;
 $6 = $1;
 $11 = HEAP32[$6 + 4 >> 2] | 0;
 $12 = $5;
 HEAP32[$12 >> 2] = HEAP32[$6 >> 2];
 HEAP32[$12 + 4 >> 2] = $11;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$5 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 __ZN2ut4arch13EntityManager19setComponentDataRawENS_6EntityEjPKvj($0, $tmpcast$byval_copy, $2, $3, $4);
 STACKTOP = sp;
 return;
}

function _ut_World_AddComponentDataRaw($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $11 = 0, $12 = 0, $5 = 0, $6 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast$byval_copy = sp + 8 | 0;
 $5 = sp;
 $6 = $1;
 $11 = HEAP32[$6 + 4 >> 2] | 0;
 $12 = $5;
 HEAP32[$12 >> 2] = HEAP32[$6 >> 2];
 HEAP32[$12 + 4 >> 2] = $11;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$5 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 __ZN2ut4arch13EntityManager19addComponentDataRawENS_6EntityEjPKvj($0, $tmpcast$byval_copy, $2, $3, $4);
 STACKTOP = sp;
 return;
}

function _ut_World_GetComponentDataRaw($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $11 = 0, $12 = 0, $5 = 0, $6 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast$byval_copy = sp + 8 | 0;
 $5 = sp;
 $6 = $1;
 $11 = HEAP32[$6 + 4 >> 2] | 0;
 $12 = $5;
 HEAP32[$12 >> 2] = HEAP32[$6 >> 2];
 HEAP32[$12 + 4 >> 2] = $11;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$5 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 __ZN2ut4arch13EntityManager19getComponentDataRawENS_6EntityEjPvj($0, $tmpcast$byval_copy, $2, $3, $4);
 STACKTOP = sp;
 return;
}

function __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0, $3 = 0, $6 = 0, $8 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  $3 = $0 + 4 | 0;
  $$0$i$i = HEAP32[$3 >> 2] | 0;
  while (1) {
   if (($$0$i$i | 0) == ($1 | 0)) break;
   $6 = $$0$i$i + -24 | 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($6);
   $$0$i$i = $6;
  }
  HEAP32[$3 >> 2] = $1;
  $8 = HEAP32[$0 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELj4096EE10deallocateEPS2_j($0 + 12 | 0, $8, ((HEAP32[$0 + 8 >> 2] | 0) - $8 | 0) / 24 | 0);
 }
 return;
}

function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $10 = 0, $13 = 0, $4 = 0, $5 = 0;
 $4 = $1 + 16 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 do if (!$5) {
  HEAP32[$4 >> 2] = $2;
  HEAP32[$1 + 24 >> 2] = $3;
  HEAP32[$1 + 36 >> 2] = 1;
 } else {
  if (($5 | 0) != ($2 | 0)) {
   $13 = $1 + 36 | 0;
   HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 1;
   HEAP32[$1 + 24 >> 2] = 2;
   HEAP8[$1 + 54 >> 0] = 1;
   break;
  }
  $10 = $1 + 24 | 0;
  if ((HEAP32[$10 >> 2] | 0) == 2) HEAP32[$10 >> 2] = $3;
 } while (0);
 return;
}

function _pad_670($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$lcssa = 0, $$011 = 0, $14 = 0, $5 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 $5 = sp;
 if (($2 | 0) > ($3 | 0) & ($4 & 73728 | 0) == 0) {
  $9 = $2 - $3 | 0;
  _memset($5 | 0, $1 << 24 >> 24 | 0, ($9 >>> 0 < 256 ? $9 : 256) | 0) | 0;
  if ($9 >>> 0 > 255) {
   $14 = $2 - $3 | 0;
   $$011 = $9;
   do {
    _out($0, $5, 256);
    $$011 = $$011 + -256 | 0;
   } while ($$011 >>> 0 > 255);
   $$0$lcssa = $14 & 255;
  } else $$0$lcssa = $9;
  _out($0, $5, $$0$lcssa);
 }
 STACKTOP = sp;
 return;
}

function _ut_meta_get_type_ut_localeresult() {
 var $$byval_copy = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 1 | 0;
 if (HEAP8[24160] | 0) {
  STACKTOP = sp;
  return 24300;
 }
 HEAP32[6075] = 4;
 HEAP32[6076] = 5480;
 HEAP32[6077] = 12;
 HEAP32[6080] = 5496;
 HEAP32[6081] = 0;
 HEAP8[$$byval_copy >> 0] = HEAP8[sp >> 0] | 0;
 HEAP32[6082] = __ZN2ut4meta11reflectTypeINS_12NativeStringEEEPKNS0_8TypeDescENS0_3TagINS_12NativeBufferIT_EEEE($$byval_copy) | 0;
 HEAP32[6078] = 24320;
 HEAP32[6079] = 1;
 $4 = 24160;
 HEAP32[$4 >> 2] = 1;
 HEAP32[$4 + 4 >> 2] = 0;
 STACKTOP = sp;
 return 24300;
}

function _ut_World_InstantiateEntities($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast$byval_copy = sp + 8 | 0;
 $4 = sp;
 $5 = $1;
 $10 = HEAP32[$5 + 4 >> 2] | 0;
 $11 = $4;
 HEAP32[$11 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$11 + 4 >> 2] = $10;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$4 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 __ZN2ut4arch13EntityManager19instantiateEntitiesENS_6EntityEPS2_i($0, $tmpcast$byval_copy, $2, $3);
 STACKTOP = sp;
 return;
}

function __ZN2ut9Scheduler4findEPNS_6SystemE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sroa$014$0 = 0, $$sroa$014$019 = 0, $$sroa$014$021 = 0, $13 = 0, label = 0;
 $$sroa$014$019 = HEAP32[$0 + 48 >> 2] | 0;
 if (!$$sroa$014$019) {
  $13 = 0;
  return $13 | 0;
 }
 $$sroa$014$021 = $$sroa$014$019;
 while (1) {
  if ((HEAP32[$$sroa$014$021 + 28 >> 2] | 0) == ($1 | 0)) break;
  $$sroa$014$0 = HEAP32[$$sroa$014$021 >> 2] | 0;
  if (!$$sroa$014$0) {
   $13 = 0;
   label = 6;
   break;
  } else $$sroa$014$021 = $$sroa$014$0;
 }
 if ((label | 0) == 6) return $13 | 0;
 $13 = HEAP32[$$sroa$014$021 + 12 >> 2] | 0;
 return $13 | 0;
}

function _ut_EntityCommandBuffer_InstantiateEntities($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $3 = 0, $4 = 0, $9 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast$byval_copy = sp + 8 | 0;
 $3 = sp;
 $4 = $1;
 $9 = HEAP32[$4 + 4 >> 2] | 0;
 $10 = $3;
 HEAP32[$10 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$10 + 4 >> 2] = $9;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$3 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZN2ut4arch19EntityCommandBuffer19instantiateEntitiesENS_6EntityEj($0, $tmpcast$byval_copy, $2);
 STACKTOP = sp;
 return;
}

function _ut_World_HasComponentRaw($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $14 = 0, $3 = 0, $4 = 0, $9 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast$byval_copy = sp + 8 | 0;
 $3 = sp;
 $4 = $1;
 $9 = HEAP32[$4 + 4 >> 2] | 0;
 $10 = $3;
 HEAP32[$10 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$10 + 4 >> 2] = $9;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$3 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 $14 = __ZN2ut4arch13EntityManager15hasComponentRawENS_6EntityEj($0, $tmpcast$byval_copy, $2) | 0;
 STACKTOP = sp;
 return $14 | 0;
}

function _ut_EntityCommandBuffer_RemoveComponentRaw($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $3 = 0, $4 = 0, $9 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast$byval_copy = sp + 8 | 0;
 $3 = sp;
 $4 = $1;
 $9 = HEAP32[$4 + 4 >> 2] | 0;
 $10 = $3;
 HEAP32[$10 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$10 + 4 >> 2] = $9;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$3 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZN2ut4arch19EntityCommandBuffer18removeComponentRawENS_6EntityEj($0, $tmpcast$byval_copy, $2);
 STACKTOP = sp;
 return;
}

function __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEERNS5_IS7_Lj4096EEEEC2EjjS9_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $8 = 0, $9 = 0;
 $4 = $0 + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = $3;
 if (!$1) $8 = 0; else $8 = __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lj4096EEEEELj4096EE8allocateEj($3, $1) | 0;
 HEAP32[$0 >> 2] = $8;
 $9 = $8 + ($2 << 4) | 0;
 HEAP32[$0 + 8 >> 2] = $9;
 HEAP32[$0 + 4 >> 2] = $9;
 HEAP32[$4 >> 2] = $8 + ($1 << 4);
 return;
}

function __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = $0 + 8 | 0;
 while (1) {
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) == ($2 | 0)) break;
  $6 = $4 + -24 | 0;
  HEAP32[$3 >> 2] = $6;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($6);
 }
 $7 = HEAP32[$0 >> 2] | 0;
 if ($7 | 0) __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELj4096EE10deallocateEPS2_j(HEAP32[$0 + 16 >> 2] | 0, $7, ((HEAP32[$0 + 12 >> 2] | 0) - $7 | 0) / 24 | 0);
 return;
}

function _ut_EntityCommandBuffer_AddComponentRaw($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $3 = 0, $4 = 0, $9 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast$byval_copy = sp + 8 | 0;
 $3 = sp;
 $4 = $1;
 $9 = HEAP32[$4 + 4 >> 2] | 0;
 $10 = $3;
 HEAP32[$10 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$10 + 4 >> 2] = $9;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$3 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZN2ut4arch19EntityCommandBuffer15addComponentRawENS_6EntityEj($0, $tmpcast$byval_copy, $2);
 STACKTOP = sp;
 return;
}

function _strcmp($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$011 = 0, $$0710 = 0, $$lcssa = 0, $$lcssa8 = 0, $2 = 0, $3 = 0, $8 = 0, $9 = 0;
 $2 = HEAP8[$0 >> 0] | 0;
 $3 = HEAP8[$1 >> 0] | 0;
 if ($2 << 24 >> 24 == 0 ? 1 : $2 << 24 >> 24 != $3 << 24 >> 24) {
  $$lcssa = $3;
  $$lcssa8 = $2;
 } else {
  $$011 = $1;
  $$0710 = $0;
  do {
   $$0710 = $$0710 + 1 | 0;
   $$011 = $$011 + 1 | 0;
   $8 = HEAP8[$$0710 >> 0] | 0;
   $9 = HEAP8[$$011 >> 0] | 0;
  } while (!($8 << 24 >> 24 == 0 ? 1 : $8 << 24 >> 24 != $9 << 24 >> 24));
  $$lcssa = $9;
  $$lcssa8 = $8;
 }
 return ($$lcssa8 & 255) - ($$lcssa & 255) | 0;
}

function __ZN2ut12SimpleSystem6updateERNS_9SchedulerERNS_12ManagerWorldE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $12 = 0, $3 = 0, $4 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp + 4 | 0;
 $4 = sp;
 $6 = HEAP32[$0 + 56 >> 2] | 0;
 if ($6 | 0) {
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[$6 >> 2] | 0) + 24 >> 2] & 31]($6, $1, $2);
  STACKTOP = sp;
  return;
 }
 HEAP32[$3 >> 2] = $1;
 HEAP32[$4 >> 2] = $2;
 $12 = HEAP32[$0 + 80 >> 2] | 0;
 if (!$12) _abort();
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[$12 >> 2] | 0) + 24 >> 2] & 31]($12, $3, $4);
 STACKTOP = sp;
 return;
}

function _ut_World_SetEntityName($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $3 = 0, $4 = 0, $9 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast$byval_copy = sp + 8 | 0;
 $3 = sp;
 $4 = $1;
 $9 = HEAP32[$4 + 4 >> 2] | 0;
 $10 = $3;
 HEAP32[$10 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$10 + 4 >> 2] = $9;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$3 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZN2ut4arch13EntityManager13setEntityNameENS_6EntityERKNS_12NativeStringE($0, $tmpcast$byval_copy, $2);
 STACKTOP = sp;
 return;
}

function _ut_World_AddSharedComponentRaw($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $3 = 0, $4 = 0, $9 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast$byval_copy = sp + 8 | 0;
 $3 = sp;
 $4 = $1;
 $9 = HEAP32[$4 + 4 >> 2] | 0;
 $10 = $3;
 HEAP32[$10 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$10 + 4 >> 2] = $9;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$3 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZN2ut4arch13EntityManager21addSharedComponentRawENS_6EntityEj($0, $tmpcast$byval_copy, $2);
 STACKTOP = sp;
 return;
}

function _ut_Component_Register_Component($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $6 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 if (($1 | 0) > ($0 | 0)) {
  HEAP32[$vararg_buffer >> 2] = $3;
  HEAP32[$vararg_buffer + 4 >> 2] = $1;
  HEAP32[$vararg_buffer + 8 >> 2] = $0;
  _printf(5384, $vararg_buffer) | 0;
  $$0 = $1;
 } else $$0 = $0;
 $6 = HEAP32[(__Z30registerOpaqueComponentPrivateiijPKcPiiPFvPviEiPFvPKvS2_iEi($$0, $1, $2, $3, 0, 0, 0, 0, 0, 0) | 0) >> 2] | 0;
 STACKTOP = sp;
 return $6 | 0;
}

function ___stdio_seek($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $3 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $3 = sp + 20 | 0;
 HEAP32[$vararg_buffer >> 2] = HEAP32[$0 + 60 >> 2];
 HEAP32[$vararg_buffer + 4 >> 2] = 0;
 HEAP32[$vararg_buffer + 8 >> 2] = $1;
 HEAP32[$vararg_buffer + 12 >> 2] = $3;
 HEAP32[$vararg_buffer + 16 >> 2] = $2;
 if ((___syscall_ret(___syscall140(140, $vararg_buffer | 0) | 0) | 0) < 0) {
  HEAP32[$3 >> 2] = -1;
  $10 = -1;
 } else $10 = HEAP32[$3 >> 2] | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function _ut_World_RemoveComponentRaw($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $3 = 0, $4 = 0, $9 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast$byval_copy = sp + 8 | 0;
 $3 = sp;
 $4 = $1;
 $9 = HEAP32[$4 + 4 >> 2] | 0;
 $10 = $3;
 HEAP32[$10 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$10 + 4 >> 2] = $9;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$3 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZN2ut4arch13EntityManager18removeComponentRawENS_6EntityEj($0, $tmpcast$byval_copy, $2);
 STACKTOP = sp;
 return;
}

function _posix_memalign($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$1 = 0, $$2 = 0, $5 = 0;
 do if (($1 | 0) == 8) $$2 = _malloc($2) | 0; else {
  $5 = $1 >>> 2;
  if (($1 & 3 | 0) != 0 | ($5 | 0) == 0) {
   $$1 = 22;
   return $$1 | 0;
  }
  if ($5 + 1073741823 & $5 | 0) {
   $$1 = 22;
   return $$1 | 0;
  }
  if ((-64 - $1 | 0) >>> 0 < $2 >>> 0) {
   $$1 = 12;
   return $$1 | 0;
  } else {
   $$2 = _internal_memalign($1 >>> 0 > 16 ? $1 : 16, $2) | 0;
   break;
  }
 } while (0);
 if (!$$2) {
  $$1 = 12;
  return $$1 | 0;
 }
 HEAP32[$0 >> 2] = $$2;
 $$1 = 0;
 return $$1 | 0;
}

function _ut_CleanupEntity_cid() {
 var $$0$i$i = 0, $12 = 0, $2 = 0, $5 = 0, $7 = 0, $8 = 0;
 if (HEAP8[24232] | 0) {
  $12 = HEAP32[6117] | 0;
  return $12 | 0;
 }
 $2 = __ZN2ut17ComponentRegistry10findByNameEPKc(19064) | 0;
 if (!$2) {
  $5 = __ZN2ut17InitComponentInfoEPKciiiijPvPFvS2_iES4_PFvPKvS2_iEPFvS2_S2_ES4_iiPKii(19064, 1, 1, 1, 0, 0, __Znwj(1) | 0, 0, 0, 0, 0, 6, 0, 0, 0, 0) | 0;
  HEAP32[$5 + 68 >> 2] = 0;
  $$0$i$i = $5;
 } else $$0$i$i = $2;
 $7 = HEAP32[$$0$i$i >> 2] | 0;
 HEAP32[6117] = $7;
 $8 = 24232;
 HEAP32[$8 >> 2] = 1;
 HEAP32[$8 + 4 >> 2] = 0;
 $12 = $7;
 return $12 | 0;
}

function _ut_World_AddComponentRaw($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $3 = 0, $4 = 0, $9 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast$byval_copy = sp + 8 | 0;
 $3 = sp;
 $4 = $1;
 $9 = HEAP32[$4 + 4 >> 2] | 0;
 $10 = $3;
 HEAP32[$10 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$10 + 4 >> 2] = $9;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$3 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZN2ut4arch13EntityManager15addComponentRawENS_6EntityEj($0, $tmpcast$byval_copy, $2);
 STACKTOP = sp;
 return;
}

function _sbrk(increment) {
 increment = increment | 0;
 var oldDynamicTop = 0, newDynamicTop = 0;
 oldDynamicTop = HEAP32[DYNAMICTOP_PTR >> 2] | 0;
 newDynamicTop = oldDynamicTop + increment | 0;
 if ((increment | 0) > 0 & (newDynamicTop | 0) < (oldDynamicTop | 0) | (newDynamicTop | 0) < 0) {
  abortOnCannotGrowMemory() | 0;
  ___setErrNo(12);
  return -1;
 }
 HEAP32[DYNAMICTOP_PTR >> 2] = newDynamicTop;
 if ((newDynamicTop | 0) > (getTotalMemory() | 0)) if (!(enlargeMemory() | 0)) {
  HEAP32[DYNAMICTOP_PTR >> 2] = oldDynamicTop;
  ___setErrNo(12);
  return -1;
 }
 return oldDynamicTop | 0;
}

function _ut_ArchetypeChunkIterator_RawDataByIndex($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (($1 | 0) == -1) {
  $$0$i = 0;
  STACKTOP = sp;
  return $$0$i | 0;
 }
 $6 = HEAP32[(HEAP32[$0 + 16 >> 2] | 0) + 32 >> 2] | 0;
 if (HEAP32[$6 + ($1 << 4) + 4 >> 2] & 2 | 0) {
  _snprintf(25060, 1024, 27124, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 19190, 19240, 108);
 }
 $$0$i = (HEAP32[$6 + ($1 << 4) + 8 >> 2] | 0) + ((HEAP32[$0 + 20 >> 2] | 0) + 48) | 0;
 STACKTOP = sp;
 return $$0$i | 0;
}

function _ut_Disabled_cid() {
 var $$0$i$i = 0, $12 = 0, $2 = 0, $5 = 0, $7 = 0, $8 = 0;
 if (HEAP8[24248] | 0) {
  $12 = HEAP32[6119] | 0;
  return $12 | 0;
 }
 $2 = __ZN2ut17ComponentRegistry10findByNameEPKc(18927) | 0;
 if (!$2) {
  $5 = __ZN2ut17InitComponentInfoEPKciiiijPvPFvS2_iES4_PFvPKvS2_iEPFvS2_S2_ES4_iiPKii(18927, 1, 1, 1, 0, 0, __Znwj(1) | 0, 0, 0, 0, 0, 7, 0, 0, 0, 0) | 0;
  HEAP32[$5 + 68 >> 2] = 0;
  $$0$i$i = $5;
 } else $$0$i$i = $2;
 $7 = HEAP32[$$0$i$i >> 2] | 0;
 HEAP32[6119] = $7;
 $8 = 24248;
 HEAP32[$8 >> 2] = 1;
 HEAP32[$8 + 4 >> 2] = 0;
 $12 = $7;
 return $12 | 0;
}

function _ut_World_GetArchetype($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $2 = 0, $3 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast$byval_copy = sp + 8 | 0;
 $2 = sp;
 $3 = $1;
 $8 = HEAP32[$3 + 4 >> 2] | 0;
 $9 = $2;
 HEAP32[$9 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$9 + 4 >> 2] = $8;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$2 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 $13 = __ZN2ut4arch13EntityManager12getArchetypeENS_6EntityE($0, $tmpcast$byval_copy) | 0;
 STACKTOP = sp;
 return $13 | 0;
}

function __ZN2ut17ComponentRegistry10findByNameEPKc($0) {
 $0 = $0 | 0;
 var $$sroa$011$016 = 0, $1 = 0, $10 = 0, $2 = 0, $6 = 0, label = 0;
 $1 = HEAP32[6067] | 0;
 $2 = HEAP32[6068] | 0;
 if (($1 | 0) == ($2 | 0)) {
  $10 = 0;
  return $10 | 0;
 }
 $$sroa$011$016 = $1;
 while (1) {
  $6 = HEAP32[$$sroa$011$016 >> 2] | 0;
  $$sroa$011$016 = $$sroa$011$016 + 4 | 0;
  if ((HEAP32[$6 + 52 >> 2] | 0) == ($0 | 0)) {
   $10 = $6;
   label = 5;
   break;
  }
  if (($$sroa$011$016 | 0) == ($2 | 0)) {
   $10 = 0;
   label = 5;
   break;
  }
 }
 if ((label | 0) == 5) return $10 | 0;
 return 0;
}

function __ZN2ut4arch16ArchetypeManager17allocateIntoChunkEPNS0_5ChunkEiPi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$sroa$speculated = 0, $13 = 0, $7 = 0, $8 = 0;
 $7 = HEAP32[$1 + 24 >> 2] | 0;
 $8 = (HEAP32[$1 + 28 >> 2] | 0) - $7 | 0;
 $$sroa$speculated = ($8 | 0) > ($2 | 0) ? $2 : $8;
 __ZN2ut4arch16ArchetypeManager13setChunkCountEPNS0_5ChunkEi($0, $1, $$sroa$speculated + $7 | 0);
 $13 = (HEAP32[$1 + 16 >> 2] | 0) + 16 | 0;
 HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + $$sroa$speculated;
 HEAP32[$3 >> 2] = $$sroa$speculated;
 return $7 | 0;
}

function _ut_nativebuffer_nativestring_placement_delete($0) {
 $0 = $0 | 0;
 var $$05$i$i$i = 0, $1 = 0, $2 = 0, $3 = 0, $5 = 0, $9 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $0 + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (!$3) {
  $9 = $1;
  HEAP32[$2 >> 2] = 0;
  _free($9);
  return;
 }
 $$05$i$i$i = 0;
 do {
  $5 = $1 + ($$05$i$i$i << 3) | 0;
  _free(HEAP32[$5 >> 2] | 0);
  HEAP32[$5 >> 2] = 0;
  HEAP32[$1 + ($$05$i$i$i << 3) + 4 >> 2] = 0;
  $$05$i$i$i = $$05$i$i$i + 1 | 0;
 } while (($$05$i$i$i | 0) != ($3 | 0));
 $9 = HEAP32[$0 >> 2] | 0;
 HEAP32[$2 >> 2] = 0;
 _free($9);
 return;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $10 = 0;
 if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 + 8 >> 2] | 0, $5) | 0) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $1, $2, $3, $4); else {
  $10 = HEAP32[$0 + 8 >> 2] | 0;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 3]($10, $1, $2, $3, $4, $5);
 }
 return;
}

function _puts($0) {
 $0 = $0 | 0;
 var $1 = 0, $11 = 0, $12 = 0, $19 = 0, $20 = 0;
 $1 = HEAP32[1005] | 0;
 if ((HEAP32[$1 + 76 >> 2] | 0) > -1) $19 = ___lockfile($1) | 0; else $19 = 0;
 do if ((_fputs($0, $1) | 0) < 0) $20 = -1; else {
  if ((HEAP8[$1 + 75 >> 0] | 0) != 10) {
   $11 = $1 + 20 | 0;
   $12 = HEAP32[$11 >> 2] | 0;
   if ($12 >>> 0 < (HEAP32[$1 + 16 >> 2] | 0) >>> 0) {
    HEAP32[$11 >> 2] = $12 + 1;
    HEAP8[$12 >> 0] = 10;
    $20 = 0;
    break;
   }
  }
  $20 = (___overflow($1, 10) | 0) >> 31;
 } while (0);
 if ($19 | 0) ___unlockfile($1);
 return $20 | 0;
}

function _ut_World_Exists($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $2 = 0, $3 = 0, $8 = 0, $9 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast$byval_copy = sp + 8 | 0;
 $2 = sp;
 $3 = $1;
 $8 = HEAP32[$3 + 4 >> 2] | 0;
 $9 = $2;
 HEAP32[$9 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$9 + 4 >> 2] = $8;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$2 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 $13 = __ZN2ut4arch13EntityManager6existsENS_6EntityE($0, $tmpcast$byval_copy) | 0;
 STACKTOP = sp;
 return $13 | 0;
}

function _ut_nativebuffer_nativestring_delete($0) {
 $0 = $0 | 0;
 var $$05$i$i$i = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $6 = 0;
 if (!$0) return;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (!$4) $10 = $2; else {
  $$05$i$i$i = 0;
  do {
   $6 = $2 + ($$05$i$i$i << 3) | 0;
   _free(HEAP32[$6 >> 2] | 0);
   HEAP32[$6 >> 2] = 0;
   HEAP32[$2 + ($$05$i$i$i << 3) + 4 >> 2] = 0;
   $$05$i$i$i = $$05$i$i$i + 1 | 0;
  } while (($$05$i$i$i | 0) != ($4 | 0));
  $10 = HEAP32[$0 >> 2] | 0;
 }
 HEAP32[$3 >> 2] = 0;
 _free($10);
 __ZdlPv($0);
 return;
}

function __ZN2ut9Scheduler3runEv($0) {
 $0 = $0 | 0;
 var $$byval_copy = 0, $1 = 0, $2 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $1 = sp;
 $2 = __ZNSt3__26chrono12steady_clock3nowEv() | 0;
 $4 = $1;
 HEAP32[$4 >> 2] = $2;
 HEAP32[$4 + 4 >> 2] = tempRet0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
 HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 __ZN2ut9Scheduler3runENSt3__26chrono10time_pointINS2_12steady_clockENS2_8durationIxNS1_5ratioILx1ELx1000000000EEEEEEE($0, $$byval_copy);
 STACKTOP = sp;
 return;
}

function __ZN2ut4arch13EntityManager15createArchetypeEPKjj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 __ZN2ut4arch13EntityManager31toTypeInArchetypeListWithEntityEPKjj($3, 0, $1, $2);
 $6 = __ZN2ut4arch16ArchetypeManager20getOrCreateArchetypeERKNSt3__26vectorIjNS2_9allocatorIjEEEE(HEAP32[$0 + 4 >> 2] | 0, $3) | 0;
 $7 = HEAP32[$3 >> 2] | 0;
 if (!$7) {
  STACKTOP = sp;
  return $6 | 0;
 }
 HEAP32[$3 + 4 >> 2] = $7;
 __ZdlPv($7);
 STACKTOP = sp;
 return $6 | 0;
}

function _memcmp($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$01318 = 0, $$01417 = 0, $$019 = 0, $14 = 0, $4 = 0, $5 = 0;
 L1 : do if (!$2) $14 = 0; else {
  $$01318 = $0;
  $$01417 = $2;
  $$019 = $1;
  while (1) {
   $4 = HEAP8[$$01318 >> 0] | 0;
   $5 = HEAP8[$$019 >> 0] | 0;
   if ($4 << 24 >> 24 != $5 << 24 >> 24) break;
   $$01417 = $$01417 + -1 | 0;
   if (!$$01417) {
    $14 = 0;
    break L1;
   } else {
    $$01318 = $$01318 + 1 | 0;
    $$019 = $$019 + 1 | 0;
   }
  }
  $14 = ($4 & 255) - ($5 & 255) | 0;
 } while (0);
 return $14 | 0;
}

function __ZNKSt3__212_GLOBAL__N_114initial_stringINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjLb0EEclEv($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $9 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 if ((HEAP8[$0 + 11 >> 0] | 0) < 0) $9 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0; else $9 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($0, $9, 0);
 return;
}

function __ZNKSt3__212_GLOBAL__N_114initial_stringINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiLb0EEclEv($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $9 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 if ((HEAP8[$0 + 11 >> 0] | 0) < 0) $9 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0; else $9 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($0, $9, 0);
 return;
}

function _fwrite($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $11 = 0, $13 = 0, $15 = 0, $4 = 0, $phitmp = 0, $spec$select = 0;
 $4 = Math_imul($2, $1) | 0;
 $spec$select = ($1 | 0) == 0 ? 0 : $2;
 if ((HEAP32[$3 + 76 >> 2] | 0) > -1) {
  $phitmp = (___lockfile($3) | 0) == 0;
  $11 = ___fwritex($0, $4, $3) | 0;
  if ($phitmp) $13 = $11; else {
   ___unlockfile($3);
   $13 = $11;
  }
 } else $13 = ___fwritex($0, $4, $3) | 0;
 if (($13 | 0) == ($4 | 0)) $15 = $spec$select; else $15 = ($13 >>> 0) / ($1 >>> 0) | 0;
 return $15 | 0;
}

function __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lj4096EEEEC2EjjS6_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $8 = 0, $9 = 0;
 $4 = $0 + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = $3;
 if (!$1) $8 = 0; else $8 = __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELj4096EE8allocateEj($3, $1) | 0;
 HEAP32[$0 >> 2] = $8;
 $9 = $8 + ($2 * 24 | 0) | 0;
 HEAP32[$0 + 8 >> 2] = $9;
 HEAP32[$0 + 4 >> 2] = $9;
 HEAP32[$4 >> 2] = $8 + ($1 * 24 | 0);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_jjRKS6_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $4 = HEAP8[$1 + 11 >> 0] | 0;
 $5 = $4 << 24 >> 24 < 0;
 $10 = $5 ? HEAP32[$1 + 4 >> 2] | 0 : $4 & 255;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0, $5 ? HEAP32[$1 >> 2] | 0 : $1, $10 >>> 0 < $2 >>> 0 ? $10 : $2);
 return;
}

function __ZNSt3__26chrono12steady_clock3nowEv() {
 var $0 = 0, $12 = 0, $14 = 0, $5 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 if (!(_clock_gettime(1, $0 | 0) | 0)) {
  $5 = HEAP32[$0 >> 2] | 0;
  $9 = HEAP32[$0 + 4 >> 2] | 0;
  $12 = ___muldi3($5 | 0, (($5 | 0) < 0) << 31 >> 31 | 0, 1e9, 0) | 0;
  $14 = _i64Add($12 | 0, tempRet0 | 0, $9 | 0, (($9 | 0) < 0) << 31 >> 31 | 0) | 0;
  STACKTOP = sp;
  return $14 | 0;
 } else __ZNSt3__220__throw_system_errorEiPKc(HEAP32[(___errno_location() | 0) >> 2] | 0, 21711);
 return 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2Ev($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $$0$i$i1 = 0, $3 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $3 = $0 + 12 | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 $$0$i$i1 = 0;
 while (1) {
  if (($$0$i$i1 | 0) == 3) break;
  HEAP32[$3 + ($$0$i$i1 << 2) >> 2] = 0;
  $$0$i$i1 = $$0$i$i1 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj18EEERAT__Kc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $2 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0, $1, 17);
 $2 = $0 + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$2 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj15EEERAT__Kc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $2 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0, $1, 14);
 $2 = $0 + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$2 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj14EEERAT__Kc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $2 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0, $1, 13);
 $2 = $0 + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$2 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj13EEERAT__Kc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $2 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0, $1, 12);
 $2 = $0 + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$2 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj12EEERAT__Kc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $2 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0, $1, 11);
 $2 = $0 + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$2 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj11EEERAT__Kc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $2 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0, $1, 10);
 $2 = $0 + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$2 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0, HEAP32[$1 >> 2] | 0, HEAP32[$1 + 4 >> 2] | 0); else {
  HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$0 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$0 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj10EEERAT__Kc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $2 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0, $1, 9);
 $2 = $0 + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$2 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj9EEERAT__Kc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $2 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0, $1, 8);
 $2 = $0 + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$2 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj6EEERAT__Kc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $2 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0, $1, 5);
 $2 = $0 + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$2 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj5EEERAT__Kc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $2 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0, $1, 4);
 $2 = $0 + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$2 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj4EEERAT__Kc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $2 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0, $1, 3);
 $2 = $0 + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$2 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEC2EjRKS3_RKS5_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0;
 HEAP32[$0 >> 2] = 0;
 $3 = $0 + 4 | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = HEAP32[$2 >> 2];
 __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE8allocateEj($0);
 __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(HEAP32[$3 >> 2] | 0, $1);
 HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + 24;
 return;
}

function __ZN14DelegateSystem6updateERN2ut9SchedulerERNS0_12ManagerWorldE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $4 = 0, $5 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 4 | 0;
 $5 = sp;
 $7 = HEAP32[$0 + 64 >> 2] | 0;
 HEAP32[$3 >> 2] = $1;
 HEAP32[$4 >> 2] = $2;
 HEAP32[$5 >> 2] = $7;
 $9 = HEAP32[$0 + 56 >> 2] | 0;
 if (!$9) _abort(); else {
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$9 >> 2] | 0) + 24 >> 2] & 3]($9, $3, $4, $5);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE8allocateEj($0) {
 $0 = $0 | 0;
 var $4 = 0;
 if (!(__ZNKSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE8max_sizeEv($0) | 0)) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $4 = __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELj4096EE8allocateEj($0 + 12 | 0, 1) | 0;
  HEAP32[$0 + 4 >> 2] = $4;
  HEAP32[$0 >> 2] = $4;
  HEAP32[$0 + 8 >> 2] = $4 + 24;
  return;
 }
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj22EEERAT__Kc($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0, 23668, 21);
 $1 = $0 + 12 | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$1 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj19EEERAT__Kc($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0, 23889, 18);
 $1 = $0 + 12 | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$1 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj16EEERAT__Kc($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0, 23062, 15);
 $1 = $0 + 12 | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$1 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj8EEERAT__Kc($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0, 23469, 7);
 $1 = $0 + 12 | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$1 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj7EEERAT__Kc($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0, 23882, 6);
 $1 = $0 + 12 | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$1 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILj3EEERAT__Kc($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcj($0, 23693, 2);
 $1 = $0 + 12 | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$1 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function _fmt_x($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$05$lcssa = 0, $$056 = 0, $14 = 0, $15 = 0, $8 = 0;
 if (($0 | 0) == 0 & ($1 | 0) == 0) $$05$lcssa = $2; else {
  $$056 = $2;
  $15 = $1;
  $8 = $0;
  while (1) {
   $14 = $$056 + -1 | 0;
   HEAP8[$14 >> 0] = HEAPU8[19803 + ($8 & 15) >> 0] | 0 | $3;
   $8 = _bitshift64Lshr($8 | 0, $15 | 0, 4) | 0;
   $15 = tempRet0;
   if (($8 | 0) == 0 & ($15 | 0) == 0) {
    $$05$lcssa = $14;
    break;
   } else $$056 = $14;
  }
 }
 return $$05$lcssa | 0;
}

function ___stdout_write($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $14 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 HEAP32[$0 + 36 >> 2] = 1;
 if (!(HEAP32[$0 >> 2] & 64)) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$0 + 60 >> 2];
  HEAP32[$vararg_buffer + 4 >> 2] = 21523;
  HEAP32[$vararg_buffer + 8 >> 2] = sp + 16;
  if (___syscall54(54, $vararg_buffer | 0) | 0) HEAP8[$0 + 75 >> 0] = -1;
 }
 $14 = ___stdio_write($0, $1, $2) | 0;
 STACKTOP = sp;
 return $14 | 0;
}

function __ZN2ut4arch22ArchetypeChunkIterator6finishEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = $0 + 29 | 0;
 if (HEAP8[$1 >> 0] | 0) {
  STACKTOP = sp;
  return;
 }
 $7 = (HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0) + 44 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 HEAP32[$7 >> 2] = $8 - 1;
 if (($8 | 0) <= 0) {
  _snprintf(25060, 1024, 6041, sp) | 0;
  HEAP8[26083] = 0;
  __ZN2ut12assertFailedEPKcS1_S1_j(25060, 6096, 6111, 110);
 }
 HEAP8[$1 >> 0] = 1;
 STACKTOP = sp;
 return;
}

function ___muldi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0;
 $x_sroa_0_0_extract_trunc = $a$0;
 $y_sroa_0_0_extract_trunc = $b$0;
 $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
 $1$1 = tempRet0;
 return (tempRet0 = (Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0) + (Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $1$1 | $1$1 & 0, $1$0 | 0 | 0) | 0;
}

function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $8 = 0;
 if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 + 8 >> 2] | 0, 0) | 0) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $1, $2, $3); else {
  $8 = HEAP32[$0 + 8 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 3]($8, $1, $2, $3);
 }
 return;
}

function __ZNSt3__29to_stringEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 __ZNKSt3__212_GLOBAL__N_114initial_stringINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjLb0EEclEv($2);
 __ZNSt3__212_GLOBAL__N_19as_stringINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPFiPcjPKczEjEET_T0_SD_PKNSD_10value_typeET1_($0, $2, $1);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 STACKTOP = sp;
 return;
}

function __ZNSt3__29to_stringEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 __ZNKSt3__212_GLOBAL__N_114initial_stringINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEiLb0EEclEv($2);
 __ZNSt3__212_GLOBAL__N_19as_stringINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPFiPcjPKczEiEET_T0_SD_PKNSD_10value_typeET1_($0, $2, $1);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 STACKTOP = sp;
 return;
}

function _ut_Scheduler_Name($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $16 = 0, $2 = 0, $4 = 0, $5 = 0, $6 = 0;
 $2 = $1 + 4 | 0;
 $4 = HEAP8[$2 + 11 >> 0] | 0;
 $5 = $4 << 24 >> 24 < 0;
 $6 = HEAP32[$2 >> 2] | 0;
 $10 = $5 ? HEAP32[$1 + 8 >> 2] | 0 : $4 & 255;
 _free(HEAP32[$0 >> 2] | 0);
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = $10;
 if (!$10) return;
 $16 = _malloc($10 + 1 | 0) | 0;
 HEAP32[$0 >> 2] = $16;
 _memcpy($16 | 0, ($5 ? $6 : $2) | 0, $10 | 0) | 0;
 HEAP8[$16 + $10 >> 0] = 0;
 return;
}

function _ut_System_Name($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $16 = 0, $2 = 0, $4 = 0, $5 = 0, $6 = 0;
 $2 = $1 + 12 | 0;
 $4 = HEAP8[$2 + 11 >> 0] | 0;
 $5 = $4 << 24 >> 24 < 0;
 $6 = HEAP32[$2 >> 2] | 0;
 $10 = $5 ? HEAP32[$1 + 16 >> 2] | 0 : $4 & 255;
 _free(HEAP32[$0 >> 2] | 0);
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = $10;
 if (!$10) return;
 $16 = _malloc($10 + 1 | 0) | 0;
 HEAP32[$0 >> 2] = $16;
 _memcpy($16 | 0, ($5 ? $6 : $2) | 0, $10 | 0) | 0;
 HEAP8[$16 + $10 >> 0] = 0;
 return;
}

function _ut_EntityFn_call($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $2 = 0, $3 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $2 = sp;
 $3 = $1;
 $8 = HEAP32[$3 + 4 >> 2] | 0;
 $9 = $2;
 HEAP32[$9 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$9 + 4 >> 2] = $8;
 HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 _emscripten_asm_const_iii(2, $0 | 0, $$byval_copy | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZN2ut17ComponentRegistry31registerOpaqueComponentWithTypeEPKNS_4meta8TypeDescEijPiiPFvPviEiPFvPKvS6_iEi($0, $1, $2, $3, $4, $5, $6, $7, $8) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 var $13 = 0;
 $13 = __Z30registerOpaqueComponentPrivateiijPKcPiiPFvPviEiPFvPKvS2_iEi(HEAP32[$0 + 8 >> 2] | 0, $1, $2, HEAP32[$0 + 4 >> 2] | 0, $3, $4, $5, $6, $7, $8) | 0;
 HEAP32[$13 + 68 >> 2] = $0;
 return HEAP32[$13 >> 2] | 0;
}

function __ZNSt3__213__lower_boundIRNS_6__lessIjjEEPKjjEET0_S6_S6_RKT1_T_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$014 = 0, $10 = 0, $11 = 0, $13 = 0, $8 = 0;
 $8 = HEAP32[$2 >> 2] | 0;
 $$0 = $0;
 $$014 = $1 - $0 >> 2;
 while (1) {
  if (!$$014) break;
  $10 = ($$014 | 0) / 2 | 0;
  $11 = $$0 + ($10 << 2) | 0;
  $13 = (HEAP32[$11 >> 2] | 0) >>> 0 < $8 >>> 0;
  $$0 = $13 ? $11 + 4 | 0 : $$0;
  $$014 = $13 ? $$014 + -1 - $10 | 0 : $10;
 }
 return $$0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_12DbD2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213__vector_baseINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEEENS5_IS9_Lj4096EEEED2Ev($0 + 32 | 0);
 __ZNSt3__213__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lj4096EEEEENS5_IS7_Lj4096EEEED2Ev($0 + 16 | 0);
 __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEED2Ev($0);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, HEAP32[$1 >> 2] | 0, HEAP32[$1 + 4 >> 2] | 0); else {
  HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$0 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$0 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 }
 return;
}

function ___towrite($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $14 = 0, $3 = 0, $7 = 0;
 $1 = $0 + 74 | 0;
 $3 = HEAP8[$1 >> 0] | 0;
 HEAP8[$1 >> 0] = $3 + 255 | $3;
 $7 = HEAP32[$0 >> 2] | 0;
 if (!($7 & 8)) {
  HEAP32[$0 + 8 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  $14 = HEAP32[$0 + 44 >> 2] | 0;
  HEAP32[$0 + 28 >> 2] = $14;
  HEAP32[$0 + 20 >> 2] = $14;
  HEAP32[$0 + 16 >> 2] = $14 + (HEAP32[$0 + 48 >> 2] | 0);
  $$0 = 0;
 } else {
  HEAP32[$0 >> 2] = $7 | 32;
  $$0 = -1;
 }
 return $$0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_120parse_pack_expansionINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$1 = 0, $12 = 0, $13 = 0;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 115) if ((HEAP8[$0 + 1 >> 0] | 0) == 112) {
  $12 = $0 + 2 | 0;
  $13 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($12, $1, $2) | 0;
  $$1 = ($13 | 0) == ($12 | 0) ? $0 : $13;
 } else $$1 = $0; else $$1 = $0; else $$1 = $0;
 return $$1 | 0;
}

function __ZZN2ut20InitComponentInfoForINS_17EntityInformationEEERNS_13ComponentInfoEvENUlPKvPviE_8__invokeES5_S6_i($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $4 = 0, $9 = 0;
 $3 = $0 + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 HEAP32[$1 + 4 >> 2] = $4;
 if (!$4) {
  HEAP32[$1 >> 2] = 0;
  return;
 } else {
  $9 = _malloc((HEAP32[$3 >> 2] | 0) + 1 | 0) | 0;
  HEAP32[$1 >> 2] = $9;
  _memcpy($9 | 0, HEAP32[$0 >> 2] | 0, (HEAP32[$3 >> 2] | 0) + 1 | 0) | 0;
  return;
 }
}

function _fmt_o($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$lcssa = 0, $$06 = 0, $10 = 0, $11 = 0, $7 = 0;
 if (($0 | 0) == 0 & ($1 | 0) == 0) $$0$lcssa = $2; else {
  $$06 = $2;
  $11 = $1;
  $7 = $0;
  while (1) {
   $10 = $$06 + -1 | 0;
   HEAP8[$10 >> 0] = $7 & 7 | 48;
   $7 = _bitshift64Lshr($7 | 0, $11 | 0, 3) | 0;
   $11 = tempRet0;
   if (($7 | 0) == 0 & ($11 | 0) == 0) {
    $$0$lcssa = $10;
    break;
   } else $$06 = $10;
  }
 }
 return $$0$lcssa | 0;
}

function _ut_component_register_cid_with_type($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$015 = 0;
 if (!$6) {
  $$0 = 15;
  $$015 = HEAP32[$0 + 8 >> 2] | 0;
 } else {
  $$0 = 14;
  $$015 = $6;
 }
 return __ZN2ut17ComponentRegistry31registerOpaqueComponentWithTypeEPKNS_4meta8TypeDescEijPiiPFvPviEiPFvPKvS6_iEi($0, $1, $2, $3, $4, ($5 | 0) == 0 ? 0 : 9, $5, $$0, $$015) | 0;
}

function runPostSets() {}
function ___muldsi3($a, $b) {
 $a = $a | 0;
 $b = $b | 0;
 var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
 $1 = $a & 65535;
 $2 = $b & 65535;
 $3 = Math_imul($2, $1) | 0;
 $6 = $a >>> 16;
 $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
 $11 = $b >>> 16;
 $12 = Math_imul($11, $1) | 0;
 return (tempRet0 = ($8 >>> 16) + (Math_imul($11, $6) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, $8 + $12 << 16 | $3 & 65535 | 0) | 0;
}

function _ut_nativestring_resize_zero($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $12 = 0, $2 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 if ((HEAP32[$2 >> 2] | 0) != ($1 | 0)) {
  _free(HEAP32[$0 >> 2] | 0);
  if (!$1) $9 = 0; else $9 = _malloc($1 + 1 | 0) | 0;
  HEAP32[$0 >> 2] = $9;
 }
 if (!$1) {
  HEAP32[$2 >> 2] = $1;
  $12 = HEAP32[$0 >> 2] | 0;
  return $12 | 0;
 }
 HEAP8[HEAP32[$0 >> 2] >> 0] = 0;
 HEAP32[$2 >> 2] = $1;
 $12 = HEAP32[$0 >> 2] | 0;
 return $12 | 0;
}

function _getint($0) {
 $0 = $0 | 0;
 var $$0$lcssa = 0, $$04 = 0, $11 = 0, $12 = 0, $7 = 0;
 if (!(_isdigit(HEAP8[HEAP32[$0 >> 2] >> 0] | 0) | 0)) $$0$lcssa = 0; else {
  $$04 = 0;
  while (1) {
   $7 = HEAP32[$0 >> 2] | 0;
   $11 = ($$04 * 10 | 0) + -48 + (HEAP8[$7 >> 0] | 0) | 0;
   $12 = $7 + 1 | 0;
   HEAP32[$0 >> 2] = $12;
   if (!(_isdigit(HEAP8[$12 >> 0] | 0) | 0)) {
    $$0$lcssa = $11;
    break;
   } else $$04 = $11;
  }
 }
 return $$0$lcssa | 0;
}

function _ut_EntityCommandBuffer_CreateDeferredEntity($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $3 = 0, $4 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 __ZN2ut4arch19EntityCommandBuffer22createDeferredEntitiesEPNS0_9ArchetypeEPNS_6EntityEj($1, $2, $3, 1);
 $4 = $3;
 $9 = HEAP32[$4 + 4 >> 2] | 0;
 $10 = $0;
 HEAP32[$10 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$10 + 4 >> 2] = $9;
 STACKTOP = sp;
 return;
}

function __ZN2uteqERKNSt3__212basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS_12NativeStringE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $5 = 0, $6 = 0;
 $5 = HEAP8[$0 + 11 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 if ((HEAP32[$1 + 4 >> 2] | 0) != (($6 ? HEAP32[$0 + 4 >> 2] | 0 : $5 & 255) | 0)) {
  $$0$i = 0;
  return $$0$i | 0;
 }
 $$0$i = (_strcmp(HEAP32[$1 >> 2] | 0, $6 ? HEAP32[$0 >> 2] | 0 : $0) | 0) == 0;
 return $$0$i | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $4 = 0, $5 = 0;
 if (($0 | 0) != ($1 | 0)) {
  $4 = HEAP8[$1 + 11 >> 0] | 0;
  $5 = $4 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($0, $5 ? HEAP32[$1 >> 2] | 0 : $1, $5 ? HEAP32[$1 + 4 >> 2] | 0 : $4 & 255);
 }
 return;
}

function __ZN2ut11CoreService16getCurrentLocaleEv($0) {
 $0 = $0 | 0;
 var $$sink = 0, $1 = 0, $2 = 0, $3 = 0, $7 = 0;
 $1 = _js_navigator_language() | 0;
 $2 = $1 + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 HEAP32[$0 + 4 >> 2] = $3;
 if (!$3) {
  $$sink = 0;
  HEAP32[$0 >> 2] = $$sink;
  return;
 }
 $7 = _malloc($3 + 1 | 0) | 0;
 _memcpy($7 | 0, HEAP32[$1 >> 2] | 0, (HEAP32[$2 >> 2] | 0) + 1 | 0) | 0;
 $$sink = $7;
 HEAP32[$0 >> 2] = $$sink;
 return;
}

function __ZNKSt3__210__function6__funcINS_6__bindIRFvjPN2ut9SchedulerEPNS3_12ManagerWorldEEJRjRKNS_12placeholders4__phILi1EEERKNSC_ILi2EEEEEENS_9allocatorISJ_EEFvS5_S7_EE7__cloneEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $4 = 0, $9 = 0;
 $1 = __Znwj(12) | 0;
 HEAP32[$1 >> 2] = 3800;
 $4 = $0 + 4 | 0;
 $9 = HEAP32[$4 + 4 >> 2] | 0;
 $10 = $1 + 4 | 0;
 HEAP32[$10 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$10 + 4 >> 2] = $9;
 return $1 | 0;
}

function _memmove(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0;
 if ((src | 0) < (dest | 0) & (dest | 0) < (src + num | 0)) {
  ret = dest;
  src = src + num | 0;
  dest = dest + num | 0;
  while ((num | 0) > 0) {
   dest = dest - 1 | 0;
   src = src - 1 | 0;
   num = num - 1 | 0;
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  }
  dest = ret;
 } else _memcpy(dest, src, num) | 0;
 return dest | 0;
}

function __ZNKSt3__210__function6__funcINS_6__bindIRFvjPN2ut9SchedulerEPNS3_12ManagerWorldEEJRjRKNS_12placeholders4__phILi1EEERKNSC_ILi2EEEEEENS_9allocatorISJ_EEFvS5_S7_EE7__cloneEPNS0_6__baseISM_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $4 = 0, $9 = 0;
 HEAP32[$1 >> 2] = 3800;
 $4 = $0 + 4 | 0;
 $9 = HEAP32[$4 + 4 >> 2] | 0;
 $10 = $1 + 4 | 0;
 HEAP32[$10 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$10 + 4 >> 2] = $9;
 return;
}

function _ut_EntityCommandBuffer_DestroyEntity($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $7 = 0, $8 = 0, $tmpcast2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast2 = sp;
 $2 = $1;
 $7 = HEAP32[$2 + 4 >> 2] | 0;
 $8 = $tmpcast2;
 HEAP32[$8 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$8 + 4 >> 2] = $7;
 __ZN2ut4arch19EntityCommandBuffer15destroyEntitiesEPKNS_6EntityEj($0, $tmpcast2, 1);
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $5 = 0, $6 = 0;
 if (__ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE17pointer_in_bufferEPc($0, $1) | 0) {
  $5 = $1 + (__ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8align_upEj($2) | 0) | 0;
  $6 = $0 + 4096 | 0;
  if (($5 | 0) == (HEAP32[$6 >> 2] | 0)) HEAP32[$6 >> 2] = $1;
 } else _free($1);
 return;
}

function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 + 8 >> 2] | 0, $5) | 0) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $1, $2, $3, $4);
 return;
}

function _ut_nativebuffer_nativestring_create($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 $2 = __Znwj(12) | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 __ZN2ut12NativeBufferINS_12NativeStringEE6resizeEjS1_($2, $0, $1);
 _free(HEAP32[$1 >> 2] | 0);
 STACKTOP = sp;
 return $2 | 0;
}

function _ut_EntityCommandBuffer_EntityCommandBuffer() {
 var $0 = 0, $4 = 0;
 $0 = __Znwj(44) | 0;
 HEAP32[$0 >> 2] = 4096;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 4096;
 $4 = $0 + 16 | 0;
 HEAP32[$0 + 32 >> 2] = 0;
 HEAP32[$0 + 36 >> 2] = 0;
 HEAP32[$0 + 40 >> 2] = 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 HEAP8[$4 + 12 >> 0] = 0;
 return $0 | 0;
}

function _ut_nativestring_placement_create($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $5 = 0, $7 = 0;
 HEAP32[$0 >> 2] = 0;
 $2 = $0 + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 if (!$1) {
  $7 = 0;
  HEAP32[$2 >> 2] = $1;
  return $7 | 0;
 }
 $5 = _malloc($1 + 1 | 0) | 0;
 _memset($5 | 0, 0, $1 | 0) | 0;
 HEAP8[$5 + $1 >> 0] = 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$0 >> 2] = $5;
 $7 = $5;
 HEAP32[$2 >> 2] = $1;
 return $7 | 0;
}

function _ut_nativebuffer_nativestring_placement_create($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZN2ut12NativeBufferINS_12NativeStringEE6resizeEjS1_($0, $1, $2);
 _free(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function _ut_World_GetEntityByName($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $3 = 0, $4 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 __ZN2ut4arch13EntityManager15getEntityByNameERKNS_12NativeStringE($3, $1, $2);
 $4 = $3;
 $9 = HEAP32[$4 + 4 >> 2] | 0;
 $10 = $0;
 HEAP32[$10 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$10 + 4 >> 2] = $9;
 STACKTOP = sp;
 return;
}

function _ut_nativebuffer_pod_resize_uninitialized($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $3 = 0, $6 = 0, $8 = 0;
 $3 = $0 + 8 | 0;
 $6 = HEAP32[$0 >> 2] | 0;
 if ((HEAP32[$3 >> 2] | 0) >>> 0 < $1 >>> 0) {
  _free($6);
  $8 = _malloc(Math_imul($2, $1) | 0) | 0;
  HEAP32[$0 >> 2] = $8;
  HEAP32[$3 >> 2] = $1;
  $10 = $8;
 } else $10 = $6;
 HEAP32[$0 + 4 >> 2] = $1;
 return $10 | 0;
}

function _ut_World_DestroyEntity($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $7 = 0, $8 = 0, $tmpcast2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast2 = sp;
 $2 = $1;
 $7 = HEAP32[$2 + 4 >> 2] | 0;
 $8 = $tmpcast2;
 HEAP32[$8 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$8 + 4 >> 2] = $7;
 __ZN2ut4arch13EntityManager15destroyEntitiesEPKNS_6EntityEi($0, $tmpcast2, 1);
 STACKTOP = sp;
 return;
}

function __ZN2ut17ComponentRegistry23registerOpaqueComponentEiijPKcPiiPFvPviEiPFvPKvS4_iEi($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 return HEAP32[(__Z30registerOpaqueComponentPrivateiijPKcPiiPFvPviEiPFvPKvS2_iEi($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) | 0) >> 2] | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $4 = 0, $5 = 0;
 if (($0 | 0) != ($1 | 0)) {
  $4 = HEAP8[$1 + 11 >> 0] | 0;
  $5 = $4 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($0, $5 ? HEAP32[$1 >> 2] | 0 : $1, $5 ? HEAP32[$1 + 4 >> 2] | 0 : $4 & 255) | 0;
 }
 return $0 | 0;
}

function _ut_World_CreateEntity($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $3 = 0, $4 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 __ZN2ut4arch13EntityManager12createEntityEPNS0_9ArchetypeE($3, $1, $2);
 $4 = $3;
 $9 = HEAP32[$4 + 4 >> 2] | 0;
 $10 = $0;
 HEAP32[$10 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$10 + 4 >> 2] = $9;
 STACKTOP = sp;
 return;
}

function _ut_nativestring_copy_construct($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $3 = 0, $8 = 0;
 $2 = $1 + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 HEAP32[$0 + 4 >> 2] = $3;
 if (!$3) {
  HEAP32[$0 >> 2] = 0;
  return;
 } else {
  $8 = _malloc((HEAP32[$2 >> 2] | 0) + 1 | 0) | 0;
  HEAP32[$0 >> 2] = $8;
  _memcpy($8 | 0, HEAP32[$1 >> 2] | 0, (HEAP32[$2 >> 2] | 0) + 1 | 0) | 0;
  return;
 }
}

function __ZNSt3__219__shared_weak_count4lockEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$04 = 0, $1 = 0, $5 = 0;
 $1 = $0 + 4 | 0;
 $$04 = HEAP32[$1 >> 2] | 0;
 while (1) {
  if (($$04 | 0) == -1) {
   $$0 = 0;
   break;
  }
  $5 = HEAP32[$1 >> 2] | 0;
  if (($5 | 0) == ($$04 | 0)) HEAP32[$1 >> 2] = $$04 + 1;
  if (($5 | 0) == ($$04 | 0)) {
   $$0 = $0;
   break;
  }
  $$04 = $5;
 }
 return $$0 | 0;
}

function _ut_meta_get_type_ut_entity() {
 var $2 = 0;
 if (HEAP8[24200] | 0) return 24412;
 HEAP32[6103] = 4;
 HEAP32[6104] = 5554;
 HEAP32[6105] = 8;
 HEAP32[6108] = 12871;
 HEAP32[6109] = 0;
 HEAP32[6110] = 3500;
 HEAP32[6111] = 12877;
 HEAP32[6112] = 4;
 HEAP32[6113] = 3500;
 HEAP32[6106] = 24432;
 HEAP32[6107] = 2;
 $2 = 24200;
 HEAP32[$2 >> 2] = 1;
 HEAP32[$2 + 4 >> 2] = 0;
 return 24412;
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8allocateEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0, $4 = 0, $5 = 0;
 $2 = __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8align_upEj($1) | 0;
 $4 = $0 + 4096 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($0 + 4096 - $5 | 0) >>> 0 < $2 >>> 0) $$0 = _malloc($2) | 0; else {
  HEAP32[$4 >> 2] = $5 + $2;
  $$0 = $5;
 }
 return $$0 | 0;
}

function _ut_nativestring_create($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0, $5 = 0;
 $1 = __Znwj(8) | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $1 + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 if (!$0) {
  HEAP32[$2 >> 2] = $0;
  return $1 | 0;
 }
 $5 = _malloc($0 + 1 | 0) | 0;
 _memset($5 | 0, 0, $0 | 0) | 0;
 HEAP8[$5 + $0 >> 0] = 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$1 >> 2] = $5;
 HEAP32[$2 >> 2] = $0;
 return $1 | 0;
}

function _ut_EntityCommandBuffer_Commit($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0;
 __ZN2ut4arch19EntityCommandBuffer8playbackEPNS0_13EntityManagerE($0, $1);
 __ZN2ut4arch19EntityCommandBuffer10freeChunksEv($0);
 $2 = $0 + 16 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP8[$2 + 12 >> 0] = 0;
 HEAP32[$0 + 36 >> 2] = HEAP32[$0 + 32 >> 2];
 return;
}

function _ut_component_register_cid($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $9 = 0;
 $9 = ($7 | 0) == 0;
 return __ZN2ut17ComponentRegistry23registerOpaqueComponentEiijPKcPiiPFvPviEiPFvPKvS4_iEi($0, $1, $2, $5, $3, $4, ($6 | 0) == 0 ? 0 : 8, $6, $9 ? 13 : 12, $9 ? $0 : $7) | 0;
}

function __ZSt9terminatev() {
 var $0 = 0, $2 = 0, $5 = 0;
 $0 = ___cxa_get_globals_fast() | 0;
 if ($0 | 0) {
  $2 = HEAP32[$0 >> 2] | 0;
  if ($2 | 0) {
   $5 = $2 + 48 | 0;
   if ((HEAP32[$5 >> 2] & -256 | 0) == 1126902528 ? (HEAP32[$5 + 4 >> 2] | 0) == 1129074247 : 0) __ZSt11__terminatePFvvE(HEAP32[$2 + 12 >> 2] | 0);
  }
 }
 __ZSt11__terminatePFvvE(__ZSt13get_terminatev() | 0);
}

function __ZN2ut4arch17EntityDataManager24getComponentDataWithTypeENS_6EntityEj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $4 = 0, $5 = 0;
 $4 = HEAP32[$0 + 20 >> 2] | 0;
 $5 = HEAP32[$1 >> 2] | 0;
 return __ZN2ut4arch5Chunk26getComponentDataWithTypeRWEijj(HEAP32[$4 + ($5 << 4) + 12 >> 2] | 0, HEAP32[$4 + ($5 << 4) + 4 >> 2] | 0, $2, HEAP32[$0 + 16 >> 2] | 0) | 0;
}

function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 + 8 >> 2] | 0, 0) | 0) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $1, $2, $3);
 return;
}

function _sn_write($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $5 = 0, $6 = 0, $7 = 0, $spec$select = 0;
 $5 = $0 + 20 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $7 = (HEAP32[$0 + 16 >> 2] | 0) - $6 | 0;
 $spec$select = $7 >>> 0 > $2 >>> 0 ? $2 : $7;
 _memcpy($6 | 0, $1 | 0, $spec$select | 0) | 0;
 HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + $spec$select;
 return $2 | 0;
}

function __ZN2ut4arch16ArchetypeManager33copySharedComponentDataIndexArrayEPiPKii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $5 = 0;
 if (!$1) {
  if (($2 << 2 | 0) <= 0) return;
  $5 = ~$2;
  _memset($0 | 0, 0, ((($5 | 0) > -2 ? $5 : -2) + $2 << 2) + 8 | 0) | 0;
  return;
 } else {
  if (!$2) return;
  _memmove($0 | 0, $1 | 0, $2 << 2 | 0) | 0;
  return;
 }
}

function __Znwj($0) {
 $0 = $0 | 0;
 var $$lcssa = 0, $2 = 0, $4 = 0, $spec$store$select = 0;
 $spec$store$select = ($0 | 0) == 0 ? 1 : $0;
 while (1) {
  $2 = _malloc($spec$store$select) | 0;
  if ($2 | 0) {
   $$lcssa = $2;
   break;
  }
  $4 = __ZSt15get_new_handlerv() | 0;
  if (!$4) {
   $$lcssa = 0;
   break;
  }
  FUNCTION_TABLE_v[$4 & 3]();
 }
 return $$lcssa | 0;
}

function __ZNSt3__219__shared_weak_count14__release_weakEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $7 = 0;
 $1 = $0 + 8 | 0;
 if (!(HEAP32[$1 >> 2] | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] & 63]($0); else {
  $7 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = $7 + -1;
  if (!$7) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] & 63]($0);
 }
 return;
}

function __ZNK10__cxxabiv112_GLOBAL__N_111string_pair4sizeEv($0) {
 $0 = $0 | 0;
 var $15 = 0, $16 = 0, $2 = 0, $9 = 0;
 $2 = HEAP8[$0 + 11 >> 0] | 0;
 if ($2 << 24 >> 24 < 0) $16 = HEAP32[$0 + 4 >> 2] | 0; else $16 = $2 & 255;
 $9 = HEAP8[$0 + 12 + 11 >> 0] | 0;
 if ($9 << 24 >> 24 < 0) $15 = HEAP32[$0 + 16 >> 2] | 0; else $15 = $9 & 255;
 return $15 + $16 | 0;
}

function __ZN2ut12ManagerWorldD2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $3 = 0;
 $1 = $0 + 32928 | 0;
 __ZN2ut9Scheduler9removeAllEv($1);
 __ZN2ut9SchedulerD2Ev($1);
 $3 = HEAP32[$0 + 32924 >> 2] | 0;
 if (!$3) {
  __ZN2ut4arch13EntityManagerD2Ev($0);
  return;
 }
 __ZNSt3__219__shared_weak_count14__release_weakEv($3);
 __ZN2ut4arch13EntityManagerD2Ev($0);
 return;
}

function _ut_Entity_cid() {
 var $3 = 0, $4 = 0, $8 = 0;
 if (!(HEAP8[24216] | 0)) {
  $3 = HEAP32[(__ZN2ut20InitComponentInfoForINS_6EntityEEERNS_13ComponentInfoEv() | 0) >> 2] | 0;
  HEAP32[6115] = $3;
  $4 = 24216;
  HEAP32[$4 >> 2] = 1;
  HEAP32[$4 + 4 >> 2] = 0;
  $8 = $3;
  return $8 | 0;
 } else {
  $8 = HEAP32[6115] | 0;
  return $8 | 0;
 }
 return 0;
}

function __ZNSt3__210__function6__funcINS_6__bindIRFvjPN2ut9SchedulerEPNS3_12ManagerWorldEEJRjRKNS_12placeholders4__phILi1EEERKNSC_ILi2EEEEEENS_9allocatorISJ_EEFvS5_S7_EEclEOS5_OS7_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 FUNCTION_TABLE_viii[HEAP32[$0 + 4 >> 2] & 31](HEAP32[$0 + 8 >> 2] | 0, HEAP32[$1 >> 2] | 0, HEAP32[$2 >> 2] | 0);
 return;
}

function __ZN2ut4arch17EntityDataManager26getComponentDataWithTypeROENS_6EntityEj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $4 = 0, $5 = 0;
 $4 = HEAP32[$0 + 20 >> 2] | 0;
 $5 = HEAP32[$1 >> 2] | 0;
 return __ZNK2ut4arch5Chunk26getComponentDataWithTypeROEij(HEAP32[$4 + ($5 << 4) + 12 >> 2] | 0, HEAP32[$4 + ($5 << 4) + 4 >> 2] | 0, $2) | 0;
}

function _ut_nativebuffer_nativestring_resize($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 __ZN2ut12NativeBufferINS_12NativeStringEE6resizeEjS1_($0, $1, $2);
 _free(HEAP32[$2 >> 2] | 0);
 STACKTOP = sp;
 return HEAP32[$0 >> 2] | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEjPKcj($0, $1, $2, __ZNSt3__211char_traitsIcE6lengthEPKc($2) | 0) | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($0, $1);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($0 + 12 | 0, $1 + 12 | 0);
 return;
}

function _ut_meta_get_type_ut_entityinformation() {
 var $2 = 0;
 if (HEAP8[24192] | 0) return 24380;
 HEAP32[6095] = 5;
 HEAP32[6096] = 5528;
 HEAP32[6097] = 8;
 HEAP32[6100] = 5549;
 HEAP32[6101] = 0;
 HEAP32[6102] = 3480;
 HEAP32[6098] = 24400;
 HEAP32[6099] = 1;
 $2 = 24192;
 HEAP32[$2 >> 2] = 1;
 HEAP32[$2 + 4 >> 2] = 0;
 return 24380;
}

function _ut_nativestring_set_known_length($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $7 = 0;
 _free(HEAP32[$0 >> 2] | 0);
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = $2;
 if (!$2) return;
 $7 = _malloc($2 + 1 | 0) | 0;
 HEAP32[$0 >> 2] = $7;
 _memcpy($7 | 0, $1 | 0, $2 | 0) | 0;
 HEAP8[$7 + $2 >> 0] = 0;
 return;
}

function _ut_nativestring_set($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $7 = 0;
 $2 = _strlen($1) | 0;
 _free(HEAP32[$0 >> 2] | 0);
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = $2;
 if (!$2) return;
 $7 = _malloc($2 + 1 | 0) | 0;
 HEAP32[$0 >> 2] = $7;
 _memcpy($7 | 0, $1 | 0, $2 | 0) | 0;
 HEAP8[$7 + $2 >> 0] = 0;
 return;
}

function __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $7 = 0;
 if ((HEAP32[$1 + 4 >> 2] | 0) == ($2 | 0)) {
  $7 = $1 + 28 | 0;
  if ((HEAP32[$7 >> 2] | 0) != 1) HEAP32[$7 >> 2] = $3;
 }
 return;
}

function _ut_ArchetypeChunkIterator_GetTypeOrSharedComponentIndicesAndSizesInOrderForSpecs($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 __ZN2ut4arch22ArchetypeChunkIterator46getTypeOrSharedComponentIndicesAndSizesInOrderEPNS0_13ComponentSpecEPiS4_j($0, $1, $2, $3, $4);
 return;
}

function ___stdio_close($0) {
 $0 = $0 | 0;
 var $5 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 HEAP32[$vararg_buffer >> 2] = _dummy_734(HEAP32[$0 + 60 >> 2] | 0) | 0;
 $5 = ___syscall_ret(___syscall6(6, $vararg_buffer | 0) | 0) | 0;
 STACKTOP = sp;
 return $5 | 0;
}

function __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEEC2EjRKS8_RKS9_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = HEAP32[$1 >> 2];
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcj($0, $1, __ZNSt3__211char_traitsIcE6lengthEPKc($1) | 0) | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcj($0, $1, __ZNSt3__211char_traitsIcE6lengthEPKc($1) | 0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lj4096EEEEENS1_IS6_Lj4096EEEEELj4096EE10deallocateEPS8_j($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj(HEAP32[$0 >> 2] | 0, $1, $2 << 4);
 return;
}

function __ZNSt3__210__function6__funcIPFvPN2ut9SchedulerEPNS2_12ManagerWorldEPvENS_9allocatorIS9_EES8_EclEOS4_OS6_OS7_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 FUNCTION_TABLE_viii[HEAP32[$0 + 4 >> 2] & 31](HEAP32[$1 >> 2] | 0, HEAP32[$2 >> 2] | 0, HEAP32[$3 >> 2] | 0);
 return;
}

function __ZZN2ut20InitComponentInfoForINS_17EntityInformationEEERNS_13ComponentInfoEvENUlPvS4_E_8__invokeES4_S4_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $4 = 0;
 HEAP32[$1 >> 2] = HEAP32[$0 >> 2];
 $4 = $0 + 4 | 0;
 HEAP32[$1 + 4 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$0 >> 2] = 0;
 HEAP32[$4 >> 2] = 0;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7replaceEjjPKc($0) {
 $0 = $0 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7replaceEjjPKcj($0, __ZNSt3__211char_traitsIcE6lengthEPKc(23696) | 0);
 return;
}

function __ZN2ut9Scheduler3nowEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $13 = 0, $7 = 0;
 $1 = $0 + 24 | 0;
 $7 = $0 + 16 | 0;
 $13 = _i64Subtract(HEAP32[$1 >> 2] | 0, HEAP32[$1 + 4 >> 2] | 0, HEAP32[$7 >> 2] | 0, HEAP32[$7 + 4 >> 2] | 0) | 0;
 return +((+($13 >>> 0) + 4294967296.0 * +(tempRet0 | 0)) / 1.0e9);
}

function _ut_EntityCommandBuffer_Dispose($0) {
 $0 = $0 | 0;
 var $1 = 0;
 __ZN2ut4arch19EntityCommandBuffer10freeChunksEv($0);
 $1 = $0 + 16 | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 HEAP8[$1 + 12 >> 0] = 0;
 HEAP32[$0 + 36 >> 2] = HEAP32[$0 + 32 >> 2];
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0 + 12 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
 return;
}

function _ut_ArchetypeChunkIterator_GetTypeOrSharedComponentIndicesAndSizesInOrder($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 __ZN2ut4arch22ArchetypeChunkIterator46getTypeOrSharedComponentIndicesAndSizesInOrderEPjPiS3_j($0, $1, $2, $3, $4);
 return;
}

function __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEC2EjRKS6_RKS7_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = HEAP32[$1 >> 2];
 return;
}

function _snprintf($0, $1, $2, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $varargs = $varargs | 0;
 var $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $3 = sp;
 HEAP32[$3 >> 2] = $varargs;
 $4 = _vsnprintf($0, $1, $2, $3) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lj4096EEEEELj4096EE10deallocateEPS6_j($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj(HEAP32[$0 >> 2] | 0, $1, $2 << 4);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKcj($0, $1, $2, __ZNSt3__211char_traitsIcE6lengthEPKc($2) | 0) | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lj4096EEEEENS1_IS6_Lj4096EEEEELj4096EE8allocateEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8allocateEj(HEAP32[$0 >> 2] | 0, $1 << 4) | 0;
}

function _abort_message($0, $varargs) {
 $0 = $0 | 0;
 $varargs = $varargs | 0;
 var $1 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 HEAP32[$1 >> 2] = $varargs;
 $2 = HEAP32[973] | 0;
 _vfprintf($2, $0, $1) | 0;
 _fputc(10, $2) | 0;
 _abort();
}

function ___cxa_get_globals_fast() {
 var $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(_pthread_once(25048, 3) | 0)) {
  $3 = _pthread_getspecific(HEAP32[6263] | 0) | 0;
  STACKTOP = sp;
  return $3 | 0;
 } else _abort_message(22030, sp);
 return 0;
}

function __ZN14UpdateFnSystem6updateERN2ut9SchedulerERNS0_12ManagerWorldE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $4 = 0;
 $4 = HEAP32[$0 + 56 >> 2] | 0;
 if (!$4) return;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$4 >> 2] | 0) + 24 >> 2] & 63]($4);
 return;
}

function _ut_nativebuffer_pod_set($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $10 = 0;
 if (!(HEAP32[$0 + 4 >> 2] | 0)) $10 = 0; else $10 = HEAP32[$0 >> 2] | 0;
 _memcpy($10 + (Math_imul($3, $1) | 0) | 0, $2 | 0, $3 | 0) | 0;
 return;
}

function _ut_ArchetypeChunkIterator_GetBasePointersAndSizesInOrder($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 __ZN2ut4arch22ArchetypeChunkIterator30getBasePointersAndSizesInOrderEPjPPvPij($0, $1, $2, $3, $4);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($0, $1, __ZNSt3__211char_traitsIcE6lengthEPKc($1) | 0) | 0;
}

function _printf($0, $varargs) {
 $0 = $0 | 0;
 $varargs = $varargs | 0;
 var $1 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $1 = sp;
 HEAP32[$1 >> 2] = $varargs;
 $3 = _vfprintf(HEAP32[1005] | 0, $0, $1) | 0;
 STACKTOP = sp;
 return $3 | 0;
}

function _ut_EntityCommandBuffer_shRelease($0) {
 $0 = $0 | 0;
 var $3 = 0;
 if (!$0) return;
 __ZN2ut4arch19EntityCommandBuffer10freeChunksEv($0);
 $3 = HEAP32[$0 + 32 >> 2] | 0;
 if ($3 | 0) {
  HEAP32[$0 + 36 >> 2] = $3;
  __ZdlPv($3);
 }
 __ZdlPv($0);
 return;
}

function _bitshift64Shl(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high << bits | (low & (1 << bits) - 1 << 32 - bits) >>> 32 - bits;
  return low << bits;
 }
 tempRet0 = low << bits - 32;
 return 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELj4096EE10deallocateEPS2_j($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE10deallocateEPcj(HEAP32[$0 >> 2] | 0, $1, $2 * 24 | 0);
 return;
}

function _ut_ArchetypeChunkIterator_shRelease($0) {
 $0 = $0 | 0;
 var $3 = 0;
 if (!$0) return;
 __ZN2ut4arch22ArchetypeChunkIterator6finishEv($0);
 $3 = HEAP32[$0 + 4 >> 2] | 0;
 if ($3 | 0) {
  HEAP32[$0 + 8 >> 2] = $3;
  __ZdlPv($3);
 }
 __ZdlPv($0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv($0) {
 $0 = $0 | 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 _free($0);
 if (!(_pthread_setspecific(HEAP32[6263] | 0, 0) | 0)) {
  STACKTOP = sp;
  return;
 } else _abort_message(22129, sp);
}
function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lj4096EEEEELj4096EE8allocateEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8allocateEj(HEAP32[$0 >> 2] | 0, $1 << 4) | 0;
}

function _bitshift64Lshr(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high >>> bits;
  return low >>> bits | (high & (1 << bits) - 1) << 32 - bits;
 }
 tempRet0 = 0;
 return high >>> bits - 32 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0) {
 $0 = $0 | 0;
 if ((HEAP8[$0 + 11 >> 0] | 0) < 0) __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcj(HEAP32[$0 >> 2] | 0);
 return;
}

function __ZNKSt3__210__function6__funcIPFvPN2ut9SchedulerEPNS2_12ManagerWorldEPvENS_9allocatorIS9_EES8_E7__cloneEv($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = __Znwj(8) | 0;
 HEAP32[$1 >> 2] = 3416;
 HEAP32[$1 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
 return $1 | 0;
}

function _aligned_alloc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $2 = sp;
 $4 = (_posix_memalign($2, $0, $1) | 0) == 0;
 STACKTOP = sp;
 return ($4 ? HEAP32[$2 >> 2] | 0 : 0) | 0;
}

function __ZNKSt3__210__function6__funcIPFvPN2ut9SchedulerEPNS2_12ManagerWorldEPvENS_9allocatorIS9_EES8_E7__cloneEPNS0_6__baseIS8_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$1 >> 2] = 3416;
 HEAP32[$1 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_132parse_unresolved_qualifier_levelINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
}

function __ZN2ut11CoreService19getSupportedLocalesEv($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZN2ut12NativeBufferINS_12NativeStringEEaSERKS2_($0, _js_navigator_languages() | 0) | 0;
 return;
}

function dynCall_viiiiii(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 FUNCTION_TABLE_viiiiii[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0);
}

function _ut_EntityCommandBuffer_CreateDeferredEntities($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 __ZN2ut4arch19EntityCommandBuffer22createDeferredEntitiesEPNS0_9ArchetypeEPNS_6EntityEj($0, $1, $2, $3);
 return;
}

function __ZN2ut12assertFailedEPKcS1_S1_j($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 if ($0 | 0) if (HEAP8[$0 >> 0] | 0) _emscripten_asm_const_ii(4, $0 | 0) | 0;
 ___assert_fail($1 | 0, $2 | 0, $3 | 0, 27124);
}

function _ut_World_GetConfigEntity($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $3 = 0, $8 = 0, $9 = 0;
 $3 = $1 + 33028 | 0;
 $8 = HEAP32[$3 + 4 >> 2] | 0;
 $9 = $0;
 HEAP32[$9 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$9 + 4 >> 2] = $8;
 return;
}

function __ZNSt3__210__function6__funcINS_6__bindIRFvjPN2ut9SchedulerEPNS3_12ManagerWorldEEJRjRKNS_12placeholders4__phILi1EEERKNSC_ILi2EEEEEENS_9allocatorISJ_EEFvS5_S7_EE18destroy_deallocateEv($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZZN2ut20InitComponentInfoForINS_17EntityInformationEEERNS_13ComponentInfoEvENUlPviE0_8__invokeES4_i($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 _free(HEAP32[$0 >> 2] | 0);
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELj4096EE8allocateEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8allocateEj(HEAP32[$0 >> 2] | 0, $1 * 24 | 0) | 0;
}

function _llvm_ctlz_i64(l, h, isZeroUndef) {
 l = l | 0;
 h = h | 0;
 isZeroUndef = isZeroUndef | 0;
 var ret = 0;
 ret = Math_clz32(h) | 0;
 if ((ret | 0) == 32) ret = ret + (Math_clz32(l) | 0) | 0;
 tempRet0 = 0;
 return ret | 0;
}

function __ZNSt3__220__shared_ptr_emplaceIN2ut12SimpleSystemENS_9allocatorIS2_EEED0Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 3836;
 __ZN2ut12SimpleSystemD2Ev($0 + 16 | 0);
 __ZNSt3__214__shared_countD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__220__shared_ptr_emplaceIN2ut12ManagerWorldENS_9allocatorIS2_EEED0Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 3768;
 __ZN2ut12ManagerWorldD2Ev($0 + 16 | 0);
 __ZNSt3__214__shared_countD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lj4096EEEEENS1_IS6_Lj4096EEEEELj4096EEC2ERNS0_5arenaILj4096EEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = $1;
 return;
}

function __ZZN2ut20InitComponentInfoForINS_17EntityInformationEEERNS_13ComponentInfoEvENUlPviE_8__invokeES4_i($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0;
 $2 = $0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 return;
}

function __ZN2ut4arch13EntityManager14createEntitiesEPNS0_9ArchetypeEj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 __ZN2ut4arch13EntityManager14createEntitiesEPNS0_9ArchetypeEPNS_6EntityEj($0, $1, 0, $2);
 return;
}

function _ut_nativebuffer_pod_scratch_create_uninitialized($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 HEAP32[$0 >> 2] = $1;
 HEAP32[$0 + 8 >> 2] = $2;
 HEAP32[$0 + 4 >> 2] = $2;
 return $0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(_pthread_key_create(25052, 43) | 0)) {
  STACKTOP = sp;
  return;
 } else _abort_message(22079, sp);
}

function __ZNSt3__211char_traitsIcE6assignEPcjc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 if ($1 | 0) _memset($0 | 0, (__ZNSt3__211char_traitsIcE11to_int_typeEc($2) | 0) & 255 | 0, $1 | 0) | 0;
 return $0 | 0;
}

function __ZN2ut4arch13EntityManager12createEntityEPNS0_9ArchetypeE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 __ZN2ut4arch13EntityManager14createEntitiesEPNS0_9ArchetypeEPNS_6EntityEj($1, $2, $0, 1);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lj4096EEEEELj4096EEC2IS4_EERKNS1_IT_Lj4096EEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 return;
}

function __ZZN2ut20InitComponentInfoForINS_17EntityInformationEEERNS_13ComponentInfoEvENUlPviE1_8__invokeES4_i($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 if (!$0) return;
 _free(HEAP32[$0 >> 2] | 0);
 __ZdlPv($0);
 return;
}

function dynCall_viiiii(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 FUNCTION_TABLE_viiiii[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0);
}

function __ZNSt3__220__shared_ptr_emplaceIN2ut12SimpleSystemENS_9allocatorIS2_EEED2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 3836;
 __ZN2ut12SimpleSystemD2Ev($0 + 16 | 0);
 __ZNSt3__214__shared_countD2Ev($0);
 return;
}

function __ZNSt3__220__shared_ptr_emplaceIN2ut12ManagerWorldENS_9allocatorIS2_EEED2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 3768;
 __ZN2ut12ManagerWorldD2Ev($0 + 16 | 0);
 __ZNSt3__214__shared_countD2Ev($0);
 return;
}

function __ZNSt3__210__function6__funcINS_6__bindIRFvjPN2ut9SchedulerEPNS3_12ManagerWorldEEJRjRKNS_12placeholders4__phILi1EEERKNSC_ILi2EEEEEENS_9allocatorISJ_EEFvS5_S7_EED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNKSt3__210__function6__funcIPFvvENS_9allocatorIS3_EES2_E7__cloneEv($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = __Znwj(8) | 0;
 HEAP32[$1 >> 2] = 3252;
 HEAP32[$1 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
 return $1 | 0;
}

function ___lctrans_impl($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0;
 if (!$1) $$0 = 0; else $$0 = ___mo_lookup(HEAP32[$1 >> 2] | 0, HEAP32[$1 + 4 >> 2] | 0, $0) | 0;
 return (($$0 | 0) == 0 ? $0 : $$0) | 0;
}

function __ZNKSt3__210__function6__funcIPFvvENS_9allocatorIS3_EES2_E7__cloneEPNS0_6__baseIS2_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$1 >> 2] = 3252;
 HEAP32[$1 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
 return;
}

function __ZNSt3__210__function6__funcINS_6__bindIRFvjPN2ut9SchedulerEPNS3_12ManagerWorldEEJRjRKNS_12placeholders4__phILi1EEERKNSC_ILi2EEEEEENS_9allocatorISJ_EEFvS5_S7_EE7destroyEv($0) {
 $0 = $0 | 0;
 return;
}

function _ut_World_CreateEntities($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 __ZN2ut4arch13EntityManager14createEntitiesEPNS0_9ArchetypeEPNS_6EntityEj($0, $1, $2, $3);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lj4096EEEEELj4096EEC2ERNS0_5arenaILj4096EEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = $1;
 return;
}

function _ut_nativestring_scratch_create($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $4 = 0;
 $4 = ($2 | 0) == 0 ? 0 : $1;
 HEAP32[$0 >> 2] = $4;
 HEAP32[$0 + 4 >> 2] = $2;
 return $4 | 0;
}

function __ZNSt3__220__shared_ptr_emplaceI14UpdateFnSystemNS_9allocatorIS1_EEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__220__shared_ptr_emplaceI14UpdateFnSystemNS_9allocatorIS1_EEED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__220__shared_ptr_emplaceI14DelegateSystemNS_9allocatorIS1_EEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__220__shared_ptr_emplaceI14DelegateSystemNS_9allocatorIS1_EEED2Ev($0);
 __ZdlPv($0);
 return;
}

function _ut_nativebuffer_nativestring_scratch_create($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 HEAP32[$0 >> 2] = $1;
 HEAP32[$0 + 8 >> 2] = $2;
 HEAP32[$0 + 4 >> 2] = $2;
 return $0 | 0;
}

function _i64Subtract(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var h = 0;
 h = b - d >>> 0;
 h = b - d - (c >>> 0 > a >>> 0 | 0) >>> 0;
 return (tempRet0 = h, a - c >>> 0 | 0) | 0;
}

function __ZNKSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEEENS4_IS8_Lj4096EEEE8max_sizeEv($0) {
 $0 = $0 | 0;
 return 268435455;
}

function __ZZ35ut_component_register_cid_with_typeEN3__48__invokeEPKvPvi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 _emscripten_asm_const_iiii(0, $2 | 0, $0 | 0, $1 | 0) | 0;
 return;
}

function _ut_ArchetypeChunkIterator_AddFilter($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 __ZN2ut4arch22ArchetypeChunkIterator9addFilterEPKNS0_13ComponentSpecEj($0, $1, $2);
 return;
}

function _ut_EntityCommandBuffer_CreateEntities($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 __ZN2ut4arch19EntityCommandBuffer14createEntitiesEPNS0_9ArchetypeEj($0, $1, $2);
 return;
}

function ___DOUBLE_BITS_671($0) {
 $0 = +$0;
 var $1 = 0;
 HEAPF64[tempDoublePtr >> 3] = $0;
 $1 = HEAP32[tempDoublePtr >> 2] | 0;
 tempRet0 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 return $1 | 0;
}

function _ut_EntityCommandBuffer_DestroyEntities($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 __ZN2ut4arch19EntityCommandBuffer15destroyEntitiesEPKNS_6EntityEj($0, $1, $2);
 return;
}

function __ZNSt3__211char_traitsIcE7compareEPKcS3_j($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0;
 if (!$2) $$0 = 0; else $$0 = _memcmp($0, $1, $2) | 0;
 return $$0 | 0;
}

function dynCall_viiii(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 FUNCTION_TABLE_viiii[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0);
}

function __ZZ25ut_component_register_cidEN3__18__invokeEPKvPvi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 _emscripten_asm_const_iiii(0, $2 | 0, $0 | 0, $1 | 0) | 0;
 return;
}

function __ZN2ut12ManagerWorld8fromJSONERKNS_12NativeStringE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN2ut10Serializer8fromJSONERNS_12ManagerWorldERKNS_12NativeStringE($0, $1);
 return;
}

function ___syscall_ret($0) {
 $0 = $0 | 0;
 var $$0 = 0;
 if ($0 >>> 0 > 4294963200) {
  HEAP32[(___errno_location() | 0) >> 2] = 0 - $0;
  $$0 = -1;
 } else $$0 = $0;
 return $$0 | 0;
}

function __ZZN2ut20InitComponentInfoForINS_13CleanupEntityEEERNS_13ComponentInfoEvENUlPviE1_8__invokeES4_i($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 if (!$0) return;
 __ZdlPv($0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE17pointer_in_bufferEPc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return ($0 + 4096 | 0) >>> 0 >= $1 >>> 0 & $0 >>> 0 <= $1 >>> 0 | 0;
}

function _ut_World_GetConfigDataRaw($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 __ZN2ut12ManagerWorld16getConfigDataRawEjPvj($0, $1, $2, $3);
 return;
}

function _i64Add(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var l = 0;
 l = a + c >>> 0;
 return (tempRet0 = b + d + (l >>> 0 < a >>> 0 | 0) >>> 0, l | 0) | 0;
}

function __ZZN2ut20InitComponentInfoForINS_8DisabledEEERNS_13ComponentInfoEvENUlPviE1_8__invokeES4_i($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 if (!$0) return;
 __ZdlPv($0);
 return;
}

function __ZZN2ut20InitComponentInfoForINS_6EntityEEERNS_13ComponentInfoEvENUlPviE1_8__invokeES4_i($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 if (!$0) return;
 __ZdlPv($0);
 return;
}

function _ut_ArchetypeChunkIterator_RawSharedDataByIndex($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZN2ut4arch22ArchetypeChunkIterator20rawSharedDataByIndexEi($0, $1) | 0;
}

function __ZZ35ut_component_register_cid_with_typeEN3__58__invokeEPKvPvi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 _memcpy($1 | 0, $0 | 0, $2 | 0) | 0;
 return;
}

function __ZZ30registerOpaqueComponentPrivateiijPKcPiiPFvPviEiPFvPKvS2_iEiEN3__08__invokeES2_i($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 _memset($0 | 0, 0, $1 | 0) | 0;
 return;
}

function __ZNKSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEEENS4_IS6_Lj4096EEEE8max_sizeEv($0) {
 $0 = $0 | 0;
 return 268435455;
}

function _ut_World_DestroyEntities($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 __ZN2ut4arch13EntityManager15destroyEntitiesEPKNS_6EntityEi($0, $1, $2);
 return;
}

function _ut_EntityCommandBuffer_CreateEntity($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN2ut4arch19EntityCommandBuffer14createEntitiesEPNS0_9ArchetypeEj($0, $1, 1);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELj4096EEC2ERNS0_5arenaILj4096EEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = $1;
 return;
}

function dynCall_iiii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return FUNCTION_TABLE_iiii[index & 7](a1 | 0, a2 | 0, a3 | 0) | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0) {
 $0 = $0 | 0;
 if ((HEAP8[$0 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$0 >> 2] | 0);
 return;
}

function _ut_nativebuffer_data($0) {
 $0 = $0 | 0;
 var $5 = 0;
 if (!(HEAP32[$0 + 4 >> 2] | 0)) {
  $5 = 0;
  return $5 | 0;
 }
 $5 = HEAP32[$0 >> 2] | 0;
 return $5 | 0;
}

function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 return ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
}

function __ZNSt3__220__shared_ptr_emplaceIN2ut12SimpleSystemENS_9allocatorIS2_EEE16__on_zero_sharedEv($0) {
 $0 = $0 | 0;
 __ZN2ut12SimpleSystemD2Ev($0 + 16 | 0);
 return;
}

function __ZNSt3__220__shared_ptr_emplaceIN2ut12ManagerWorldENS_9allocatorIS2_EEE16__on_zero_sharedEv($0) {
 $0 = $0 | 0;
 __ZN2ut12ManagerWorldD2Ev($0 + 16 | 0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbEC2ERb($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = $1;
 HEAP8[$0 + 4 >> 0] = HEAP8[$1 >> 0] | 0;
 return;
}

function __ZNSt3__211char_traitsIcE4moveEPcPKcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 if ($2 | 0) _memmove($0 | 0, $1 | 0, $2 | 0) | 0;
 return $0 | 0;
}

function __ZSt11__terminatePFvvE($0) {
 $0 = $0 | 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 FUNCTION_TABLE_v[$0 & 3]();
 _abort_message(22182, sp);
}

function __ZNSt3__211char_traitsIcE4copyEPcPKcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 if ($2 | 0) _memcpy($0 | 0, $1 | 0, $2 | 0) | 0;
 return $0 | 0;
}

function __ZNSt3__210__function6__funcIPFvPN2ut9SchedulerEPNS2_12ManagerWorldEPvENS_9allocatorIS9_EES8_E18destroy_deallocateEv($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_110save_valueIjEC2ERj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = $1;
 HEAP32[$0 + 4 >> 2] = HEAP32[$1 >> 2];
 return;
}

function __ZZ35ut_component_register_cid_with_typeEN3__38__invokeEPvi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 _emscripten_asm_const_iii(1, $1 | 0, $0 | 0) | 0;
 return;
}

function _ut_World_CreateArchetype($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return __ZN2ut4arch13EntityManager15createArchetypeEPKjj($0, $1, $2) | 0;
}

function __ZZ25ut_component_register_cidEN3__28__invokeEPKvPvi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 _memcpy($1 | 0, $0 | 0, $2 | 0) | 0;
 return;
}

function _ut_EntityCommandBuffer_Playback($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN2ut4arch19EntityCommandBuffer8playbackEPNS0_13EntityManagerE($0, $1);
 return;
}

function dynCall_viii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 FUNCTION_TABLE_viii[index & 31](a1 | 0, a2 | 0, a3 | 0);
}

function _ut_ArchetypeChunkIterator_RawSharedData($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZN2ut4arch22ArchetypeChunkIterator13rawSharedDataEj($0, $1) | 0;
}

function __ZNSt3__214__ptr_in_rangeIcEEbPKT_S3_S3_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return $1 >>> 0 <= $0 >>> 0 & $0 >>> 0 < $2 >>> 0 | 0;
}
function stackAlloc(size) {
 size = size | 0;
 var ret = 0;
 ret = STACKTOP;
 STACKTOP = STACKTOP + size | 0;
 STACKTOP = STACKTOP + 15 & -16;
 return ret | 0;
}

function _fputs($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0;
 $2 = _strlen($0) | 0;
 return ((_fwrite($0, 1, $2, $1) | 0) != ($2 | 0)) << 31 >> 31 | 0;
}

function __ZZ25ut_component_register_cidEN3__08__invokeEPvi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 _emscripten_asm_const_iii(1, $1 | 0, $0 | 0) | 0;
 return;
}

function __ZN2ut9Scheduler4stepEv($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = $0 + 92 | 0;
 if ((HEAP32[$1 >> 2] | 0) != 2) return;
 HEAP32[$1 >> 2] = 3;
 return;
}

function _ut_nativebuffer_pod_delete($0) {
 $0 = $0 | 0;
 if (!$0) return;
 HEAP32[$0 + 4 >> 2] = 0;
 _free(HEAP32[$0 >> 2] | 0);
 __ZdlPv($0);
 return;
}

function establishStackSpace(stackBase, stackMax) {
 stackBase = stackBase | 0;
 stackMax = stackMax | 0;
 STACKTOP = stackBase;
 STACK_MAX = stackMax;
}

function _ut_SystemFn_call($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 _emscripten_asm_const_iiii(3, $0 | 0, $1 | 0, $2 | 0) | 0;
 return;
}

function __ZNSt3__210__function6__funcIPFvPN2ut9SchedulerEPNS2_12ManagerWorldEPvENS_9allocatorIS9_EES8_ED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZN2ut9Scheduler5pauseEv($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = $0 + 92 | 0;
 if (HEAP32[$1 >> 2] | 0) return;
 HEAP32[$1 >> 2] = 1;
 return;
}

function __ZNKSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lj4096EEEE8max_sizeEv($0) {
 $0 = $0 | 0;
 return 178956970;
}

function _ut_CopyFn_call($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 _emscripten_asm_const_iiii(0, $0 | 0, $1 | 0, $2 | 0) | 0;
 return;
}

function _ut_ArchetypeChunkIterator_RawData($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZN2ut4arch22ArchetypeChunkIterator7rawDataEj($0, $1) | 0;
}

function __ZNSt3__220__shared_ptr_emplaceIN2ut12SimpleSystemENS_9allocatorIS2_EEE21__on_zero_shared_weakEv($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNSt3__220__shared_ptr_emplaceIN2ut12ManagerWorldENS_9allocatorIS2_EEE21__on_zero_shared_weakEv($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function _ut_nativestring_placement_delete($0) {
 $0 = $0 | 0;
 _free(HEAP32[$0 >> 2] | 0);
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 return;
}

function __ZNSt3__220__shared_ptr_emplaceI14UpdateFnSystemNS_9allocatorIS1_EEE21__on_zero_shared_weakEv($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNSt3__220__shared_ptr_emplaceI14DelegateSystemNS_9allocatorIS1_EEE21__on_zero_shared_weakEv($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNSt3__210__function6__funcIPFvvENS_9allocatorIS3_EES2_EclEv($0) {
 $0 = $0 | 0;
 FUNCTION_TABLE_v[HEAP32[$0 + 4 >> 2] & 3]();
 return;
}

function dynCall_iii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 return FUNCTION_TABLE_iii[index & 1](a1 | 0, a2 | 0) | 0;
}

function __ZNSt3__210__function6__funcIPFvPN2ut9SchedulerEPNS2_12ManagerWorldEPvENS_9allocatorIS9_EES8_E7destroyEv($0) {
 $0 = $0 | 0;
 return;
}

function __ZN2ut12ManagerWorld6toJSONEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN2ut10Serializer6toJSONERNS_12ManagerWorldE($0, $1);
 return;
}

function __ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return ($0 | 0) == ($1 | 0) | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbED2Ev($0) {
 $0 = $0 | 0;
 HEAP8[HEAP32[$0 >> 2] >> 0] = HEAP8[$0 + 4 >> 0] | 0;
 return;
}

function _ut_nativestring_free_data($0) {
 $0 = $0 | 0;
 _free(HEAP32[$0 >> 2] | 0);
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 return;
}

function _ut_EntityInformation_dtor($0) {
 $0 = $0 | 0;
 _free(HEAP32[$0 >> 2] | 0);
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 return;
}

function _wctomb($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0;
 if (!$0) $$0 = 0; else $$0 = _wcrtomb($0, $1, 0) | 0;
 return $$0 | 0;
}

function _swapc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $3 = 0;
 $3 = _llvm_bswap_i32($0 | 0) | 0;
 return (($1 | 0) == 0 ? $0 : $3) | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_110save_valueIjED2Ev($0) {
 $0 = $0 | 0;
 HEAP32[HEAP32[$0 >> 2] >> 2] = HEAP32[$0 + 4 >> 2];
 return;
}

function __ZN14UpdateFnSystem7removedERN2ut9SchedulerERNS0_12ManagerWorldE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return;
}

function __ZN14DelegateSystem7removedERN2ut9SchedulerERNS0_12ManagerWorldE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return;
}

function __ZN10__cxxabiv120__si_class_type_infoD0Ev($0) {
 $0 = $0 | 0;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($0);
 __ZdlPv($0);
 return;
}

function setThrew(threw, value) {
 threw = threw | 0;
 value = value | 0;
 if (!__THREW__) {
  __THREW__ = threw;
  threwValue = value;
 }
}

function __ZN2ut12SimpleSystem7removedERNS_9SchedulerERNS_12ManagerWorldE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return;
}

function __ZN14UpdateFnSystem5addedERN2ut9SchedulerERNS0_12ManagerWorldE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return;
}

function __ZN14DelegateSystem5addedERN2ut9SchedulerERNS0_12ManagerWorldE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return;
}

function _ut_World_fromJSON($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN2ut12ManagerWorld8fromJSONERKNS_12NativeStringE($0, $1);
 return;
}

function _ut_World_StartBuffering($0) {
 $0 = $0 | 0;
 __ZN2ut4arch13EntityManager14startBufferingENS0_13BufferingModeE($0, 0);
 return;
}

function _out($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 if (!(HEAP32[$0 >> 2] & 32)) ___fwritex($1, $2, $0) | 0;
 return;
}

function __ZN2ut12SimpleSystem5addedERNS_9SchedulerERNS_12ManagerWorldE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return;
}

function __ZN10__cxxabiv117__class_type_infoD0Ev($0) {
 $0 = $0 | 0;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($0);
 __ZdlPv($0);
 return;
}

function dynCall_vii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 FUNCTION_TABLE_vii[index & 15](a1 | 0, a2 | 0);
}

function _ut_World_StopBuffering($0) {
 $0 = $0 | 0;
 __ZN2ut4arch13EntityManager13stopBufferingENS0_13BufferingModeE($0, 0);
 return;
}

function __ZNSt3__211char_traitsIcE6assignERcRKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 >> 0] = HEAP8[$1 >> 0] | 0;
 return;
}

function b9(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 abort(9);
}

function _ut_World_BufferDepth($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = HEAP32[$0 + 36 >> 2] | 0;
 return (($2 | 0) > 0 ? $2 : 0) | 0;
}

function __ZNSt3__210__function6__funcIPFvvENS_9allocatorIS3_EES2_E18destroy_deallocateEv($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function _ut_nativebuffer_pod_placement_delete($0) {
 $0 = $0 | 0;
 HEAP32[$0 + 4 >> 2] = 0;
 _free(HEAP32[$0 >> 2] | 0);
 return;
}

function _ut_DestructorFn_call($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 _emscripten_asm_const_iii(1, $0 | 0, $1 | 0) | 0;
 return;
}

function _llvm_bswap_i32(x) {
 x = x | 0;
 return (x & 255) << 24 | (x >> 8 & 255) << 16 | (x >> 16 & 255) << 8 | x >>> 24 | 0;
}

function _ut_Scheduler_FindSys($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZN2ut9Scheduler4findEPNS_6SystemE($0, $1) | 0;
}

function _ut_Scheduler_IsEnabledId($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZN2ut9Scheduler9isEnabledEi($0, $1) | 0;
}

function _ut_nativestring_delete($0) {
 $0 = $0 | 0;
 if (!$0) return;
 _free(HEAP32[$0 >> 2] | 0);
 __ZdlPv($0);
 return;
}

function _ut_Scheduler_shRelease($0) {
 $0 = $0 | 0;
 if (!$0) return;
 __ZN2ut9SchedulerD2Ev($0);
 __ZdlPv($0);
 return;
}

function _ut_ArchetypeChunkIterator_Next($0) {
 $0 = $0 | 0;
 return __ZN2ut4arch22ArchetypeChunkIterator4nextEv($0) | 0;
}

function _strerror($0) {
 $0 = $0 | 0;
 return ___strerror_l($0, HEAP32[(___pthread_self_107() | 0) + 188 >> 2] | 0) | 0;
}

function __ZNKSt3__219__shared_weak_count13__get_deleterERKSt9type_info($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return 0;
}

function _ut_World_DebugCheckEntities($0) {
 $0 = $0 | 0;
 __ZN2ut12ManagerWorld18debugCheckEntitiesEb($0, 1);
 return;
}

function _ut_Scheduler_DisableId($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN2ut9Scheduler7disableEi($0, $1);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EEC2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 + 4096 >> 2] = $0;
 return;
}

function dynCall_ii(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 return FUNCTION_TABLE_ii[index & 7](a1 | 0) | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EED2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 + 4096 >> 2] = 0;
 return;
}

function _ut_Scheduler_RemoveId($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN2ut9Scheduler6removeEi($0, $1);
 return;
}

function _ut_Scheduler_EnableId($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN2ut9Scheduler6enableEi($0, $1);
 return;
}

function _isxdigit($0) {
 $0 = $0 | 0;
 return ((($0 | 32) + -97 | 0) >>> 0 < 6 | (_isdigit($0) | 0) != 0) & 1 | 0;
}

function b8(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 abort(8);
}

function __ZNSt3__210__function6__funcIPFvvENS_9allocatorIS3_EES2_ED0Ev($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNSt3__210__function6__baseIFvPN2ut9SchedulerEPNS2_12ManagerWorldEPvEED2Ev($0) {
 $0 = $0 | 0;
 return;
}

function _ut_World_shRelease($0) {
 $0 = $0 | 0;
 __ZN2ut8PtrTable7releaseINS_12ManagerWorldEEEvPT_($0);
 return;
}

function __ZSt15get_new_handlerv() {
 var $0 = 0;
 $0 = HEAP32[6264] | 0;
 HEAP32[6264] = $0 + 0;
 return $0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcj($0) {
 $0 = $0 | 0;
 _free($0);
 return;
}

function __ZNSt3__210__function6__baseIFvPN2ut9SchedulerEPNS2_12ManagerWorldEEED2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILj4096EE8align_upEj($0) {
 $0 = $0 | 0;
 return $0 + 15 & -16 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEj($0) {
 $0 = $0 | 0;
 return _malloc($0) | 0;
}

function __ZSt13get_terminatev() {
 var $0 = 0;
 $0 = HEAP32[1225] | 0;
 HEAP32[1225] = $0 + 0;
 return $0 | 0;
}

function _ut_Entity_IsNone($0) {
 $0 = $0 | 0;
 return (HEAP32[$0 + 4 >> 2] | HEAP32[$0 >> 2] | 0) == 0 | 0;
}

function _ut_System_shRelease($0) {
 $0 = $0 | 0;
 __ZN2ut8PtrTable7releaseINS_6SystemEEEvPT_($0);
 return;
}

function __ZN2ut12ManagerWorld3runEv($0) {
 $0 = $0 | 0;
 __ZN2ut9Scheduler3runEv($0 + 32928 | 0);
 return;
}

function dynCall_vi(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 FUNCTION_TABLE_vi[index & 63](a1 | 0);
}

function _ut_EntityInformation_cid() {
 return __ZN2ut15InitComponentIdINS_17EntityInformationEEEjv() | 0;
}

function ___clang_call_terminate($0) {
 $0 = $0 | 0;
 ___cxa_begin_catch($0 | 0) | 0;
 __ZSt9terminatev();
}

function __ZNSt3__210__function6__funcIPFvvENS_9allocatorIS3_EES2_E7destroyEv($0) {
 $0 = $0 | 0;
 return;
}

function __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv($0) {
 $0 = $0 | 0;
 _abort();
}

function __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0) {
 $0 = $0 | 0;
 _abort();
}

function __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0) {
 $0 = $0 | 0;
 _abort();
}

function __ZNK2ut9Scheduler8isPausedEv($0) {
 $0 = $0 | 0;
 return (HEAP32[$0 + 92 >> 2] | 0) == 2 | 0;
}

function _llvm_cttz_i32(x) {
 x = x | 0;
 return (x ? 31 - (Math_clz32(x ^ x - 1) | 0) | 0 : 32) | 0;
}

function _ut_Scheduler_DeltaTime($0) {
 $0 = $0 | 0;
 return +(+__ZN2ut9Scheduler9deltaTimeEv($0));
}

function _ut_Scheduler_IsPaused($0) {
 $0 = $0 | 0;
 return __ZNK2ut9Scheduler8isPausedEv($0) | 0;
}

function _ut_Archetype_GetComponentTypeCount($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 28 >> 2] | 0;
}

function _ut_Scheduler_RemoveAll($0) {
 $0 = $0 | 0;
 __ZN2ut9Scheduler9removeAllEv($0);
 return;
}

function b7(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 abort(7);
}

function _ut_ArchetypeChunkIterator_Count($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 24 >> 2] | 0;
}

function __ZNSt3__220__throw_system_errorEiPKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 _abort();
}

function _strcpy($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 ___stpcpy($0, $1) | 0;
 return $0 | 0;
}

function ___lctrans($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return ___lctrans_impl($0, $1) | 0;
}

function _ut_System_Scheduled($0) {
 $0 = $0 | 0;
 return (HEAP8[$0 + 36 >> 0] | 0) != 0 | 0;
}

function _ut_Archetype_shRelease($0) {
 $0 = $0 | 0;
 if (!$0) return;
 __ZdlPv($0);
 return;
}

function __ZN2ut9Scheduler9deltaTimeEv($0) {
 $0 = $0 | 0;
 return +(+HEAPF64[$0 + 32 >> 3]);
}

function __ZNSt3__211char_traitsIcE11to_int_typeEc($0) {
 $0 = $0 | 0;
 return $0 & 255 | 0;
}

function _ut_Scheduler_Resume($0) {
 $0 = $0 | 0;
 __ZN2ut9Scheduler6resumeEv($0);
 return;
}

function __ZNSt3__211char_traitsIcE6lengthEPKc($0) {
 $0 = $0 | 0;
 return _strlen($0) | 0;
}

function __ZN2ut9Scheduler6resumeEv($0) {
 $0 = $0 | 0;
 HEAP32[$0 + 92 >> 2] = 0;
 return;
}

function b2(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(2);
 return 0;
}

function _ut_Scheduler_Pause($0) {
 $0 = $0 | 0;
 __ZN2ut9Scheduler5pauseEv($0);
 return;
}

function _ut_nativebuffer_capacity($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 8 >> 2] | 0;
}

function _ut_World_EmptyArchetype($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 16 >> 2] | 0;
}

function _ut_Scheduler_Step($0) {
 $0 = $0 | 0;
 __ZN2ut9Scheduler4stepEv($0);
 return;
}

function _ut_Scheduler_Now($0) {
 $0 = $0 | 0;
 return +(+__ZN2ut9Scheduler3nowEv($0));
}

function _ut_nativestring_length($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 4 >> 2] | 0;
}

function _ut_World_Run($0) {
 $0 = $0 | 0;
 __ZN2ut12ManagerWorld3runEv($0);
 return;
}

function _ut_Scheduler_Run($0) {
 $0 = $0 | 0;
 __ZN2ut9Scheduler3runEv($0);
 return;
}

function _ut_nativebuffer_size($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 4 >> 2] | 0;
}

function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($0) {
 $0 = $0 | 0;
 return;
}

function dynCall_v(index) {
 index = index | 0;
 FUNCTION_TABLE_v[index & 3]();
}

function _ut_nativestring_data($0) {
 $0 = $0 | 0;
 return HEAP32[$0 >> 2] | 0;
}

function _frexpl($0, $1) {
 $0 = +$0;
 $1 = $1 | 0;
 return +(+_frexp($0, $1));
}

function b6(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(6);
}

function __ZNSt3__210__function6__baseIFvvEED2Ev($0) {
 $0 = $0 | 0;
 return;
}

function _isupper($0) {
 $0 = $0 | 0;
 return ($0 + -65 | 0) >>> 0 < 26 | 0;
}

function _isdigit($0) {
 $0 = $0 | 0;
 return ($0 + -48 | 0) >>> 0 < 10 | 0;
}

function __ZN10__cxxabiv116__shim_type_infoD2Ev($0) {
 $0 = $0 | 0;
 return;
}

function _ut_World_Scheduler($0) {
 $0 = $0 | 0;
 return $0 + 32928 | 0;
}

function b1(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(1);
 return 0;
}

function setTempRet0(value) {
 value = value | 0;
 tempRet0 = value;
}

function __ZNSt3__214__shared_countD2Ev($0) {
 $0 = $0 | 0;
 return;
}

function ___cxa_pure_virtual__wrapper() {
 ___cxa_pure_virtual();
}

function __ZN2ut6SystemD0Ev($0) {
 $0 = $0 | 0;
 _llvm_trap();
}

function stackRestore(top) {
 top = top | 0;
 STACKTOP = top;
}

function ___pthread_self_447() {
 return _pthread_self() | 0;
}

function ___pthread_self_107() {
 return _pthread_self() | 0;
}

function b5(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(5);
}

function __Znaj($0) {
 $0 = $0 | 0;
 return __Znwj($0) | 0;
}

function __ZdaPv($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZNSt9type_infoD2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZdlPv($0) {
 $0 = $0 | 0;
 _free($0);
 return;
}

function _dummy_734($0) {
 $0 = $0 | 0;
 return $0 | 0;
}

function b0(p0) {
 p0 = p0 | 0;
 abort(0);
 return 0;
}

function _ut_meta_get_type_uint64() {
 return 3540;
}

function _ut_meta_get_type_uint32() {
 return 3560;
}

function _ut_meta_get_type_uint16() {
 return 3580;
}

function _ut_meta_get_type_string() {
 return 3480;
}

function _ut_meta_get_type_double() {
 return 3680;
}

function ___unlockfile($0) {
 $0 = $0 | 0;
 return;
}

function ___lockfile($0) {
 $0 = $0 | 0;
 return 0;
}

function _ut_meta_get_type_uint8() {
 return 3520;
}

function _ut_meta_get_type_int64() {
 return 3620;
}

function _ut_meta_get_type_int32() {
 return 3500;
}

function _ut_meta_get_type_int16() {
 return 3640;
}

function _ut_meta_get_type_float() {
 return 3660;
}

function _ut_meta_get_type_int8() {
 return 3600;
}

function _ut_meta_get_type_bool() {
 return 3700;
}

function getTempRet0() {
 return tempRet0 | 0;
}

function ___errno_location() {
 return 25044;
}

function stackSave() {
 return STACKTOP | 0;
}

function b4(p0) {
 p0 = p0 | 0;
 abort(4);
}

function _pthread_self() {
 return 4272;
}

function b3() {
 abort(3);
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_ii = [b0,__ZNKSt3__210__function6__funcIPFvvENS_9allocatorIS3_EES2_E7__cloneEv,__ZNKSt3__210__function6__funcIPFvPN2ut9SchedulerEPNS2_12ManagerWorldEPvENS_9allocatorIS9_EES8_E7__cloneEv,__ZNKSt3__210__function6__funcINS_6__bindIRFvjPN2ut9SchedulerEPNS3_12ManagerWorldEEJRjRKNS_12placeholders4__phILi1EEERKNSC_ILi2EEEEEENS_9allocatorISJ_EEFvS5_S7_EE7__cloneEv,___stdio_close,b0,b0,b0];
var FUNCTION_TABLE_iii = [b1,__ZNKSt3__219__shared_weak_count13__get_deleterERKSt9type_info];
var FUNCTION_TABLE_iiii = [b2,___stdio_write,___stdio_seek,___stdout_write,_sn_write,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,b2,b2];
var FUNCTION_TABLE_v = [b3,___cxa_pure_virtual__wrapper,__ZL25default_terminate_handlerv,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev];
var FUNCTION_TABLE_vi = [b4,__ZNSt3__210__function6__baseIFvvEED2Ev,__ZNSt3__210__function6__funcIPFvvENS_9allocatorIS3_EES2_ED0Ev,__ZNSt3__210__function6__funcIPFvvENS_9allocatorIS3_EES2_E7destroyEv,__ZNSt3__210__function6__funcIPFvvENS_9allocatorIS3_EES2_E18destroy_deallocateEv,__ZNSt3__210__function6__funcIPFvvENS_9allocatorIS3_EES2_EclEv,__ZNSt3__220__shared_ptr_emplaceI14UpdateFnSystemNS_9allocatorIS1_EEED2Ev,__ZNSt3__220__shared_ptr_emplaceI14UpdateFnSystemNS_9allocatorIS1_EEED0Ev,__ZNSt3__220__shared_ptr_emplaceI14UpdateFnSystemNS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__220__shared_ptr_emplaceI14UpdateFnSystemNS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZN14UpdateFnSystemD2Ev,__ZN14UpdateFnSystemD0Ev,__ZN2ut6SystemD2Ev,__ZN2ut6SystemD0Ev,__ZNSt3__220__shared_ptr_emplaceI14DelegateSystemNS_9allocatorIS1_EEED2Ev,__ZNSt3__220__shared_ptr_emplaceI14DelegateSystemNS_9allocatorIS1_EEED0Ev,__ZNSt3__220__shared_ptr_emplaceI14DelegateSystemNS_9allocatorIS1_EEE16__on_zero_sharedEv,__ZNSt3__220__shared_ptr_emplaceI14DelegateSystemNS_9allocatorIS1_EEE21__on_zero_shared_weakEv,__ZNSt3__210__function6__baseIFvPN2ut9SchedulerEPNS2_12ManagerWorldEPvEED2Ev,__ZNSt3__210__function6__funcIPFvPN2ut9SchedulerEPNS2_12ManagerWorldEPvENS_9allocatorIS9_EES8_ED0Ev,__ZNSt3__210__function6__funcIPFvPN2ut9SchedulerEPNS2_12ManagerWorldEPvENS_9allocatorIS9_EES8_E7destroyEv,__ZNSt3__210__function6__funcIPFvPN2ut9SchedulerEPNS2_12ManagerWorldEPvENS_9allocatorIS9_EES8_E18destroy_deallocateEv,__ZN14DelegateSystemD2Ev,__ZN14DelegateSystemD0Ev,__ZNSt3__220__shared_ptr_emplaceIN2ut12ManagerWorldENS_9allocatorIS2_EEED2Ev,__ZNSt3__220__shared_ptr_emplaceIN2ut12ManagerWorldENS_9allocatorIS2_EEED0Ev,__ZNSt3__220__shared_ptr_emplaceIN2ut12ManagerWorldENS_9allocatorIS2_EEE16__on_zero_sharedEv,__ZNSt3__220__shared_ptr_emplaceIN2ut12ManagerWorldENS_9allocatorIS2_EEE21__on_zero_shared_weakEv,__ZNSt3__210__function6__baseIFvPN2ut9SchedulerEPNS2_12ManagerWorldEEED2Ev
,__ZNSt3__210__function6__funcINS_6__bindIRFvjPN2ut9SchedulerEPNS3_12ManagerWorldEEJRjRKNS_12placeholders4__phILi1EEERKNSC_ILi2EEEEEENS_9allocatorISJ_EEFvS5_S7_EED0Ev,__ZNSt3__210__function6__funcINS_6__bindIRFvjPN2ut9SchedulerEPNS3_12ManagerWorldEEJRjRKNS_12placeholders4__phILi1EEERKNSC_ILi2EEEEEENS_9allocatorISJ_EEFvS5_S7_EE7destroyEv,__ZNSt3__210__function6__funcINS_6__bindIRFvjPN2ut9SchedulerEPNS3_12ManagerWorldEEJRjRKNS_12placeholders4__phILi1EEERKNSC_ILi2EEEEEENS_9allocatorISJ_EEFvS5_S7_EE18destroy_deallocateEv,__ZNSt3__220__shared_ptr_emplaceIN2ut12SimpleSystemENS_9allocatorIS2_EEED2Ev,__ZNSt3__220__shared_ptr_emplaceIN2ut12SimpleSystemENS_9allocatorIS2_EEED0Ev,__ZNSt3__220__shared_ptr_emplaceIN2ut12SimpleSystemENS_9allocatorIS2_EEE16__on_zero_sharedEv,__ZNSt3__220__shared_ptr_emplaceIN2ut12SimpleSystemENS_9allocatorIS2_EEE21__on_zero_shared_weakEv,__ZN2ut12SimpleSystemD2Ev,__ZN2ut12SimpleSystemD0Ev,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,__ZN10__cxxabiv120__si_class_type_infoD0Ev,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4];
var FUNCTION_TABLE_vii = [b5,__ZNKSt3__210__function6__funcIPFvvENS_9allocatorIS3_EES2_E7__cloneEPNS0_6__baseIS2_EE,__ZN2ut6System12updateBeforeERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE,__ZN2ut6System11updateAfterERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE,__ZNKSt3__210__function6__funcIPFvPN2ut9SchedulerEPNS2_12ManagerWorldEPvENS_9allocatorIS9_EES8_E7__cloneEPNS0_6__baseIS8_EE,__ZNKSt3__210__function6__funcINS_6__bindIRFvjPN2ut9SchedulerEPNS3_12ManagerWorldEEJRjRKNS_12placeholders4__phILi1EEERKNSC_ILi2EEEEEENS_9allocatorISJ_EEFvS5_S7_EE7__cloneEPNS0_6__baseISM_EE,__ZZN2ut20InitComponentInfoForINS_13CleanupEntityEEERNS_13ComponentInfoEvENUlPviE1_8__invokeES4_i,__ZZN2ut20InitComponentInfoForINS_8DisabledEEERNS_13ComponentInfoEvENUlPviE1_8__invokeES4_i,__ZZ25ut_component_register_cidEN3__08__invokeEPvi,__ZZ35ut_component_register_cid_with_typeEN3__38__invokeEPvi,__ZZ30registerOpaqueComponentPrivateiijPKcPiiPFvPviEiPFvPKvS2_iEiEN3__08__invokeES2_i,__ZZN2ut20InitComponentInfoForINS_6EntityEEERNS_13ComponentInfoEvENUlPviE1_8__invokeES4_i,__ZZN2ut20InitComponentInfoForINS_17EntityInformationEEERNS_13ComponentInfoEvENUlPviE_8__invokeES4_i,__ZZN2ut20InitComponentInfoForINS_17EntityInformationEEERNS_13ComponentInfoEvENUlPviE0_8__invokeES4_i,__ZZN2ut20InitComponentInfoForINS_17EntityInformationEEERNS_13ComponentInfoEvENUlPvS4_E_8__invokeES4_S4_,__ZZN2ut20InitComponentInfoForINS_17EntityInformationEEERNS_13ComponentInfoEvENUlPviE1_8__invokeES4_i];
var FUNCTION_TABLE_viii = [b6,__ZN14UpdateFnSystem5addedERN2ut9SchedulerERNS0_12ManagerWorldE,__ZN14UpdateFnSystem6updateERN2ut9SchedulerERNS0_12ManagerWorldE,__ZN14UpdateFnSystem7removedERN2ut9SchedulerERNS0_12ManagerWorldE,__ZN14DelegateSystem5addedERN2ut9SchedulerERNS0_12ManagerWorldE,__ZN14DelegateSystem6updateERN2ut9SchedulerERNS0_12ManagerWorldE,__ZN14DelegateSystem7removedERN2ut9SchedulerERNS0_12ManagerWorldE,__ZNSt3__210__function6__funcINS_6__bindIRFvjPN2ut9SchedulerEPNS3_12ManagerWorldEEJRjRKNS_12placeholders4__phILi1EEERKNSC_ILi2EEEEEENS_9allocatorISJ_EEFvS5_S7_EEclEOS5_OS7_,__ZN2ut12SimpleSystem5addedERNS_9SchedulerERNS_12ManagerWorldE,__ZN2ut12SimpleSystem6updateERNS_9SchedulerERNS_12ManagerWorldE,__ZN2ut12SimpleSystem7removedERNS_9SchedulerERNS_12ManagerWorldE,_ut_SystemFn_call,__ZZ25ut_component_register_cidEN3__18__invokeEPKvPvi,__ZZ25ut_component_register_cidEN3__28__invokeEPKvPvi,__ZZ35ut_component_register_cid_with_typeEN3__48__invokeEPKvPvi,__ZZ35ut_component_register_cid_with_typeEN3__58__invokeEPKvPvi,__ZZN2ut20InitComponentInfoForINS_17EntityInformationEEERNS_13ComponentInfoEvENUlPKvPviE_8__invokeES5_S6_i,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6];
var FUNCTION_TABLE_viiii = [b7,__ZNSt3__210__function6__funcIPFvPN2ut9SchedulerEPNS2_12ManagerWorldEPvENS_9allocatorIS9_EES8_EclEOS4_OS6_OS7_,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi];
var FUNCTION_TABLE_viiiii = [b8,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b8];
var FUNCTION_TABLE_viiiiii = [b9,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b9];

  return { ___cxa_demangle: ___cxa_demangle, ___muldi3: ___muldi3, ___udivdi3: ___udivdi3, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, _free: _free, _i64Add: _i64Add, _i64Subtract: _i64Subtract, _llvm_bswap_i32: _llvm_bswap_i32, _llvm_ctlz_i64: _llvm_ctlz_i64, _malloc: _malloc, _memcpy: _memcpy, _memmove: _memmove, _memset: _memset, _sbrk: _sbrk, _strlen: _strlen, _ut_ArchetypeChunkIterator_AddFilter: _ut_ArchetypeChunkIterator_AddFilter, _ut_ArchetypeChunkIterator_Count: _ut_ArchetypeChunkIterator_Count, _ut_ArchetypeChunkIterator_GetBasePointersAndSizesInOrder: _ut_ArchetypeChunkIterator_GetBasePointersAndSizesInOrder, _ut_ArchetypeChunkIterator_GetTypeOrSharedComponentIndicesAndSizesInOrder: _ut_ArchetypeChunkIterator_GetTypeOrSharedComponentIndicesAndSizesInOrder, _ut_ArchetypeChunkIterator_GetTypeOrSharedComponentIndicesAndSizesInOrderForSpecs: _ut_ArchetypeChunkIterator_GetTypeOrSharedComponentIndicesAndSizesInOrderForSpecs, _ut_ArchetypeChunkIterator_Next: _ut_ArchetypeChunkIterator_Next, _ut_ArchetypeChunkIterator_RawData: _ut_ArchetypeChunkIterator_RawData, _ut_ArchetypeChunkIterator_RawDataByIndex: _ut_ArchetypeChunkIterator_RawDataByIndex, _ut_ArchetypeChunkIterator_RawSharedData: _ut_ArchetypeChunkIterator_RawSharedData, _ut_ArchetypeChunkIterator_RawSharedDataByIndex: _ut_ArchetypeChunkIterator_RawSharedDataByIndex, _ut_ArchetypeChunkIterator_shRelease: _ut_ArchetypeChunkIterator_shRelease, _ut_Archetype_GetComponentTypeCount: _ut_Archetype_GetComponentTypeCount, _ut_Archetype_shRelease: _ut_Archetype_shRelease, _ut_CleanupEntity_cid: _ut_CleanupEntity_cid, _ut_Component_Register_Component: _ut_Component_Register_Component, _ut_CopyFn_call: _ut_CopyFn_call, _ut_CoreService_CreateSystem: _ut_CoreService_CreateSystem, _ut_CoreService_GetCurrentLocale: _ut_CoreService_GetCurrentLocale, _ut_CoreService_GetSupportedLocales: _ut_CoreService_GetSupportedLocales, _ut_DestructorFn_call: _ut_DestructorFn_call, _ut_Disabled_cid: _ut_Disabled_cid, _ut_EntityCommandBuffer_AddComponentDataRaw: _ut_EntityCommandBuffer_AddComponentDataRaw, _ut_EntityCommandBuffer_AddComponentRaw: _ut_EntityCommandBuffer_AddComponentRaw, _ut_EntityCommandBuffer_AddSharedComponentDataRaw: _ut_EntityCommandBuffer_AddSharedComponentDataRaw, _ut_EntityCommandBuffer_Commit: _ut_EntityCommandBuffer_Commit, _ut_EntityCommandBuffer_CreateDeferredEntities: _ut_EntityCommandBuffer_CreateDeferredEntities, _ut_EntityCommandBuffer_CreateDeferredEntity: _ut_EntityCommandBuffer_CreateDeferredEntity, _ut_EntityCommandBuffer_CreateEntities: _ut_EntityCommandBuffer_CreateEntities, _ut_EntityCommandBuffer_CreateEntity: _ut_EntityCommandBuffer_CreateEntity, _ut_EntityCommandBuffer_DestroyEntities: _ut_EntityCommandBuffer_DestroyEntities, _ut_EntityCommandBuffer_DestroyEntity: _ut_EntityCommandBuffer_DestroyEntity, _ut_EntityCommandBuffer_Dispose: _ut_EntityCommandBuffer_Dispose, _ut_EntityCommandBuffer_EntityCommandBuffer: _ut_EntityCommandBuffer_EntityCommandBuffer, _ut_EntityCommandBuffer_InstantiateDeferredEntities: _ut_EntityCommandBuffer_InstantiateDeferredEntities, _ut_EntityCommandBuffer_InstantiateDeferredEntity: _ut_EntityCommandBuffer_InstantiateDeferredEntity, _ut_EntityCommandBuffer_InstantiateEntities: _ut_EntityCommandBuffer_InstantiateEntities, _ut_EntityCommandBuffer_Playback: _ut_EntityCommandBuffer_Playback, _ut_EntityCommandBuffer_RemoveComponentRaw: _ut_EntityCommandBuffer_RemoveComponentRaw, _ut_EntityCommandBuffer_SetComponentDataRaw: _ut_EntityCommandBuffer_SetComponentDataRaw, _ut_EntityCommandBuffer_SetEntityName: _ut_EntityCommandBuffer_SetEntityName, _ut_EntityCommandBuffer_SetSharedComponentDataRaw: _ut_EntityCommandBuffer_SetSharedComponentDataRaw, _ut_EntityCommandBuffer_TranslateDeferredEntity: _ut_EntityCommandBuffer_TranslateDeferredEntity, _ut_EntityCommandBuffer_shRelease: _ut_EntityCommandBuffer_shRelease, _ut_EntityFn_call: _ut_EntityFn_call, _ut_EntityInformation_cid: _ut_EntityInformation_cid, _ut_EntityInformation_dtor: _ut_EntityInformation_dtor, _ut_Entity_IsNone: _ut_Entity_IsNone, _ut_Entity_cid: _ut_Entity_cid, _ut_Scheduler_DeltaTime: _ut_Scheduler_DeltaTime, _ut_Scheduler_DisableId: _ut_Scheduler_DisableId, _ut_Scheduler_DisableName: _ut_Scheduler_DisableName, _ut_Scheduler_EnableId: _ut_Scheduler_EnableId, _ut_Scheduler_EnableName: _ut_Scheduler_EnableName, _ut_Scheduler_FindName: _ut_Scheduler_FindName, _ut_Scheduler_FindSys: _ut_Scheduler_FindSys, _ut_Scheduler_IsEnabledId: _ut_Scheduler_IsEnabledId, _ut_Scheduler_IsEnabledName: _ut_Scheduler_IsEnabledName, _ut_Scheduler_IsPaused: _ut_Scheduler_IsPaused, _ut_Scheduler_Name: _ut_Scheduler_Name, _ut_Scheduler_Now: _ut_Scheduler_Now, _ut_Scheduler_Pause: _ut_Scheduler_Pause, _ut_Scheduler_RemoveAll: _ut_Scheduler_RemoveAll, _ut_Scheduler_RemoveId: _ut_Scheduler_RemoveId, _ut_Scheduler_RemoveName: _ut_Scheduler_RemoveName, _ut_Scheduler_Resume: _ut_Scheduler_Resume, _ut_Scheduler_Run: _ut_Scheduler_Run, _ut_Scheduler_ScheduleFnInternal: _ut_Scheduler_ScheduleFnInternal, _ut_Scheduler_ScheduleSysInternal: _ut_Scheduler_ScheduleSysInternal, _ut_Scheduler_Step: _ut_Scheduler_Step, _ut_Scheduler_Stringify: _ut_Scheduler_Stringify, _ut_Scheduler_shRelease: _ut_Scheduler_shRelease, _ut_SystemFn_call: _ut_SystemFn_call, _ut_System_Create_For_Delegate: _ut_System_Create_For_Delegate, _ut_System_Create_For_UpdateFn: _ut_System_Create_For_UpdateFn, _ut_System_Name: _ut_System_Name, _ut_System_Scheduled: _ut_System_Scheduled, _ut_System_Set_UpdateFn: _ut_System_Set_UpdateFn, _ut_System_UpdateAfter: _ut_System_UpdateAfter, _ut_System_UpdateBefore: _ut_System_UpdateBefore, _ut_System_shRelease: _ut_System_shRelease, _ut_World_AddComponentDataRaw: _ut_World_AddComponentDataRaw, _ut_World_AddComponentRaw: _ut_World_AddComponentRaw, _ut_World_AddSharedComponentDataRaw: _ut_World_AddSharedComponentDataRaw, _ut_World_AddSharedComponentRaw: _ut_World_AddSharedComponentRaw, _ut_World_AllocChunkIterator: _ut_World_AllocChunkIterator, _ut_World_BufferDepth: _ut_World_BufferDepth, _ut_World_CreateArchetype: _ut_World_CreateArchetype, _ut_World_CreateEntities: _ut_World_CreateEntities, _ut_World_CreateEntity: _ut_World_CreateEntity, _ut_World_DebugCheckEntities: _ut_World_DebugCheckEntities, _ut_World_DestroyEntities: _ut_World_DestroyEntities, _ut_World_DestroyEntity: _ut_World_DestroyEntity, _ut_World_EmptyArchetype: _ut_World_EmptyArchetype, _ut_World_Exists: _ut_World_Exists, _ut_World_GetArchetype: _ut_World_GetArchetype, _ut_World_GetComponentDataRaw: _ut_World_GetComponentDataRaw, _ut_World_GetConfigDataRaw: _ut_World_GetConfigDataRaw, _ut_World_GetConfigEntity: _ut_World_GetConfigEntity, _ut_World_GetEntityByName: _ut_World_GetEntityByName, _ut_World_GetEntityName: _ut_World_GetEntityName, _ut_World_GetSharedComponentDataRaw: _ut_World_GetSharedComponentDataRaw, _ut_World_HasComponentRaw: _ut_World_HasComponentRaw, _ut_World_InstantiateEntities: _ut_World_InstantiateEntities, _ut_World_InstantiateEntity: _ut_World_InstantiateEntity, _ut_World_RemoveComponentRaw: _ut_World_RemoveComponentRaw, _ut_World_Run: _ut_World_Run, _ut_World_Scheduler: _ut_World_Scheduler, _ut_World_SetComponentDataRaw: _ut_World_SetComponentDataRaw, _ut_World_SetConfigDataRaw: _ut_World_SetConfigDataRaw, _ut_World_SetEntityName: _ut_World_SetEntityName, _ut_World_SetSharedComponentDataRaw: _ut_World_SetSharedComponentDataRaw, _ut_World_StartBuffering: _ut_World_StartBuffering, _ut_World_StopBuffering: _ut_World_StopBuffering, _ut_World_World: _ut_World_World, _ut_World_fromJSON: _ut_World_fromJSON, _ut_World_shRelease: _ut_World_shRelease, _ut_World_toJSON: _ut_World_toJSON, _ut_component_register_cid: _ut_component_register_cid, _ut_component_register_cid_with_type: _ut_component_register_cid_with_type, _ut_meta_get_type_bool: _ut_meta_get_type_bool, _ut_meta_get_type_double: _ut_meta_get_type_double, _ut_meta_get_type_float: _ut_meta_get_type_float, _ut_meta_get_type_int16: _ut_meta_get_type_int16, _ut_meta_get_type_int32: _ut_meta_get_type_int32, _ut_meta_get_type_int64: _ut_meta_get_type_int64, _ut_meta_get_type_int8: _ut_meta_get_type_int8, _ut_meta_get_type_string: _ut_meta_get_type_string, _ut_meta_get_type_uint16: _ut_meta_get_type_uint16, _ut_meta_get_type_uint32: _ut_meta_get_type_uint32, _ut_meta_get_type_uint64: _ut_meta_get_type_uint64, _ut_meta_get_type_uint8: _ut_meta_get_type_uint8, _ut_meta_get_type_ut_entity: _ut_meta_get_type_ut_entity, _ut_meta_get_type_ut_entityinformation: _ut_meta_get_type_ut_entityinformation, _ut_meta_get_type_ut_localeresult: _ut_meta_get_type_ut_localeresult, _ut_nativebuffer_capacity: _ut_nativebuffer_capacity, _ut_nativebuffer_data: _ut_nativebuffer_data, _ut_nativebuffer_nativestring_copy_construct: _ut_nativebuffer_nativestring_copy_construct, _ut_nativebuffer_nativestring_create: _ut_nativebuffer_nativestring_create, _ut_nativebuffer_nativestring_delete: _ut_nativebuffer_nativestring_delete, _ut_nativebuffer_nativestring_placement_create: _ut_nativebuffer_nativestring_placement_create, _ut_nativebuffer_nativestring_placement_delete: _ut_nativebuffer_nativestring_placement_delete, _ut_nativebuffer_nativestring_resize: _ut_nativebuffer_nativestring_resize, _ut_nativebuffer_nativestring_scratch_create: _ut_nativebuffer_nativestring_scratch_create, _ut_nativebuffer_nativestring_set: _ut_nativebuffer_nativestring_set, _ut_nativebuffer_pod_copy_construct: _ut_nativebuffer_pod_copy_construct, _ut_nativebuffer_pod_create_uninitialized: _ut_nativebuffer_pod_create_uninitialized, _ut_nativebuffer_pod_delete: _ut_nativebuffer_pod_delete, _ut_nativebuffer_pod_placement_create_uninitialized: _ut_nativebuffer_pod_placement_create_uninitialized, _ut_nativebuffer_pod_placement_delete: _ut_nativebuffer_pod_placement_delete, _ut_nativebuffer_pod_resize_uninitialized: _ut_nativebuffer_pod_resize_uninitialized, _ut_nativebuffer_pod_resize_zero_initialized: _ut_nativebuffer_pod_resize_zero_initialized, _ut_nativebuffer_pod_scratch_create_uninitialized: _ut_nativebuffer_pod_scratch_create_uninitialized, _ut_nativebuffer_pod_set: _ut_nativebuffer_pod_set, _ut_nativebuffer_size: _ut_nativebuffer_size, _ut_nativestring_copy_construct: _ut_nativestring_copy_construct, _ut_nativestring_create: _ut_nativestring_create, _ut_nativestring_data: _ut_nativestring_data, _ut_nativestring_delete: _ut_nativestring_delete, _ut_nativestring_free_data: _ut_nativestring_free_data, _ut_nativestring_length: _ut_nativestring_length, _ut_nativestring_placement_create: _ut_nativestring_placement_create, _ut_nativestring_placement_delete: _ut_nativestring_placement_delete, _ut_nativestring_resize: _ut_nativestring_resize, _ut_nativestring_resize_zero: _ut_nativestring_resize_zero, _ut_nativestring_scratch_create: _ut_nativestring_scratch_create, _ut_nativestring_set: _ut_nativestring_set, _ut_nativestring_set_known_length: _ut_nativestring_set_known_length, dynCall_ii: dynCall_ii, dynCall_iii: dynCall_iii, dynCall_iiii: dynCall_iiii, dynCall_v: dynCall_v, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_viii: dynCall_viii, dynCall_viiii: dynCall_viiii, dynCall_viiiii: dynCall_viiiii, dynCall_viiiiii: dynCall_viiiiii, establishStackSpace: establishStackSpace, getTempRet0: getTempRet0, runPostSets: runPostSets, setTempRet0: setTempRet0, setThrew: setThrew, stackAlloc: stackAlloc, stackRestore: stackRestore, stackSave: stackSave };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);

var ___cxa_demangle = Module["___cxa_demangle"] = asm["___cxa_demangle"];
var ___muldi3 = Module["___muldi3"] = asm["___muldi3"];
var ___udivdi3 = Module["___udivdi3"] = asm["___udivdi3"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var _free = Module["_free"] = asm["_free"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _llvm_bswap_i32 = Module["_llvm_bswap_i32"] = asm["_llvm_bswap_i32"];
var _llvm_ctlz_i64 = Module["_llvm_ctlz_i64"] = asm["_llvm_ctlz_i64"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _memset = Module["_memset"] = asm["_memset"];
var _sbrk = Module["_sbrk"] = asm["_sbrk"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var _ut_ArchetypeChunkIterator_AddFilter = Module["_ut_ArchetypeChunkIterator_AddFilter"] = asm["_ut_ArchetypeChunkIterator_AddFilter"];
var _ut_ArchetypeChunkIterator_Count = Module["_ut_ArchetypeChunkIterator_Count"] = asm["_ut_ArchetypeChunkIterator_Count"];
var _ut_ArchetypeChunkIterator_GetBasePointersAndSizesInOrder = Module["_ut_ArchetypeChunkIterator_GetBasePointersAndSizesInOrder"] = asm["_ut_ArchetypeChunkIterator_GetBasePointersAndSizesInOrder"];
var _ut_ArchetypeChunkIterator_GetTypeOrSharedComponentIndicesAndSizesInOrder = Module["_ut_ArchetypeChunkIterator_GetTypeOrSharedComponentIndicesAndSizesInOrder"] = asm["_ut_ArchetypeChunkIterator_GetTypeOrSharedComponentIndicesAndSizesInOrder"];
var _ut_ArchetypeChunkIterator_GetTypeOrSharedComponentIndicesAndSizesInOrderForSpecs = Module["_ut_ArchetypeChunkIterator_GetTypeOrSharedComponentIndicesAndSizesInOrderForSpecs"] = asm["_ut_ArchetypeChunkIterator_GetTypeOrSharedComponentIndicesAndSizesInOrderForSpecs"];
var _ut_ArchetypeChunkIterator_Next = Module["_ut_ArchetypeChunkIterator_Next"] = asm["_ut_ArchetypeChunkIterator_Next"];
var _ut_ArchetypeChunkIterator_RawData = Module["_ut_ArchetypeChunkIterator_RawData"] = asm["_ut_ArchetypeChunkIterator_RawData"];
var _ut_ArchetypeChunkIterator_RawDataByIndex = Module["_ut_ArchetypeChunkIterator_RawDataByIndex"] = asm["_ut_ArchetypeChunkIterator_RawDataByIndex"];
var _ut_ArchetypeChunkIterator_RawSharedData = Module["_ut_ArchetypeChunkIterator_RawSharedData"] = asm["_ut_ArchetypeChunkIterator_RawSharedData"];
var _ut_ArchetypeChunkIterator_RawSharedDataByIndex = Module["_ut_ArchetypeChunkIterator_RawSharedDataByIndex"] = asm["_ut_ArchetypeChunkIterator_RawSharedDataByIndex"];
var _ut_ArchetypeChunkIterator_shRelease = Module["_ut_ArchetypeChunkIterator_shRelease"] = asm["_ut_ArchetypeChunkIterator_shRelease"];
var _ut_Archetype_GetComponentTypeCount = Module["_ut_Archetype_GetComponentTypeCount"] = asm["_ut_Archetype_GetComponentTypeCount"];
var _ut_Archetype_shRelease = Module["_ut_Archetype_shRelease"] = asm["_ut_Archetype_shRelease"];
var _ut_CleanupEntity_cid = Module["_ut_CleanupEntity_cid"] = asm["_ut_CleanupEntity_cid"];
var _ut_Component_Register_Component = Module["_ut_Component_Register_Component"] = asm["_ut_Component_Register_Component"];
var _ut_CopyFn_call = Module["_ut_CopyFn_call"] = asm["_ut_CopyFn_call"];
var _ut_CoreService_CreateSystem = Module["_ut_CoreService_CreateSystem"] = asm["_ut_CoreService_CreateSystem"];
var _ut_CoreService_GetCurrentLocale = Module["_ut_CoreService_GetCurrentLocale"] = asm["_ut_CoreService_GetCurrentLocale"];
var _ut_CoreService_GetSupportedLocales = Module["_ut_CoreService_GetSupportedLocales"] = asm["_ut_CoreService_GetSupportedLocales"];
var _ut_DestructorFn_call = Module["_ut_DestructorFn_call"] = asm["_ut_DestructorFn_call"];
var _ut_Disabled_cid = Module["_ut_Disabled_cid"] = asm["_ut_Disabled_cid"];
var _ut_EntityCommandBuffer_AddComponentDataRaw = Module["_ut_EntityCommandBuffer_AddComponentDataRaw"] = asm["_ut_EntityCommandBuffer_AddComponentDataRaw"];
var _ut_EntityCommandBuffer_AddComponentRaw = Module["_ut_EntityCommandBuffer_AddComponentRaw"] = asm["_ut_EntityCommandBuffer_AddComponentRaw"];
var _ut_EntityCommandBuffer_AddSharedComponentDataRaw = Module["_ut_EntityCommandBuffer_AddSharedComponentDataRaw"] = asm["_ut_EntityCommandBuffer_AddSharedComponentDataRaw"];
var _ut_EntityCommandBuffer_Commit = Module["_ut_EntityCommandBuffer_Commit"] = asm["_ut_EntityCommandBuffer_Commit"];
var _ut_EntityCommandBuffer_CreateDeferredEntities = Module["_ut_EntityCommandBuffer_CreateDeferredEntities"] = asm["_ut_EntityCommandBuffer_CreateDeferredEntities"];
var _ut_EntityCommandBuffer_CreateDeferredEntity = Module["_ut_EntityCommandBuffer_CreateDeferredEntity"] = asm["_ut_EntityCommandBuffer_CreateDeferredEntity"];
var _ut_EntityCommandBuffer_CreateEntities = Module["_ut_EntityCommandBuffer_CreateEntities"] = asm["_ut_EntityCommandBuffer_CreateEntities"];
var _ut_EntityCommandBuffer_CreateEntity = Module["_ut_EntityCommandBuffer_CreateEntity"] = asm["_ut_EntityCommandBuffer_CreateEntity"];
var _ut_EntityCommandBuffer_DestroyEntities = Module["_ut_EntityCommandBuffer_DestroyEntities"] = asm["_ut_EntityCommandBuffer_DestroyEntities"];
var _ut_EntityCommandBuffer_DestroyEntity = Module["_ut_EntityCommandBuffer_DestroyEntity"] = asm["_ut_EntityCommandBuffer_DestroyEntity"];
var _ut_EntityCommandBuffer_Dispose = Module["_ut_EntityCommandBuffer_Dispose"] = asm["_ut_EntityCommandBuffer_Dispose"];
var _ut_EntityCommandBuffer_EntityCommandBuffer = Module["_ut_EntityCommandBuffer_EntityCommandBuffer"] = asm["_ut_EntityCommandBuffer_EntityCommandBuffer"];
var _ut_EntityCommandBuffer_InstantiateDeferredEntities = Module["_ut_EntityCommandBuffer_InstantiateDeferredEntities"] = asm["_ut_EntityCommandBuffer_InstantiateDeferredEntities"];
var _ut_EntityCommandBuffer_InstantiateDeferredEntity = Module["_ut_EntityCommandBuffer_InstantiateDeferredEntity"] = asm["_ut_EntityCommandBuffer_InstantiateDeferredEntity"];
var _ut_EntityCommandBuffer_InstantiateEntities = Module["_ut_EntityCommandBuffer_InstantiateEntities"] = asm["_ut_EntityCommandBuffer_InstantiateEntities"];
var _ut_EntityCommandBuffer_Playback = Module["_ut_EntityCommandBuffer_Playback"] = asm["_ut_EntityCommandBuffer_Playback"];
var _ut_EntityCommandBuffer_RemoveComponentRaw = Module["_ut_EntityCommandBuffer_RemoveComponentRaw"] = asm["_ut_EntityCommandBuffer_RemoveComponentRaw"];
var _ut_EntityCommandBuffer_SetComponentDataRaw = Module["_ut_EntityCommandBuffer_SetComponentDataRaw"] = asm["_ut_EntityCommandBuffer_SetComponentDataRaw"];
var _ut_EntityCommandBuffer_SetEntityName = Module["_ut_EntityCommandBuffer_SetEntityName"] = asm["_ut_EntityCommandBuffer_SetEntityName"];
var _ut_EntityCommandBuffer_SetSharedComponentDataRaw = Module["_ut_EntityCommandBuffer_SetSharedComponentDataRaw"] = asm["_ut_EntityCommandBuffer_SetSharedComponentDataRaw"];
var _ut_EntityCommandBuffer_TranslateDeferredEntity = Module["_ut_EntityCommandBuffer_TranslateDeferredEntity"] = asm["_ut_EntityCommandBuffer_TranslateDeferredEntity"];
var _ut_EntityCommandBuffer_shRelease = Module["_ut_EntityCommandBuffer_shRelease"] = asm["_ut_EntityCommandBuffer_shRelease"];
var _ut_EntityFn_call = Module["_ut_EntityFn_call"] = asm["_ut_EntityFn_call"];
var _ut_EntityInformation_cid = Module["_ut_EntityInformation_cid"] = asm["_ut_EntityInformation_cid"];
var _ut_EntityInformation_dtor = Module["_ut_EntityInformation_dtor"] = asm["_ut_EntityInformation_dtor"];
var _ut_Entity_IsNone = Module["_ut_Entity_IsNone"] = asm["_ut_Entity_IsNone"];
var _ut_Entity_cid = Module["_ut_Entity_cid"] = asm["_ut_Entity_cid"];
var _ut_Scheduler_DeltaTime = Module["_ut_Scheduler_DeltaTime"] = asm["_ut_Scheduler_DeltaTime"];
var _ut_Scheduler_DisableId = Module["_ut_Scheduler_DisableId"] = asm["_ut_Scheduler_DisableId"];
var _ut_Scheduler_DisableName = Module["_ut_Scheduler_DisableName"] = asm["_ut_Scheduler_DisableName"];
var _ut_Scheduler_EnableId = Module["_ut_Scheduler_EnableId"] = asm["_ut_Scheduler_EnableId"];
var _ut_Scheduler_EnableName = Module["_ut_Scheduler_EnableName"] = asm["_ut_Scheduler_EnableName"];
var _ut_Scheduler_FindName = Module["_ut_Scheduler_FindName"] = asm["_ut_Scheduler_FindName"];
var _ut_Scheduler_FindSys = Module["_ut_Scheduler_FindSys"] = asm["_ut_Scheduler_FindSys"];
var _ut_Scheduler_IsEnabledId = Module["_ut_Scheduler_IsEnabledId"] = asm["_ut_Scheduler_IsEnabledId"];
var _ut_Scheduler_IsEnabledName = Module["_ut_Scheduler_IsEnabledName"] = asm["_ut_Scheduler_IsEnabledName"];
var _ut_Scheduler_IsPaused = Module["_ut_Scheduler_IsPaused"] = asm["_ut_Scheduler_IsPaused"];
var _ut_Scheduler_Name = Module["_ut_Scheduler_Name"] = asm["_ut_Scheduler_Name"];
var _ut_Scheduler_Now = Module["_ut_Scheduler_Now"] = asm["_ut_Scheduler_Now"];
var _ut_Scheduler_Pause = Module["_ut_Scheduler_Pause"] = asm["_ut_Scheduler_Pause"];
var _ut_Scheduler_RemoveAll = Module["_ut_Scheduler_RemoveAll"] = asm["_ut_Scheduler_RemoveAll"];
var _ut_Scheduler_RemoveId = Module["_ut_Scheduler_RemoveId"] = asm["_ut_Scheduler_RemoveId"];
var _ut_Scheduler_RemoveName = Module["_ut_Scheduler_RemoveName"] = asm["_ut_Scheduler_RemoveName"];
var _ut_Scheduler_Resume = Module["_ut_Scheduler_Resume"] = asm["_ut_Scheduler_Resume"];
var _ut_Scheduler_Run = Module["_ut_Scheduler_Run"] = asm["_ut_Scheduler_Run"];
var _ut_Scheduler_ScheduleFnInternal = Module["_ut_Scheduler_ScheduleFnInternal"] = asm["_ut_Scheduler_ScheduleFnInternal"];
var _ut_Scheduler_ScheduleSysInternal = Module["_ut_Scheduler_ScheduleSysInternal"] = asm["_ut_Scheduler_ScheduleSysInternal"];
var _ut_Scheduler_Step = Module["_ut_Scheduler_Step"] = asm["_ut_Scheduler_Step"];
var _ut_Scheduler_Stringify = Module["_ut_Scheduler_Stringify"] = asm["_ut_Scheduler_Stringify"];
var _ut_Scheduler_shRelease = Module["_ut_Scheduler_shRelease"] = asm["_ut_Scheduler_shRelease"];
var _ut_SystemFn_call = Module["_ut_SystemFn_call"] = asm["_ut_SystemFn_call"];
var _ut_System_Create_For_Delegate = Module["_ut_System_Create_For_Delegate"] = asm["_ut_System_Create_For_Delegate"];
var _ut_System_Create_For_UpdateFn = Module["_ut_System_Create_For_UpdateFn"] = asm["_ut_System_Create_For_UpdateFn"];
var _ut_System_Name = Module["_ut_System_Name"] = asm["_ut_System_Name"];
var _ut_System_Scheduled = Module["_ut_System_Scheduled"] = asm["_ut_System_Scheduled"];
var _ut_System_Set_UpdateFn = Module["_ut_System_Set_UpdateFn"] = asm["_ut_System_Set_UpdateFn"];
var _ut_System_UpdateAfter = Module["_ut_System_UpdateAfter"] = asm["_ut_System_UpdateAfter"];
var _ut_System_UpdateBefore = Module["_ut_System_UpdateBefore"] = asm["_ut_System_UpdateBefore"];
var _ut_System_shRelease = Module["_ut_System_shRelease"] = asm["_ut_System_shRelease"];
var _ut_World_AddComponentDataRaw = Module["_ut_World_AddComponentDataRaw"] = asm["_ut_World_AddComponentDataRaw"];
var _ut_World_AddComponentRaw = Module["_ut_World_AddComponentRaw"] = asm["_ut_World_AddComponentRaw"];
var _ut_World_AddSharedComponentDataRaw = Module["_ut_World_AddSharedComponentDataRaw"] = asm["_ut_World_AddSharedComponentDataRaw"];
var _ut_World_AddSharedComponentRaw = Module["_ut_World_AddSharedComponentRaw"] = asm["_ut_World_AddSharedComponentRaw"];
var _ut_World_AllocChunkIterator = Module["_ut_World_AllocChunkIterator"] = asm["_ut_World_AllocChunkIterator"];
var _ut_World_BufferDepth = Module["_ut_World_BufferDepth"] = asm["_ut_World_BufferDepth"];
var _ut_World_CreateArchetype = Module["_ut_World_CreateArchetype"] = asm["_ut_World_CreateArchetype"];
var _ut_World_CreateEntities = Module["_ut_World_CreateEntities"] = asm["_ut_World_CreateEntities"];
var _ut_World_CreateEntity = Module["_ut_World_CreateEntity"] = asm["_ut_World_CreateEntity"];
var _ut_World_DebugCheckEntities = Module["_ut_World_DebugCheckEntities"] = asm["_ut_World_DebugCheckEntities"];
var _ut_World_DestroyEntities = Module["_ut_World_DestroyEntities"] = asm["_ut_World_DestroyEntities"];
var _ut_World_DestroyEntity = Module["_ut_World_DestroyEntity"] = asm["_ut_World_DestroyEntity"];
var _ut_World_EmptyArchetype = Module["_ut_World_EmptyArchetype"] = asm["_ut_World_EmptyArchetype"];
var _ut_World_Exists = Module["_ut_World_Exists"] = asm["_ut_World_Exists"];
var _ut_World_GetArchetype = Module["_ut_World_GetArchetype"] = asm["_ut_World_GetArchetype"];
var _ut_World_GetComponentDataRaw = Module["_ut_World_GetComponentDataRaw"] = asm["_ut_World_GetComponentDataRaw"];
var _ut_World_GetConfigDataRaw = Module["_ut_World_GetConfigDataRaw"] = asm["_ut_World_GetConfigDataRaw"];
var _ut_World_GetConfigEntity = Module["_ut_World_GetConfigEntity"] = asm["_ut_World_GetConfigEntity"];
var _ut_World_GetEntityByName = Module["_ut_World_GetEntityByName"] = asm["_ut_World_GetEntityByName"];
var _ut_World_GetEntityName = Module["_ut_World_GetEntityName"] = asm["_ut_World_GetEntityName"];
var _ut_World_GetSharedComponentDataRaw = Module["_ut_World_GetSharedComponentDataRaw"] = asm["_ut_World_GetSharedComponentDataRaw"];
var _ut_World_HasComponentRaw = Module["_ut_World_HasComponentRaw"] = asm["_ut_World_HasComponentRaw"];
var _ut_World_InstantiateEntities = Module["_ut_World_InstantiateEntities"] = asm["_ut_World_InstantiateEntities"];
var _ut_World_InstantiateEntity = Module["_ut_World_InstantiateEntity"] = asm["_ut_World_InstantiateEntity"];
var _ut_World_RemoveComponentRaw = Module["_ut_World_RemoveComponentRaw"] = asm["_ut_World_RemoveComponentRaw"];
var _ut_World_Run = Module["_ut_World_Run"] = asm["_ut_World_Run"];
var _ut_World_Scheduler = Module["_ut_World_Scheduler"] = asm["_ut_World_Scheduler"];
var _ut_World_SetComponentDataRaw = Module["_ut_World_SetComponentDataRaw"] = asm["_ut_World_SetComponentDataRaw"];
var _ut_World_SetConfigDataRaw = Module["_ut_World_SetConfigDataRaw"] = asm["_ut_World_SetConfigDataRaw"];
var _ut_World_SetEntityName = Module["_ut_World_SetEntityName"] = asm["_ut_World_SetEntityName"];
var _ut_World_SetSharedComponentDataRaw = Module["_ut_World_SetSharedComponentDataRaw"] = asm["_ut_World_SetSharedComponentDataRaw"];
var _ut_World_StartBuffering = Module["_ut_World_StartBuffering"] = asm["_ut_World_StartBuffering"];
var _ut_World_StopBuffering = Module["_ut_World_StopBuffering"] = asm["_ut_World_StopBuffering"];
var _ut_World_World = Module["_ut_World_World"] = asm["_ut_World_World"];
var _ut_World_fromJSON = Module["_ut_World_fromJSON"] = asm["_ut_World_fromJSON"];
var _ut_World_shRelease = Module["_ut_World_shRelease"] = asm["_ut_World_shRelease"];
var _ut_World_toJSON = Module["_ut_World_toJSON"] = asm["_ut_World_toJSON"];
var _ut_component_register_cid = Module["_ut_component_register_cid"] = asm["_ut_component_register_cid"];
var _ut_component_register_cid_with_type = Module["_ut_component_register_cid_with_type"] = asm["_ut_component_register_cid_with_type"];
var _ut_meta_get_type_bool = Module["_ut_meta_get_type_bool"] = asm["_ut_meta_get_type_bool"];
var _ut_meta_get_type_double = Module["_ut_meta_get_type_double"] = asm["_ut_meta_get_type_double"];
var _ut_meta_get_type_float = Module["_ut_meta_get_type_float"] = asm["_ut_meta_get_type_float"];
var _ut_meta_get_type_int16 = Module["_ut_meta_get_type_int16"] = asm["_ut_meta_get_type_int16"];
var _ut_meta_get_type_int32 = Module["_ut_meta_get_type_int32"] = asm["_ut_meta_get_type_int32"];
var _ut_meta_get_type_int64 = Module["_ut_meta_get_type_int64"] = asm["_ut_meta_get_type_int64"];
var _ut_meta_get_type_int8 = Module["_ut_meta_get_type_int8"] = asm["_ut_meta_get_type_int8"];
var _ut_meta_get_type_string = Module["_ut_meta_get_type_string"] = asm["_ut_meta_get_type_string"];
var _ut_meta_get_type_uint16 = Module["_ut_meta_get_type_uint16"] = asm["_ut_meta_get_type_uint16"];
var _ut_meta_get_type_uint32 = Module["_ut_meta_get_type_uint32"] = asm["_ut_meta_get_type_uint32"];
var _ut_meta_get_type_uint64 = Module["_ut_meta_get_type_uint64"] = asm["_ut_meta_get_type_uint64"];
var _ut_meta_get_type_uint8 = Module["_ut_meta_get_type_uint8"] = asm["_ut_meta_get_type_uint8"];
var _ut_meta_get_type_ut_entity = Module["_ut_meta_get_type_ut_entity"] = asm["_ut_meta_get_type_ut_entity"];
var _ut_meta_get_type_ut_entityinformation = Module["_ut_meta_get_type_ut_entityinformation"] = asm["_ut_meta_get_type_ut_entityinformation"];
var _ut_meta_get_type_ut_localeresult = Module["_ut_meta_get_type_ut_localeresult"] = asm["_ut_meta_get_type_ut_localeresult"];
var _ut_nativebuffer_capacity = Module["_ut_nativebuffer_capacity"] = asm["_ut_nativebuffer_capacity"];
var _ut_nativebuffer_data = Module["_ut_nativebuffer_data"] = asm["_ut_nativebuffer_data"];
var _ut_nativebuffer_nativestring_copy_construct = Module["_ut_nativebuffer_nativestring_copy_construct"] = asm["_ut_nativebuffer_nativestring_copy_construct"];
var _ut_nativebuffer_nativestring_create = Module["_ut_nativebuffer_nativestring_create"] = asm["_ut_nativebuffer_nativestring_create"];
var _ut_nativebuffer_nativestring_delete = Module["_ut_nativebuffer_nativestring_delete"] = asm["_ut_nativebuffer_nativestring_delete"];
var _ut_nativebuffer_nativestring_placement_create = Module["_ut_nativebuffer_nativestring_placement_create"] = asm["_ut_nativebuffer_nativestring_placement_create"];
var _ut_nativebuffer_nativestring_placement_delete = Module["_ut_nativebuffer_nativestring_placement_delete"] = asm["_ut_nativebuffer_nativestring_placement_delete"];
var _ut_nativebuffer_nativestring_resize = Module["_ut_nativebuffer_nativestring_resize"] = asm["_ut_nativebuffer_nativestring_resize"];
var _ut_nativebuffer_nativestring_scratch_create = Module["_ut_nativebuffer_nativestring_scratch_create"] = asm["_ut_nativebuffer_nativestring_scratch_create"];
var _ut_nativebuffer_nativestring_set = Module["_ut_nativebuffer_nativestring_set"] = asm["_ut_nativebuffer_nativestring_set"];
var _ut_nativebuffer_pod_copy_construct = Module["_ut_nativebuffer_pod_copy_construct"] = asm["_ut_nativebuffer_pod_copy_construct"];
var _ut_nativebuffer_pod_create_uninitialized = Module["_ut_nativebuffer_pod_create_uninitialized"] = asm["_ut_nativebuffer_pod_create_uninitialized"];
var _ut_nativebuffer_pod_delete = Module["_ut_nativebuffer_pod_delete"] = asm["_ut_nativebuffer_pod_delete"];
var _ut_nativebuffer_pod_placement_create_uninitialized = Module["_ut_nativebuffer_pod_placement_create_uninitialized"] = asm["_ut_nativebuffer_pod_placement_create_uninitialized"];
var _ut_nativebuffer_pod_placement_delete = Module["_ut_nativebuffer_pod_placement_delete"] = asm["_ut_nativebuffer_pod_placement_delete"];
var _ut_nativebuffer_pod_resize_uninitialized = Module["_ut_nativebuffer_pod_resize_uninitialized"] = asm["_ut_nativebuffer_pod_resize_uninitialized"];
var _ut_nativebuffer_pod_resize_zero_initialized = Module["_ut_nativebuffer_pod_resize_zero_initialized"] = asm["_ut_nativebuffer_pod_resize_zero_initialized"];
var _ut_nativebuffer_pod_scratch_create_uninitialized = Module["_ut_nativebuffer_pod_scratch_create_uninitialized"] = asm["_ut_nativebuffer_pod_scratch_create_uninitialized"];
var _ut_nativebuffer_pod_set = Module["_ut_nativebuffer_pod_set"] = asm["_ut_nativebuffer_pod_set"];
var _ut_nativebuffer_size = Module["_ut_nativebuffer_size"] = asm["_ut_nativebuffer_size"];
var _ut_nativestring_copy_construct = Module["_ut_nativestring_copy_construct"] = asm["_ut_nativestring_copy_construct"];
var _ut_nativestring_create = Module["_ut_nativestring_create"] = asm["_ut_nativestring_create"];
var _ut_nativestring_data = Module["_ut_nativestring_data"] = asm["_ut_nativestring_data"];
var _ut_nativestring_delete = Module["_ut_nativestring_delete"] = asm["_ut_nativestring_delete"];
var _ut_nativestring_free_data = Module["_ut_nativestring_free_data"] = asm["_ut_nativestring_free_data"];
var _ut_nativestring_length = Module["_ut_nativestring_length"] = asm["_ut_nativestring_length"];
var _ut_nativestring_placement_create = Module["_ut_nativestring_placement_create"] = asm["_ut_nativestring_placement_create"];
var _ut_nativestring_placement_delete = Module["_ut_nativestring_placement_delete"] = asm["_ut_nativestring_placement_delete"];
var _ut_nativestring_resize = Module["_ut_nativestring_resize"] = asm["_ut_nativestring_resize"];
var _ut_nativestring_resize_zero = Module["_ut_nativestring_resize_zero"] = asm["_ut_nativestring_resize_zero"];
var _ut_nativestring_scratch_create = Module["_ut_nativestring_scratch_create"] = asm["_ut_nativestring_scratch_create"];
var _ut_nativestring_set = Module["_ut_nativestring_set"] = asm["_ut_nativestring_set"];
var _ut_nativestring_set_known_length = Module["_ut_nativestring_set_known_length"] = asm["_ut_nativestring_set_known_length"];
var establishStackSpace = Module["establishStackSpace"] = asm["establishStackSpace"];
var getTempRet0 = Module["getTempRet0"] = asm["getTempRet0"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var setTempRet0 = Module["setTempRet0"] = asm["setTempRet0"];
var setThrew = Module["setThrew"] = asm["setThrew"];
var stackAlloc = Module["stackAlloc"] = asm["stackAlloc"];
var stackRestore = Module["stackRestore"] = asm["stackRestore"];
var stackSave = Module["stackSave"] = asm["stackSave"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
;



// === Auto-generated postamble setup entry stuff ===

Module['asm'] = asm;










































































if (memoryInitializer) {
  if (!isDataURI(memoryInitializer)) {
    if (typeof Module['locateFile'] === 'function') {
      memoryInitializer = Module['locateFile'](memoryInitializer);
    } else if (Module['memoryInitializerPrefixURL']) {
      memoryInitializer = Module['memoryInitializerPrefixURL'] + memoryInitializer;
    }
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, GLOBAL_BASE);
  } else {
    addRunDependency('memory initializer');
    var applyMemoryInitializer = function(data) {
      if (data.byteLength) data = new Uint8Array(data);
      HEAPU8.set(data, GLOBAL_BASE);
      // Delete the typed array that contains the large blob of the memory initializer request response so that
      // we won't keep unnecessary memory lying around. However, keep the XHR object itself alive so that e.g.
      // its .status field can still be accessed later.
      if (Module['memoryInitializerRequest']) delete Module['memoryInitializerRequest'].response;
      removeRunDependency('memory initializer');
    }
    function doBrowserLoad() {
      Module['readAsync'](memoryInitializer, applyMemoryInitializer, function() {
        throw 'could not load memory initializer ' + memoryInitializer;
      });
    }
    var memoryInitializerBytes = tryParseAsDataURI(memoryInitializer);
    if (memoryInitializerBytes) {
      applyMemoryInitializer(memoryInitializerBytes.buffer);
    } else
    if (Module['memoryInitializerRequest']) {
      // a network request has already been created, just use that
      function useRequest() {
        var request = Module['memoryInitializerRequest'];
        var response = request.response;
        if (request.status !== 200 && request.status !== 0) {
          var data = tryParseAsDataURI(Module['memoryInitializerRequestURL']);
          if (data) {
            response = data.buffer;
          } else {
            // If you see this warning, the issue may be that you are using locateFile or memoryInitializerPrefixURL, and defining them in JS. That
            // means that the HTML file doesn't know about them, and when it tries to create the mem init request early, does it to the wrong place.
            // Look in your browser's devtools network console to see what's going on.
            console.warn('a problem seems to have happened with Module.memoryInitializerRequest, status: ' + request.status + ', retrying ' + memoryInitializer);
            doBrowserLoad();
            return;
          }
        }
        applyMemoryInitializer(response);
      }
      if (Module['memoryInitializerRequest'].response) {
        setTimeout(useRequest, 0); // it's already here; but, apply it asynchronously
      } else {
        Module['memoryInitializerRequest'].addEventListener('load', useRequest); // wait for it
      }
    } else {
      // fetch it from the network ourselves
      doBrowserLoad();
    }
  }
}



/**
 * @constructor
 * @extends {Error}
 * @this {ExitStatus}
 */
function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}





/** @type {function(Array=)} */
function run(args) {
  args = args || Module['arguments'];

  if (runDependencies > 0) {
    return;
  }


  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return;

    ensureInitRuntime();

    preMain();

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();


    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = run;


function exit(status, implicit) {

  // if this is just main exit-ing implicitly, and the status is 0, then we
  // don't need to do anything here and can just leave. if the status is
  // non-zero, though, then we need to report it.
  // (we may have warned about this earlier, if a situation justifies doing so)
  if (implicit && Module['noExitRuntime'] && status === 0) {
    return;
  }

  if (Module['noExitRuntime']) {
  } else {

    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  Module['quit'](status, new ExitStatus(status));
}

var abortDecorators = [];

function abort(what) {
  if (Module['onAbort']) {
    Module['onAbort'](what);
  }

  if (what !== undefined) {
    out(what);
    err(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  throw 'abort(' + what + '). Build with -s ASSERTIONS=1 for more info.';
}
Module['abort'] = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}


Module["noExitRuntime"] = true;

run();

// {{POST_RUN_ADDITIONS}}





// {{MODULE_ADDITIONS}}





/*
 * AUTO-GENERATED, DO NOT EDIT BY HAND
 */

var ut = ut || {};
ut.AccessMode = {
  ReadWrite: 0,
  ReadOnly: 1,
  Subtractive: 2,
  AnyOfReadWrite: 3,
  AnyOfReadOnly: 4,
  OptionalReadWrite: 5,
  OptionalReadOnly: 6
};
ut.LocaleResult = function(arg0) {
  this._locales = (arg0 === undefined ? new Array() : ((arg0 instanceof Array) ? arg0 : (function() { throw new Error('Assigning non-array to array field'); })()));
};
ut.LocaleResult.prototype = Object.create(null);
ut.LocaleResult.prototype.constructor = ut.LocaleResult;
Object.defineProperties(ut.LocaleResult.prototype, {
  locales: {
    get: function() { return this._locales; },
  },
});
ut.LocaleResult._size = 12;
ut.LocaleResult._fromPtr = function(ptr, v) {
  v = v || Object.create(ut.LocaleResult.prototype);
  v._locales = ut.nativeBufferToJsArray(ptr+0, 8, function(p) { return (Module._ut_nativestring_data(p) ? UTF8ToString(Module._ut_nativestring_data(p)) : ""); });
  return v;
};
ut.LocaleResult._toPtr = function(ptr, v) {
  ut.jsArrayToExistingNativeBuffer_string(v.locales, ptr+0, function(p, v) { ut.writeHeapNativeString(p, v); });
};
ut.LocaleResult._toTempHeapPtr = function(ptr, v) {
  ut.jsArrayToExistingScratchNativeBuffer_string(v.locales, ptr+0, function(p, v) { ut.toExistingScratchNativeString(p, v); });
};
ut.LocaleResult._tempHeapPtr = function(v) {
  var ptr = ut.tempHeapPtrBufferZero(12);
  if (v) ut.LocaleResult._toTempHeapPtr(ptr, v);
  return ptr;
};
ut.ComponentSpecRaw = function(arg0, arg1) {
  this._type = (arg0|0);
  this._access = (arg1|0);
};
ut.ComponentSpecRaw.prototype = Object.create(null);
ut.ComponentSpecRaw.prototype.constructor = ut.ComponentSpecRaw;
Object.defineProperties(ut.ComponentSpecRaw.prototype, {
  type: {
    get: function() { return this._type; },
    set: function(v) { this._type = (v|0); },
  },
  access: {
    get: function() { return this._access; },
    set: function(v) { this._access = (v|0); },
  },
});
ut.ComponentSpecRaw._size = 8;
ut.ComponentSpecRaw._fromPtr = function(ptr, v) {
  v = v || Object.create(ut.ComponentSpecRaw.prototype);
  v._type = HEAPU32[(ptr+0)>>2];
  v._access = HEAP32[(ptr+4)>>2];
  return v;
};
ut.ComponentSpecRaw._toPtr = function(ptr, v) {
  HEAPU32[(ptr+0)>>2] = v.type;
  HEAP32[(ptr+4)>>2] = v.access;
};
ut.ComponentSpecRaw._toTempHeapPtr = function(ptr, v) {
  HEAPU32[(ptr+0)>>2] = v.type;
  HEAP32[(ptr+4)>>2] = v.access;
};
ut.ComponentSpecRaw._tempHeapPtr = function(v) {
  var ptr = ut.tempHeapPtrBufferZero(8);
  if (v) ut.ComponentSpecRaw._toTempHeapPtr(ptr, v);
  return ptr;
};
ut.Entity = function(arg0, arg1) {
  this._index = (arg0|0);
  this._version = (arg1|0);
};
ut.Entity.prototype = Object.create(null);
ut.Entity.prototype.constructor = ut.Entity;
Object.defineProperties(ut.Entity.prototype, {
  index: {
    get: function() { return this._index; },
    set: function(v) { this._index = (v|0); },
  },
  version: {
    get: function() { return this._version; },
    set: function(v) { this._version = (v|0); },
  },
});
ut.Entity._size = 8;
ut.Entity._fromPtr = function(ptr, v) {
  v = v || Object.create(ut.Entity.prototype);
  v._index = HEAP32[(ptr+0)>>2];
  v._version = HEAP32[(ptr+4)>>2];
  return v;
};
ut.Entity._toPtr = function(ptr, v) {
  HEAP32[(ptr+0)>>2] = v.index;
  HEAP32[(ptr+4)>>2] = v.version;
};
ut.Entity._toTempHeapPtr = function(ptr, v) {
  HEAP32[(ptr+0)>>2] = v.index;
  HEAP32[(ptr+4)>>2] = v.version;
};
ut.Entity._tempHeapPtr = function(v) {
  var ptr = ut.tempHeapPtrBufferZero(8);
  if (v) ut.Entity._toTempHeapPtr(ptr, v);
  return ptr;
};
ut.Entity.prototype.isNone = function() {
  ut.prepareTempHeap();
  var self = this._ptr; if (self === undefined) { self = ut.Entity._tempHeapPtr(this); }
  var ret = Module._ut_Entity_IsNone(self);
  
  return !!(ret);
};
ut.Entity.StorageView = function(ptr) {
  this._ptr = ptr;
};
ut.Entity.StorageView.prototype = Object.create(null);
ut.Entity.StorageView.prototype.constructor = ut.Entity.StorageView;
ut.Entity._view = ut.Entity.StorageView;
ut.Entity.StorageView._isSharedComp = ut.Entity._isSharedComp = false;
ut.Entity.StorageView._fromPtr = ut.Entity._fromPtr;
ut.Entity.StorageView._toPtr = ut.Entity._toPtr;
ut.Entity.StorageView._tempHeapPtr = ut.Entity._tempHeapPtr;
ut.Entity.StorageView._size = ut.Entity._size;
ut.Entity.StorageView.prototype.$advance = function() {
  this._ptr += 8;
};
Object.defineProperties(ut.Entity.StorageView.prototype, {
  index: {
    get: function() { return HEAP32[(this._ptr+0)>>2]; },
    set: function(v) { HEAP32[(this._ptr+0)>>2] = v; },
  },
  version: {
    get: function() { return HEAP32[(this._ptr+4)>>2]; },
    set: function(v) { HEAP32[(this._ptr+4)>>2] = v; },
  },
});
ut.Entity.StorageView.prototype.isNone = ut.Entity.prototype.isNone;
ut.Entity._dtorFn = function dtor(ptr) { /* POD, no-op */ }
// ut.Entity is a POD type, so a JavaScript side copy constructor ut.Entity._copyFn = function copy(src, dst) { ... } does not need to be generated for it
Object.defineProperties(ut.Entity, { cid: { configurable: true, get: function() { delete ut.Entity.cid;  return ut.Entity.cid = Module._ut_Entity_cid(); } } });
Object.defineProperties(ut.Entity.StorageView, { cid: { configurable: true, get: function() { return ut.Entity.cid; } } });
ut.Entity.index = { $ofs:0, $t:"int32_t", $c:ut.Entity };
ut.Entity.version = { $ofs:4, $t:"int32_t", $c:ut.Entity };
ut.Disabled = function() {
};
ut.Disabled.prototype = Object.create(null);
ut.Disabled.prototype.constructor = ut.Disabled;
Object.defineProperties(ut.Disabled.prototype, {
});
ut.Disabled._size = 1;
ut.Disabled._fromPtr = function(ptr, v) {
  v = v || Object.create(ut.Disabled.prototype);
  return v;
};
ut.Disabled._toPtr = function(ptr, v) {
};
ut.Disabled._toTempHeapPtr = function(ptr, v) {
};
ut.Disabled._tempHeapPtr = function(v) {
  var ptr = ut.tempHeapPtrBufferZero(1);
  if (v) ut.Disabled._toTempHeapPtr(ptr, v);
  return ptr;
};
ut.Disabled.StorageView = function(ptr) {
  this._ptr = ptr;
};
ut.Disabled.StorageView.prototype = Object.create(null);
ut.Disabled.StorageView.prototype.constructor = ut.Disabled.StorageView;
ut.Disabled._view = ut.Disabled.StorageView;
ut.Disabled.StorageView._isSharedComp = ut.Disabled._isSharedComp = false;
ut.Disabled.StorageView._fromPtr = ut.Disabled._fromPtr;
ut.Disabled.StorageView._toPtr = ut.Disabled._toPtr;
ut.Disabled.StorageView._tempHeapPtr = ut.Disabled._tempHeapPtr;
ut.Disabled.StorageView._size = ut.Disabled._size;
ut.Disabled.StorageView.prototype.$advance = function() {
  this._ptr += 1;
};
Object.defineProperties(ut.Disabled.StorageView.prototype, {
});
ut.Disabled._dtorFn = function dtor(ptr) { /* POD, no-op */ }
// ut.Disabled is a POD type, so a JavaScript side copy constructor ut.Disabled._copyFn = function copy(src, dst) { ... } does not need to be generated for it
Object.defineProperties(ut.Disabled, { cid: { configurable: true, get: function() { delete ut.Disabled.cid;  return ut.Disabled.cid = Module._ut_Disabled_cid(); } } });
Object.defineProperties(ut.Disabled.StorageView, { cid: { configurable: true, get: function() { return ut.Disabled.cid; } } });
ut.CleanupEntity = function() {
};
ut.CleanupEntity.prototype = Object.create(null);
ut.CleanupEntity.prototype.constructor = ut.CleanupEntity;
Object.defineProperties(ut.CleanupEntity.prototype, {
});
ut.CleanupEntity._size = 1;
ut.CleanupEntity._fromPtr = function(ptr, v) {
  v = v || Object.create(ut.CleanupEntity.prototype);
  return v;
};
ut.CleanupEntity._toPtr = function(ptr, v) {
};
ut.CleanupEntity._toTempHeapPtr = function(ptr, v) {
};
ut.CleanupEntity._tempHeapPtr = function(v) {
  var ptr = ut.tempHeapPtrBufferZero(1);
  if (v) ut.CleanupEntity._toTempHeapPtr(ptr, v);
  return ptr;
};
ut.CleanupEntity.StorageView = function(ptr) {
  this._ptr = ptr;
};
ut.CleanupEntity.StorageView.prototype = Object.create(null);
ut.CleanupEntity.StorageView.prototype.constructor = ut.CleanupEntity.StorageView;
ut.CleanupEntity._view = ut.CleanupEntity.StorageView;
ut.CleanupEntity.StorageView._isSharedComp = ut.CleanupEntity._isSharedComp = false;
ut.CleanupEntity.StorageView._fromPtr = ut.CleanupEntity._fromPtr;
ut.CleanupEntity.StorageView._toPtr = ut.CleanupEntity._toPtr;
ut.CleanupEntity.StorageView._tempHeapPtr = ut.CleanupEntity._tempHeapPtr;
ut.CleanupEntity.StorageView._size = ut.CleanupEntity._size;
ut.CleanupEntity.StorageView.prototype.$advance = function() {
  this._ptr += 1;
};
Object.defineProperties(ut.CleanupEntity.StorageView.prototype, {
});
ut.CleanupEntity._dtorFn = function dtor(ptr) { /* POD, no-op */ }
// ut.CleanupEntity is a POD type, so a JavaScript side copy constructor ut.CleanupEntity._copyFn = function copy(src, dst) { ... } does not need to be generated for it
Object.defineProperties(ut.CleanupEntity, { cid: { configurable: true, get: function() { delete ut.CleanupEntity.cid;  return ut.CleanupEntity.cid = Module._ut_CleanupEntity_cid(); } } });
Object.defineProperties(ut.CleanupEntity.StorageView, { cid: { configurable: true, get: function() { return ut.CleanupEntity.cid; } } });
ut.EntityInformation = function(arg0) {
  this._name = (arg0 === undefined ? '' : arg0);
};
ut.EntityInformation.prototype = Object.create(null);
ut.EntityInformation.prototype.constructor = ut.EntityInformation;
Object.defineProperties(ut.EntityInformation.prototype, {
  name: {
    get: function() { return this._name; },
    set: function(v) { this._name = (v === undefined ? '' : v); },
  },
});
ut.EntityInformation._size = 8;
ut.EntityInformation._fromPtr = function(ptr, v) {
  v = v || Object.create(ut.EntityInformation.prototype);
  v._name = (Module._ut_nativestring_data(ptr+0) ? UTF8ToString(Module._ut_nativestring_data(ptr+0)) : "");
  return v;
};
ut.EntityInformation._toPtr = function(ptr, v) {
  ut.newHeapNativeString(ptr+0, v.name);
};
ut.EntityInformation._toTempHeapPtr = function(ptr, v) {
  ut.toExistingScratchNativeString(ptr+0, v.name);
};
ut.EntityInformation._tempHeapPtr = function(v) {
  var ptr = ut.tempHeapPtrBufferZero(8);
  if (v) ut.EntityInformation._toTempHeapPtr(ptr, v);
  return ptr;
};
ut.EntityInformation.StorageView = function(ptr) {
  this._ptr = ptr;
};
ut.EntityInformation.StorageView.prototype = Object.create(null);
ut.EntityInformation.StorageView.prototype.constructor = ut.EntityInformation.StorageView;
ut.EntityInformation._view = ut.EntityInformation.StorageView;
ut.EntityInformation.StorageView._isSharedComp = ut.EntityInformation._isSharedComp = false;
ut.EntityInformation.StorageView._fromPtr = ut.EntityInformation._fromPtr;
ut.EntityInformation.StorageView._toPtr = ut.EntityInformation._toPtr;
ut.EntityInformation.StorageView._tempHeapPtr = ut.EntityInformation._tempHeapPtr;
ut.EntityInformation.StorageView._size = ut.EntityInformation._size;
ut.EntityInformation.StorageView.prototype.$advance = function() {
  this._ptr += 8;
};
Object.defineProperties(ut.EntityInformation.StorageView.prototype, {
  name: {
    get: function() { return (Module._ut_nativestring_data(this._ptr+0) ? UTF8ToString(Module._ut_nativestring_data(this._ptr+0)) : ""); },
    set: function(v) { ut.newHeapNativeString(this._ptr+0, v); },
  },
});
ut.EntityInformation._dtorFn = function dtor(ptr) {
  if (!ptr) return; 
  Module._ut_EntityInformation_dtor(ptr);
};
ut.EntityInformation._copyFn = function copy(src, dst) {
};
Object.defineProperties(ut.EntityInformation, { cid: { configurable: true, get: function() { delete ut.EntityInformation.cid;  return ut.EntityInformation.cid = Module._ut_EntityInformation_cid(); } } });
Object.defineProperties(ut.EntityInformation.StorageView, { cid: { configurable: true, get: function() { return ut.EntityInformation.cid; } } });
ut.EntityInformation.name = { $ofs:0, $t:"System.String", $c:ut.EntityInformation };
ut.EntityFn = {};
ut.EntityFn._cb = {
  next_token: 1,
  map: {},
  token_for: function _ut_EntityFn_tokenFn(fn) {
    if (typeof(fn) != 'function') throw new Error('Not a function');
    var token = fn.token;
    if (!token) {
        token = ut.EntityFn._cb.next_token++;
        ut.EntityFn._cb.map[token] = fn;
        fn.token = token;
    }
    return token;
  }
};
ut.SystemFn = {};
ut.SystemFn._cb = {
  next_token: 1,
  map: {},
  token_for: function _ut_SystemFn_tokenFn(fn) {
    if (typeof(fn) != 'function') throw new Error('Not a function');
    var token = fn.token;
    if (!token) {
        token = ut.SystemFn._cb.next_token++;
        ut.SystemFn._cb.map[token] = fn;
        fn.token = token;
    }
    return token;
  }
};
ut.CopyFn = {};
ut.CopyFn._cb = {
  next_token: 1,
  map: {},
  token_for: function _ut_CopyFn_tokenFn(fn) {
    if (typeof(fn) != 'function') throw new Error('Not a function');
    var token = fn.token;
    if (!token) {
        token = ut.CopyFn._cb.next_token++;
        ut.CopyFn._cb.map[token] = fn;
        fn.token = token;
    }
    return token;
  }
};
ut.DestructorFn = {};
ut.DestructorFn._cb = {
  next_token: 1,
  map: {},
  token_for: function _ut_DestructorFn_tokenFn(fn) {
    if (typeof(fn) != 'function') throw new Error('Not a function');
    var token = fn.token;
    if (!token) {
        token = ut.DestructorFn._cb.next_token++;
        ut.DestructorFn._cb.map[token] = fn;
        fn.token = token;
    }
    return token;
  }
};
ut.SystemBase = function() {
  throw new Error('Constructing ut.SystemBase is not allowed');
};
ut.SystemBase.prototype = Object.create(null);
ut.SystemBase.prototype.constructor = ut.SystemBase;
ut.SystemBase._wrap = function(ptr) {
  var obj = Object.create(ut.System.prototype);
  obj.ptr = ptr;
  return obj;
};

// define a release function
ut.SystemBase.prototype.release = function System_release() {
  Module._ut_System_shRelease(this.ptr);
  this.ptr = 0;
};
ut.SystemBase.prototype.name = function() {
  ut.prepareTempHeap();
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var retptr = ut.tempHeapPtrBufferZero(8);
  Module._ut_System_Name(retptr, self);
  
  var ret = (Module._ut_nativestring_data(retptr) ? UTF8ToString(Module._ut_nativestring_data(retptr)) : ""); Module._ut_nativestring_placement_delete(retptr); return ret;
};
ut.SystemBase.prototype.updateBefore = function(arg0) {
  ut.prepareTempHeap();
  arg0 = ut.toNewScratchNativeString(arg0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_System_UpdateBefore(self, arg0);
  
};
ut.SystemBase.prototype.updateAfter = function(arg0) {
  ut.prepareTempHeap();
  arg0 = ut.toNewScratchNativeString(arg0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_System_UpdateAfter(self, arg0);
  
};
ut.SystemBase.prototype.scheduled = function() {
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var ret = Module._ut_System_Scheduled(self);
  
  return !!(ret);
};
ut.SchedulerBase = function() {
  throw new Error('Constructing ut.SchedulerBase is not allowed');
};
ut.SchedulerBase.prototype = Object.create(null);
ut.SchedulerBase.prototype.constructor = ut.SchedulerBase;
ut.SchedulerBase._wrap = function(ptr) {
  var obj = Object.create(ut.Scheduler.prototype);
  obj.ptr = ptr;
  return obj;
};

// define a release function
ut.SchedulerBase.prototype.release = function Scheduler_release() {
  Module._ut_Scheduler_shRelease(this.ptr);
  this.ptr = 0;
};
ut.SchedulerBase.prototype.name = function() {
  ut.prepareTempHeap();
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var retptr = ut.tempHeapPtrBufferZero(8);
  Module._ut_Scheduler_Name(retptr, self);
  
  var ret = (Module._ut_nativestring_data(retptr) ? UTF8ToString(Module._ut_nativestring_data(retptr)) : ""); Module._ut_nativestring_placement_delete(retptr); return ret;
};
ut.SchedulerBase.prototype.run = function() {
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_Scheduler_Run(self);
  
};
ut.SchedulerBase.prototype.deltaTime = function() {
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var ret = Module._ut_Scheduler_DeltaTime(self);
  
  return ret;
};
ut.SchedulerBase.prototype.now = function() {
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var ret = Module._ut_Scheduler_Now(self);
  
  return ret;
};
ut.SchedulerBase.prototype.removeName = function(arg0) {
  ut.prepareTempHeap();
  arg0 = ut.toNewScratchNativeString(arg0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_Scheduler_RemoveName(self, arg0);
  
};
ut.SchedulerBase.prototype.removeId = function(arg0) {
  arg0 = (arg0|0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_Scheduler_RemoveId(self, arg0);
  
};
ut.SchedulerBase.prototype.removeAll = function() {
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_Scheduler_RemoveAll(self);
  
};
ut.SchedulerBase.prototype.enableName = function(arg0) {
  ut.prepareTempHeap();
  arg0 = ut.toNewScratchNativeString(arg0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_Scheduler_EnableName(self, arg0);
  
};
ut.SchedulerBase.prototype.enableId = function(arg0) {
  arg0 = (arg0|0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_Scheduler_EnableId(self, arg0);
  
};
ut.SchedulerBase.prototype.disableName = function(arg0) {
  ut.prepareTempHeap();
  arg0 = ut.toNewScratchNativeString(arg0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_Scheduler_DisableName(self, arg0);
  
};
ut.SchedulerBase.prototype.disableId = function(arg0) {
  arg0 = (arg0|0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_Scheduler_DisableId(self, arg0);
  
};
ut.SchedulerBase.prototype.isEnabledName = function(arg0) {
  ut.prepareTempHeap();
  arg0 = ut.toNewScratchNativeString(arg0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var ret = Module._ut_Scheduler_IsEnabledName(self, arg0);
  
  return !!(ret);
};
ut.SchedulerBase.prototype.isEnabledId = function(arg0) {
  arg0 = (arg0|0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var ret = Module._ut_Scheduler_IsEnabledId(self, arg0);
  
  return !!(ret);
};
ut.SchedulerBase.prototype.scheduleSysInternal = function(arg0) {
  arg0 = arg0.ptr;
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var ret = Module._ut_Scheduler_ScheduleSysInternal(self, arg0);
  
  return ret;
};
ut.SchedulerBase.prototype.scheduleFnInternal = function(arg0, arg1) {
  ut.prepareTempHeap();
  arg0 = ut.toNewScratchNativeString(arg0);
  arg1 = ut.SystemFn._cb.token_for(arg1);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var ret = Module._ut_Scheduler_ScheduleFnInternal(self, arg0,arg1);
  
  return ret;
};
ut.SchedulerBase.prototype.findSys = function(arg0) {
  arg0 = arg0.ptr;
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var ret = Module._ut_Scheduler_FindSys(self, arg0);
  
  return ret;
};
ut.SchedulerBase.prototype.findName = function(arg0) {
  ut.prepareTempHeap();
  arg0 = ut.toNewScratchNativeString(arg0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var ret = Module._ut_Scheduler_FindName(self, arg0);
  
  return ret;
};
ut.SchedulerBase.prototype.pause = function() {
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_Scheduler_Pause(self);
  
};
ut.SchedulerBase.prototype.isPaused = function() {
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var ret = Module._ut_Scheduler_IsPaused(self);
  
  return !!(ret);
};
ut.SchedulerBase.prototype.step = function() {
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_Scheduler_Step(self);
  
};
ut.SchedulerBase.prototype.resume = function() {
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_Scheduler_Resume(self);
  
};
ut.SchedulerBase.prototype.stringify = function() {
  ut.prepareTempHeap();
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var retptr = ut.tempHeapPtrBufferZero(8);
  Module._ut_Scheduler_Stringify(retptr, self);
  
  var ret = (Module._ut_nativestring_data(retptr) ? UTF8ToString(Module._ut_nativestring_data(retptr)) : ""); Module._ut_nativestring_placement_delete(retptr); return ret;
};
ut.CoreService = function() {
  throw new Error('Constructing ut.CoreService is not allowed');
};
ut.CoreService.prototype = Object.create(null);
ut.CoreService.prototype.constructor = ut.CoreService;
ut.CoreService.createSystem = function(arg0, arg1, arg2, arg3) {
  ut.prepareTempHeap();
  arg0 = ut.toNewScratchNativeString(arg0);
  arg1 = ut.SystemFn._cb.token_for(arg1);
  arg2 = ut.jsArrayToNewScratchNativeBuffer_string(arg2, function(p, v) { ut.toExistingScratchNativeString(p, v); });
  arg3 = ut.jsArrayToNewScratchNativeBuffer_string(arg3, function(p, v) { ut.toExistingScratchNativeString(p, v); });
  
  var ret = Module._ut_CoreService_CreateSystem(arg0,arg1,arg2,arg3);
  
  return ut.SystemBase._wrap(ret);
};
ut.CoreService.getCurrentLocale = function() {
  ut.prepareTempHeap();
  
  var retptr = ut.tempHeapPtrBufferZero(8);
  Module._ut_CoreService_GetCurrentLocale(retptr);
  
  var ret = (Module._ut_nativestring_data(retptr) ? UTF8ToString(Module._ut_nativestring_data(retptr)) : ""); Module._ut_nativestring_placement_delete(retptr); return ret;
};
ut.CoreService.getSupportedLocales = function() {
  ut.prepareTempHeap();
  
  var retptr = ut.LocaleResult._tempHeapPtr();
  Module._ut_CoreService_GetSupportedLocales(retptr);
  
  return ut.LocaleResult._fromPtr(retptr);
};
ut.Archetype = function() {
  throw new Error('Constructing ut.Archetype is not allowed');
};
ut.Archetype.prototype = Object.create(null);
ut.Archetype.prototype.constructor = ut.Archetype;
ut.Archetype._wrap = function(ptr) {
  var obj = Object.create(ut.Archetype.prototype);
  obj.ptr = ptr;
  return obj;
};

// define a release function
ut.Archetype.prototype.release = function Archetype_release() {
  Module._ut_Archetype_shRelease(this.ptr);
  this.ptr = 0;
};
ut.Archetype.prototype.getComponentTypeCount = function() {
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var ret = Module._ut_Archetype_GetComponentTypeCount(self);
  
  return ret;
};
ut.ArchetypeChunkIteratorBase = function() {
  throw new Error('Constructing ut.ArchetypeChunkIteratorBase is not allowed');
};
ut.ArchetypeChunkIteratorBase.prototype = Object.create(null);
ut.ArchetypeChunkIteratorBase.prototype.constructor = ut.ArchetypeChunkIteratorBase;
ut.ArchetypeChunkIteratorBase._wrap = function(ptr) {
  var obj = Object.create(ut.ArchetypeChunkIterator.prototype);
  obj.ptr = ptr;
  return obj;
};

// define a release function
ut.ArchetypeChunkIteratorBase.prototype.release = function ArchetypeChunkIterator_release() {
  Module._ut_ArchetypeChunkIterator_shRelease(this.ptr);
  this.ptr = 0;
};
ut.ArchetypeChunkIteratorBase.prototype.next = function() {
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var ret = Module._ut_ArchetypeChunkIterator_Next(self);
  
  return !!(ret);
};
ut.ArchetypeChunkIteratorBase.prototype.count = function() {
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var ret = Module._ut_ArchetypeChunkIterator_Count(self);
  
  return ret;
};
ut.EntityCommandBufferBase = function() {
  this.ptr = Module._ut_EntityCommandBuffer_EntityCommandBuffer();
};
ut.EntityCommandBufferBase.prototype = Object.create(null);
ut.EntityCommandBufferBase.prototype.constructor = ut.EntityCommandBufferBase;
ut.EntityCommandBufferBase._wrap = function(ptr) {
  var obj = Object.create(ut.EntityCommandBuffer.prototype);
  obj.ptr = ptr;
  return obj;
};

// define a release function
ut.EntityCommandBufferBase.prototype.release = function EntityCommandBuffer_release() {
  Module._ut_EntityCommandBuffer_shRelease(this.ptr);
  this.ptr = 0;
};
ut.EntityCommandBufferBase.prototype.dispose = function() {
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_EntityCommandBuffer_Dispose(self);
  
};
ut.EntityCommandBufferBase.prototype.playback = function(arg0) {
  arg0 = arg0.ptr;
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_EntityCommandBuffer_Playback(self, arg0);
  
};
ut.EntityCommandBufferBase.prototype.commit = function(arg0) {
  arg0 = arg0.ptr;
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_EntityCommandBuffer_Commit(self, arg0);
  
};
ut.EntityCommandBufferBase.prototype.setEntityName = function(arg0, arg1) {
  ut.prepareTempHeap();
  arg0 = ut.Entity._tempHeapPtr(arg0);
  arg1 = ut.toNewScratchNativeString(arg1);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_EntityCommandBuffer_SetEntityName(self, arg0,arg1);
  
};
ut.EntityCommandBufferBase.prototype.translateDeferredEntity = function(arg0) {
  ut.prepareTempHeap();
  arg0 = ut.Entity._tempHeapPtr(arg0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var retptr = ut.Entity._tempHeapPtr();
  Module._ut_EntityCommandBuffer_TranslateDeferredEntity(retptr, self, arg0);
  
  return ut.Entity._fromPtr(retptr);
};
ut.EntityCommandBufferBase.prototype.createEntities = function(arg0, arg1) {
  arg0 = arg0.ptr;
  arg1 = (arg1|0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_EntityCommandBuffer_CreateEntities(self, arg0,arg1);
  
};
ut.EntityCommandBufferBase.prototype.createEntity = function(arg0) {
  arg0 = arg0.ptr;
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_EntityCommandBuffer_CreateEntity(self, arg0);
  
};
ut.EntityCommandBufferBase.prototype.createDeferredEntity = function(arg0) {
  ut.prepareTempHeap();
  arg0 = arg0.ptr;
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var retptr = ut.Entity._tempHeapPtr();
  Module._ut_EntityCommandBuffer_CreateDeferredEntity(retptr, self, arg0);
  
  return ut.Entity._fromPtr(retptr);
};
ut.EntityCommandBufferBase.prototype.instantiateEntities = function(arg0, arg1) {
  ut.prepareTempHeap();
  arg0 = ut.Entity._tempHeapPtr(arg0);
  arg1 = (arg1|0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_EntityCommandBuffer_InstantiateEntities(self, arg0,arg1);
  
};
ut.EntityCommandBufferBase.prototype.instantiateDeferredEntity = function(arg0) {
  ut.prepareTempHeap();
  arg0 = ut.Entity._tempHeapPtr(arg0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var retptr = ut.Entity._tempHeapPtr();
  Module._ut_EntityCommandBuffer_InstantiateDeferredEntity(retptr, self, arg0);
  
  return ut.Entity._fromPtr(retptr);
};
ut.EntityCommandBufferBase.prototype.destroyEntity = function(arg0) {
  ut.prepareTempHeap();
  arg0 = ut.Entity._tempHeapPtr(arg0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_EntityCommandBuffer_DestroyEntity(self, arg0);
  
};
ut.EntityCommandBufferBase.prototype.addComponentRaw = function(arg0, arg1) {
  ut.prepareTempHeap();
  arg0 = ut.Entity._tempHeapPtr(arg0);
  arg1 = (arg1|0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_EntityCommandBuffer_AddComponentRaw(self, arg0,arg1);
  
};
ut.EntityCommandBufferBase.prototype.removeComponentRaw = function(arg0, arg1) {
  ut.prepareTempHeap();
  arg0 = ut.Entity._tempHeapPtr(arg0);
  arg1 = (arg1|0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_EntityCommandBuffer_RemoveComponentRaw(self, arg0,arg1);
  
};
ut.WorldBase = function() {
  this.ptr = Module._ut_World_World();
};
ut.WorldBase.prototype = Object.create(null);
ut.WorldBase.prototype.constructor = ut.WorldBase;
ut.WorldBase._wrap = function(ptr) {
  var obj = Object.create(ut.World.prototype);
  obj.ptr = ptr;
  return obj;
};

// define a release function
ut.WorldBase.prototype.release = function World_release() {
  Module._ut_World_shRelease(this.ptr);
  this.ptr = 0;
};
ut.WorldBase.prototype.debugCheckEntities = function() {
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_World_DebugCheckEntities(self);
  
};
ut.WorldBase.prototype.setEntityName = function(arg0, arg1) {
  ut.prepareTempHeap();
  arg0 = ut.Entity._tempHeapPtr(arg0);
  arg1 = ut.toNewScratchNativeString(arg1);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_World_SetEntityName(self, arg0,arg1);
  
};
ut.WorldBase.prototype.getEntityName = function(arg0) {
  ut.prepareTempHeap();
  arg0 = ut.Entity._tempHeapPtr(arg0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var retptr = ut.tempHeapPtrBufferZero(8);
  Module._ut_World_GetEntityName(retptr, self, arg0);
  
  var ret = (Module._ut_nativestring_data(retptr) ? UTF8ToString(Module._ut_nativestring_data(retptr)) : ""); Module._ut_nativestring_placement_delete(retptr); return ret;
};
ut.WorldBase.prototype.getEntityByName = function(arg0) {
  ut.prepareTempHeap();
  arg0 = ut.toNewScratchNativeString(arg0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var retptr = ut.Entity._tempHeapPtr();
  Module._ut_World_GetEntityByName(retptr, self, arg0);
  
  return ut.Entity._fromPtr(retptr);
};
ut.WorldBase.prototype.scheduler = function() {
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var ret = Module._ut_World_Scheduler(self);
  
  return ut.SchedulerBase._wrap(ret);
};
ut.WorldBase.prototype.getConfigEntity = function() {
  ut.prepareTempHeap();
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var retptr = ut.Entity._tempHeapPtr();
  Module._ut_World_GetConfigEntity(retptr, self);
  
  return ut.Entity._fromPtr(retptr);
};
ut.WorldBase.prototype.run = function() {
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_World_Run(self);
  
};
ut.WorldBase.prototype.toJSON = function() {
  ut.prepareTempHeap();
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var retptr = ut.tempHeapPtrBufferZero(8);
  Module._ut_World_toJSON(retptr, self);
  
  var ret = (Module._ut_nativestring_data(retptr) ? UTF8ToString(Module._ut_nativestring_data(retptr)) : ""); Module._ut_nativestring_placement_delete(retptr); return ret;
};
ut.WorldBase.prototype.fromJSON = function(arg0) {
  ut.prepareTempHeap();
  arg0 = ut.toNewScratchNativeString(arg0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_World_fromJSON(self, arg0);
  
};
ut.WorldBase.prototype.bufferDepth = function() {
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var ret = Module._ut_World_BufferDepth(self);
  
  return ret;
};
ut.WorldBase.prototype.startBuffering = function() {
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_World_StartBuffering(self);
  
};
ut.WorldBase.prototype.stopBuffering = function() {
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_World_StopBuffering(self);
  
};
ut.WorldBase.prototype.emptyArchetype = function() {
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var ret = Module._ut_World_EmptyArchetype(self);
  
  return ut.Archetype._wrap(ret);
};
ut.WorldBase.prototype.createEntity = function(arg0) {
  ut.prepareTempHeap();
  arg0 = arg0 === undefined ? null : arg0.ptr;;
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var retptr = ut.Entity._tempHeapPtr();
  Module._ut_World_CreateEntity(retptr, self, arg0);
  
  return ut.Entity._fromPtr(retptr);
};
ut.WorldBase.prototype.instantiateEntity = function(arg0) {
  ut.prepareTempHeap();
  arg0 = ut.Entity._tempHeapPtr(arg0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var retptr = ut.Entity._tempHeapPtr();
  Module._ut_World_InstantiateEntity(retptr, self, arg0);
  
  return ut.Entity._fromPtr(retptr);
};
ut.WorldBase.prototype.destroyEntity = function(arg0) {
  ut.prepareTempHeap();
  arg0 = ut.Entity._tempHeapPtr(arg0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_World_DestroyEntity(self, arg0);
  
};
ut.WorldBase.prototype.exists = function(arg0) {
  ut.prepareTempHeap();
  arg0 = ut.Entity._tempHeapPtr(arg0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var ret = Module._ut_World_Exists(self, arg0);
  
  return !!(ret);
};
ut.WorldBase.prototype.getArchetype = function(arg0) {
  ut.prepareTempHeap();
  arg0 = ut.Entity._tempHeapPtr(arg0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var ret = Module._ut_World_GetArchetype(self, arg0);
  
  return ut.Archetype._wrap(ret);
};
ut.WorldBase.prototype.hasComponentRaw = function(arg0, arg1) {
  ut.prepareTempHeap();
  arg0 = ut.Entity._tempHeapPtr(arg0);
  arg1 = (arg1|0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  var ret = Module._ut_World_HasComponentRaw(self, arg0,arg1);
  
  return !!(ret);
};
ut.WorldBase.prototype.addComponentRaw = function(arg0, arg1) {
  ut.prepareTempHeap();
  arg0 = ut.Entity._tempHeapPtr(arg0);
  arg1 = (arg1|0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_World_AddComponentRaw(self, arg0,arg1);
  
};
ut.WorldBase.prototype.removeComponentRaw = function(arg0, arg1) {
  ut.prepareTempHeap();
  arg0 = ut.Entity._tempHeapPtr(arg0);
  arg1 = (arg1|0);
  var self = this._ptr; if (self === undefined) { self = this.ptr; }
  Module._ut_World_RemoveComponentRaw(self, arg0,arg1);
  
};



//
// utiny preamble (but after Core bindings have been loaded)
//
if (typeof ut === 'undefined')
  throw "UT.js running before core bindings were loaded";
if (typeof module !== 'undefined')
  module.exports = ut;

// Save runtime Module object to be accessible from outside scope by code that imports this module.
ut.Module = Module;

// helper
ut.Entity.NONE = new ut.Entity(0, 0);
ut.Entity.prototype.isNone = function() {
  return this.index == 0 && this.version == 0;
};

ut.importModule = function(otherModule)
{
  var props = Object.getOwnPropertyNames(otherModule);
  for(var i in props) {
    Object.defineProperty(ut, props[i], Object.getOwnPropertyDescriptor(otherModule, props[i]));
  }
};

"use strict";
/// <reference path="Core.d.ts" />
/// <reference path="../../../artifacts/bindgem_output/bind-Core.d.ts" />
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var ut;
(function (ut) {
    ut.NONE = new ut.Entity(0, 0);
    var ComponentSpec = /** @class */ (function () {
        function ComponentSpec(type, access) {
            this.type = type;
            this.access = access ? access : ut.AccessMode.ReadWrite; // NB ReadWrite must remain 0
        }
        return ComponentSpec;
    }());
    ut.ComponentSpec = ComponentSpec;
    var ComponentSpecAdapter = /** @class */ (function (_super) {
        __extends(ComponentSpecAdapter, _super);
        function ComponentSpecAdapter(type, access) {
            return _super.call(this, type, access) || this;
        }
        return ComponentSpecAdapter;
    }(ComponentSpec));
    ut.ComponentSpecAdapter = ComponentSpecAdapter;
    function ReadOnly(type) {
        return new ComponentSpecAdapter(type, ut.AccessMode.ReadOnly);
    }
    ut.ReadOnly = ReadOnly;
    function ReadWrite(type) {
        return new ComponentSpecAdapter(type, ut.AccessMode.ReadWrite);
    }
    ut.ReadWrite = ReadWrite;
    function OptionalReadOnly(type) {
        return new ComponentSpecAdapter(type, ut.AccessMode.OptionalReadOnly);
    }
    ut.OptionalReadOnly = OptionalReadOnly;
    function OptionalReadWrite(type) {
        return new ComponentSpecAdapter(type, ut.AccessMode.OptionalReadWrite);
    }
    ut.OptionalReadWrite = OptionalReadWrite;
    function Optional(type) {
        return new ComponentSpecAdapter(type, ut.AccessMode.OptionalReadWrite);
    }
    ut.Optional = Optional;
    function Subtractive(type) {
        return new ComponentSpecAdapter(type, ut.AccessMode.Subtractive);
    }
    ut.Subtractive = Subtractive;
    function getComponentType(cdata) {
        return Object.getPrototypeOf(cdata).constructor;
    }
    ut.getComponentType = getComponentType;
    var ArchetypeChunkIterator = /** @class */ (function (_super) {
        __extends(ArchetypeChunkIterator, _super);
        function ArchetypeChunkIterator() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ArchetypeChunkIterator.prototype.addFilter = function () {
            var specs = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                specs[_i] = arguments[_i];
            }
            if (specs.length == 0)
                return;
            ut.prepareTempHeap();
            var specPtr = ut.tempHeapPtrBuffer(specs.length * ut.ComponentSpecRaw._size);
            var specBase = specPtr;
            for (var i = 0; i < specs.length; ++i) {
                HEAP32[(specPtr >> 2) + 0] = specs[i].type.cid;
                HEAP32[(specPtr >> 2) + 1] = specs[i].access;
                specPtr += 8;
            }
            Module._ut_ArchetypeChunkIterator_AddFilter(this.ptr, specBase, specs.length);
        };
        ArchetypeChunkIterator.prototype.getBaseViewFor = function (ctype) {
            var dataPtr = Module._ut_ArchetypeChunkIterator_RawData(this.ptr, ctype.cid);
            if (dataPtr == 0) {
                throw new Error("getBaseViewFor returned null");
                return null;
            }
            // this isn't going to return a T but a StorageView that acts like a T!
            return new ctype._view(dataPtr);
        };
        ArchetypeChunkIterator.prototype.getSharedViewFor = function (ctype) {
            var dataPtr = Module._ut_ArchetypeChunkIterator_RawSharedData(this.ptr, ctype.cid);
            if (dataPtr == 0) {
                throw new Error("getSharedViewFor returned null");
                return null;
            }
            // this isn't going to return a T but a StorageView that acts like a T!
            return new ctype._view(dataPtr);
        };
        return ArchetypeChunkIterator;
    }(ut.ArchetypeChunkIteratorBase));
    ut.ArchetypeChunkIterator = ArchetypeChunkIterator;
    var System = /** @class */ (function (_super) {
        __extends(System, _super);
        function System() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        System.define = function (params) {
            return new SystemJS(params);
        };
        return System;
    }(ut.SystemBase));
    ut.System = System;
    var SystemJS = /** @class */ (function () {
        function SystemJS(params) {
            if (!params.name || params.name.length == 0) {
                throw new Error("System must have a name");
            }
            this.name = params.name;
            this.update = params.update || function () { };
            this.updatesBefore = params.updatesBefore ? params.updatesBefore.slice() : [];
            this.updatesAfter = params.updatesAfter ? params.updatesAfter.slice() : [];
            this._sys = null;
        }
        SystemJS.prototype._realize = function () {
            if (!this._sys) {
                this._sys = ut.CoreService.createSystem(this.name, this.update, this.updatesAfter, this.updatesBefore);
            }
            return this._sys;
        };
        return SystemJS;
    }());
    ut.SystemJS = SystemJS;
})(ut || (ut = {}));
/// <reference path="../../../artifacts/bindgem_output/bind-Core.d.ts" />
/// <reference path="Core.ts" />
/// <reference path="../../../artifacts/bindgem_output/bind-Core.d.ts" />
/// <reference path="Core.ts" />
var ut;
(function (ut) {
    var EntityCommandBuffer = /** @class */ (function (_super) {
        __extends(EntityCommandBuffer, _super);
        function EntityCommandBuffer() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        EntityCommandBuffer.prototype.tmpEntity = function (entity) {
            return ut.Entity._tempHeapPtr(entity);
        };
        EntityCommandBuffer.prototype.createDeferredEntities = function (archetype, count) {
            if (count < 0)
                throw new Error("createDeferredEntities: count cannot be < 0");
            ut.prepareTempHeap();
            var eptr = ut.tempHeapPtrBuffer(ut.Entity._size * count);
            Module._ut_EntityCommandBuffer_CreateDeferredEntities(this.ptr, archetype.ptr, eptr, count);
            var results = new Array(count);
            for (var i = 0; i < count; ++i) {
                results[i] = ut.Entity._fromPtr(eptr);
                eptr += ut.Entity._size;
            }
            return results;
        };
        EntityCommandBuffer.prototype.instantiateDeferredEntities = function (proto, count) {
            if (count < 0)
                throw new Error("instantiateDeferredEntities: count cannot be < 0");
            ut.prepareTempHeap();
            var eptr = ut.tempHeapPtrBuffer(ut.Entity._size * count);
            Module._ut_EntityCommandBuffer_InstantiateDeferredEntities(this.ptr, this.tmpEntity(proto), eptr, count);
            var results = new Array(count);
            for (var i = 0; i < count; ++i) {
                results[i] = ut.Entity._fromPtr(eptr);
                eptr += ut.Entity._size;
            }
            return results;
        };
        EntityCommandBuffer.prototype.addComponent = function (entity, ctype) {
            if (ctype.constructor) {
                Module._ut_EntityCommandBuffer_AddComponentRaw(this.ptr, this.tmpEntity(entity), ctype.cid);
            }
            else {
                ut.prepareTempHeap();
                var cctor = ut.getComponentType(ctype);
                var data = cctor._tempHeapPtr(ctype);
                Module._ut_EntityCommandBuffer_AddComponentDataRaw(this.ptr, this.tmpEntity(entity), cctor.cid, data, cctor._size);
            }
        };
        EntityCommandBuffer.prototype.addComponentData = function (entity, cdata) {
            ut.prepareTempHeap();
            var cctor = ut.getComponentType(cdata);
            var data = cctor._tempHeapPtr(cdata);
            Module._ut_EntityCommandBuffer_AddComponentDataRaw(this.ptr, this.tmpEntity(entity), cctor.cid, data, cctor._size);
        };
        EntityCommandBuffer.prototype.removeComponent = function (entity, ctype) {
            Module._ut_EntityCommandBuffer_RemoveComponentRaw(this.ptr, this.tmpEntity(entity), ctype.cid);
        };
        EntityCommandBuffer.prototype.setComponentData = function (entity, cdata) {
            ut.prepareTempHeap();
            var cctor = ut.getComponentType(cdata);
            var ptr = cctor._tempHeapPtr(cdata);
            Module._ut_EntityCommandBuffer_SetComponentDataRaw(this.ptr, this.tmpEntity(entity), cctor.cid, ptr, cctor._size);
        };
        EntityCommandBuffer.prototype.addSharedComponentData = function (entity, cdata) {
            ut.prepareTempHeap();
            var cctor = ut.getComponentType(cdata);
            var data = cctor._tempHeapPtr(cdata);
            Module._ut_EntityCommandBuffer_AddSharedComponentDataRaw(this.ptr, this.tmpEntity(entity), cctor.cid, data, cctor._size);
        };
        EntityCommandBuffer.prototype.setSharedComponentData = function (entity, cdata) {
            ut.prepareTempHeap();
            var cctor = ut.getComponentType(cdata);
            var ptr = cctor._tempHeapPtr(cdata);
            Module._ut_EntityCommandBuffer_SetSharedComponentDataRaw(this.ptr, this.tmpEntity(entity), cctor.cid, ptr, cctor._size);
        };
        return EntityCommandBuffer;
    }(ut.EntityCommandBufferBase));
    ut.EntityCommandBuffer = EntityCommandBuffer;
})(ut || (ut = {}));
/// <reference path="../../../artifacts/bindgem_output/bind-Core.d.ts" />
/// <reference path="Core.ts" />
var ut;
(function (ut) {
    var Scheduler = /** @class */ (function (_super) {
        __extends(Scheduler, _super);
        function Scheduler() {
            return _super.call(this) || this;
        }
        Scheduler.prototype.schedule = function (sysOrName, systemFn) {
            if (systemFn != null) {
                this.scheduleFnInternal(sysOrName, systemFn); // TODO -- why is the <any> assertion required?
            }
            else if (sysOrName instanceof ut.System) {
                this.scheduleSysInternal(sysOrName);
            }
            else if (sysOrName instanceof ut.SystemJS) {
                this.scheduleSysInternal(sysOrName._realize());
            }
            else {
                throw new Error("Scheduler.schedule requires either a System, or a name and a function");
            }
        };
        Scheduler.prototype.remove = function (system) {
            if (typeof system === "string") {
                this.removeName(system);
            }
            else {
                this.removeId(system);
            }
        };
        Scheduler.prototype.enable = function (system) {
            if (typeof system === "string") {
                this.enableName(system);
            }
            else {
                this.enableId(system);
            }
        };
        Scheduler.prototype.disable = function (system) {
            if (typeof system === "string") {
                this.disableName(system);
            }
            else {
                this.disableId(system);
            }
        };
        Scheduler.prototype.isEnabled = function (system) {
            if (typeof system === "string") {
                return this.isEnabledName(system);
            }
            else {
                return this.isEnabledId(system);
            }
        };
        Scheduler.prototype.find = function (system) {
            if (typeof system === "string") {
                return this.findName(system);
            }
            else if (system instanceof ut.System) {
                return this.findSys(system);
            }
            else {
                return this.findSys(system._sys);
            }
        };
        return Scheduler;
    }(ut.SchedulerBase));
    ut.Scheduler = Scheduler;
})(ut || (ut = {}));
/// <reference path="../../../artifacts/bindgem_output/bind-Core.d.ts" />
/// <reference path="Core.ts" />
var ut;
(function (ut) {
    var World = /** @class */ (function (_super) {
        __extends(World, _super);
        function World() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        World.prototype.tmpEntity = function (entity) {
            return ut.Entity._tempHeapPtr(entity);
        };
        //
        // Entity creation
        //
        World.prototype.createEntities = function (archetype, count) {
            if (count < 0)
                throw new Error("createEntities: count cannot be < 0");
            ut.prepareTempHeap();
            var eptr = ut.tempHeapPtrBuffer(ut.Entity._size * count);
            Module._ut_World_CreateEntities(this.ptr, archetype.ptr, eptr, count);
            var results = new Array(count);
            for (var i = 0; i < count; ++i) {
                results[i] = ut.Entity._fromPtr(eptr);
                eptr += ut.Entity._size;
            }
            return results;
        };
        World.prototype.instantiateEntities = function (proto, count) {
            if (count < 0)
                throw new Error("instantiateEntities: count cannot be < 0");
            ut.prepareTempHeap();
            var eptr = ut.tempHeapPtrBuffer(ut.Entity._size * count);
            Module._ut_World_InstantiateEntities(this.ptr, this.tmpEntity(proto), eptr, count);
            var results = new Array(count);
            for (var i = 0; i < count; ++i) {
                results[i] = ut.Entity._fromPtr(eptr);
                eptr += ut.Entity._size;
            }
            return results;
        };
        World.prototype.destroyEntities = function (entities) {
            ut.prepareTempHeap();
            var ebase = ut.tempHeapPtrBuffer(ut.Entity._size * entities.length);
            var eptr = ebase;
            for (var i = 0; i < entities.length; ++i) {
                ut.Entity._toPtr(eptr, entities[i]);
                eptr += ut.Entity._size;
            }
            Module._ut_World_DestroyEntities(this.ptr, ebase, entities.length);
        };
        //
        // Core component manipulation
        //
        World.prototype.hasComponent = function (entity, ctype) {
            return this.hasComponentRaw(entity, ctype.cid);
        };
        World.prototype.addComponent = function (entity, ctype) {
            if (ctype.constructor) {
                Module._ut_World_AddComponentRaw(this.ptr, this.tmpEntity(entity), ctype.cid);
            }
            else {
                ut.prepareTempHeap();
                var cctor = ut.getComponentType(ctype);
                var data = cctor._tempHeapPtr(ctype);
                Module._ut_World_AddComponentDataRaw(this.ptr, this.tmpEntity(entity), cctor.cid, data, cctor._size);
            }
        };
        World.prototype.addComponentData = function (entity, cdata) {
            ut.prepareTempHeap();
            var cctor = ut.getComponentType(cdata);
            var data = cctor._tempHeapPtr(cdata);
            Module._ut_World_AddComponentDataRaw(this.ptr, this.tmpEntity(entity), cctor.cid, data, cctor._size);
        };
        World.prototype.removeComponent = function (entity, ctype) {
            Module._ut_World_RemoveComponentRaw(this.ptr, this.tmpEntity(entity), ctype.cid);
        };
        World.prototype.getComponentData = function (entity, ctype) {
            ut.prepareTempHeap();
            var data = ut.tempHeapPtrBuffer(ctype._size);
            Module._ut_World_GetComponentDataRaw(this.ptr, this.tmpEntity(entity), ctype.cid, data, ctype._size);
            // Create a high-level JavaScript object out of the component
            var componentData = ctype._fromPtr(data);
            ctype._dtorFn(data); // And delete the copy of the comopnent we received (this function call is a no-op for POD types)
            return componentData;
        };
        World.prototype.setComponentData = function (entity, cdata) {
            ut.prepareTempHeap();
            var cctor = ut.getComponentType(cdata);
            var ptr = cctor._tempHeapPtr(cdata);
            Module._ut_World_SetComponentDataRaw(this.ptr, this.tmpEntity(entity), cctor.cid, ptr, cctor._size);
        };
        World.prototype.addSharedComponent = function (entity, ctype) {
            if (ctype.constructor) {
                Module._ut_World_AddSharedComponentRaw(this.ptr, this.tmpEntity(entity), ctype.cid);
            }
            else {
                ut.prepareTempHeap();
                var cctor = ut.getComponentType(ctype);
                var data = cctor._tempHeapPtr(ctype);
                Module._ut_World_AddSharedComponentDataRaw(this.ptr, this.tmpEntity(entity), cctor.cid, data, cctor._size);
            }
        };
        World.prototype.getSharedComponentData = function (entity, ctype) {
            ut.prepareTempHeap();
            var data = ut.tempHeapPtrBuffer(ctype._size);
            Module._ut_World_GetSharedComponentDataRaw(this.ptr, this.tmpEntity(entity), ctype.cid, data, ctype._size);
            // Create a high-level JavaScript object out of the component
            var componentData = ctype._fromPtr(data);
            ctype._dtorFn(data); // And delete the copy of the comopnent we received (this function call is a no-op for POD types)
            return componentData;
        };
        World.prototype.setSharedComponentData = function (entity, cdata) {
            ut.prepareTempHeap();
            var cctor = ut.getComponentType(cdata);
            var ptr = cctor._tempHeapPtr(cdata);
            Module._ut_World_SetSharedComponentDataRaw(this.ptr, this.tmpEntity(entity), cctor.cid, ptr, cctor._size);
        };
        //
        // Config components
        //
        World.prototype.getConfigData = function (ctype) {
            var configEntity = this.getConfigEntity();
            if (!this.hasComponent(configEntity, ctype))
                this.addComponent(configEntity, ctype);
            return this.getComponentData(configEntity, ctype);
        };
        World.prototype.setConfigData = function (cdata) {
            var configEntity = this.getConfigEntity();
            var cctor = ut.getComponentType(cdata);
            if (!this.hasComponent(configEntity, cctor))
                this.addComponentData(configEntity, cdata);
            else
                this.setComponentData(configEntity, cdata);
        };
        //
        // Archetype manipulation
        //
        World.prototype.createArchetype = function () {
            var ctypes = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                ctypes[_i] = arguments[_i];
            }
            ut.prepareTempHeap();
            var data = ut.tempHeapPtrBuffer(4 * ctypes.length);
            for (var i = 0; i < ctypes.length; ++i) {
                HEAP32[(data >> 2) + i] = ctypes[i].cid;
            }
            var aptr = Module._ut_World_CreateArchetype(this.ptr, data, ctypes.length);
            return ut.Archetype._wrap(aptr);
        };
        //
        // Chunk iterator allocation
        //
        World.prototype.allocChunkIterator = function () {
            var specs = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                specs[_i] = arguments[_i];
            }
            ut.prepareTempHeap();
            var specPtr = ut.tempHeapPtrBuffer(specs.length * ut.ComponentSpecRaw._size);
            var specBase = specPtr;
            for (var i = 0; i < specs.length; ++i) {
                HEAP32[(specPtr >> 2) + 0] = specs[i].type.cid;
                HEAP32[(specPtr >> 2) + 1] = specs[i].access;
                specPtr += 8;
            }
            var iterPtr = Module._ut_World_AllocChunkIterator(this.ptr, specBase, specs.length);
            return ut.ArchetypeChunkIterator._wrap(iterPtr);
        };
        // The actual overload implementation, typed up to 8 components
        World.prototype.forEach = function (components, fnOrSpec, fn) {
            var types = new Array(components.length);
            var isShared = new Array(components.length);
            var numTypes = 0;
            var specs;
            if (fn === undefined) {
                specs = [];
                fn = fnOrSpec;
            }
            else {
                specs = fnOrSpec;
            }
            ut.prepareTempHeap();
            var specCount = components.length + specs.length;
            var specPtr = ut.tempHeapPtrBuffer(specCount * ut.ComponentSpecRaw._size);
            var specBase = specPtr;
            for (var i = 0; i < components.length; ++i) {
                var type, access;
                if (components[i].constructor) {
                    type = components[i];
                    access = ut.AccessMode.ReadWrite;
                }
                else {
                    type = components[i].type;
                    access = components[i].access;
                }
                if (access != ut.AccessMode.Subtractive) {
                    isShared[numTypes] = type._isSharedComp;
                    types[numTypes] = type;
                    numTypes++;
                }
                HEAP32[(specPtr >> 2) + 0] = type.cid;
                HEAP32[(specPtr >> 2) + 1] = access;
                specPtr += 8;
            }
            for (var i = 0; i < specs.length; ++i) {
                HEAP32[(specPtr >> 2) + 0] = specs[i].type.cid;
                HEAP32[(specPtr >> 2) + 1] = specs[i].access;
                specPtr += 8;
            }
            var iterPtr = Module._ut_World_AllocChunkIterator(this.ptr, specBase, specCount);
            var iter = ut.ArchetypeChunkIterator._wrap(iterPtr);
            this.startBuffering();
            try {
                var dataViews = new Array(numTypes);
                while (iter.next()) {
                    for (var i = 0; i < numTypes; ++i) {
                        if (isShared[i]) {
                            dataViews[i] = iter.getSharedViewFor(types[i]);
                        }
                        else {
                            dataViews[i] = iter.getBaseViewFor(types[i]);
                        }
                    }
                    // Note: Function.apply() is a performance death trap, see https://jsperf.com/fn-direct-call-apply
                    // but it's the only way to call with a number of arguments only known at runtime.  We special
                    // case the code for up to 8 components and then you go into the apply() pit.
                    var count = iter.count();
                    if (numTypes == 1) {
                        for (var i = 0; i < count; ++i) {
                            fn(dataViews[0]);
                            dataViews[0].$advance();
                        }
                    }
                    else if (numTypes == 2) {
                        for (var i = 0; i < count; ++i) {
                            fn(dataViews[0], dataViews[1]);
                            dataViews[0].$advance();
                            dataViews[1].$advance();
                        }
                    }
                    else if (numTypes == 3) {
                        for (var i = 0; i < count; ++i) {
                            fn(dataViews[0], dataViews[1], dataViews[2]);
                            dataViews[0].$advance();
                            dataViews[1].$advance();
                            dataViews[2].$advance();
                        }
                    }
                    else if (numTypes == 4) {
                        for (var i = 0; i < count; ++i) {
                            fn(dataViews[0], dataViews[1], dataViews[2], dataViews[3]);
                            dataViews[0].$advance();
                            dataViews[1].$advance();
                            dataViews[2].$advance();
                            dataViews[3].$advance();
                        }
                    }
                    else if (numTypes == 5) {
                        for (var i = 0; i < count; ++i) {
                            fn(dataViews[0], dataViews[1], dataViews[2], dataViews[3], dataViews[4]);
                            dataViews[0].$advance();
                            dataViews[1].$advance();
                            dataViews[2].$advance();
                            dataViews[3].$advance();
                            dataViews[4].$advance();
                        }
                    }
                    else if (numTypes == 6) {
                        for (var i = 0; i < count; ++i) {
                            fn(dataViews[0], dataViews[1], dataViews[2], dataViews[3], dataViews[4], dataViews[5]);
                            dataViews[0].$advance();
                            dataViews[1].$advance();
                            dataViews[2].$advance();
                            dataViews[3].$advance();
                            dataViews[4].$advance();
                            dataViews[5].$advance();
                        }
                    }
                    else if (numTypes == 7) {
                        for (var i = 0; i < count; ++i) {
                            fn(dataViews[0], dataViews[1], dataViews[2], dataViews[3], dataViews[4], dataViews[5], dataViews[6]);
                            dataViews[0].$advance();
                            dataViews[1].$advance();
                            dataViews[2].$advance();
                            dataViews[3].$advance();
                            dataViews[4].$advance();
                            dataViews[5].$advance();
                            dataViews[6].$advance();
                        }
                    }
                    else if (numTypes == 8) {
                        for (var i = 0; i < count; ++i) {
                            fn(dataViews[0], dataViews[1], dataViews[2], dataViews[3], dataViews[4], dataViews[5], dataViews[6], dataViews[7]);
                            dataViews[0].$advance();
                            dataViews[1].$advance();
                            dataViews[2].$advance();
                            dataViews[3].$advance();
                            dataViews[4].$advance();
                            dataViews[5].$advance();
                            dataViews[6].$advance();
                            dataViews[7].$advance();
                        }
                    }
                    else {
                        for (var i = 0; i < count; ++i) {
                            fn.apply(fn, null, dataViews);
                            for (var j = 0; j < dataViews.length; ++j) {
                                dataViews[j].$advance();
                            }
                        }
                    }
                }
            }
            finally {
                iter.release();
                this.stopBuffering();
            }
        };
        //
        // Helper that should move to EntityManager
        //
        /** Gets the component data if it's already present on the given entity, or adds it, and returns it.
         * For performance, if you expect the component to be present on the entity you should call getComponentData directly.*/
        World.prototype.getOrAddComponentData = function (entity, ctype) {
            if (this.hasComponent(entity, ctype)) {
                return this.getComponentData(entity, ctype);
            }
            this.addComponent(entity, ctype);
            return new ctype();
        };
        /** Sets the component data if it's already present on the given entity, or adds it.
         *  For performance, if you expect the component to be present on the entity you should call setComponentData directly.*/
        World.prototype.setOrAddComponentData = function (entity, cdata) {
            if (this.hasComponent(entity, cdata.constructor.cid)) {
                this.setComponentData(entity, cdata);
            }
            else {
                this.addComponentData(entity, cdata);
            }
        };
        World.prototype.usingComponentData = function (entity, components, fn) {
            // TODO: unroll this
            var numTypes = components.length;
            var data = new Array(components.length);
            for (var i = 0; i < numTypes; i++) {
                data[i] = this.getOrAddComponentData(entity, components[i]);
            }
            if (numTypes == 1) {
                fn(data[0]);
            }
            else if (numTypes == 2) {
                fn(data[0], data[1]);
            }
            else if (numTypes == 3) {
                fn(data[0], data[1], data[2]);
            }
            else if (numTypes == 4) {
                fn(data[0], data[1], data[2], data[3]);
            }
            else if (numTypes == 5) {
                fn(data[0], data[1], data[2], data[3], data[4]);
            }
            else if (numTypes == 6) {
                fn(data[0], data[1], data[2], data[3], data[4], data[5]);
            }
            else if (numTypes == 7) {
                fn(data[0], data[1], data[2], data[3], data[4], data[5], data[6]);
            }
            else if (numTypes == 8) {
                fn(data[0], data[1], data[2], data[3], data[4], data[5], data[6], data[7]);
            }
            for (var i = 0; i < numTypes; i++) {
                this.setComponentData(entity, data[i]);
            }
        };
        // Helper to bridge dal code
        World.prototype.world = function () {
            return this;
        };
        return World;
    }(ut.WorldBase));
    ut.World = World;
})(ut || (ut = {}));

// TypeDesc helpers
ut.meta = ut.meta || {};

// Registers all static TypeDesc, called once at page load
ut.meta.registerTypes = function () {
  if (ut.meta.types) return; // Guard against registering types twice (this is currently needed because the compiled C++ demos from Runtime side have slightly different loading flow compared to Editor exported content. This inconsistency should be able to disappear when Wasm Release mode support in Editor comes in)
  var types = {};
  for (var key in Module) {
    if (typeof (Module[key]) !== 'function')
      continue;
    if (!key.match(/^_ut_meta_get_type_\w+$/))
      continue;
    var type = Module[key]();
    if (type != 0) {
      var registerType = function (type) {
        var name = Pointer_stringify(HEAP32[(type + 4) >> 2]);
        if (types[name] == null)
          types[name] = type;
        var membersPtr = HEAP32[(type + 12) >> 2];
        var membersCount = HEAP32[(type + 16) >> 2];
        for (var i = 0; i < membersCount; ++i) {
          var memberName = Pointer_stringify(HEAP32[(membersPtr + (i * 12)) >> 2]);
          var memberType = HEAP32[(membersPtr + (i * 12) + 8) >> 2];
          if (memberType != 0)
            registerType(memberType);
          else
            console.error("[Meta] error: type '" + name + "' member '" + memberName + "' type is null");
        }
      }
      registerType(type);
    } else {
      console.error("[Meta] error: type method " + key + " returned null");
    }
  }
  ut.meta.types = types;
};

// Retrieve registered TypeDesc (or allocate it if its templated)
ut.meta.getType = function (name) {
  var type = ut.meta.types[name];
  if (type != null)
    return type;
  if (name.indexOf('ut.NativeBuffer') != -1) {
    var regex = /<(.*)>/;
    var match = regex.exec(name);
    if (match != null) {
      var subtype = ut.meta.getType(match[1]);
      if (subtype != 0)
        return ut.meta.allocType(3, name, 12, [{ name: null, offset: 0, type: subtype }]);
    }
  }
  console.error("[Meta] error: could not find type '" + name + "' in type table");
  return 0;
};

// Allocate new TypeDesc
ut.meta.allocType = function (trait, name, size, members) {
  if (ut.meta.types[name] != null)
    return ut.meta.types[name];

  var typeDescSize = 20;
  var typeNameSize = lengthBytesUTF8(name) + 1;

  var memberDescSize = 12;
  var membersDescPtr = 0;
  var membersDescSize = memberDescSize * members.length;
  var membersNamePtr = 0;
  var membersNameSize = 0;

  for (var i = 0; i < members.length; ++i) {
    members[i].nameSize = members[i].name != null ? lengthBytesUTF8(members[i].name) + 1 : 0;
    membersNameSize += members[i].nameSize;
  }

  var totalSize = typeDescSize + membersDescSize + typeNameSize + membersNameSize;
  var typeDescPtr = Module._malloc(totalSize);
  var typeNamePtr = typeDescPtr + typeDescSize + membersDescSize;

  if (members.length > 0) {
    membersDescPtr = typeDescPtr + typeDescSize;
    membersNamePtr = membersNameSize > 0 ? typeNamePtr + typeNameSize : 0;
  }

  stringToUTF8(name, typeNamePtr, typeNameSize);
  HEAP32[(typeDescPtr + 0) >> 2] = trait;
  HEAP32[(typeDescPtr + 4) >> 2] = typeNamePtr;
  HEAP32[(typeDescPtr + 8) >> 2] = size;
  HEAP32[(typeDescPtr + 12) >> 2] = membersDescPtr;
  HEAP32[(typeDescPtr + 16) >> 2] = members.length;

  for (var i = 0; i < members.length; ++i) {
    if (members[i].name != null)
      stringToUTF8(members[i].name, membersNamePtr, members[i].nameSize);
    HEAP32[(membersDescPtr + 0) >> 2] = membersNamePtr;
    HEAP32[(membersDescPtr + 4) >> 2] = members[i].offset;
    HEAP32[(membersDescPtr + 8) >> 2] = members[i].type;
    membersDescPtr += memberDescSize;
    membersNamePtr += members[i].nameSize;
  }

  ut.meta.types[name] = typeDescPtr;
  return typeDescPtr;
}


